<Type Name="AcquireTokenInteractiveParameterBuilder" FullName="Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder">
  <TypeSignature Language="C#" Value="public sealed class AcquireTokenInteractiveParameterBuilder : Microsoft.Identity.Client.ApiConfig.AbstractPublicClientAcquireTokenParameterBuilder&lt;Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AcquireTokenInteractiveParameterBuilder extends Microsoft.Identity.Client.ApiConfig.AbstractPublicClientAcquireTokenParameterBuilder`1&lt;class Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AcquireTokenInteractiveParameterBuilder&#xA;Inherits AbstractPublicClientAcquireTokenParameterBuilder(Of AcquireTokenInteractiveParameterBuilder)" />
  <TypeSignature Language="F#" Value="type AcquireTokenInteractiveParameterBuilder = class&#xA;    inherit AbstractPublicClientAcquireTokenParameterBuilder&lt;AcquireTokenInteractiveParameterBuilder&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Identity.Client.ApiConfig.AbstractPublicClientAcquireTokenParameterBuilder&lt;Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Builder for an Interactive token request
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder.Validate" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="acquireTokenInteractiveParameterBuilder.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WithAccount">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder WithAccount (Microsoft.Identity.Client.IAccount account);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder WithAccount(class Microsoft.Identity.Client.IAccount account) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder.WithAccount(Microsoft.Identity.Client.IAccount)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAccount (account As IAccount) As AcquireTokenInteractiveParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithAccount : Microsoft.Identity.Client.IAccount -&gt; Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder" Usage="acquireTokenInteractiveParameterBuilder.WithAccount account" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Microsoft.Identity.Client.IAccount" />
      </Parameters>
      <Docs>
        <param name="account">Account to use for the interactive token acquisition. See <see cref="T:Microsoft.Identity.Client.IAccount" /> for ways to get an account</param>
        <summary>
            Sets the account for which the token will be retrieved. This method is mutually exclusive
            with <see cref="M:Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder.WithLoginHint(System.String)" />. If both are used, an exception will be thrown
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithExtraScopesToConsent">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder WithExtraScopesToConsent (System.Collections.Generic.IEnumerable&lt;string&gt; extraScopesToConsent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder WithExtraScopesToConsent(class System.Collections.Generic.IEnumerable`1&lt;string&gt; extraScopesToConsent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExtraScopesToConsent (extraScopesToConsent As IEnumerable(Of String)) As AcquireTokenInteractiveParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithExtraScopesToConsent : seq&lt;string&gt; -&gt; Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder" Usage="acquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent extraScopesToConsent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraScopesToConsent" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="extraScopesToConsent">Scopes that you can request the end user to consent upfront,
            in addition to the scopes for the protected Web API for which you want to acquire a security token.</param>
        <summary />
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithLoginHint">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder WithLoginHint (string loginHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder WithLoginHint(string loginHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder.WithLoginHint(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithLoginHint (loginHint As String) As AcquireTokenInteractiveParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithLoginHint : string -&gt; Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder" Usage="acquireTokenInteractiveParameterBuilder.WithLoginHint loginHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loginHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="loginHint">Identifier of the user. Generally in UserPrincipalName (UPN) format, e.g. <c>john.doe@contoso.com</c></param>
        <summary>
            Sets the <paramref name="loginHint" />, in order to avoid select account
            dialogs in the case the user is signed-in with several identities. This method is mutually exclusive
            with <see cref="M:Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder.WithAccount(Microsoft.Identity.Client.IAccount)" />. If both are used, an exception will be thrown
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithPrompt">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder WithPrompt (Microsoft.Identity.Client.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder WithPrompt(valuetype Microsoft.Identity.Client.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder.WithPrompt(Microsoft.Identity.Client.Prompt)" />
      <MemberSignature Language="F#" Value="member this.WithPrompt : Microsoft.Identity.Client.Prompt -&gt; Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder" Usage="acquireTokenInteractiveParameterBuilder.WithPrompt prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="Microsoft.Identity.Client.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">Requested interactive experience. The default is <see cref="F:Microsoft.Identity.Client.Prompt.SelectAccount" /></param>
        <summary>
            Specifies the what the interactive experience is for the user.
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithUseEmbeddedWebView">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder WithUseEmbeddedWebView (bool useEmbeddedWebView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder WithUseEmbeddedWebView(bool useEmbeddedWebView) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder.WithUseEmbeddedWebView(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithUseEmbeddedWebView (useEmbeddedWebView As Boolean) As AcquireTokenInteractiveParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithUseEmbeddedWebView : bool -&gt; Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder" Usage="acquireTokenInteractiveParameterBuilder.WithUseEmbeddedWebView useEmbeddedWebView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.ApiConfig.AcquireTokenInteractiveParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useEmbeddedWebView" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useEmbeddedWebView">If <c>true</c>, will use an embedded web browser,
            otherwise will attempt to use a system web browser. The default depends on the platform:
            <c>false</c> for Xamarin.iOS and Xamarin.Android, and <c>true</c> for .NET Framework,
            and UWP</param>
        <summary>
            Specifies if the public client application should used an embedded web browser
            or the system default browser
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
