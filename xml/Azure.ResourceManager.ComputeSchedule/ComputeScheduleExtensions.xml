<Type Name="ComputeScheduleExtensions" FullName="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions">
  <TypeSignature Language="C#" Value="public static class ComputeScheduleExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ComputeScheduleExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ComputeScheduleExtensions" />
  <TypeSignature Language="F#" Value="type ComputeScheduleExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.ComputeSchedule. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CancelVirtualMachineOperations">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt; CancelVirtualMachineOperations (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt; CancelVirtualMachineOperations(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.CancelVirtualMachineOperations(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CancelVirtualMachineOperations (subscriptionResource As SubscriptionResource, locationparameter As String, content As CancelOperationsContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CancelOperationsResult)" />
      <MemberSignature Language="F#" Value="static member CancelVirtualMachineOperations : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.CancelVirtualMachineOperations (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesCancelOperations: Cancel a previously submitted (start/deallocate/hibernate) request
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesCancelOperations</description></item><item><term>Operation Id</term><description>ScheduledActions_CancelVirtualMachineOperations</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.CancelVirtualMachineOperations(System.String,Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelVirtualMachineOperationsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;&gt; CancelVirtualMachineOperationsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;&gt; CancelVirtualMachineOperationsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.CancelVirtualMachineOperationsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CancelVirtualMachineOperationsAsync (subscriptionResource As SubscriptionResource, locationparameter As String, content As CancelOperationsContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CancelOperationsResult))" />
      <MemberSignature Language="F#" Value="static member CancelVirtualMachineOperationsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.CancelVirtualMachineOperationsAsync (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesCancelOperations: Cancel a previously submitted (start/deallocate/hibernate) request
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesCancelOperations</description></item><item><term>Operation Id</term><description>ScheduledActions_CancelVirtualMachineOperations</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.CancelVirtualMachineOperations(System.String,Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualMachineDeallocate">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt; ExecuteVirtualMachineDeallocate (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt; ExecuteVirtualMachineDeallocate(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.ExecuteVirtualMachineDeallocate(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExecuteVirtualMachineDeallocate (subscriptionResource As SubscriptionResource, locationparameter As String, content As ExecuteDeallocateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeallocateResourceOperationResult)" />
      <MemberSignature Language="F#" Value="static member ExecuteVirtualMachineDeallocate : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.ExecuteVirtualMachineDeallocate (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesExecuteDeallocate: Execute deallocate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteDeallocate</description></item><item><term>Operation Id</term><description>ScheduledActions_ExecuteVirtualMachineDeallocate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineDeallocate(System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualMachineDeallocateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt; ExecuteVirtualMachineDeallocateAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt; ExecuteVirtualMachineDeallocateAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.ExecuteVirtualMachineDeallocateAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExecuteVirtualMachineDeallocateAsync (subscriptionResource As SubscriptionResource, locationparameter As String, content As ExecuteDeallocateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeallocateResourceOperationResult))" />
      <MemberSignature Language="F#" Value="static member ExecuteVirtualMachineDeallocateAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.ExecuteVirtualMachineDeallocateAsync (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesExecuteDeallocate: Execute deallocate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteDeallocate</description></item><item><term>Operation Id</term><description>ScheduledActions_ExecuteVirtualMachineDeallocate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineDeallocate(System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualMachineHibernate">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt; ExecuteVirtualMachineHibernate (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt; ExecuteVirtualMachineHibernate(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.ExecuteVirtualMachineHibernate(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExecuteVirtualMachineHibernate (subscriptionResource As SubscriptionResource, locationparameter As String, content As ExecuteHibernateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HibernateResourceOperationResult)" />
      <MemberSignature Language="F#" Value="static member ExecuteVirtualMachineHibernate : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.ExecuteVirtualMachineHibernate (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesExecuteHibernate: Execute hibernate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteHibernate</description></item><item><term>Operation Id</term><description>ScheduledActions_ExecuteVirtualMachineHibernate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineHibernate(System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualMachineHibernateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt; ExecuteVirtualMachineHibernateAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt; ExecuteVirtualMachineHibernateAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.ExecuteVirtualMachineHibernateAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExecuteVirtualMachineHibernateAsync (subscriptionResource As SubscriptionResource, locationparameter As String, content As ExecuteHibernateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HibernateResourceOperationResult))" />
      <MemberSignature Language="F#" Value="static member ExecuteVirtualMachineHibernateAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.ExecuteVirtualMachineHibernateAsync (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesExecuteHibernate: Execute hibernate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteHibernate</description></item><item><term>Operation Id</term><description>ScheduledActions_ExecuteVirtualMachineHibernate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineHibernate(System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualMachineStart">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt; ExecuteVirtualMachineStart (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt; ExecuteVirtualMachineStart(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.ExecuteVirtualMachineStart(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExecuteVirtualMachineStart (subscriptionResource As SubscriptionResource, locationparameter As String, content As ExecuteStartContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StartResourceOperationResult)" />
      <MemberSignature Language="F#" Value="static member ExecuteVirtualMachineStart : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.ExecuteVirtualMachineStart (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesExecuteStart: Execute start operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteStart</description></item><item><term>Operation Id</term><description>ScheduledActions_ExecuteVirtualMachineStart</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineStart(System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualMachineStartAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt; ExecuteVirtualMachineStartAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt; ExecuteVirtualMachineStartAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.ExecuteVirtualMachineStartAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExecuteVirtualMachineStartAsync (subscriptionResource As SubscriptionResource, locationparameter As String, content As ExecuteStartContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StartResourceOperationResult))" />
      <MemberSignature Language="F#" Value="static member ExecuteVirtualMachineStartAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.ExecuteVirtualMachineStartAsync (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesExecuteStart: Execute start operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteStart</description></item><item><term>Operation Id</term><description>ScheduledActions_ExecuteVirtualMachineStart</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineStart(System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineOperationErrors">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt; GetVirtualMachineOperationErrors (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt; GetVirtualMachineOperationErrors(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.GetVirtualMachineOperationErrors(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualMachineOperationErrors (subscriptionResource As SubscriptionResource, locationparameter As String, content As GetOperationErrorsContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GetOperationErrorsResult)" />
      <MemberSignature Language="F#" Value="static member GetVirtualMachineOperationErrors : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.GetVirtualMachineOperationErrors (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesGetOperationErrors: Get error details on operation errors (like transient errors encountered, additional logs) if they exist.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationErrors</description></item><item><term>Operation Id</term><description>ScheduledActions_GetVirtualMachineOperationErrors</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.GetVirtualMachineOperationErrors(System.String,Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineOperationErrorsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;&gt; GetVirtualMachineOperationErrorsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;&gt; GetVirtualMachineOperationErrorsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.GetVirtualMachineOperationErrorsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualMachineOperationErrorsAsync (subscriptionResource As SubscriptionResource, locationparameter As String, content As GetOperationErrorsContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GetOperationErrorsResult))" />
      <MemberSignature Language="F#" Value="static member GetVirtualMachineOperationErrorsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.GetVirtualMachineOperationErrorsAsync (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesGetOperationErrors: Get error details on operation errors (like transient errors encountered, additional logs) if they exist.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationErrors</description></item><item><term>Operation Id</term><description>ScheduledActions_GetVirtualMachineOperationErrors</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.GetVirtualMachineOperationErrors(System.String,Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineOperationStatus">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt; GetVirtualMachineOperationStatus (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt; GetVirtualMachineOperationStatus(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.GetVirtualMachineOperationStatus(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualMachineOperationStatus (subscriptionResource As SubscriptionResource, locationparameter As String, content As GetOperationStatusContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GetOperationStatusResult)" />
      <MemberSignature Language="F#" Value="static member GetVirtualMachineOperationStatus : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.GetVirtualMachineOperationStatus (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesGetOperationStatus: Polling endpoint to read status of operations performed on virtual machines
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationStatus</description></item><item><term>Operation Id</term><description>ScheduledActions_GetVirtualMachineOperationStatus</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.GetVirtualMachineOperationStatus(System.String,Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineOperationStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;&gt; GetVirtualMachineOperationStatusAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;&gt; GetVirtualMachineOperationStatusAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.GetVirtualMachineOperationStatusAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualMachineOperationStatusAsync (subscriptionResource As SubscriptionResource, locationparameter As String, content As GetOperationStatusContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GetOperationStatusResult))" />
      <MemberSignature Language="F#" Value="static member GetVirtualMachineOperationStatusAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.GetVirtualMachineOperationStatusAsync (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesGetOperationStatus: Polling endpoint to read status of operations performed on virtual machines
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationStatus</description></item><item><term>Operation Id</term><description>ScheduledActions_GetVirtualMachineOperationStatus</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.GetVirtualMachineOperationStatus(System.String,Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitVirtualMachineDeallocate">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt; SubmitVirtualMachineDeallocate (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt; SubmitVirtualMachineDeallocate(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.SubmitVirtualMachineDeallocate(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SubmitVirtualMachineDeallocate (subscriptionResource As SubscriptionResource, locationparameter As String, content As SubmitDeallocateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeallocateResourceOperationResult)" />
      <MemberSignature Language="F#" Value="static member SubmitVirtualMachineDeallocate : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.SubmitVirtualMachineDeallocate (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesSubmitDeallocate: Schedule deallocate operation for a batch of virtual machines at datetime in future.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitDeallocate</description></item><item><term>Operation Id</term><description>ScheduledActions_SubmitVirtualMachineDeallocate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.SubmitVirtualMachineDeallocate(System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitVirtualMachineDeallocateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt; SubmitVirtualMachineDeallocateAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt; SubmitVirtualMachineDeallocateAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.SubmitVirtualMachineDeallocateAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SubmitVirtualMachineDeallocateAsync (subscriptionResource As SubscriptionResource, locationparameter As String, content As SubmitDeallocateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeallocateResourceOperationResult))" />
      <MemberSignature Language="F#" Value="static member SubmitVirtualMachineDeallocateAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.SubmitVirtualMachineDeallocateAsync (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesSubmitDeallocate: Schedule deallocate operation for a batch of virtual machines at datetime in future.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitDeallocate</description></item><item><term>Operation Id</term><description>ScheduledActions_SubmitVirtualMachineDeallocate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.SubmitVirtualMachineDeallocate(System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitVirtualMachineHibernate">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt; SubmitVirtualMachineHibernate (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt; SubmitVirtualMachineHibernate(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.SubmitVirtualMachineHibernate(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SubmitVirtualMachineHibernate (subscriptionResource As SubscriptionResource, locationparameter As String, content As SubmitHibernateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HibernateResourceOperationResult)" />
      <MemberSignature Language="F#" Value="static member SubmitVirtualMachineHibernate : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.SubmitVirtualMachineHibernate (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesSubmitHibernate: Schedule hibernate operation for a batch of virtual machines at datetime in future.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitHibernate</description></item><item><term>Operation Id</term><description>ScheduledActions_SubmitVirtualMachineHibernate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.SubmitVirtualMachineHibernate(System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitVirtualMachineHibernateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt; SubmitVirtualMachineHibernateAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt; SubmitVirtualMachineHibernateAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.SubmitVirtualMachineHibernateAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SubmitVirtualMachineHibernateAsync (subscriptionResource As SubscriptionResource, locationparameter As String, content As SubmitHibernateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HibernateResourceOperationResult))" />
      <MemberSignature Language="F#" Value="static member SubmitVirtualMachineHibernateAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.SubmitVirtualMachineHibernateAsync (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesSubmitHibernate: Schedule hibernate operation for a batch of virtual machines at datetime in future.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitHibernate</description></item><item><term>Operation Id</term><description>ScheduledActions_SubmitVirtualMachineHibernate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.SubmitVirtualMachineHibernate(System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitVirtualMachineStart">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt; SubmitVirtualMachineStart (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt; SubmitVirtualMachineStart(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.SubmitVirtualMachineStart(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SubmitVirtualMachineStart (subscriptionResource As SubscriptionResource, locationparameter As String, content As SubmitStartContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StartResourceOperationResult)" />
      <MemberSignature Language="F#" Value="static member SubmitVirtualMachineStart : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.SubmitVirtualMachineStart (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesSubmitStart: Schedule start operation for a batch of virtual machines at datetime in future.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitStart</description></item><item><term>Operation Id</term><description>ScheduledActions_SubmitVirtualMachineStart</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.SubmitVirtualMachineStart(System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitVirtualMachineStartAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt; SubmitVirtualMachineStartAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt; SubmitVirtualMachineStartAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.SubmitVirtualMachineStartAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SubmitVirtualMachineStartAsync (subscriptionResource As SubscriptionResource, locationparameter As String, content As SubmitStartContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StartResourceOperationResult))" />
      <MemberSignature Language="F#" Value="static member SubmitVirtualMachineStartAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt;" Usage="Azure.ResourceManager.ComputeSchedule.ComputeScheduleExtensions.SubmitVirtualMachineStartAsync (subscriptionResource, locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesSubmitStart: Schedule start operation for a batch of virtual machines at datetime in future.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitStart</description></item><item><term>Operation Id</term><description>ScheduledActions_SubmitVirtualMachineStart</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.SubmitVirtualMachineStart(System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
