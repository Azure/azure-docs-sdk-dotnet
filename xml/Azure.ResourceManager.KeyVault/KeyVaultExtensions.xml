<Type Name="KeyVaultExtensions" FullName="Azure.ResourceManager.KeyVault.KeyVaultExtensions">
  <TypeSignature Language="C#" Value="public static class KeyVaultExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit KeyVaultExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.KeyVault.KeyVaultExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module KeyVaultExtensions" />
  <TypeSignature Language="F#" Value="type KeyVaultExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.KeyVault. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckKeyVaultNameAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt; CheckKeyVaultNameAvailability (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt; CheckKeyVaultNameAvailability(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.CheckKeyVaultNameAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckKeyVaultNameAvailability (subscriptionResource As SubscriptionResource, content As KeyVaultNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="static member CheckKeyVaultNameAvailability : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.CheckKeyVaultNameAvailability (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the vault name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkNameAvailability</description></item><item><term>Operation Id</term><description>Vaults_CheckNameAvailability</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.CheckKeyVaultNameAvailability(Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckKeyVaultNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;&gt; CheckKeyVaultNameAvailabilityAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;&gt; CheckKeyVaultNameAvailabilityAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.CheckKeyVaultNameAvailabilityAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckKeyVaultNameAvailabilityAsync (subscriptionResource As SubscriptionResource, content As KeyVaultNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="static member CheckKeyVaultNameAvailabilityAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.CheckKeyVaultNameAvailabilityAsync (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the vault name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkNameAvailability</description></item><item><term>Operation Id</term><description>Vaults_CheckNameAvailability</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.CheckKeyVaultNameAvailability(Azure.ResourceManager.KeyVault.Models.KeyVaultNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckManagedHsmNameAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt; CheckManagedHsmNameAvailability (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt; CheckManagedHsmNameAvailability(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.CheckManagedHsmNameAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckManagedHsmNameAvailability (subscriptionResource As SubscriptionResource, content As ManagedHsmNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedHsmNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="static member CheckManagedHsmNameAvailability : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.CheckManagedHsmNameAvailability (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The name of the managed hsm. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the managed hsm name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkMhsmNameAvailability</description></item><item><term>Operation Id</term><description>ManagedHsms_CheckMhsmNameAvailability</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.CheckManagedHsmNameAvailability(Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckManagedHsmNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;&gt; CheckManagedHsmNameAvailabilityAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;&gt; CheckManagedHsmNameAvailabilityAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.CheckManagedHsmNameAvailabilityAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckManagedHsmNameAvailabilityAsync (subscriptionResource As SubscriptionResource, content As ManagedHsmNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedHsmNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="static member CheckManagedHsmNameAvailabilityAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.CheckManagedHsmNameAvailabilityAsync (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The name of the managed hsm. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the managed hsm name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkMhsmNameAvailability</description></item><item><term>Operation Id</term><description>ManagedHsms_CheckMhsmNameAvailability</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.CheckManagedHsmNameAvailability(Azure.ResourceManager.KeyVault.Models.ManagedHsmNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeyVault">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; GetDeletedKeyVault (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; GetDeletedKeyVault(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedKeyVault(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedKeyVault (subscriptionResource As SubscriptionResource, location As AzureLocation, vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeletedKeyVaultResource)" />
      <MemberSignature Language="F#" Value="static member GetDeletedKeyVault : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedKeyVault (subscriptionResource, location, vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location of the deleted vault. </param>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the deleted Azure key vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}</description></item><item><term>Operation Id</term><description>Vaults_GetDeleted</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedKeyVault(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeyVaultAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt; GetDeletedKeyVaultAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt; GetDeletedKeyVaultAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedKeyVaultAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedKeyVaultAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeletedKeyVaultResource))" />
      <MemberSignature Language="F#" Value="static member GetDeletedKeyVaultAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedKeyVaultAsync (subscriptionResource, location, vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location of the deleted vault. </param>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the deleted Azure key vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}</description></item><item><term>Operation Id</term><description>Vaults_GetDeleted</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedKeyVaultAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeyVaultResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.KeyVault.DeletedKeyVaultResource GetDeletedKeyVaultResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.KeyVault.DeletedKeyVaultResource GetDeletedKeyVaultResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedKeyVaultResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedKeyVaultResource (client As ArmClient, id As ResourceIdentifier) As DeletedKeyVaultResource" />
      <MemberSignature Language="F#" Value="static member GetDeletedKeyVaultResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.KeyVault.DeletedKeyVaultResource" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedKeyVaultResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.DeletedKeyVaultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.KeyVault.DeletedKeyVaultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.KeyVault.DeletedKeyVaultResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.KeyVault.DeletedKeyVaultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultArmClient.GetDeletedKeyVaultResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.KeyVault.DeletedKeyVaultResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeyVaults">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection GetDeletedKeyVaults (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection GetDeletedKeyVaults(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedKeyVaults(Azure.ResourceManager.Resources.SubscriptionResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedKeyVaults (subscriptionResource As SubscriptionResource) As DeletedKeyVaultCollection" />
      <MemberSignature Language="F#" Value="static member GetDeletedKeyVaults : Azure.ResourceManager.Resources.SubscriptionResource -&gt; Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedKeyVaults subscriptionResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of DeletedKeyVaultResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedKeyVaults" /> instead.</description></item></summary>
        <returns> An object representing collection of DeletedKeyVaultResources and their operations over a DeletedKeyVaultResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeyVaults">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; GetDeletedKeyVaults (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; GetDeletedKeyVaults(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedKeyVaults(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedKeyVaults (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeletedKeyVaultResource)" />
      <MemberSignature Language="F#" Value="static member GetDeletedKeyVaults : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedKeyVaults (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the deleted vaults in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedVaults</description></item><item><term>Operation Id</term><description>Vaults_ListDeleted</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedKeyVaults(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.KeyVault.DeletedKeyVaultResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeyVaultsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; GetDeletedKeyVaultsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; GetDeletedKeyVaultsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedKeyVaultsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedKeyVaultsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeletedKeyVaultResource)" />
      <MemberSignature Language="F#" Value="static member GetDeletedKeyVaultsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedKeyVaultsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the deleted vaults in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedVaults</description></item><item><term>Operation Id</term><description>Vaults_ListDeleted</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedKeyVaults(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.KeyVault.DeletedKeyVaultResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedManagedHsm">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt; GetDeletedManagedHsm (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt; GetDeletedManagedHsm(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedManagedHsm(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedManagedHsm (subscriptionResource As SubscriptionResource, location As AzureLocation, name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeletedManagedHsmResource)" />
      <MemberSignature Language="F#" Value="static member GetDeletedManagedHsm : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedManagedHsm (subscriptionResource, location, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location of the deleted managed HSM. </param>
        <param name="name"> The name of the deleted managed HSM. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified deleted managed HSM.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedManagedHSMs/{name}</description></item><item><term>Operation Id</term><description>ManagedHsms_GetDeleted</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedManagedHsm(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedManagedHsmAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;&gt; GetDeletedManagedHsmAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;&gt; GetDeletedManagedHsmAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedManagedHsmAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedManagedHsmAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeletedManagedHsmResource))" />
      <MemberSignature Language="F#" Value="static member GetDeletedManagedHsmAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedManagedHsmAsync (subscriptionResource, location, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location of the deleted managed HSM. </param>
        <param name="name"> The name of the deleted managed HSM. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified deleted managed HSM.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedManagedHSMs/{name}</description></item><item><term>Operation Id</term><description>ManagedHsms_GetDeleted</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedManagedHsmAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedManagedHsmResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.KeyVault.DeletedManagedHsmResource GetDeletedManagedHsmResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.KeyVault.DeletedManagedHsmResource GetDeletedManagedHsmResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedManagedHsmResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedManagedHsmResource (client As ArmClient, id As ResourceIdentifier) As DeletedManagedHsmResource" />
      <MemberSignature Language="F#" Value="static member GetDeletedManagedHsmResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.KeyVault.DeletedManagedHsmResource" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedManagedHsmResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.DeletedManagedHsmResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.KeyVault.DeletedManagedHsmResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.KeyVault.DeletedManagedHsmResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.KeyVault.DeletedManagedHsmResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultArmClient.GetDeletedManagedHsmResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.KeyVault.DeletedManagedHsmResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedManagedHsms">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.KeyVault.DeletedManagedHsmCollection GetDeletedManagedHsms (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.KeyVault.DeletedManagedHsmCollection GetDeletedManagedHsms(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedManagedHsms(Azure.ResourceManager.Resources.SubscriptionResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedManagedHsms (subscriptionResource As SubscriptionResource) As DeletedManagedHsmCollection" />
      <MemberSignature Language="F#" Value="static member GetDeletedManagedHsms : Azure.ResourceManager.Resources.SubscriptionResource -&gt; Azure.ResourceManager.KeyVault.DeletedManagedHsmCollection" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedManagedHsms subscriptionResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.DeletedManagedHsmCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of DeletedManagedHsmResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedManagedHsms" /> instead.</description></item></summary>
        <returns> An object representing collection of DeletedManagedHsmResources and their operations over a DeletedManagedHsmResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedManagedHsms">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt; GetDeletedManagedHsms (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt; GetDeletedManagedHsms(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedManagedHsms(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedManagedHsms (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeletedManagedHsmResource)" />
      <MemberSignature Language="F#" Value="static member GetDeletedManagedHsms : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedManagedHsms (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The List operation gets information about the deleted managed HSMs associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedManagedHSMs</description></item><item><term>Operation Id</term><description>ManagedHsms_ListDeleted</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedManagedHsms(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.KeyVault.DeletedManagedHsmResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedManagedHsmsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt; GetDeletedManagedHsmsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt; GetDeletedManagedHsmsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedManagedHsmsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedManagedHsmsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeletedManagedHsmResource)" />
      <MemberSignature Language="F#" Value="static member GetDeletedManagedHsmsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetDeletedManagedHsmsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.DeletedManagedHsmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The List operation gets information about the deleted managed HSMs associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedManagedHSMs</description></item><item><term>Operation Id</term><description>ManagedHsms_ListDeleted</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetDeletedManagedHsms(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.KeyVault.DeletedManagedHsmResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVault">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt; GetKeyVault (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.KeyVaultResource&gt; GetKeyVault(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVault(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyVault (resourceGroupResource As ResourceGroupResource, vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultResource)" />
      <MemberSignature Language="F#" Value="static member GetKeyVault : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVault (resourceGroupResource, vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Azure key vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}</description></item><item><term>Operation Id</term><description>Vaults_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultResourceGroupResource.GetKeyVault(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaultAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;&gt; GetKeyVaultAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.KeyVaultResource&gt;&gt; GetKeyVaultAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaultAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyVaultAsync (resourceGroupResource As ResourceGroupResource, vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultResource))" />
      <MemberSignature Language="F#" Value="static member GetKeyVaultAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaultAsync (resourceGroupResource, vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Azure key vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}</description></item><item><term>Operation Id</term><description>Vaults_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultResourceGroupResource.GetKeyVaultAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaultPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.KeyVault.KeyVaultPrivateEndpointConnectionResource GetKeyVaultPrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.KeyVault.KeyVaultPrivateEndpointConnectionResource GetKeyVaultPrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaultPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyVaultPrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As KeyVaultPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetKeyVaultPrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.KeyVault.KeyVaultPrivateEndpointConnectionResource" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaultPrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.KeyVaultPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.KeyVault.KeyVaultPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultArmClient.GetKeyVaultPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaultResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.KeyVault.KeyVaultResource GetKeyVaultResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.KeyVault.KeyVaultResource GetKeyVaultResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaultResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyVaultResource (client As ArmClient, id As ResourceIdentifier) As KeyVaultResource" />
      <MemberSignature Language="F#" Value="static member GetKeyVaultResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.KeyVault.KeyVaultResource" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaultResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.KeyVaultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.KeyVault.KeyVaultResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultArmClient.GetKeyVaultResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaults">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.KeyVault.KeyVaultCollection GetKeyVaults (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.KeyVault.KeyVaultCollection GetKeyVaults(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaults(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyVaults (resourceGroupResource As ResourceGroupResource) As KeyVaultCollection" />
      <MemberSignature Language="F#" Value="static member GetKeyVaults : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.KeyVault.KeyVaultCollection" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaults resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.KeyVaultCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of KeyVaultResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultResourceGroupResource.GetKeyVaults" /> instead.</description></item></summary>
        <returns> An object representing collection of KeyVaultResources and their operations over a KeyVaultResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaults">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt; GetKeyVaults (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.KeyVault.KeyVaultResource&gt; GetKeyVaults(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaults(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyVaults (subscriptionResource As SubscriptionResource, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of KeyVaultResource)" />
      <MemberSignature Language="F#" Value="static member GetKeyVaults : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaults (subscriptionResource, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The List operation gets information about the vaults associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults</description></item><item><term>Operation Id</term><description>Vaults_ListBySubscription</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetKeyVaults(System.Nullable{System.Int32},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaultsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt; GetKeyVaultsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.KeyVault.KeyVaultResource&gt; GetKeyVaultsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaultsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyVaultsAsync (subscriptionResource As SubscriptionResource, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of KeyVaultResource)" />
      <MemberSignature Language="F#" Value="static member GetKeyVaultsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaultsAsync (subscriptionResource, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.KeyVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The List operation gets information about the vaults associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults</description></item><item><term>Operation Id</term><description>Vaults_ListBySubscription</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetKeyVaults(System.Nullable{System.Int32},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaultSecretResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.KeyVault.KeyVaultSecretResource GetKeyVaultSecretResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.KeyVault.KeyVaultSecretResource GetKeyVaultSecretResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaultSecretResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyVaultSecretResource (client As ArmClient, id As ResourceIdentifier) As KeyVaultSecretResource" />
      <MemberSignature Language="F#" Value="static member GetKeyVaultSecretResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.KeyVault.KeyVaultSecretResource" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetKeyVaultSecretResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.KeyVaultSecretResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultSecretResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.KeyVault.KeyVaultSecretResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultSecretResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultArmClient.GetKeyVaultSecretResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.KeyVault.KeyVaultSecretResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedHsm">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt; GetManagedHsm (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.ManagedHsmResource&gt; GetManagedHsm(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsm(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedHsm (resourceGroupResource As ResourceGroupResource, name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedHsmResource)" />
      <MemberSignature Language="F#" Value="static member GetManagedHsm : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsm (resourceGroupResource, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="name"> The name of the managed HSM Pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified managed HSM Pool.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}</description></item><item><term>Operation Id</term><description>ManagedHsms_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultResourceGroupResource.GetManagedHsm(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedHsmAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;&gt; GetManagedHsmAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;&gt; GetManagedHsmAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsmAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedHsmAsync (resourceGroupResource As ResourceGroupResource, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedHsmResource))" />
      <MemberSignature Language="F#" Value="static member GetManagedHsmAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsmAsync (resourceGroupResource, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="name"> The name of the managed HSM Pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified managed HSM Pool.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}</description></item><item><term>Operation Id</term><description>ManagedHsms_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultResourceGroupResource.GetManagedHsmAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedHsmPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.KeyVault.ManagedHsmPrivateEndpointConnectionResource GetManagedHsmPrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.KeyVault.ManagedHsmPrivateEndpointConnectionResource GetManagedHsmPrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsmPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedHsmPrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As ManagedHsmPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetManagedHsmPrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.KeyVault.ManagedHsmPrivateEndpointConnectionResource" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsmPrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.ManagedHsmPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.KeyVault.ManagedHsmPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.KeyVault.ManagedHsmPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.KeyVault.ManagedHsmPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultArmClient.GetManagedHsmPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.KeyVault.ManagedHsmPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedHsmResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.KeyVault.ManagedHsmResource GetManagedHsmResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.KeyVault.ManagedHsmResource GetManagedHsmResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsmResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedHsmResource (client As ArmClient, id As ResourceIdentifier) As ManagedHsmResource" />
      <MemberSignature Language="F#" Value="static member GetManagedHsmResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.KeyVault.ManagedHsmResource" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsmResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.ManagedHsmResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.KeyVault.ManagedHsmResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.KeyVault.ManagedHsmResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.KeyVault.ManagedHsmResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultArmClient.GetManagedHsmResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.KeyVault.ManagedHsmResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedHsms">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.KeyVault.ManagedHsmCollection GetManagedHsms (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.KeyVault.ManagedHsmCollection GetManagedHsms(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsms(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedHsms (resourceGroupResource As ResourceGroupResource) As ManagedHsmCollection" />
      <MemberSignature Language="F#" Value="static member GetManagedHsms : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.KeyVault.ManagedHsmCollection" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsms resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.ManagedHsmCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ManagedHsmResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultResourceGroupResource.GetManagedHsms" /> instead.</description></item></summary>
        <returns> An object representing collection of ManagedHsmResources and their operations over a ManagedHsmResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedHsms">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt; GetManagedHsms (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.KeyVault.ManagedHsmResource&gt; GetManagedHsms(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsms(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedHsms (subscriptionResource As SubscriptionResource, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ManagedHsmResource)" />
      <MemberSignature Language="F#" Value="static member GetManagedHsms : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsms (subscriptionResource, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The List operation gets information about the managed HSM Pools associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/managedHSMs</description></item><item><term>Operation Id</term><description>ManagedHsms_ListBySubscription</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetManagedHsms(System.Nullable{System.Int32},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.KeyVault.ManagedHsmResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedHsmsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt; GetManagedHsmsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.KeyVault.ManagedHsmResource&gt; GetManagedHsmsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsmsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedHsmsAsync (subscriptionResource As SubscriptionResource, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ManagedHsmResource)" />
      <MemberSignature Language="F#" Value="static member GetManagedHsmsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;" Usage="Azure.ResourceManager.KeyVault.KeyVaultExtensions.GetManagedHsmsAsync (subscriptionResource, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.ManagedHsmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The List operation gets information about the managed HSM Pools associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/managedHSMs</description></item><item><term>Operation Id</term><description>ManagedHsms_ListBySubscription</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.KeyVault.Mocking.MockableKeyVaultSubscriptionResource.GetManagedHsms(System.Nullable{System.Int32},System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.KeyVault.ManagedHsmResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
