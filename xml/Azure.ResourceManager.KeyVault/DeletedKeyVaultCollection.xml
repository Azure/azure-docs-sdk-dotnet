<Type Name="DeletedKeyVaultCollection" FullName="Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection">
  <TypeSignature Language="C#" Value="public class DeletedKeyVaultCollection : Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DeletedKeyVaultCollection extends Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DeletedKeyVaultCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type DeletedKeyVaultCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.KeyVault.DeletedKeyVaultResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.KeyVault.DeletedKeyVaultResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" />.
            To get a <see cref="T:Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection" /> instance call the GetDeletedKeyVaults method from an instance of <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DeletedKeyVaultCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (Azure.Core.AzureLocation location, string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(valuetype Azure.Core.AzureLocation location, string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection.Exists(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (location As AzureLocation, vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="deletedKeyVaultCollection.Exists (location, vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the deleted vault. </param>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}
            Operation Id: Vaults_GetDeleted
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (Azure.Core.AzureLocation location, string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(valuetype Azure.Core.AzureLocation location, string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection.ExistsAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (location As AzureLocation, vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="deletedKeyVaultCollection.ExistsAsync (location, vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the deleted vault. </param>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}
            Operation Id: Vaults_GetDeleted
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; Get (Azure.Core.AzureLocation location, string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt; Get(valuetype Azure.Core.AzureLocation location, string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection.Get(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (location As AzureLocation, vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeletedKeyVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&#xA;override this.Get : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;" Usage="deletedKeyVaultCollection.Get (location, vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the deleted vault. </param>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the deleted Azure key vault.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}
            Operation Id: Vaults_GetDeleted
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt; GetAsync (Azure.Core.AzureLocation location, string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt; GetAsync(valuetype Azure.Core.AzureLocation location, string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.DeletedKeyVaultCollection.GetAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (location As AzureLocation, vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeletedKeyVaultResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt;&#xA;override this.GetAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt;" Usage="deletedKeyVaultCollection.GetAsync (location, vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.DeletedKeyVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the deleted vault. </param>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the deleted Azure key vault.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}
            Operation Id: Vaults_GetDeleted
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
