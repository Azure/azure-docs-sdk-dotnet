<Type Name="AppComplianceReportResource" FullName="Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource">
  <TypeSignature Language="C#" Value="public class AppComplianceReportResource : Azure.ResourceManager.ArmResource, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppComplianceReportResource extends Azure.ResourceManager.ArmResource implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" />
  <TypeSignature Language="VB.NET" Value="Public Class AppComplianceReportResource&#xA;Inherits ArmResource&#xA;Implements IJsonModel(Of AppComplianceReportData), IPersistableModel(Of AppComplianceReportData)" />
  <TypeSignature Language="F#" Value="type AppComplianceReportResource = class&#xA;    inherit ArmResource&#xA;    interface IJsonModel&lt;AppComplianceReportData&gt;&#xA;    interface IPersistableModel&lt;AppComplianceReportData&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A Class representing an AppComplianceReport along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetAppComplianceReportResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> using the GetAppComplianceReport method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AppComplianceReportResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAppComplianceReportNestedResourceNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt; CheckAppComplianceReportNestedResourceNameAvailability (Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt; CheckAppComplianceReportNestedResourceNameAvailability(class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.CheckAppComplianceReportNestedResourceNameAvailability(Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckAppComplianceReportNestedResourceNameAvailability (content As AppComplianceReportNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppComplianceReportNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckAppComplianceReportNestedResourceNameAvailability : Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&#xA;override this.CheckAppComplianceReportNestedResourceNameAvailability : Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;" Usage="appComplianceReportResource.CheckAppComplianceReportNestedResourceNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> NameAvailabilityRequest object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the report's nested resource name availability, e.g: Webhooks, Evidences, Snapshots.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/checkNameAvailability</description></item><item><term>Operation Id</term><description>Report_NestedResourceCheckNameAvailability</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckAppComplianceReportNestedResourceNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt; CheckAppComplianceReportNestedResourceNameAvailabilityAsync (Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt; CheckAppComplianceReportNestedResourceNameAvailabilityAsync(class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.CheckAppComplianceReportNestedResourceNameAvailabilityAsync(Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckAppComplianceReportNestedResourceNameAvailabilityAsync (content As AppComplianceReportNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppComplianceReportNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckAppComplianceReportNestedResourceNameAvailabilityAsync : Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt;&#xA;override this.CheckAppComplianceReportNestedResourceNameAvailabilityAsync : Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt;" Usage="appComplianceReportResource.CheckAppComplianceReportNestedResourceNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> NameAvailabilityRequest object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the report's nested resource name availability, e.g: Webhooks, Evidences, Snapshots.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/checkNameAvailability</description></item><item><term>Operation Id</term><description>Report_NestedResourceCheckNameAvailability</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string reportName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string reportName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.CreateResourceIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (reportName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.CreateResourceIdentifier reportName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reportName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reportName"> The reportName. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As AppComplianceReportData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="appComplianceReportResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete an AppComplianceAutomation report.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}</description></item><item><term>Operation Id</term><description>Report_Delete</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="appComplianceReportResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete an AppComplianceAutomation report.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}</description></item><item><term>Operation Id</term><description>Report_Delete</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportFixResult&gt; Fix (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ReportFixResult&gt; Fix(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.Fix(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Fix (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ReportFixResult)" />
      <MemberSignature Language="F#" Value="abstract member Fix : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportFixResult&gt;&#xA;override this.Fix : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportFixResult&gt;" Usage="appComplianceReportResource.Fix (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportFixResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fix the AppComplianceAutomation report error. e.g: App Compliance Automation Tool service unregistered, automation removed.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/fix</description></item><item><term>Operation Id</term><description>Report_Fix</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportFixResult&gt;&gt; FixAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ReportFixResult&gt;&gt; FixAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.FixAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FixAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ReportFixResult))" />
      <MemberSignature Language="F#" Value="abstract member FixAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportFixResult&gt;&gt;&#xA;override this.FixAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportFixResult&gt;&gt;" Usage="appComplianceReportResource.FixAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportFixResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fix the AppComplianceAutomation report error. e.g: App Compliance Automation Tool service unregistered, automation removed.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/fix</description></item><item><term>Operation Id</term><description>Report_Fix</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppComplianceReportResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;" Usage="appComplianceReportResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation report and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}</description></item><item><term>Operation Id</term><description>Report_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportEvidence">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource&gt; GetAppComplianceReportEvidence (string evidenceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource&gt; GetAppComplianceReportEvidence(string evidenceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAppComplianceReportEvidence(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportEvidence (evidenceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppComplianceReportEvidenceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportEvidence : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource&gt;&#xA;override this.GetAppComplianceReportEvidence : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource&gt;" Usage="appComplianceReportResource.GetAppComplianceReportEvidence (evidenceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidenceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="evidenceName"> The evidence name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the evidence metadata
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/evidences/{evidenceName}</description></item><item><term>Operation Id</term><description>Evidence_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidenceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="evidenceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportEvidenceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource&gt;&gt; GetAppComplianceReportEvidenceAsync (string evidenceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource&gt;&gt; GetAppComplianceReportEvidenceAsync(string evidenceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAppComplianceReportEvidenceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportEvidenceAsync (evidenceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppComplianceReportEvidenceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportEvidenceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource&gt;&gt;&#xA;override this.GetAppComplianceReportEvidenceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource&gt;&gt;" Usage="appComplianceReportResource.GetAppComplianceReportEvidenceAsync (evidenceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidenceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="evidenceName"> The evidence name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the evidence metadata
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/evidences/{evidenceName}</description></item><item><term>Operation Id</term><description>Evidence_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidenceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="evidenceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportEvidences">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceCollection GetAppComplianceReportEvidences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceCollection GetAppComplianceReportEvidences() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAppComplianceReportEvidences" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportEvidences () As AppComplianceReportEvidenceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportEvidences : unit -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceCollection&#xA;override this.GetAppComplianceReportEvidences : unit -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceCollection" Usage="appComplianceReportResource.GetAppComplianceReportEvidences " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppComplianceReportEvidenceResources in the AppComplianceReport. </summary>
        <returns> An object representing collection of AppComplianceReportEvidenceResources and their operations over a AppComplianceReportEvidenceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportScopingConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource&gt; GetAppComplianceReportScopingConfiguration (string scopingConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource&gt; GetAppComplianceReportScopingConfiguration(string scopingConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAppComplianceReportScopingConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportScopingConfiguration (scopingConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppComplianceReportScopingConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportScopingConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource&gt;&#xA;override this.GetAppComplianceReportScopingConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource&gt;" Usage="appComplianceReportResource.GetAppComplianceReportScopingConfiguration (scopingConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopingConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopingConfigurationName"> The scoping configuration of the specific report. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation scoping configuration of the specific report.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/scopingConfigurations/{scopingConfigurationName}</description></item><item><term>Operation Id</term><description>ScopingConfiguration_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scopingConfigurationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scopingConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportScopingConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource&gt;&gt; GetAppComplianceReportScopingConfigurationAsync (string scopingConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource&gt;&gt; GetAppComplianceReportScopingConfigurationAsync(string scopingConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAppComplianceReportScopingConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportScopingConfigurationAsync (scopingConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppComplianceReportScopingConfigurationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportScopingConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource&gt;&gt;&#xA;override this.GetAppComplianceReportScopingConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource&gt;&gt;" Usage="appComplianceReportResource.GetAppComplianceReportScopingConfigurationAsync (scopingConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopingConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopingConfigurationName"> The scoping configuration of the specific report. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation scoping configuration of the specific report.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/scopingConfigurations/{scopingConfigurationName}</description></item><item><term>Operation Id</term><description>ScopingConfiguration_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scopingConfigurationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scopingConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportScopingConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationCollection GetAppComplianceReportScopingConfigurations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationCollection GetAppComplianceReportScopingConfigurations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAppComplianceReportScopingConfigurations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportScopingConfigurations () As AppComplianceReportScopingConfigurationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportScopingConfigurations : unit -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationCollection&#xA;override this.GetAppComplianceReportScopingConfigurations : unit -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationCollection" Usage="appComplianceReportResource.GetAppComplianceReportScopingConfigurations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppComplianceReportScopingConfigurationResources in the AppComplianceReport. </summary>
        <returns> An object representing collection of AppComplianceReportScopingConfigurationResources and their operations over a AppComplianceReportScopingConfigurationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportSnapshot">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource&gt; GetAppComplianceReportSnapshot (string snapshotName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource&gt; GetAppComplianceReportSnapshot(string snapshotName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAppComplianceReportSnapshot(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportSnapshot (snapshotName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppComplianceReportSnapshotResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportSnapshot : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource&gt;&#xA;override this.GetAppComplianceReportSnapshot : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource&gt;" Usage="appComplianceReportResource.GetAppComplianceReportSnapshot (snapshotName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshotName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="snapshotName"> Snapshot Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation snapshot and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/snapshots/{snapshotName}</description></item><item><term>Operation Id</term><description>Snapshot_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="snapshotName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="snapshotName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportSnapshotAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource&gt;&gt; GetAppComplianceReportSnapshotAsync (string snapshotName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource&gt;&gt; GetAppComplianceReportSnapshotAsync(string snapshotName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAppComplianceReportSnapshotAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportSnapshotAsync (snapshotName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppComplianceReportSnapshotResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportSnapshotAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource&gt;&gt;&#xA;override this.GetAppComplianceReportSnapshotAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource&gt;&gt;" Usage="appComplianceReportResource.GetAppComplianceReportSnapshotAsync (snapshotName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshotName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="snapshotName"> Snapshot Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation snapshot and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/snapshots/{snapshotName}</description></item><item><term>Operation Id</term><description>Snapshot_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="snapshotName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="snapshotName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportSnapshots">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotCollection GetAppComplianceReportSnapshots ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotCollection GetAppComplianceReportSnapshots() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAppComplianceReportSnapshots" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportSnapshots () As AppComplianceReportSnapshotCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportSnapshots : unit -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotCollection&#xA;override this.GetAppComplianceReportSnapshots : unit -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotCollection" Usage="appComplianceReportResource.GetAppComplianceReportSnapshots " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppComplianceReportSnapshotResources in the AppComplianceReport. </summary>
        <returns> An object representing collection of AppComplianceReportSnapshotResources and their operations over a AppComplianceReportSnapshotResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportWebhook">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource&gt; GetAppComplianceReportWebhook (string webhookName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource&gt; GetAppComplianceReportWebhook(string webhookName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAppComplianceReportWebhook(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportWebhook (webhookName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppComplianceReportWebhookResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportWebhook : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource&gt;&#xA;override this.GetAppComplianceReportWebhook : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource&gt;" Usage="appComplianceReportResource.GetAppComplianceReportWebhook (webhookName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webhookName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="webhookName"> Webhook Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation webhook and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/webhooks/{webhookName}</description></item><item><term>Operation Id</term><description>Webhook_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webhookName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="webhookName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportWebhookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource&gt;&gt; GetAppComplianceReportWebhookAsync (string webhookName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource&gt;&gt; GetAppComplianceReportWebhookAsync(string webhookName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAppComplianceReportWebhookAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportWebhookAsync (webhookName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppComplianceReportWebhookResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportWebhookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource&gt;&gt;&#xA;override this.GetAppComplianceReportWebhookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource&gt;&gt;" Usage="appComplianceReportResource.GetAppComplianceReportWebhookAsync (webhookName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webhookName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="webhookName"> Webhook Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation webhook and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/webhooks/{webhookName}</description></item><item><term>Operation Id</term><description>Webhook_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webhookName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="webhookName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportWebhooks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookCollection GetAppComplianceReportWebhooks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookCollection GetAppComplianceReportWebhooks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAppComplianceReportWebhooks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportWebhooks () As AppComplianceReportWebhookCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportWebhooks : unit -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookCollection&#xA;override this.GetAppComplianceReportWebhooks : unit -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookCollection" Usage="appComplianceReportResource.GetAppComplianceReportWebhooks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppComplianceReportWebhookResources in the AppComplianceReport. </summary>
        <returns> An object representing collection of AppComplianceReportWebhookResources and their operations over a AppComplianceReportWebhookResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppComplianceReportResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt;" Usage="appComplianceReportResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation report and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}</description></item><item><term>Operation Id</term><description>Report_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScopingQuestions">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ScopingQuestions&gt; GetScopingQuestions (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ScopingQuestions&gt; GetScopingQuestions(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetScopingQuestions(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScopingQuestions (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ScopingQuestions)" />
      <MemberSignature Language="F#" Value="abstract member GetScopingQuestions : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ScopingQuestions&gt;&#xA;override this.GetScopingQuestions : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ScopingQuestions&gt;" Usage="appComplianceReportResource.GetScopingQuestions cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ScopingQuestions&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fix the AppComplianceAutomation report error. e.g: App Compliance Automation Tool service unregistered, automation removed.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/getScopingQuestions</description></item><item><term>Operation Id</term><description>Report_GetScopingQuestions</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScopingQuestionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ScopingQuestions&gt;&gt; GetScopingQuestionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ScopingQuestions&gt;&gt; GetScopingQuestionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.GetScopingQuestionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScopingQuestionsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ScopingQuestions))" />
      <MemberSignature Language="F#" Value="abstract member GetScopingQuestionsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ScopingQuestions&gt;&gt;&#xA;override this.GetScopingQuestionsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ScopingQuestions&gt;&gt;" Usage="appComplianceReportResource.GetScopingQuestionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ScopingQuestions&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fix the AppComplianceAutomation report error. e.g: App Compliance Automation Tool service unregistered, automation removed.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/getScopingQuestions</description></item><item><term>Operation Id</term><description>Report_GetScopingQuestions</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncCertRecord">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordResult&gt; SyncCertRecord (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordResult&gt; SyncCertRecord(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.SyncCertRecord(Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SyncCertRecord (waitUntil As WaitUntil, content As SyncCertRecordContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SyncCertRecordResult)" />
      <MemberSignature Language="F#" Value="abstract member SyncCertRecord : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordResult&gt;&#xA;override this.SyncCertRecord : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordResult&gt;" Usage="appComplianceReportResource.SyncCertRecord (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Parameters for synchronize certification record operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Synchronize attestation record from app compliance.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/syncCertRecord</description></item><item><term>Operation Id</term><description>Report_SyncCertRecord</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncCertRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordResult&gt;&gt; SyncCertRecordAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordResult&gt;&gt; SyncCertRecordAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.SyncCertRecordAsync(Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SyncCertRecordAsync (waitUntil As WaitUntil, content As SyncCertRecordContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SyncCertRecordResult))" />
      <MemberSignature Language="F#" Value="abstract member SyncCertRecordAsync : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordResult&gt;&gt;&#xA;override this.SyncCertRecordAsync : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordResult&gt;&gt;" Usage="appComplianceReportResource.SyncCertRecordAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.SyncCertRecordContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Parameters for synchronize certification record operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Synchronize attestation record from app compliance.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/syncCertRecord</description></item><item><term>Operation Id</term><description>Report_SyncCertRecord</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData IJsonModel&lt;AppComplianceReportData&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#AppComplianceAutomation#AppComplianceReportData&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As AppComplianceReportData Implements IJsonModel(Of AppComplianceReportData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData" Usage="appComplianceReportResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;AppComplianceReportData&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#AppComplianceAutomation#AppComplianceReportData&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of AppComplianceReportData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="appComplianceReportResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData IPersistableModel&lt;AppComplianceReportData&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#AppComplianceAutomation#AppComplianceReportData&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As AppComplianceReportData Implements IPersistableModel(Of AppComplianceReportData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData" Usage="appComplianceReportResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;AppComplianceReportData&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#AppComplianceAutomation#AppComplianceReportData&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of AppComplianceReportData).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="appComplianceReportResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;AppComplianceReportData&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#AppComplianceAutomation#AppComplianceReportData&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of AppComplianceReportData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="appComplianceReportResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportData&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.Update(Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As AppComplianceReportPatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of AppComplianceReportResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;" Usage="appComplianceReportResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Parameters for the create or update operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update an exiting AppComplianceAutomation report.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}</description></item><item><term>Operation Id</term><description>Report_Update</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As AppComplianceReportPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of AppComplianceReportResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt;" Usage="appComplianceReportResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Parameters for the create or update operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update an exiting AppComplianceAutomation report.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}</description></item><item><term>Operation Id</term><description>Report_Update</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportVerificationResult&gt; Verify (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ReportVerificationResult&gt; Verify(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.Verify(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Verify (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ReportVerificationResult)" />
      <MemberSignature Language="F#" Value="abstract member Verify : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportVerificationResult&gt;&#xA;override this.Verify : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportVerificationResult&gt;" Usage="appComplianceReportResource.Verify (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportVerificationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Verify the AppComplianceAutomation report health status.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/verify</description></item><item><term>Operation Id</term><description>Report_Verify</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportVerificationResult&gt;&gt; VerifyAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ReportVerificationResult&gt;&gt; VerifyAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.VerifyAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ReportVerificationResult))" />
      <MemberSignature Language="F#" Value="abstract member VerifyAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportVerificationResult&gt;&gt;&#xA;override this.VerifyAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportVerificationResult&gt;&gt;" Usage="appComplianceReportResource.VerifyAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportVerificationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Verify the AppComplianceAutomation report health status.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/verify</description></item><item><term>Operation Id</term><description>Report_Verify</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
