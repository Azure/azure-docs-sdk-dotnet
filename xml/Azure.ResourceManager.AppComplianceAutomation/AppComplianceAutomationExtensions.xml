<Type Name="AppComplianceAutomationExtensions" FullName="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions">
  <TypeSignature Language="C#" Value="public static class AppComplianceAutomationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AppComplianceAutomationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module AppComplianceAutomationExtensions" />
  <TypeSignature Language="F#" Value="type AppComplianceAutomationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.AppComplianceAutomation. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckAppComplianceReportNameAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt; CheckAppComplianceReportNameAvailability (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt; CheckAppComplianceReportNameAvailability(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.CheckAppComplianceReportNameAvailability(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckAppComplianceReportNameAvailability (tenantResource As TenantResource, content As AppComplianceReportNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppComplianceReportNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="static member CheckAppComplianceReportNameAvailability : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.CheckAppComplianceReportNameAvailability (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if the given name is available for a report.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/checkNameAvailability</description></item><item><term>Operation Id</term><description>ProviderActions_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.CheckAppComplianceReportNameAvailability(Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckAppComplianceReportNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt; CheckAppComplianceReportNameAvailabilityAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt; CheckAppComplianceReportNameAvailabilityAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.CheckAppComplianceReportNameAvailabilityAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckAppComplianceReportNameAvailabilityAsync (tenantResource As TenantResource, content As AppComplianceReportNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppComplianceReportNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="static member CheckAppComplianceReportNameAvailabilityAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.CheckAppComplianceReportNameAvailabilityAsync (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if the given name is available for a report.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/checkNameAvailability</description></item><item><term>Operation Id</term><description>ProviderActions_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.CheckAppComplianceReportNameAvailability(Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReport">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt; GetAppComplianceReport (this Azure.ResourceManager.Resources.TenantResource tenantResource, string reportName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt; GetAppComplianceReport(class Azure.ResourceManager.Resources.TenantResource tenantResource, string reportName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReport(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAppComplianceReport (tenantResource As TenantResource, reportName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppComplianceReportResource)" />
      <MemberSignature Language="F#" Value="static member GetAppComplianceReport : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReport (tenantResource, reportName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="reportName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="reportName"> Report Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation report and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}</description></item><item><term>Operation Id</term><description>Report_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetAppComplianceReport(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="reportName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="reportName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt; GetAppComplianceReportAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string reportName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt; GetAppComplianceReportAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string reportName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReportAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAppComplianceReportAsync (tenantResource As TenantResource, reportName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppComplianceReportResource))" />
      <MemberSignature Language="F#" Value="static member GetAppComplianceReportAsync : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReportAsync (tenantResource, reportName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="reportName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="reportName"> Report Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation report and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}</description></item><item><term>Operation Id</term><description>Report_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetAppComplianceReportAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="reportName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="reportName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportEvidenceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource GetAppComplianceReportEvidenceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource GetAppComplianceReportEvidenceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReportEvidenceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAppComplianceReportEvidenceResource (client As ArmClient, id As ResourceIdentifier) As AppComplianceReportEvidenceResource" />
      <MemberSignature Language="F#" Value="static member GetAppComplianceReportEvidenceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReportEvidenceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationArmClient.GetAppComplianceReportEvidenceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportEvidenceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource GetAppComplianceReportResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource GetAppComplianceReportResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReportResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAppComplianceReportResource (client As ArmClient, id As ResourceIdentifier) As AppComplianceReportResource" />
      <MemberSignature Language="F#" Value="static member GetAppComplianceReportResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReportResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource.CreateResourceIdentifier(System.String)" /> to create an <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationArmClient.GetAppComplianceReportResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReports">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportCollection GetAppComplianceReports (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportCollection GetAppComplianceReports(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReports(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAppComplianceReports (tenantResource As TenantResource) As AppComplianceReportCollection" />
      <MemberSignature Language="F#" Value="static member GetAppComplianceReports : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportCollection" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReports tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of AppComplianceReportResources in the TenantResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetAppComplianceReports" /> instead.</description></item></summary>
        <returns> An object representing collection of AppComplianceReportResources and their operations over a AppComplianceReportResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportScopingConfigurationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource GetAppComplianceReportScopingConfigurationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource GetAppComplianceReportScopingConfigurationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReportScopingConfigurationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAppComplianceReportScopingConfigurationResource (client As ArmClient, id As ResourceIdentifier) As AppComplianceReportScopingConfigurationResource" />
      <MemberSignature Language="F#" Value="static member GetAppComplianceReportScopingConfigurationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReportScopingConfigurationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationArmClient.GetAppComplianceReportScopingConfigurationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportScopingConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportSnapshotResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource GetAppComplianceReportSnapshotResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource GetAppComplianceReportSnapshotResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReportSnapshotResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAppComplianceReportSnapshotResource (client As ArmClient, id As ResourceIdentifier) As AppComplianceReportSnapshotResource" />
      <MemberSignature Language="F#" Value="static member GetAppComplianceReportSnapshotResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReportSnapshotResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationArmClient.GetAppComplianceReportSnapshotResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportSnapshotResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportWebhookResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource GetAppComplianceReportWebhookResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource GetAppComplianceReportWebhookResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReportWebhookResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAppComplianceReportWebhookResource (client As ArmClient, id As ResourceIdentifier) As AppComplianceReportWebhookResource" />
      <MemberSignature Language="F#" Value="static member GetAppComplianceReportWebhookResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetAppComplianceReportWebhookResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationArmClient.GetAppComplianceReportWebhookResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportWebhookResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionCountProviderAction">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt; GetCollectionCountProviderAction (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt; GetCollectionCountProviderAction(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetCollectionCountProviderAction(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCollectionCountProviderAction (tenantResource As TenantResource, content As ReportCollectionGetCountContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReportCollectionGetCountResult)" />
      <MemberSignature Language="F#" Value="static member GetCollectionCountProviderAction : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetCollectionCountProviderAction (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the count of reports.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/getCollectionCount</description></item><item><term>Operation Id</term><description>ProviderActions_GetCollectionCount</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetCollectionCountProviderAction(Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionCountProviderActionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;&gt; GetCollectionCountProviderActionAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;&gt; GetCollectionCountProviderActionAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetCollectionCountProviderActionAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCollectionCountProviderActionAsync (tenantResource As TenantResource, content As ReportCollectionGetCountContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReportCollectionGetCountResult))" />
      <MemberSignature Language="F#" Value="static member GetCollectionCountProviderActionAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetCollectionCountProviderActionAsync (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the count of reports.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/getCollectionCount</description></item><item><term>Operation Id</term><description>ProviderActions_GetCollectionCount</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetCollectionCountProviderAction(Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInUseStorageAccountsProviderAction">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt; GetInUseStorageAccountsProviderAction (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt; GetInUseStorageAccountsProviderAction(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetInUseStorageAccountsProviderAction(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInUseStorageAccountsProviderAction (tenantResource As TenantResource, content As ReportListInUseStorageAccountsContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReportListInUseStorageAccountsResult)" />
      <MemberSignature Language="F#" Value="static member GetInUseStorageAccountsProviderAction : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetInUseStorageAccountsProviderAction (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the storage accounts which are in use by related reports
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/listInUseStorageAccounts</description></item><item><term>Operation Id</term><description>ProviderActions_ListInUseStorageAccounts</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetInUseStorageAccountsProviderAction(Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInUseStorageAccountsProviderActionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;&gt; GetInUseStorageAccountsProviderActionAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;&gt; GetInUseStorageAccountsProviderActionAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetInUseStorageAccountsProviderActionAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInUseStorageAccountsProviderActionAsync (tenantResource As TenantResource, content As ReportListInUseStorageAccountsContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReportListInUseStorageAccountsResult))" />
      <MemberSignature Language="F#" Value="static member GetInUseStorageAccountsProviderActionAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetInUseStorageAccountsProviderActionAsync (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the storage accounts which are in use by related reports
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/listInUseStorageAccounts</description></item><item><term>Operation Id</term><description>ProviderActions_ListInUseStorageAccounts</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetInUseStorageAccountsProviderAction(Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOverviewStatusProviderAction">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt; GetOverviewStatusProviderAction (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt; GetOverviewStatusProviderAction(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetOverviewStatusProviderAction(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOverviewStatusProviderAction (tenantResource As TenantResource, content As AppComplianceGetOverviewStatusContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppComplianceGetOverviewStatusResult)" />
      <MemberSignature Language="F#" Value="static member GetOverviewStatusProviderAction : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetOverviewStatusProviderAction (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the resource overview status.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/getOverviewStatus</description></item><item><term>Operation Id</term><description>ProviderActions_GetOverviewStatus</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetOverviewStatusProviderAction(Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOverviewStatusProviderActionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;&gt; GetOverviewStatusProviderActionAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;&gt; GetOverviewStatusProviderActionAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetOverviewStatusProviderActionAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOverviewStatusProviderActionAsync (tenantResource As TenantResource, content As AppComplianceGetOverviewStatusContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppComplianceGetOverviewStatusResult))" />
      <MemberSignature Language="F#" Value="static member GetOverviewStatusProviderActionAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.GetOverviewStatusProviderActionAsync (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the resource overview status.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/getOverviewStatus</description></item><item><term>Operation Id</term><description>ProviderActions_GetOverviewStatus</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetOverviewStatusProviderAction(Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="OnboardProviderAction">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt; OnboardProviderAction (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt; OnboardProviderAction(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.OnboardProviderAction(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OnboardProviderAction (tenantResource As TenantResource, waitUntil As WaitUntil, content As AppComplianceOnboardContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of AppComplianceOnboardResult)" />
      <MemberSignature Language="F#" Value="static member OnboardProviderAction : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.OnboardProviderAction (tenantResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Onboard given subscriptions to Microsoft.AppComplianceAutomation provider.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/onboard</description></item><item><term>Operation Id</term><description>ProviderActions_Onboard</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.OnboardProviderAction(Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="OnboardProviderActionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;&gt; OnboardProviderActionAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;&gt; OnboardProviderActionAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.OnboardProviderActionAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OnboardProviderActionAsync (tenantResource As TenantResource, waitUntil As WaitUntil, content As AppComplianceOnboardContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of AppComplianceOnboardResult))" />
      <MemberSignature Language="F#" Value="static member OnboardProviderActionAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.OnboardProviderActionAsync (tenantResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Onboard given subscriptions to Microsoft.AppComplianceAutomation provider.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/onboard</description></item><item><term>Operation Id</term><description>ProviderActions_Onboard</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.OnboardProviderAction(Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerEvaluationProviderAction">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt; TriggerEvaluationProviderAction (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt; TriggerEvaluationProviderAction(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.TriggerEvaluationProviderAction(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TriggerEvaluationProviderAction (tenantResource As TenantResource, waitUntil As WaitUntil, content As TriggerEvaluationContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of TriggerEvaluationResult)" />
      <MemberSignature Language="F#" Value="static member TriggerEvaluationProviderAction : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.TriggerEvaluationProviderAction (tenantResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Trigger quick evaluation for the given subscriptions.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/triggerEvaluation</description></item><item><term>Operation Id</term><description>ProviderActions_TriggerEvaluation</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.TriggerEvaluationProviderAction(Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerEvaluationProviderActionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;&gt; TriggerEvaluationProviderActionAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;&gt; TriggerEvaluationProviderActionAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.TriggerEvaluationProviderActionAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TriggerEvaluationProviderActionAsync (tenantResource As TenantResource, waitUntil As WaitUntil, content As TriggerEvaluationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of TriggerEvaluationResult))" />
      <MemberSignature Language="F#" Value="static member TriggerEvaluationProviderActionAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;&gt;" Usage="Azure.ResourceManager.AppComplianceAutomation.AppComplianceAutomationExtensions.TriggerEvaluationProviderActionAsync (tenantResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Trigger quick evaluation for the given subscriptions.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/triggerEvaluation</description></item><item><term>Operation Id</term><description>ProviderActions_TriggerEvaluation</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.TriggerEvaluationProviderAction(Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
