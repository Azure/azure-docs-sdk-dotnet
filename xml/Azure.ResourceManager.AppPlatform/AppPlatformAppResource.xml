<Type Name="AppPlatformAppResource" FullName="Azure.ResourceManager.AppPlatform.AppPlatformAppResource">
  <TypeSignature Language="C#" Value="public class AppPlatformAppResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppPlatformAppResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AppPlatform.AppPlatformAppResource" />
  <TypeSignature Language="VB.NET" Value="Public Class AppPlatformAppResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type AppPlatformAppResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing an AppPlatformAppResource along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.AppPlatform.AppPlatformAppResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetAppPlatformAppResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.AppPlatform.AppPlatformServiceResource" /> using the GetAppPlatformAppResource method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AppPlatformAppResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.AppPlatform.AppPlatformAppResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string serviceName, string appName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string serviceName, string appName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, serviceName As String, appName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.AppPlatform.AppPlatformAppResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, serviceName, appName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="appName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="serviceName">To be added.</param>
        <param name="appName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.AppPlatform.AppPlatformAppResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As AppPlatformAppResourceData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData" Usage="Azure.ResourceManager.AppPlatform.AppPlatformAppResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="appPlatformAppResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Operation to delete an App.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}
            Operation Id: Apps_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="appPlatformAppResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Operation to delete an App.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}
            Operation Id: Apps_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt; Get (string syncStatus = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt; Get(string syncStatus, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional syncStatus As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppPlatformAppResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;" Usage="appPlatformAppResource.Get (syncStatus, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syncStatus" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="syncStatus"> Indicates whether sync status. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an App and its properties.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}
            Operation Id: Apps_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppDeploymentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppDeploymentResource&gt; GetAppDeploymentResource (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.AppDeploymentResource&gt; GetAppDeploymentResource(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.GetAppDeploymentResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppDeploymentResource (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppDeploymentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppDeploymentResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppDeploymentResource&gt;&#xA;override this.GetAppDeploymentResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppDeploymentResource&gt;" Usage="appPlatformAppResource.GetAppDeploymentResource (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppDeploymentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the Deployment resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Deployment and its properties.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}
            Operation Id: Deployments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deploymentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppDeploymentResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppDeploymentResource&gt;&gt; GetAppDeploymentResourceAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.AppDeploymentResource&gt;&gt; GetAppDeploymentResourceAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.GetAppDeploymentResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppDeploymentResourceAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppDeploymentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppDeploymentResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppDeploymentResource&gt;&gt;&#xA;override this.GetAppDeploymentResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppDeploymentResource&gt;&gt;" Usage="appPlatformAppResource.GetAppDeploymentResourceAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppDeploymentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the Deployment resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Deployment and its properties.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}
            Operation Id: Deployments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deploymentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppDeploymentResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppPlatform.AppDeploymentResourceCollection GetAppDeploymentResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppPlatform.AppDeploymentResourceCollection GetAppDeploymentResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.GetAppDeploymentResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppDeploymentResources () As AppDeploymentResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppDeploymentResources : unit -&gt; Azure.ResourceManager.AppPlatform.AppDeploymentResourceCollection&#xA;override this.GetAppDeploymentResources : unit -&gt; Azure.ResourceManager.AppPlatform.AppDeploymentResourceCollection" Usage="appPlatformAppResource.GetAppDeploymentResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppPlatform.AppDeploymentResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppDeploymentResources in the AppPlatformAppResource. </summary>
        <returns> An object representing collection of AppDeploymentResources and their operations over a AppDeploymentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppPlatformCustomDomainResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResource&gt; GetAppPlatformCustomDomainResource (string domainName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResource&gt; GetAppPlatformCustomDomainResource(string domainName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.GetAppPlatformCustomDomainResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppPlatformCustomDomainResource (domainName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppPlatformCustomDomainResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppPlatformCustomDomainResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResource&gt;&#xA;override this.GetAppPlatformCustomDomainResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResource&gt;" Usage="appPlatformAppResource.GetAppPlatformCustomDomainResource (domainName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="domainName"> The name of the custom domain resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the custom domain of one lifecycle application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}
            Operation Id: CustomDomains_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="domainName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domainName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppPlatformCustomDomainResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResource&gt;&gt; GetAppPlatformCustomDomainResourceAsync (string domainName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResource&gt;&gt; GetAppPlatformCustomDomainResourceAsync(string domainName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.GetAppPlatformCustomDomainResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppPlatformCustomDomainResourceAsync (domainName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppPlatformCustomDomainResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppPlatformCustomDomainResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResource&gt;&gt;&#xA;override this.GetAppPlatformCustomDomainResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResource&gt;&gt;" Usage="appPlatformAppResource.GetAppPlatformCustomDomainResourceAsync (domainName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="domainName"> The name of the custom domain resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the custom domain of one lifecycle application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}
            Operation Id: CustomDomains_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="domainName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domainName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppPlatformCustomDomainResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResourceCollection GetAppPlatformCustomDomainResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResourceCollection GetAppPlatformCustomDomainResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.GetAppPlatformCustomDomainResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppPlatformCustomDomainResources () As AppPlatformCustomDomainResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppPlatformCustomDomainResources : unit -&gt; Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResourceCollection&#xA;override this.GetAppPlatformCustomDomainResources : unit -&gt; Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResourceCollection" Usage="appPlatformAppResource.GetAppPlatformCustomDomainResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppPlatform.AppPlatformCustomDomainResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppPlatformCustomDomainResources in the AppPlatformAppResource. </summary>
        <returns> An object representing collection of AppPlatformCustomDomainResources and their operations over a AppPlatformCustomDomainResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt; GetAsync (string syncStatus = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt; GetAsync(string syncStatus, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional syncStatus As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppPlatformAppResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt;" Usage="appPlatformAppResource.GetAsync (syncStatus, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syncStatus" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="syncStatus"> Indicates whether sync status. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an App and its properties.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}
            Operation Id: Apps_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBindingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppPlatform.BindingResource&gt; GetBindingResource (string bindingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.BindingResource&gt; GetBindingResource(string bindingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.GetBindingResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBindingResource (bindingName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BindingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBindingResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.BindingResource&gt;&#xA;override this.GetBindingResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.BindingResource&gt;" Usage="appPlatformAppResource.GetBindingResource (bindingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppPlatform.BindingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="bindingName"> The name of the Binding resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Binding and its properties.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/bindings/{bindingName}
            Operation Id: Bindings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="bindingName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="bindingName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBindingResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.BindingResource&gt;&gt; GetBindingResourceAsync (string bindingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.BindingResource&gt;&gt; GetBindingResourceAsync(string bindingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.GetBindingResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBindingResourceAsync (bindingName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BindingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBindingResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.BindingResource&gt;&gt;&#xA;override this.GetBindingResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.BindingResource&gt;&gt;" Usage="appPlatformAppResource.GetBindingResourceAsync (bindingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.BindingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="bindingName"> The name of the Binding resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Binding and its properties.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/bindings/{bindingName}
            Operation Id: Bindings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="bindingName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="bindingName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBindingResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppPlatform.BindingResourceCollection GetBindingResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppPlatform.BindingResourceCollection GetBindingResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.GetBindingResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBindingResources () As BindingResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBindingResources : unit -&gt; Azure.ResourceManager.AppPlatform.BindingResourceCollection&#xA;override this.GetBindingResources : unit -&gt; Azure.ResourceManager.AppPlatform.BindingResourceCollection" Usage="appPlatformAppResource.GetBindingResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppPlatform.BindingResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of BindingResources in the AppPlatformAppResource. </summary>
        <returns> An object representing collection of BindingResources and their operations over a BindingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceUploadUri">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.ResourceUploadResult&gt; GetResourceUploadUri (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.Models.ResourceUploadResult&gt; GetResourceUploadUri(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.GetResourceUploadUri(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceUploadUri (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceUploadResult)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceUploadUri : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.ResourceUploadResult&gt;&#xA;override this.GetResourceUploadUri : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.ResourceUploadResult&gt;" Usage="appPlatformAppResource.GetResourceUploadUri cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.ResourceUploadResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an resource upload URL for an App, which may be artifacts or source archive.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/getResourceUploadUrl
            Operation Id: Apps_GetResourceUploadUrl
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceUploadUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.ResourceUploadResult&gt;&gt; GetResourceUploadUriAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.Models.ResourceUploadResult&gt;&gt; GetResourceUploadUriAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.GetResourceUploadUriAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceUploadUriAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceUploadResult))" />
      <MemberSignature Language="F#" Value="abstract member GetResourceUploadUriAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.ResourceUploadResult&gt;&gt;&#xA;override this.GetResourceUploadUriAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.ResourceUploadResult&gt;&gt;" Usage="appPlatformAppResource.GetResourceUploadUriAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.ResourceUploadResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an resource upload URL for an App, which may be artifacts or source archive.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/getResourceUploadUrl
            Operation Id: Apps_GetResourceUploadUrl
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.AppPlatform.AppPlatformAppResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.AppPlatform.AppPlatformAppResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetActiveDeployments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt; SetActiveDeployments (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppPlatform.Models.ActiveDeploymentList activeDeploymentCollection, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt; SetActiveDeployments(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppPlatform.Models.ActiveDeploymentList activeDeploymentCollection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.SetActiveDeployments(Azure.WaitUntil,Azure.ResourceManager.AppPlatform.Models.ActiveDeploymentList,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetActiveDeployments (waitUntil As WaitUntil, activeDeploymentCollection As ActiveDeploymentList, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of AppPlatformAppResource)" />
      <MemberSignature Language="F#" Value="abstract member SetActiveDeployments : Azure.WaitUntil * Azure.ResourceManager.AppPlatform.Models.ActiveDeploymentList * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&#xA;override this.SetActiveDeployments : Azure.WaitUntil * Azure.ResourceManager.AppPlatform.Models.ActiveDeploymentList * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;" Usage="appPlatformAppResource.SetActiveDeployments (waitUntil, activeDeploymentCollection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="activeDeploymentCollection" Type="Azure.ResourceManager.AppPlatform.Models.ActiveDeploymentList" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="activeDeploymentCollection"> A list of Deployment name to be active. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Set existing Deployment under the app as active
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/setActiveDeployments
            Operation Id: Apps_SetActiveDeployments
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activeDeploymentCollection" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetActiveDeploymentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt; SetActiveDeploymentsAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppPlatform.Models.ActiveDeploymentList activeDeploymentCollection, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt; SetActiveDeploymentsAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppPlatform.Models.ActiveDeploymentList activeDeploymentCollection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.SetActiveDeploymentsAsync(Azure.WaitUntil,Azure.ResourceManager.AppPlatform.Models.ActiveDeploymentList,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetActiveDeploymentsAsync (waitUntil As WaitUntil, activeDeploymentCollection As ActiveDeploymentList, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of AppPlatformAppResource))" />
      <MemberSignature Language="F#" Value="abstract member SetActiveDeploymentsAsync : Azure.WaitUntil * Azure.ResourceManager.AppPlatform.Models.ActiveDeploymentList * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt;&#xA;override this.SetActiveDeploymentsAsync : Azure.WaitUntil * Azure.ResourceManager.AppPlatform.Models.ActiveDeploymentList * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt;" Usage="appPlatformAppResource.SetActiveDeploymentsAsync (waitUntil, activeDeploymentCollection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="activeDeploymentCollection" Type="Azure.ResourceManager.AppPlatform.Models.ActiveDeploymentList" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="activeDeploymentCollection"> A list of Deployment name to be active. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Set existing Deployment under the app as active
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/setActiveDeployments
            Operation Id: Apps_SetActiveDeployments
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activeDeploymentCollection" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.Update(Azure.WaitUntil,Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, data As AppPlatformAppResourceData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of AppPlatformAppResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;" Usage="appPlatformAppResource.Update (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> Parameters for the update operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Operation to update an exiting App.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}
            Operation Id: Apps_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, data As AppPlatformAppResourceData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of AppPlatformAppResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt;" Usage="appPlatformAppResource.UpdateAsync (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformAppResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.AppPlatform.AppPlatformAppResourceData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> Parameters for the update operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Operation to update an exiting App.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}
            Operation Id: Apps_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateDomain">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.CustomDomainValidateResult&gt; ValidateDomain (Azure.ResourceManager.AppPlatform.Models.CustomDomainValidatePayload validatePayload, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.Models.CustomDomainValidateResult&gt; ValidateDomain(class Azure.ResourceManager.AppPlatform.Models.CustomDomainValidatePayload validatePayload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.ValidateDomain(Azure.ResourceManager.AppPlatform.Models.CustomDomainValidatePayload,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateDomain (validatePayload As CustomDomainValidatePayload, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CustomDomainValidateResult)" />
      <MemberSignature Language="F#" Value="abstract member ValidateDomain : Azure.ResourceManager.AppPlatform.Models.CustomDomainValidatePayload * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.CustomDomainValidateResult&gt;&#xA;override this.ValidateDomain : Azure.ResourceManager.AppPlatform.Models.CustomDomainValidatePayload * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.CustomDomainValidateResult&gt;" Usage="appPlatformAppResource.ValidateDomain (validatePayload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.CustomDomainValidateResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validatePayload" Type="Azure.ResourceManager.AppPlatform.Models.CustomDomainValidatePayload" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="validatePayload"> Custom domain payload to be validated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the resource name is valid as well as not in use.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/validateDomain
            Operation Id: Apps_ValidateDomain
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="validatePayload" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateDomainAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.CustomDomainValidateResult&gt;&gt; ValidateDomainAsync (Azure.ResourceManager.AppPlatform.Models.CustomDomainValidatePayload validatePayload, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.Models.CustomDomainValidateResult&gt;&gt; ValidateDomainAsync(class Azure.ResourceManager.AppPlatform.Models.CustomDomainValidatePayload validatePayload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformAppResource.ValidateDomainAsync(Azure.ResourceManager.AppPlatform.Models.CustomDomainValidatePayload,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateDomainAsync (validatePayload As CustomDomainValidatePayload, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CustomDomainValidateResult))" />
      <MemberSignature Language="F#" Value="abstract member ValidateDomainAsync : Azure.ResourceManager.AppPlatform.Models.CustomDomainValidatePayload * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.CustomDomainValidateResult&gt;&gt;&#xA;override this.ValidateDomainAsync : Azure.ResourceManager.AppPlatform.Models.CustomDomainValidatePayload * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.CustomDomainValidateResult&gt;&gt;" Usage="appPlatformAppResource.ValidateDomainAsync (validatePayload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.CustomDomainValidateResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validatePayload" Type="Azure.ResourceManager.AppPlatform.Models.CustomDomainValidatePayload" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="validatePayload"> Custom domain payload to be validated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the resource name is valid as well as not in use.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/validateDomain
            Operation Id: Apps_ValidateDomain
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="validatePayload" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
