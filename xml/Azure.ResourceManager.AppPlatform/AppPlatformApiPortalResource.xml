<Type Name="AppPlatformApiPortalResource" FullName="Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource">
  <TypeSignature Language="C#" Value="public class AppPlatformApiPortalResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppPlatformApiPortalResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource" />
  <TypeSignature Language="VB.NET" Value="Public Class AppPlatformApiPortalResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type AppPlatformApiPortalResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.0.2.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing an AppPlatformApiPortal along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetAppPlatformApiPortalResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.AppPlatform.AppPlatformServiceResource" /> using the GetAppPlatformApiPortal method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AppPlatformApiPortalResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string serviceName, string apiPortalName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string serviceName, string apiPortalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, serviceName As String, apiPortalName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, serviceName, apiPortalName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="apiPortalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="serviceName"> The serviceName. </param>
        <param name="apiPortalName"> The apiPortalName. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As AppPlatformApiPortalData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData" Usage="Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="appPlatformApiPortalResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete the default API portal.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}</description></item><item><term>Operation Id</term><description>ApiPortals_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="appPlatformApiPortalResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete the default API portal.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}</description></item><item><term>Operation Id</term><description>ApiPortals_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppPlatformApiPortalResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;" Usage="appPlatformApiPortalResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the API portal and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}</description></item><item><term>Operation Id</term><description>ApiPortals_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppPlatformApiPortalCustomDomain">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainResource&gt; GetAppPlatformApiPortalCustomDomain (string domainName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainResource&gt; GetAppPlatformApiPortalCustomDomain(string domainName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.GetAppPlatformApiPortalCustomDomain(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppPlatformApiPortalCustomDomain (domainName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppPlatformApiPortalCustomDomainResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppPlatformApiPortalCustomDomain : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainResource&gt;&#xA;override this.GetAppPlatformApiPortalCustomDomain : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainResource&gt;" Usage="appPlatformApiPortalResource.GetAppPlatformApiPortalCustomDomain (domainName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="domainName"> The name of the API portal custom domain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the API portal custom domain.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/domains/{domainName}</description></item><item><term>Operation Id</term><description>ApiPortalCustomDomains_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domainName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="domainName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppPlatformApiPortalCustomDomainAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainResource&gt;&gt; GetAppPlatformApiPortalCustomDomainAsync (string domainName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainResource&gt;&gt; GetAppPlatformApiPortalCustomDomainAsync(string domainName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.GetAppPlatformApiPortalCustomDomainAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppPlatformApiPortalCustomDomainAsync (domainName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppPlatformApiPortalCustomDomainResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppPlatformApiPortalCustomDomainAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainResource&gt;&gt;&#xA;override this.GetAppPlatformApiPortalCustomDomainAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainResource&gt;&gt;" Usage="appPlatformApiPortalResource.GetAppPlatformApiPortalCustomDomainAsync (domainName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="domainName"> The name of the API portal custom domain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the API portal custom domain.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/domains/{domainName}</description></item><item><term>Operation Id</term><description>ApiPortalCustomDomains_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domainName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="domainName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppPlatformApiPortalCustomDomains">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainCollection GetAppPlatformApiPortalCustomDomains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainCollection GetAppPlatformApiPortalCustomDomains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.GetAppPlatformApiPortalCustomDomains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppPlatformApiPortalCustomDomains () As AppPlatformApiPortalCustomDomainCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppPlatformApiPortalCustomDomains : unit -&gt; Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainCollection&#xA;override this.GetAppPlatformApiPortalCustomDomains : unit -&gt; Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainCollection" Usage="appPlatformApiPortalResource.GetAppPlatformApiPortalCustomDomains " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppPlatform.AppPlatformApiPortalCustomDomainCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppPlatformApiPortalCustomDomainResources in the AppPlatformApiPortal. </summary>
        <returns> An object representing collection of AppPlatformApiPortalCustomDomainResources and their operations over a AppPlatformApiPortalCustomDomainResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppPlatformApiPortalResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;&gt;" Usage="appPlatformApiPortalResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the API portal and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}</description></item><item><term>Operation Id</term><description>ApiPortals_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.Update(Azure.WaitUntil,Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, data As AppPlatformApiPortalData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of AppPlatformApiPortalResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;" Usage="appPlatformApiPortalResource.Update (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> The API portal for the create or update operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create the default API portal or update the existing API portal.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}</description></item><item><term>Operation Id</term><description>ApiPortals_CreateOrUpdate</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, data As AppPlatformApiPortalData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of AppPlatformApiPortalResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;&gt;" Usage="appPlatformApiPortalResource.UpdateAsync (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.AppPlatform.AppPlatformApiPortalData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> The API portal for the create or update operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create the default API portal or update the existing API portal.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}</description></item><item><term>Operation Id</term><description>ApiPortals_CreateOrUpdate</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateDomain">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateResult&gt; ValidateDomain (Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateResult&gt; ValidateDomain(class Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.ValidateDomain(Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateDomain (content As AppPlatformCustomDomainValidateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppPlatformCustomDomainValidateResult)" />
      <MemberSignature Language="F#" Value="abstract member ValidateDomain : Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateResult&gt;&#xA;override this.ValidateDomain : Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateResult&gt;" Usage="appPlatformApiPortalResource.ValidateDomain (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Custom domain payload to be validated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the domains are valid as well as not in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/validateDomain</description></item><item><term>Operation Id</term><description>ApiPortals_ValidateDomain</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateDomainAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateResult&gt;&gt; ValidateDomainAsync (Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateResult&gt;&gt; ValidateDomainAsync(class Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppPlatform.AppPlatformApiPortalResource.ValidateDomainAsync(Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateDomainAsync (content As AppPlatformCustomDomainValidateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppPlatformCustomDomainValidateResult))" />
      <MemberSignature Language="F#" Value="abstract member ValidateDomainAsync : Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateResult&gt;&gt;&#xA;override this.ValidateDomainAsync : Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateResult&gt;&gt;" Usage="appPlatformApiPortalResource.ValidateDomainAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppPlatform</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppPlatform.Models.AppPlatformCustomDomainValidateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Custom domain payload to be validated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the domains are valid as well as not in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/validateDomain</description></item><item><term>Operation Id</term><description>ApiPortals_ValidateDomain</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
