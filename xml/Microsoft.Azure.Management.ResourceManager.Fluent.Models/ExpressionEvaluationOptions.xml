<Type Name="ExpressionEvaluationOptions" FullName="Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptions">
  <TypeSignature Language="C#" Value="public class ExpressionEvaluationOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionEvaluationOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionEvaluationOptions" />
  <TypeSignature Language="F#" Value="type ExpressionEvaluationOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.70</AssemblyVersion>
    <AssemblyVersion>1.0.0.71</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Specifies whether template expressions are evaluated within the scope
            of the parent template or nested template.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionEvaluationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the ExpressionEvaluationOptions
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionEvaluationOptions (Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptionsScopeType scope = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptionsScopeType scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptions.#ctor(Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptionsScopeType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional scope As ExpressionEvaluationOptionsScopeType = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptions : Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptionsScopeType -&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptions" Usage="new Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptions scope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptionsScopeType" />
      </Parameters>
      <Docs>
        <param name="scope">The scope to be used for evaluation of
            parameters, variables and functions in a nested template. Possible
            values include: 'NotSpecified', 'Outer', 'Inner'</param>
        <summary>
            Initializes a new instance of the ExpressionEvaluationOptions
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptionsScopeType Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptionsScopeType Scope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptions.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ExpressionEvaluationOptionsScopeType" />
      <MemberSignature Language="F#" Value="member this.Scope : Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptionsScopeType with get, set" Usage="Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptions.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.70</AssemblyVersion>
        <AssemblyVersion>1.0.0.71</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="scope")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="scope")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Fluent.Models.ExpressionEvaluationOptionsScopeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the scope to be used for evaluation of parameters,
            variables and functions in a nested template. Possible values
            include: 'NotSpecified', 'Outer', 'Inner'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
