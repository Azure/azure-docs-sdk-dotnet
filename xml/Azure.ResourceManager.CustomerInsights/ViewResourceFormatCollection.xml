<Type Name="ViewResourceFormatCollection" FullName="Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection">
  <TypeSignature Language="C#" Value="public class ViewResourceFormatCollection : Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ViewResourceFormatCollection extends Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ViewResourceFormatCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type ViewResourceFormatCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.CustomerInsights</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.CustomerInsights.HubResource" />.
            To get a <see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection" /> instance call the GetViewResourceFormats method from an instance of <see cref="T:Azure.ResourceManager.CustomerInsights.HubResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewResourceFormatCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CustomerInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt; CreateOrUpdate (Azure.WaitUntil waitUntil, string viewName, Azure.ResourceManager.CustomerInsights.ViewResourceFormatData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt; CreateOrUpdate(valuetype Azure.WaitUntil waitUntil, string viewName, class Azure.ResourceManager.CustomerInsights.ViewResourceFormatData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.CustomerInsights.ViewResourceFormatData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (waitUntil As WaitUntil, viewName As String, data As ViewResourceFormatData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ViewResourceFormatResource)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : Azure.WaitUntil * string * Azure.ResourceManager.CustomerInsights.ViewResourceFormatData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&#xA;override this.CreateOrUpdate : Azure.WaitUntil * string * Azure.ResourceManager.CustomerInsights.ViewResourceFormatData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;" Usage="viewResourceFormatCollection.CreateOrUpdate (waitUntil, viewName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CustomerInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.CustomerInsights.ViewResourceFormatData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="viewName"> The name of the view. </param>
        <param name="data"> Parameters supplied to the CreateOrUpdate View operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a view or updates an existing view in the hub.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_CreateOrUpdate</description></item><item><term>Default Api Version</term><description>2017-04-26</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="viewName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt; CreateOrUpdateAsync (Azure.WaitUntil waitUntil, string viewName, Azure.ResourceManager.CustomerInsights.ViewResourceFormatData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt; CreateOrUpdateAsync(valuetype Azure.WaitUntil waitUntil, string viewName, class Azure.ResourceManager.CustomerInsights.ViewResourceFormatData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.CustomerInsights.ViewResourceFormatData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (waitUntil As WaitUntil, viewName As String, data As ViewResourceFormatData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ViewResourceFormatResource))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : Azure.WaitUntil * string * Azure.ResourceManager.CustomerInsights.ViewResourceFormatData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt;&#xA;override this.CreateOrUpdateAsync : Azure.WaitUntil * string * Azure.ResourceManager.CustomerInsights.ViewResourceFormatData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt;" Usage="viewResourceFormatCollection.CreateOrUpdateAsync (waitUntil, viewName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CustomerInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.CustomerInsights.ViewResourceFormatData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="viewName"> The name of the view. </param>
        <param name="data"> Parameters supplied to the CreateOrUpdate View operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a view or updates an existing view in the hub.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_CreateOrUpdate</description></item><item><term>Default Api Version</term><description>2017-04-26</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="viewName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (string viewName, string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(string viewName, string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection.Exists(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (viewName As String, userId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="viewResourceFormatCollection.Exists (viewName, userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CustomerInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="viewName"> The name of the view. </param>
        <param name="userId"> The user ID. Use * to retrieve hub level view. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_Get</description></item><item><term>Default Api Version</term><description>2017-04-26</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="viewName" /> or <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (string viewName, string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(string viewName, string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection.ExistsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (viewName As String, userId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="viewResourceFormatCollection.ExistsAsync (viewName, userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CustomerInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="viewName"> The name of the view. </param>
        <param name="userId"> The user ID. Use * to retrieve hub level view. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_Get</description></item><item><term>Default Api Version</term><description>2017-04-26</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="viewName" /> or <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt; Get (string viewName, string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt; Get(string viewName, string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection.Get(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (viewName As String, userId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ViewResourceFormatResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&#xA;override this.Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;" Usage="viewResourceFormatCollection.Get (viewName, userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CustomerInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="viewName"> The name of the view. </param>
        <param name="userId"> The user ID. Use * to retrieve hub level view. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a view in the hub.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_Get</description></item><item><term>Default Api Version</term><description>2017-04-26</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="viewName" /> or <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt; GetAll (string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt; GetAll(string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection.GetAll(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (userId As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ViewResourceFormatResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAll : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&#xA;override this.GetAll : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;" Usage="viewResourceFormatCollection.GetAll (userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CustomerInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId"> The user ID. Use * to retrieve hub level views. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available views for given user in the specified hub.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views</description></item><item><term>Operation Id</term><description>Views_ListByHub</description></item><item><term>Default Api Version</term><description>2017-04-26</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt; GetAllAsync (string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt; GetAllAsync(string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection.GetAllAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (userId As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ViewResourceFormatResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&#xA;override this.GetAllAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;" Usage="viewResourceFormatCollection.GetAllAsync (userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CustomerInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId"> The user ID. Use * to retrieve hub level views. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available views for given user in the specified hub.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views</description></item><item><term>Operation Id</term><description>Views_ListByHub</description></item><item><term>Default Api Version</term><description>2017-04-26</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt; GetAsync (string viewName, string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt; GetAsync(string viewName, string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (viewName As String, userId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ViewResourceFormatResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt;&#xA;override this.GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt;" Usage="viewResourceFormatCollection.GetAsync (viewName, userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CustomerInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="viewName"> The name of the view. </param>
        <param name="userId"> The user ID. Use * to retrieve hub level view. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a view in the hub.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_Get</description></item><item><term>Default Api Version</term><description>2017-04-26</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="viewName" /> or <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.NullableResponse&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt; GetIfExists (string viewName, string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.NullableResponse`1&lt;class Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt; GetIfExists(string viewName, string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection.GetIfExists(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExists (viewName As String, userId As String, Optional cancellationToken As CancellationToken = Nothing) As NullableResponse(Of ViewResourceFormatResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIfExists : string * string * System.Threading.CancellationToken -&gt; Azure.NullableResponse&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&#xA;override this.GetIfExists : string * string * System.Threading.CancellationToken -&gt; Azure.NullableResponse&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;" Usage="viewResourceFormatCollection.GetIfExists (viewName, userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CustomerInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.NullableResponse&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="viewName"> The name of the view. </param>
        <param name="userId"> The user ID. Use * to retrieve hub level view. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Tries to get details for this resource from the service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_Get</description></item><item><term>Default Api Version</term><description>2017-04-26</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="viewName" /> or <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt; GetIfExistsAsync (string viewName, string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.NullableResponse`1&lt;class Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt; GetIfExistsAsync(string viewName, string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CustomerInsights.ViewResourceFormatCollection.GetIfExistsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExistsAsync (viewName As String, userId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of NullableResponse(Of ViewResourceFormatResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIfExistsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt;&#xA;override this.GetIfExistsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt;" Usage="viewResourceFormatCollection.GetIfExistsAsync (viewName, userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CustomerInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.NullableResponse&lt;Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="viewName"> The name of the view. </param>
        <param name="userId"> The user ID. Use * to retrieve hub level view. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Tries to get details for this resource from the service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}</description></item><item><term>Operation Id</term><description>Views_Get</description></item><item><term>Default Api Version</term><description>2017-04-26</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CustomerInsights.ViewResourceFormatResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="viewName" /> or <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
