<Type Name="ArmContainerInstanceModelFactory" FullName="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmContainerInstanceModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmContainerInstanceModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmContainerInstanceModelFactory" />
  <TypeSignature Language="F#" Value="type ArmContainerInstanceModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CachedImages">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.CachedImages CachedImages (string osType = default, string image = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.CachedImages CachedImages(string osType, string image) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.CachedImages(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CachedImages (Optional osType As String = Nothing, Optional image As String = Nothing) As CachedImages" />
      <MemberSignature Language="F#" Value="static member CachedImages : string * string -&gt; Azure.ResourceManager.ContainerInstance.Models.CachedImages" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.CachedImages (osType, image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.CachedImages</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="osType" Type="System.String" />
        <Parameter Name="image" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="osType"> The OS type of the cached image. </param>
        <param name="image"> The cached image name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.CachedImages" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.CachedImages" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="osType" /> or <paramref name="image" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ContainerAttachResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerAttachResult ContainerAttachResult (Uri webSocketUri = default, string password = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerAttachResult ContainerAttachResult(class System.Uri webSocketUri, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerAttachResult(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerAttachResult (Optional webSocketUri As Uri = Nothing, Optional password As String = Nothing) As ContainerAttachResult" />
      <MemberSignature Language="F#" Value="static member ContainerAttachResult : Uri * string -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerAttachResult" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerAttachResult (webSocketUri, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerAttachResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webSocketUri" Type="System.Uri" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="webSocketUri"> The uri for the output stream from the attach. </param>
        <param name="password"> The password to the output stream from the attach. Send as an Authorization header value when connecting to the websocketUri. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerAttachResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerAttachResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerCapabilities">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities ContainerCapabilities (string resourceType = default, string osType = default, Azure.Core.AzureLocation? location = default, string ipAddressType = default, string gpu = default, Azure.ResourceManager.ContainerInstance.Models.ContainerSupportedCapabilities capabilities = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities ContainerCapabilities(string resourceType, string osType, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string ipAddressType, string gpu, class Azure.ResourceManager.ContainerInstance.Models.ContainerSupportedCapabilities capabilities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerCapabilities(System.String,System.String,System.Nullable{Azure.Core.AzureLocation},System.String,System.String,Azure.ResourceManager.ContainerInstance.Models.ContainerSupportedCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerCapabilities (Optional resourceType As String = Nothing, Optional osType As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional ipAddressType As String = Nothing, Optional gpu As String = Nothing, Optional capabilities As ContainerSupportedCapabilities = Nothing) As ContainerCapabilities" />
      <MemberSignature Language="F#" Value="static member ContainerCapabilities : string * string * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * Azure.ResourceManager.ContainerInstance.Models.ContainerSupportedCapabilities -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerCapabilities (resourceType, osType, location, ipAddressType, gpu, capabilities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="osType" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="ipAddressType" Type="System.String" />
        <Parameter Name="gpu" Type="System.String" />
        <Parameter Name="capabilities" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerSupportedCapabilities" />
      </Parameters>
      <Docs>
        <param name="resourceType"> The resource type that this capability describes. </param>
        <param name="osType"> The OS type that this capability describes. </param>
        <param name="location"> The resource location. </param>
        <param name="ipAddressType"> The ip address type that this capability describes. </param>
        <param name="gpu"> The GPU sku that this capability describes. </param>
        <param name="capabilities"> The supported capabilities. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerCapabilities" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerEvent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerEvent ContainerEvent (int? count = default, DateTimeOffset? firstTimestamp = default, DateTimeOffset? lastTimestamp = default, string name = default, string message = default, string eventType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerEvent ContainerEvent(valuetype System.Nullable`1&lt;int32&gt; count, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; firstTimestamp, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastTimestamp, string name, string message, string eventType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerEvent(System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerEvent (Optional count As Nullable(Of Integer) = Nothing, Optional firstTimestamp As Nullable(Of DateTimeOffset) = Nothing, Optional lastTimestamp As Nullable(Of DateTimeOffset) = Nothing, Optional name As String = Nothing, Optional message As String = Nothing, Optional eventType As String = Nothing) As ContainerEvent" />
      <MemberSignature Language="F#" Value="static member ContainerEvent : Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * string -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerEvent" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerEvent (count, firstTimestamp, lastTimestamp, name, message, eventType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="firstTimestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastTimestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="count"> The count of the event. </param>
        <param name="firstTimestamp"> The date-time of the earliest logged event. </param>
        <param name="lastTimestamp"> The date-time of the latest logged event. </param>
        <param name="name"> The event name. </param>
        <param name="message"> The event message. </param>
        <param name="eventType"> The event type. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerEvent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerEvent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerExecResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerExecResult ContainerExecResult (Uri webSocketUri = default, string password = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerExecResult ContainerExecResult(class System.Uri webSocketUri, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerExecResult(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerExecResult (Optional webSocketUri As Uri = Nothing, Optional password As String = Nothing) As ContainerExecResult" />
      <MemberSignature Language="F#" Value="static member ContainerExecResult : Uri * string -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerExecResult" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerExecResult (webSocketUri, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerExecResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webSocketUri" Type="System.Uri" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="webSocketUri"> The uri for the exec websocket. </param>
        <param name="password"> The password to start the exec command. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerExecResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerExecResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerGroupData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.ContainerGroupData ContainerGroupData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, string provisioningState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceContainer&gt; containers = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupImageRegistryCredential&gt; imageRegistryCredentials = default, Azure.ResourceManager.ContainerInstance.Models.ContainerGroupRestartPolicy? restartPolicy = default, Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddress ipAddress = default, Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceOperatingSystemType osType = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerVolume&gt; volumes = default, Azure.ResourceManager.ContainerInstance.Models.ContainerGroupInstanceView instanceView = default, Azure.ResourceManager.ContainerInstance.Models.ContainerGroupLogAnalytics diagnosticsLogAnalytics = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupSubnetId&gt; subnetIds = default, Azure.ResourceManager.ContainerInstance.Models.ContainerGroupDnsConfiguration dnsConfig = default, Azure.ResourceManager.ContainerInstance.Models.ContainerGroupSku? sku = default, Azure.ResourceManager.ContainerInstance.Models.ContainerGroupEncryptionProperties encryptionProperties = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.InitContainerDefinitionContent&gt; initContainers = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.DeploymentExtensionSpec&gt; extensions = default, string confidentialComputeCcePolicy = default, Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPriority? priority = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.ContainerGroupData ContainerGroupData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, string provisioningState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceContainer&gt; containers, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerGroupImageRegistryCredential&gt; imageRegistryCredentials, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerInstance.Models.ContainerGroupRestartPolicy&gt; restartPolicy, class Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddress ipAddress, valuetype Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceOperatingSystemType osType, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerVolume&gt; volumes, class Azure.ResourceManager.ContainerInstance.Models.ContainerGroupInstanceView instanceView, class Azure.ResourceManager.ContainerInstance.Models.ContainerGroupLogAnalytics diagnosticsLogAnalytics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerGroupSubnetId&gt; subnetIds, class Azure.ResourceManager.ContainerInstance.Models.ContainerGroupDnsConfiguration dnsConfig, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerInstance.Models.ContainerGroupSku&gt; sku, class Azure.ResourceManager.ContainerInstance.Models.ContainerGroupEncryptionProperties encryptionProperties, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.InitContainerDefinitionContent&gt; initContainers, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.DeploymentExtensionSpec&gt; extensions, string confidentialComputeCcePolicy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPriority&gt; priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerGroupData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Collections.Generic.IEnumerable{System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceContainer},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerGroupImageRegistryCredential},System.Nullable{Azure.ResourceManager.ContainerInstance.Models.ContainerGroupRestartPolicy},Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddress,Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceOperatingSystemType,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerVolume},Azure.ResourceManager.ContainerInstance.Models.ContainerGroupInstanceView,Azure.ResourceManager.ContainerInstance.Models.ContainerGroupLogAnalytics,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerGroupSubnetId},Azure.ResourceManager.ContainerInstance.Models.ContainerGroupDnsConfiguration,System.Nullable{Azure.ResourceManager.ContainerInstance.Models.ContainerGroupSku},Azure.ResourceManager.ContainerInstance.Models.ContainerGroupEncryptionProperties,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.InitContainerDefinitionContent},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.DeploymentExtensionSpec},System.String,System.Nullable{Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPriority})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerGroupData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional zones As IEnumerable(Of String) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional provisioningState As String = Nothing, Optional containers As IEnumerable(Of ContainerInstanceContainer) = Nothing, Optional imageRegistryCredentials As IEnumerable(Of ContainerGroupImageRegistryCredential) = Nothing, Optional restartPolicy As Nullable(Of ContainerGroupRestartPolicy) = Nothing, Optional ipAddress As ContainerGroupIPAddress = Nothing, Optional osType As ContainerInstanceOperatingSystemType = Nothing, Optional volumes As IEnumerable(Of ContainerVolume) = Nothing, Optional instanceView As ContainerGroupInstanceView = Nothing, Optional diagnosticsLogAnalytics As ContainerGroupLogAnalytics = Nothing, Optional subnetIds As IEnumerable(Of ContainerGroupSubnetId) = Nothing, Optional dnsConfig As ContainerGroupDnsConfiguration = Nothing, Optional sku As Nullable(Of ContainerGroupSku) = Nothing, Optional encryptionProperties As ContainerGroupEncryptionProperties = Nothing, Optional initContainers As IEnumerable(Of InitContainerDefinitionContent) = Nothing, Optional extensions As IEnumerable(Of DeploymentExtensionSpec) = Nothing, Optional confidentialComputeCcePolicy As String = Nothing, Optional priority As Nullable(Of ContainerGroupPriority) = Nothing) As ContainerGroupData" />
      <MemberSignature Language="F#" Value="static member ContainerGroupData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * seq&lt;string&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * string * seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceContainer&gt; * seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupImageRegistryCredential&gt; * Nullable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupRestartPolicy&gt; * Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddress * Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceOperatingSystemType * seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerVolume&gt; * Azure.ResourceManager.ContainerInstance.Models.ContainerGroupInstanceView * Azure.ResourceManager.ContainerInstance.Models.ContainerGroupLogAnalytics * seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupSubnetId&gt; * Azure.ResourceManager.ContainerInstance.Models.ContainerGroupDnsConfiguration * Nullable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupSku&gt; * Azure.ResourceManager.ContainerInstance.Models.ContainerGroupEncryptionProperties * seq&lt;Azure.ResourceManager.ContainerInstance.Models.InitContainerDefinitionContent&gt; * seq&lt;Azure.ResourceManager.ContainerInstance.Models.DeploymentExtensionSpec&gt; * string * Nullable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPriority&gt; -&gt; Azure.ResourceManager.ContainerInstance.ContainerGroupData" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerGroupData (id, name, resourceType, systemData, tags, location, zones, identity, provisioningState, containers, imageRegistryCredentials, restartPolicy, ipAddress, osType, volumes, instanceView, diagnosticsLogAnalytics, subnetIds, dnsConfig, sku, encryptionProperties, initContainers, extensions, confidentialComputeCcePolicy, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.ContainerGroupData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="containers" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceContainer&gt;" />
        <Parameter Name="imageRegistryCredentials" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupImageRegistryCredential&gt;" />
        <Parameter Name="restartPolicy" Type="System.Nullable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupRestartPolicy&gt;" />
        <Parameter Name="ipAddress" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddress" />
        <Parameter Name="osType" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceOperatingSystemType" />
        <Parameter Name="volumes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerVolume&gt;" />
        <Parameter Name="instanceView" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerGroupInstanceView" />
        <Parameter Name="diagnosticsLogAnalytics" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerGroupLogAnalytics" />
        <Parameter Name="subnetIds" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupSubnetId&gt;" />
        <Parameter Name="dnsConfig" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerGroupDnsConfiguration" />
        <Parameter Name="sku" Type="System.Nullable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupSku&gt;" />
        <Parameter Name="encryptionProperties" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerGroupEncryptionProperties" />
        <Parameter Name="initContainers" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.InitContainerDefinitionContent&gt;" />
        <Parameter Name="extensions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.DeploymentExtensionSpec&gt;" />
        <Parameter Name="confidentialComputeCcePolicy" Type="System.String" />
        <Parameter Name="priority" Type="System.Nullable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPriority&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="zones"> The zones for the container group. </param>
        <param name="identity"> The identity of the container group, if configured. </param>
        <param name="provisioningState"> The provisioning state of the container group. This only appears in the response. </param>
        <param name="containers"> The containers within the container group. </param>
        <param name="imageRegistryCredentials"> The image registry credentials by which the container group is created from. </param>
        <param name="restartPolicy">
             Restart policy for all containers within the container group.
             - `Always` Always restart
             - `OnFailure` Restart on failure
             - `Never` Never restart
            
             </param>
        <param name="ipAddress"> The IP address type of the container group. </param>
        <param name="osType"> The operating system type required by the containers in the container group. </param>
        <param name="volumes"> The list of volumes that can be mounted by containers in this container group. </param>
        <param name="instanceView"> The instance view of the container group. Only valid in response. </param>
        <param name="diagnosticsLogAnalytics"> The diagnostic information for a container group. </param>
        <param name="subnetIds"> The subnet resource IDs for a container group. </param>
        <param name="dnsConfig"> The DNS config information for a container group. </param>
        <param name="sku"> The SKU for a container group. </param>
        <param name="encryptionProperties"> The encryption properties for a container group. </param>
        <param name="initContainers"> The init containers for a container group. </param>
        <param name="extensions"> extensions used by virtual kubelet. </param>
        <param name="confidentialComputeCcePolicy"> The properties for confidential container group. </param>
        <param name="priority"> The priority of the container group. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.ContainerGroupData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.ContainerGroupData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerGroupInstanceView">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerGroupInstanceView ContainerGroupInstanceView (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEvent&gt; events = default, string state = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerGroupInstanceView ContainerGroupInstanceView(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerEvent&gt; events, string state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerGroupInstanceView(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerEvent},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerGroupInstanceView (Optional events As IEnumerable(Of ContainerEvent) = Nothing, Optional state As String = Nothing) As ContainerGroupInstanceView" />
      <MemberSignature Language="F#" Value="static member ContainerGroupInstanceView : seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEvent&gt; * string -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerGroupInstanceView" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerGroupInstanceView (events, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerGroupInstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEvent&gt;" />
        <Parameter Name="state" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="events"> The events of this container group. </param>
        <param name="state"> The state of the container group. Only valid in response. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerGroupInstanceView" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerGroupInstanceView" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerGroupIPAddress">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddress ContainerGroupIPAddress (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPort&gt; ports = default, Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddressType addressType = default, System.Net.IPAddress ip = default, string dnsNameLabel = default, Azure.ResourceManager.ContainerInstance.Models.DnsNameLabelReusePolicy? autoGeneratedDomainNameLabelScope = default, string fqdn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddress ContainerGroupIPAddress(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPort&gt; ports, valuetype Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddressType addressType, class System.Net.IPAddress ip, string dnsNameLabel, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerInstance.Models.DnsNameLabelReusePolicy&gt; autoGeneratedDomainNameLabelScope, string fqdn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerGroupIPAddress(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPort},Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddressType,System.Net.IPAddress,System.String,System.Nullable{Azure.ResourceManager.ContainerInstance.Models.DnsNameLabelReusePolicy},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerGroupIPAddress (Optional ports As IEnumerable(Of ContainerGroupPort) = Nothing, Optional addressType As ContainerGroupIPAddressType = Nothing, Optional ip As IPAddress = Nothing, Optional dnsNameLabel As String = Nothing, Optional autoGeneratedDomainNameLabelScope As Nullable(Of DnsNameLabelReusePolicy) = Nothing, Optional fqdn As String = Nothing) As ContainerGroupIPAddress" />
      <MemberSignature Language="F#" Value="static member ContainerGroupIPAddress : seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPort&gt; * Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddressType * System.Net.IPAddress * string * Nullable&lt;Azure.ResourceManager.ContainerInstance.Models.DnsNameLabelReusePolicy&gt; * string -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddress" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerGroupIPAddress (ports, addressType, ip, dnsNameLabel, autoGeneratedDomainNameLabelScope, fqdn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ports" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPort&gt;" />
        <Parameter Name="addressType" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddressType" />
        <Parameter Name="ip" Type="System.Net.IPAddress" />
        <Parameter Name="dnsNameLabel" Type="System.String" />
        <Parameter Name="autoGeneratedDomainNameLabelScope" Type="System.Nullable&lt;Azure.ResourceManager.ContainerInstance.Models.DnsNameLabelReusePolicy&gt;" />
        <Parameter Name="fqdn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ports"> The list of ports exposed on the container group. </param>
        <param name="addressType"> Specifies if the IP is exposed to the public internet or private VNET. </param>
        <param name="ip"> The IP exposed to the public internet. </param>
        <param name="dnsNameLabel"> The Dns name label for the IP. </param>
        <param name="autoGeneratedDomainNameLabelScope"> The value representing the security enum. The 'Unsecure' value is the default value if not selected and means the object's domain name label is not secured against subdomain takeover. The 'TenantReuse' value is the default value if selected and means the object's domain name label can be reused within the same tenant. The 'SubscriptionReuse' value means the object's domain name label can be reused within the same subscription. The 'ResourceGroupReuse' value means the object's domain name label can be reused within the same resource group. The 'NoReuse' value means the object's domain name label cannot be reused within the same resource group, subscription, or tenant. </param>
        <param name="fqdn"> The FQDN for the IP. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddress" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerGroupIPAddress" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerGroupPatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPatch ContainerGroupPatch (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPatch ContainerGroupPatch(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerGroupPatch(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerGroupPatch (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional zones As IEnumerable(Of String) = Nothing) As ContainerGroupPatch" />
      <MemberSignature Language="F#" Value="static member ContainerGroupPatch : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * seq&lt;string&gt; -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPatch" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerGroupPatch (id, name, resourceType, systemData, tags, location, zones)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="zones"> The zones for the container group. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPatch" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerGroupPatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerInstanceContainer">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceContainer ContainerInstanceContainer (string name = default, string image = default, System.Collections.Generic.IEnumerable&lt;string&gt; command = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerPort&gt; ports = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEnvironmentVariable&gt; environmentVariables = default, Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceView instanceView = default, Azure.ResourceManager.ContainerInstance.Models.ContainerResourceRequirements resources = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerVolumeMount&gt; volumeMounts = default, Azure.ResourceManager.ContainerInstance.Models.ContainerProbe livenessProbe = default, Azure.ResourceManager.ContainerInstance.Models.ContainerProbe readinessProbe = default, Azure.ResourceManager.ContainerInstance.Models.ContainerSecurityContextDefinition securityContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceContainer ContainerInstanceContainer(string name, string image, class System.Collections.Generic.IEnumerable`1&lt;string&gt; command, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerPort&gt; ports, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerEnvironmentVariable&gt; environmentVariables, class Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceView instanceView, class Azure.ResourceManager.ContainerInstance.Models.ContainerResourceRequirements resources, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerVolumeMount&gt; volumeMounts, class Azure.ResourceManager.ContainerInstance.Models.ContainerProbe livenessProbe, class Azure.ResourceManager.ContainerInstance.Models.ContainerProbe readinessProbe, class Azure.ResourceManager.ContainerInstance.Models.ContainerSecurityContextDefinition securityContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerInstanceContainer(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerPort},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerEnvironmentVariable},Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceView,Azure.ResourceManager.ContainerInstance.Models.ContainerResourceRequirements,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerVolumeMount},Azure.ResourceManager.ContainerInstance.Models.ContainerProbe,Azure.ResourceManager.ContainerInstance.Models.ContainerProbe,Azure.ResourceManager.ContainerInstance.Models.ContainerSecurityContextDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerInstanceContainer (Optional name As String = Nothing, Optional image As String = Nothing, Optional command As IEnumerable(Of String) = Nothing, Optional ports As IEnumerable(Of ContainerPort) = Nothing, Optional environmentVariables As IEnumerable(Of ContainerEnvironmentVariable) = Nothing, Optional instanceView As ContainerInstanceView = Nothing, Optional resources As ContainerResourceRequirements = Nothing, Optional volumeMounts As IEnumerable(Of ContainerVolumeMount) = Nothing, Optional livenessProbe As ContainerProbe = Nothing, Optional readinessProbe As ContainerProbe = Nothing, Optional securityContext As ContainerSecurityContextDefinition = Nothing) As ContainerInstanceContainer" />
      <MemberSignature Language="F#" Value="static member ContainerInstanceContainer : string * string * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerPort&gt; * seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEnvironmentVariable&gt; * Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceView * Azure.ResourceManager.ContainerInstance.Models.ContainerResourceRequirements * seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerVolumeMount&gt; * Azure.ResourceManager.ContainerInstance.Models.ContainerProbe * Azure.ResourceManager.ContainerInstance.Models.ContainerProbe * Azure.ResourceManager.ContainerInstance.Models.ContainerSecurityContextDefinition -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceContainer" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerInstanceContainer (name, image, command, ports, environmentVariables, instanceView, resources, volumeMounts, livenessProbe, readinessProbe, securityContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="image" Type="System.String" />
        <Parameter Name="command" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="ports" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerPort&gt;" />
        <Parameter Name="environmentVariables" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEnvironmentVariable&gt;" />
        <Parameter Name="instanceView" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceView" />
        <Parameter Name="resources" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerResourceRequirements" />
        <Parameter Name="volumeMounts" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerVolumeMount&gt;" />
        <Parameter Name="livenessProbe" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerProbe" />
        <Parameter Name="readinessProbe" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerProbe" />
        <Parameter Name="securityContext" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerSecurityContextDefinition" />
      </Parameters>
      <Docs>
        <param name="name"> The user-provided name of the container instance. </param>
        <param name="image"> The name of the image used to create the container instance. </param>
        <param name="command"> The commands to execute within the container instance in exec form. </param>
        <param name="ports"> The exposed ports on the container instance. </param>
        <param name="environmentVariables"> The environment variables to set in the container instance. </param>
        <param name="instanceView"> The instance view of the container instance. Only valid in response. </param>
        <param name="resources"> The resource requirements of the container instance. </param>
        <param name="volumeMounts"> The volume mounts available to the container instance. </param>
        <param name="livenessProbe"> The liveness probe. </param>
        <param name="readinessProbe"> The readiness probe. </param>
        <param name="securityContext"> The container security properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceContainer" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceContainer" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerInstanceUsage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage ContainerInstanceUsage (string id = default, string unit = default, int? currentValue = default, int? limit = default, Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsageName name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage ContainerInstanceUsage(string id, string unit, valuetype System.Nullable`1&lt;int32&gt; currentValue, valuetype System.Nullable`1&lt;int32&gt; limit, class Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsageName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerInstanceUsage(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsageName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerInstanceUsage (Optional id As String = Nothing, Optional unit As String = Nothing, Optional currentValue As Nullable(Of Integer) = Nothing, Optional limit As Nullable(Of Integer) = Nothing, Optional name As ContainerInstanceUsageName = Nothing) As ContainerInstanceUsage" />
      <MemberSignature Language="F#" Value="static member ContainerInstanceUsage : string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsageName -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerInstanceUsage (id, unit, currentValue, limit, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="unit" Type="System.String" />
        <Parameter Name="currentValue" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="name" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsageName" />
      </Parameters>
      <Docs>
        <param name="id"> Id of the usage result. </param>
        <param name="unit"> Unit of the usage result. </param>
        <param name="currentValue"> The current usage of the resource. </param>
        <param name="limit"> The maximum permitted usage of the resource. </param>
        <param name="name"> The name object of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerInstanceUsageName">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsageName ContainerInstanceUsageName (string value = default, string localizedValue = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsageName ContainerInstanceUsageName(string value, string localizedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerInstanceUsageName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerInstanceUsageName (Optional value As String = Nothing, Optional localizedValue As String = Nothing) As ContainerInstanceUsageName" />
      <MemberSignature Language="F#" Value="static member ContainerInstanceUsageName : string * string -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsageName" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerInstanceUsageName (value, localizedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsageName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="localizedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"> The name of the resource. </param>
        <param name="localizedValue"> The localized name of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsageName" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceUsageName" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerInstanceView">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceView ContainerInstanceView (int? restartCount = default, Azure.ResourceManager.ContainerInstance.Models.ContainerState currentState = default, Azure.ResourceManager.ContainerInstance.Models.ContainerState previousState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEvent&gt; events = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceView ContainerInstanceView(valuetype System.Nullable`1&lt;int32&gt; restartCount, class Azure.ResourceManager.ContainerInstance.Models.ContainerState currentState, class Azure.ResourceManager.ContainerInstance.Models.ContainerState previousState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerEvent&gt; events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerInstanceView(System.Nullable{System.Int32},Azure.ResourceManager.ContainerInstance.Models.ContainerState,Azure.ResourceManager.ContainerInstance.Models.ContainerState,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerEvent})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerInstanceView (Optional restartCount As Nullable(Of Integer) = Nothing, Optional currentState As ContainerState = Nothing, Optional previousState As ContainerState = Nothing, Optional events As IEnumerable(Of ContainerEvent) = Nothing) As ContainerInstanceView" />
      <MemberSignature Language="F#" Value="static member ContainerInstanceView : Nullable&lt;int&gt; * Azure.ResourceManager.ContainerInstance.Models.ContainerState * Azure.ResourceManager.ContainerInstance.Models.ContainerState * seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEvent&gt; -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceView" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerInstanceView (restartCount, currentState, previousState, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restartCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="currentState" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerState" />
        <Parameter Name="previousState" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerState" />
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEvent&gt;" />
      </Parameters>
      <Docs>
        <param name="restartCount"> The number of times that the container instance has been restarted. </param>
        <param name="currentState"> Current container instance state. </param>
        <param name="previousState"> Previous container instance state. </param>
        <param name="events"> The events of the container instance. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceView" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerInstanceView" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerLogs">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerLogs ContainerLogs (string content = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerLogs ContainerLogs(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerLogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerLogs (Optional content As String = Nothing) As ContainerLogs" />
      <MemberSignature Language="F#" Value="static member ContainerLogs : string -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerLogs" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerLogs content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerLogs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the log. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerLogs" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerLogs" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerState">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerState ContainerState (string state = default, DateTimeOffset? startOn = default, int? exitCode = default, DateTimeOffset? finishOn = default, string detailStatus = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerState ContainerState(string state, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;int32&gt; exitCode, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; finishOn, string detailStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerState(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerState (Optional state As String = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional exitCode As Nullable(Of Integer) = Nothing, Optional finishOn As Nullable(Of DateTimeOffset) = Nothing, Optional detailStatus As String = Nothing) As ContainerState" />
      <MemberSignature Language="F#" Value="static member ContainerState : string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; * string -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerState" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerState (state, startOn, exitCode, finishOn, detailStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.String" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="exitCode" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="finishOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="detailStatus" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="state"> The state of the container instance. </param>
        <param name="startOn"> The date-time when the container instance state started. </param>
        <param name="exitCode"> The container instance exit codes correspond to those from the `docker run` command. </param>
        <param name="finishOn"> The date-time when the container instance state finished. </param>
        <param name="detailStatus"> The human-readable status of the container instance state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerState" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerState" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerSupportedCapabilities">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.ContainerSupportedCapabilities ContainerSupportedCapabilities (float? maxMemoryInGB = default, float? maxCpu = default, float? maxGpuCount = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.ContainerSupportedCapabilities ContainerSupportedCapabilities(valuetype System.Nullable`1&lt;float32&gt; maxMemoryInGB, valuetype System.Nullable`1&lt;float32&gt; maxCpu, valuetype System.Nullable`1&lt;float32&gt; maxGpuCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerSupportedCapabilities(System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerSupportedCapabilities (Optional maxMemoryInGB As Nullable(Of Single) = Nothing, Optional maxCpu As Nullable(Of Single) = Nothing, Optional maxGpuCount As Nullable(Of Single) = Nothing) As ContainerSupportedCapabilities" />
      <MemberSignature Language="F#" Value="static member ContainerSupportedCapabilities : Nullable&lt;single&gt; * Nullable&lt;single&gt; * Nullable&lt;single&gt; -&gt; Azure.ResourceManager.ContainerInstance.Models.ContainerSupportedCapabilities" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.ContainerSupportedCapabilities (maxMemoryInGB, maxCpu, maxGpuCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.ContainerSupportedCapabilities</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxMemoryInGB" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maxCpu" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="maxGpuCount" Type="System.Nullable&lt;System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="maxMemoryInGB"> The maximum allowed memory request in GB. </param>
        <param name="maxCpu"> The maximum allowed CPU request in cores. </param>
        <param name="maxGpuCount"> The maximum allowed GPU count. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerSupportedCapabilities" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.ContainerSupportedCapabilities" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitContainerDefinitionContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.InitContainerDefinitionContent InitContainerDefinitionContent (string name = default, string image = default, System.Collections.Generic.IEnumerable&lt;string&gt; command = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEnvironmentVariable&gt; environmentVariables = default, Azure.ResourceManager.ContainerInstance.Models.InitContainerPropertiesDefinitionInstanceView instanceView = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerVolumeMount&gt; volumeMounts = default, Azure.ResourceManager.ContainerInstance.Models.ContainerSecurityContextDefinition securityContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.InitContainerDefinitionContent InitContainerDefinitionContent(string name, string image, class System.Collections.Generic.IEnumerable`1&lt;string&gt; command, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerEnvironmentVariable&gt; environmentVariables, class Azure.ResourceManager.ContainerInstance.Models.InitContainerPropertiesDefinitionInstanceView instanceView, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerVolumeMount&gt; volumeMounts, class Azure.ResourceManager.ContainerInstance.Models.ContainerSecurityContextDefinition securityContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.InitContainerDefinitionContent(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerEnvironmentVariable},Azure.ResourceManager.ContainerInstance.Models.InitContainerPropertiesDefinitionInstanceView,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerVolumeMount},Azure.ResourceManager.ContainerInstance.Models.ContainerSecurityContextDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InitContainerDefinitionContent (Optional name As String = Nothing, Optional image As String = Nothing, Optional command As IEnumerable(Of String) = Nothing, Optional environmentVariables As IEnumerable(Of ContainerEnvironmentVariable) = Nothing, Optional instanceView As InitContainerPropertiesDefinitionInstanceView = Nothing, Optional volumeMounts As IEnumerable(Of ContainerVolumeMount) = Nothing, Optional securityContext As ContainerSecurityContextDefinition = Nothing) As InitContainerDefinitionContent" />
      <MemberSignature Language="F#" Value="static member InitContainerDefinitionContent : string * string * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEnvironmentVariable&gt; * Azure.ResourceManager.ContainerInstance.Models.InitContainerPropertiesDefinitionInstanceView * seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerVolumeMount&gt; * Azure.ResourceManager.ContainerInstance.Models.ContainerSecurityContextDefinition -&gt; Azure.ResourceManager.ContainerInstance.Models.InitContainerDefinitionContent" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.InitContainerDefinitionContent (name, image, command, environmentVariables, instanceView, volumeMounts, securityContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.InitContainerDefinitionContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="image" Type="System.String" />
        <Parameter Name="command" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="environmentVariables" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEnvironmentVariable&gt;" />
        <Parameter Name="instanceView" Type="Azure.ResourceManager.ContainerInstance.Models.InitContainerPropertiesDefinitionInstanceView" />
        <Parameter Name="volumeMounts" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerVolumeMount&gt;" />
        <Parameter Name="securityContext" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerSecurityContextDefinition" />
      </Parameters>
      <Docs>
        <param name="name"> The name for the init container. </param>
        <param name="image"> The image of the init container. </param>
        <param name="command"> The command to execute within the init container in exec form. </param>
        <param name="environmentVariables"> The environment variables to set in the init container. </param>
        <param name="instanceView"> The instance view of the init container. Only valid in response. </param>
        <param name="volumeMounts"> The volume mounts available to the init container. </param>
        <param name="securityContext"> The container security properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.InitContainerDefinitionContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.InitContainerDefinitionContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitContainerPropertiesDefinitionInstanceView">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerInstance.Models.InitContainerPropertiesDefinitionInstanceView InitContainerPropertiesDefinitionInstanceView (int? restartCount = default, Azure.ResourceManager.ContainerInstance.Models.ContainerState currentState = default, Azure.ResourceManager.ContainerInstance.Models.ContainerState previousState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEvent&gt; events = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerInstance.Models.InitContainerPropertiesDefinitionInstanceView InitContainerPropertiesDefinitionInstanceView(valuetype System.Nullable`1&lt;int32&gt; restartCount, class Azure.ResourceManager.ContainerInstance.Models.ContainerState currentState, class Azure.ResourceManager.ContainerInstance.Models.ContainerState previousState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ContainerInstance.Models.ContainerEvent&gt; events) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.InitContainerPropertiesDefinitionInstanceView(System.Nullable{System.Int32},Azure.ResourceManager.ContainerInstance.Models.ContainerState,Azure.ResourceManager.ContainerInstance.Models.ContainerState,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ContainerInstance.Models.ContainerEvent})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InitContainerPropertiesDefinitionInstanceView (Optional restartCount As Nullable(Of Integer) = Nothing, Optional currentState As ContainerState = Nothing, Optional previousState As ContainerState = Nothing, Optional events As IEnumerable(Of ContainerEvent) = Nothing) As InitContainerPropertiesDefinitionInstanceView" />
      <MemberSignature Language="F#" Value="static member InitContainerPropertiesDefinitionInstanceView : Nullable&lt;int&gt; * Azure.ResourceManager.ContainerInstance.Models.ContainerState * Azure.ResourceManager.ContainerInstance.Models.ContainerState * seq&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEvent&gt; -&gt; Azure.ResourceManager.ContainerInstance.Models.InitContainerPropertiesDefinitionInstanceView" Usage="Azure.ResourceManager.ContainerInstance.Models.ArmContainerInstanceModelFactory.InitContainerPropertiesDefinitionInstanceView (restartCount, currentState, previousState, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerInstance</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerInstance.Models.InitContainerPropertiesDefinitionInstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restartCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="currentState" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerState" />
        <Parameter Name="previousState" Type="Azure.ResourceManager.ContainerInstance.Models.ContainerState" />
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ContainerInstance.Models.ContainerEvent&gt;" />
      </Parameters>
      <Docs>
        <param name="restartCount"> The number of times that the init container has been restarted. </param>
        <param name="currentState"> The current state of the init container. </param>
        <param name="previousState"> The previous state of the init container. </param>
        <param name="events"> The events of the init container. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ContainerInstance.Models.InitContainerPropertiesDefinitionInstanceView" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ContainerInstance.Models.InitContainerPropertiesDefinitionInstanceView" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
