<Type Name="BasicDigitalTwin" FullName="Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin">
  <TypeSignature Language="C#" Value="public class BasicDigitalTwin" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BasicDigitalTwin extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin" />
  <TypeSignature Language="VB.NET" Value="Public Class BasicDigitalTwin" />
  <TypeSignature Language="F#" Value="type BasicDigitalTwin = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             An optional, helper class for deserializing a digital twin.
             </summary>
    <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
             </remarks>
    <example>
             Here's an example of  how to use the BasicDigitalTwin helper class to serialize and create a digital twin.
            
             <code snippet="Snippet:DigitalTwinsSampleCreateBasicTwin">
             // Create digital twin with component payload using the BasicDigitalTwin serialization helper
            
             var basicTwin = new BasicDigitalTwin
             {
                 Id = basicDtId,
                 // model Id of digital twin
                 Metadata = { ModelId = modelId },
                 CustomProperties =
                 {
                     // digital twin properties
                     { "Prop1", "Value1" },
                     { "Prop2", 987 },
                     // component
                     {
                         "Component1",
                         new ModelProperties
                         {
                             // component properties
                             CustomProperties =
                             {
                                 { "ComponentProp1", "Component value 1" },
                                 { "ComponentProp2", 123 },
                             },
                         }
                     },
                 },
             };
            
             string basicDtPayload = JsonSerializer.Serialize(basicTwin);
            
             await client.CreateDigitalTwinAsync(basicDtId, basicDtPayload);
             Console.WriteLine($"Created digital twin '{basicDtId}'.");
             </code>
            
             Here's an example of  how to use the BasicDigitalTwin helper class to get and deserialize a digital twin.
            
             <code snippet="Snippet:DigitalTwinsSampleGetBasicDigitalTwin">
             Response&lt;string&gt; getBasicDtResponse = await client.GetDigitalTwinAsync(basicDtId);
             if (getBasicDtResponse.GetRawResponse().Status == (int)HttpStatusCode.OK)
             {
                 BasicDigitalTwin basicDt = JsonSerializer.Deserialize&lt;BasicDigitalTwin&gt;(getBasicDtResponse.Value);
            
                 // Must cast Component1 as a JsonElement and get its raw text in order to deserialize it as a dictionary
                 string component1RawText = ((JsonElement)basicDt.CustomProperties["Component1"]).GetRawText();
                 IDictionary&lt;string, object&gt; component1 = JsonSerializer.Deserialize&lt;IDictionary&lt;string, object&gt;&gt;(component1RawText);
            
                 Console.WriteLine($"Retrieved and deserialized digital twin {basicDt.Id}:\n\t" +
                     $"ETag: {basicDt.ETag}\n\t" +
                     $"Prop1: {basicDt.CustomProperties["Prop1"]}\n\t" +
                     $"Prop2: {basicDt.CustomProperties["Prop2"]}\n\t" +
                     $"ComponentProp1: {component1["ComponentProp1"]}\n\t" +
                     $"ComponentProp2: {component1["ComponentProp2"]}");
             }
             </code></example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicDigitalTwin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; CustomProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; CustomProperties" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin.CustomProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomProperties As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.CustomProperties : System.Collections.Generic.IDictionary&lt;string, obj&gt; with get, set" Usage="Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin.CustomProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonExtensionData]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonExtensionData&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Additional properties of the digital twin. This field will contain any properties of the digital twin that are not already defined by the other strong types of this class.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ETag">
      <MemberSignature Language="C#" Value="public string ETag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ETag" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin.ETag" />
      <MemberSignature Language="VB.NET" Value="Public Property ETag As String" />
      <MemberSignature Language="F#" Value="member this.ETag : string with get, set" Usage="Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin.ETag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("$etag")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("$etag")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("$dtId")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("$dtId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The unique Id of the digital twin in a digital twins instance. This field is present on every digital twin.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.Serialization.DigitalTwinMetadata Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.DigitalTwins.Core.Serialization.DigitalTwinMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Property Metadata As DigitalTwinMetadata" />
      <MemberSignature Language="F#" Value="member this.Metadata : Azure.DigitalTwins.Core.Serialization.DigitalTwinMetadata with get, set" Usage="Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("$metadata")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("$metadata")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.Serialization.DigitalTwinMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Information about the model a digital twin conforms to. This field is present on every digital twin.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
