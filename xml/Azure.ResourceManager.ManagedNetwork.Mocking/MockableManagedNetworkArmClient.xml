<Type Name="MockableManagedNetworkArmClient" FullName="Azure.ResourceManager.ManagedNetwork.Mocking.MockableManagedNetworkArmClient">
  <TypeSignature Language="C#" Value="public class MockableManagedNetworkArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableManagedNetworkArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ManagedNetwork.Mocking.MockableManagedNetworkArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableManagedNetworkArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableManagedNetworkArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ManagedNetwork</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableManagedNetworkArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetwork.Mocking.MockableManagedNetworkArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetwork</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ManagedNetwork.Mocking.MockableManagedNetworkArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedNetworkGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetwork.ManagedNetworkGroupResource GetManagedNetworkGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetwork.ManagedNetworkGroupResource GetManagedNetworkGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetwork.Mocking.MockableManagedNetworkArmClient.GetManagedNetworkGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedNetworkGroupResource (id As ResourceIdentifier) As ManagedNetworkGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedNetworkGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetwork.ManagedNetworkGroupResource&#xA;override this.GetManagedNetworkGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetwork.ManagedNetworkGroupResource" Usage="mockableManagedNetworkArmClient.GetManagedNetworkGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetwork</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetwork.ManagedNetworkGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetwork.ManagedNetworkGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetwork.ManagedNetworkGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetwork.ManagedNetworkGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetwork.ManagedNetworkGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedNetworkPeeringPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetwork.ManagedNetworkPeeringPolicyResource GetManagedNetworkPeeringPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetwork.ManagedNetworkPeeringPolicyResource GetManagedNetworkPeeringPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetwork.Mocking.MockableManagedNetworkArmClient.GetManagedNetworkPeeringPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedNetworkPeeringPolicyResource (id As ResourceIdentifier) As ManagedNetworkPeeringPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedNetworkPeeringPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetwork.ManagedNetworkPeeringPolicyResource&#xA;override this.GetManagedNetworkPeeringPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetwork.ManagedNetworkPeeringPolicyResource" Usage="mockableManagedNetworkArmClient.GetManagedNetworkPeeringPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetwork</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetwork.ManagedNetworkPeeringPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetwork.ManagedNetworkPeeringPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetwork.ManagedNetworkPeeringPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetwork.ManagedNetworkPeeringPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetwork.ManagedNetworkPeeringPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedNetworkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetwork.ManagedNetworkResource GetManagedNetworkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetwork.ManagedNetworkResource GetManagedNetworkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetwork.Mocking.MockableManagedNetworkArmClient.GetManagedNetworkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedNetworkResource (id As ResourceIdentifier) As ManagedNetworkResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetwork.ManagedNetworkResource&#xA;override this.GetManagedNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetwork.ManagedNetworkResource" Usage="mockableManagedNetworkArmClient.GetManagedNetworkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetwork</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetwork.ManagedNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetwork.ManagedNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetwork.ManagedNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetwork.ManagedNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetwork.ManagedNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScopeAssignment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource&gt; GetScopeAssignment (Azure.Core.ResourceIdentifier scope, string scopeAssignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource&gt; GetScopeAssignment(class Azure.Core.ResourceIdentifier scope, string scopeAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetwork.Mocking.MockableManagedNetworkArmClient.GetScopeAssignment(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScopeAssignment (scope As ResourceIdentifier, scopeAssignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ScopeAssignmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetScopeAssignment : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource&gt;&#xA;override this.GetScopeAssignment : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource&gt;" Usage="mockableManagedNetworkArmClient.GetScopeAssignment (scope, scopeAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetwork</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="scopeAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="scopeAssignmentName"> The name of the scope assignment to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified scope assignment.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.ManagedNetwork/scopeAssignments/{scopeAssignmentName}</description></item><item><term>Operation Id</term><description>ScopeAssignments_Get</description></item><item><term>Default Api Version</term><description>2019-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scopeAssignmentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scopeAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScopeAssignmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource&gt;&gt; GetScopeAssignmentAsync (Azure.Core.ResourceIdentifier scope, string scopeAssignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource&gt;&gt; GetScopeAssignmentAsync(class Azure.Core.ResourceIdentifier scope, string scopeAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetwork.Mocking.MockableManagedNetworkArmClient.GetScopeAssignmentAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScopeAssignmentAsync (scope As ResourceIdentifier, scopeAssignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ScopeAssignmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetScopeAssignmentAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource&gt;&gt;&#xA;override this.GetScopeAssignmentAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource&gt;&gt;" Usage="mockableManagedNetworkArmClient.GetScopeAssignmentAsync (scope, scopeAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetwork</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="scopeAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="scopeAssignmentName"> The name of the scope assignment to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified scope assignment.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.ManagedNetwork/scopeAssignments/{scopeAssignmentName}</description></item><item><term>Operation Id</term><description>ScopeAssignments_Get</description></item><item><term>Default Api Version</term><description>2019-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scopeAssignmentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scopeAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScopeAssignmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource GetScopeAssignmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource GetScopeAssignmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetwork.Mocking.MockableManagedNetworkArmClient.GetScopeAssignmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScopeAssignmentResource (id As ResourceIdentifier) As ScopeAssignmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetScopeAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource&#xA;override this.GetScopeAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource" Usage="mockableManagedNetworkArmClient.GetScopeAssignmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetwork</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ManagedNetwork.ScopeAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScopeAssignments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ManagedNetwork.ScopeAssignmentCollection GetScopeAssignments (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ManagedNetwork.ScopeAssignmentCollection GetScopeAssignments(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ManagedNetwork.Mocking.MockableManagedNetworkArmClient.GetScopeAssignments(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScopeAssignments (scope As ResourceIdentifier) As ScopeAssignmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetScopeAssignments : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetwork.ScopeAssignmentCollection&#xA;override this.GetScopeAssignments : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ManagedNetwork.ScopeAssignmentCollection" Usage="mockableManagedNetworkArmClient.GetScopeAssignments scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ManagedNetwork</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ManagedNetwork.ScopeAssignmentCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of ScopeAssignmentResources in the ArmClient. </summary>
        <returns> An object representing collection of ScopeAssignmentResources and their operations over a ScopeAssignmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
