<Type Name="MockableNeonPostgresResourceGroupResource" FullName="Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableNeonPostgresResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableNeonPostgresResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableNeonPostgresResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableNeonPostgresResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableNeonPostgresResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNeonOrganization">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt; GetNeonOrganization (string organizationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt; GetNeonOrganization(string organizationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource.GetNeonOrganization(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNeonOrganization (organizationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NeonOrganizationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNeonOrganization : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;&#xA;override this.GetNeonOrganization : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;" Usage="mockableNeonPostgresResourceGroupResource.GetNeonOrganization (organizationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="organizationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="organizationName"> Name of the Neon Organizations resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a OrganizationResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}</description></item><item><term>Operation Id</term><description>OrganizationResource_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="organizationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNeonOrganizationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;&gt; GetNeonOrganizationAsync (string organizationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;&gt; GetNeonOrganizationAsync(string organizationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource.GetNeonOrganizationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNeonOrganizationAsync (organizationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NeonOrganizationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetNeonOrganizationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;&gt;&#xA;override this.GetNeonOrganizationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;&gt;" Usage="mockableNeonPostgresResourceGroupResource.GetNeonOrganizationAsync (organizationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="organizationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="organizationName"> Name of the Neon Organizations resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a OrganizationResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}</description></item><item><term>Operation Id</term><description>OrganizationResource_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="organizationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNeonOrganizations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.NeonPostgres.NeonOrganizationCollection GetNeonOrganizations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.NeonPostgres.NeonOrganizationCollection GetNeonOrganizations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource.GetNeonOrganizations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNeonOrganizations () As NeonOrganizationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetNeonOrganizations : unit -&gt; Azure.ResourceManager.NeonPostgres.NeonOrganizationCollection&#xA;override this.GetNeonOrganizations : unit -&gt; Azure.ResourceManager.NeonPostgres.NeonOrganizationCollection" Usage="mockableNeonPostgresResourceGroupResource.GetNeonOrganizations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NeonPostgres.NeonOrganizationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of NeonOrganizationResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of NeonOrganizationResources and their operations over a NeonOrganizationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgresVersionsOrganization">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt; GetPostgresVersionsOrganization (Azure.ResourceManager.NeonPostgres.Models.PgVersion pgVersion = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt; GetPostgresVersionsOrganization(class Azure.ResourceManager.NeonPostgres.Models.PgVersion pgVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource.GetPostgresVersionsOrganization(Azure.ResourceManager.NeonPostgres.Models.PgVersion,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgresVersionsOrganization (Optional pgVersion As PgVersion = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PgVersionsResult)" />
      <MemberSignature Language="F#" Value="abstract member GetPostgresVersionsOrganization : Azure.ResourceManager.NeonPostgres.Models.PgVersion * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;&#xA;override this.GetPostgresVersionsOrganization : Azure.ResourceManager.NeonPostgres.Models.PgVersion * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;" Usage="mockableNeonPostgresResourceGroupResource.GetPostgresVersionsOrganization (pgVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pgVersion" Type="Azure.ResourceManager.NeonPostgres.Models.PgVersion" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pgVersion"> Post Action to retrieve the PostgreSQL versions. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Action to retrieve the PostgreSQL versions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/getPostgresVersions</description></item><item><term>Operation Id</term><description>Organizations_GetPostgresVersions</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostgresVersionsOrganizationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;&gt; GetPostgresVersionsOrganizationAsync (Azure.ResourceManager.NeonPostgres.Models.PgVersion pgVersion = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;&gt; GetPostgresVersionsOrganizationAsync(class Azure.ResourceManager.NeonPostgres.Models.PgVersion pgVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource.GetPostgresVersionsOrganizationAsync(Azure.ResourceManager.NeonPostgres.Models.PgVersion,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPostgresVersionsOrganizationAsync (Optional pgVersion As PgVersion = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PgVersionsResult))" />
      <MemberSignature Language="F#" Value="abstract member GetPostgresVersionsOrganizationAsync : Azure.ResourceManager.NeonPostgres.Models.PgVersion * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;&gt;&#xA;override this.GetPostgresVersionsOrganizationAsync : Azure.ResourceManager.NeonPostgres.Models.PgVersion * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;&gt;" Usage="mockableNeonPostgresResourceGroupResource.GetPostgresVersionsOrganizationAsync (pgVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pgVersion" Type="Azure.ResourceManager.NeonPostgres.Models.PgVersion" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pgVersion"> Post Action to retrieve the PostgreSQL versions. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Action to retrieve the PostgreSQL versions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/getPostgresVersions</description></item><item><term>Operation Id</term><description>Organizations_GetPostgresVersions</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
