<Type Name="ServiceRemotingDispatcher" FullName="Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher">
  <TypeSignature Language="C#" Value="public class ServiceRemotingDispatcher : IDisposable, Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceRemotingDispatcher extends System.Object implements class Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides an implementation of <see cref="T:Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler" /> that can dispatch
            messages to the service implementing <see cref="T:Microsoft.ServiceFabric.Services.Remoting.IService" /> interface.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceRemotingDispatcher (System.Fabric.ServiceContext serviceContext, Microsoft.ServiceFabric.Services.Remoting.IService service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Fabric.ServiceContext serviceContext, class Microsoft.ServiceFabric.Services.Remoting.IService service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceContext" Type="System.Fabric.ServiceContext" />
        <Parameter Name="service" Type="Microsoft.ServiceFabric.Services.Remoting.IService" />
      </Parameters>
      <Docs>
        <param name="serviceContext">Service context</param>
        <param name="service">Service implementation that implements interfaces of type <see cref="T:Microsoft.ServiceFabric.Services.Remoting.IService" /></param>
        <summary>
            Instantiates the ServiceRemotingDispatcher that uses the given service context and
            dispatches messages to the given service implementation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        <remarks>To be added.</remarks>
        <filterpriority>2</filterpriority>
      </Docs>
    </Member>
    <Member MemberName="HandleOneWay">
      <MemberSignature Language="C#" Value="public virtual void HandleOneWay (Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext requestContext, Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleOneWay(class Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext requestContext, class Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders messageHeaders, unsigned int8[] requestBody) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.HandleOneWay(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext" />
        <Parameter Name="messageHeaders" Type="Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders" />
        <Parameter Name="requestBody" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="requestContext">Request context - contains additional information about the request</param>
        <param name="messageHeaders">Request message headers</param>
        <param name="requestBody">Request message body</param>
        <summary>
            Handles a one way message from the client.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestResponseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;byte[]&gt; RequestResponseAsync (Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext requestContext, Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; RequestResponseAsync(class Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext requestContext, class Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders messageHeaders, unsigned int8[] requestBody) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Services.Remoting</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher/&lt;RequestResponseAsync&gt;d__5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext" />
        <Parameter Name="messageHeaders" Type="Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders" />
        <Parameter Name="requestBody" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="requestContext">Request context - contains additional information about the request</param>
        <param name="messageHeaders">Request message headers</param>
        <param name="requestBody">Request message body</param>
        <summary>
            Handles a message from the client that requires a response from the service.
            </summary>
        <returns>Response body</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>