<Type Name="MockableCognitiveServicesArmClient" FullName="Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient">
  <TypeSignature Language="C#" Value="public class MockableCognitiveServicesArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableCognitiveServicesArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableCognitiveServicesArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableCognitiveServicesArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
    <AssemblyVersion>1.3.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.2.0</AssemblyVersion>
    <AssemblyVersion>1.3.3.0</AssemblyVersion>
    <AssemblyVersion>1.3.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableCognitiveServicesArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCognitiveServicesAccountDeploymentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountDeploymentResource GetCognitiveServicesAccountDeploymentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountDeploymentResource GetCognitiveServicesAccountDeploymentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetCognitiveServicesAccountDeploymentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCognitiveServicesAccountDeploymentResource (id As ResourceIdentifier) As CognitiveServicesAccountDeploymentResource" />
      <MemberSignature Language="F#" Value="abstract member GetCognitiveServicesAccountDeploymentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountDeploymentResource&#xA;override this.GetCognitiveServicesAccountDeploymentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountDeploymentResource" Usage="mockableCognitiveServicesArmClient.GetCognitiveServicesAccountDeploymentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountDeploymentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountDeploymentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountDeploymentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountDeploymentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountDeploymentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCognitiveServicesAccountResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountResource GetCognitiveServicesAccountResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountResource GetCognitiveServicesAccountResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetCognitiveServicesAccountResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCognitiveServicesAccountResource (id As ResourceIdentifier) As CognitiveServicesAccountResource" />
      <MemberSignature Language="F#" Value="abstract member GetCognitiveServicesAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountResource&#xA;override this.GetCognitiveServicesAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountResource" Usage="mockableCognitiveServicesArmClient.GetCognitiveServicesAccountResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCognitiveServicesCommitmentPlanResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.CognitiveServicesCommitmentPlanResource GetCognitiveServicesCommitmentPlanResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.CognitiveServicesCommitmentPlanResource GetCognitiveServicesCommitmentPlanResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetCognitiveServicesCommitmentPlanResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCognitiveServicesCommitmentPlanResource (id As ResourceIdentifier) As CognitiveServicesCommitmentPlanResource" />
      <MemberSignature Language="F#" Value="abstract member GetCognitiveServicesCommitmentPlanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CognitiveServicesCommitmentPlanResource&#xA;override this.GetCognitiveServicesCommitmentPlanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CognitiveServicesCommitmentPlanResource" Usage="mockableCognitiveServicesArmClient.GetCognitiveServicesCommitmentPlanResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.CognitiveServicesCommitmentPlanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesCommitmentPlanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.CognitiveServicesCommitmentPlanResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesCommitmentPlanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesCommitmentPlanResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCognitiveServicesDeletedAccountResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.CognitiveServicesDeletedAccountResource GetCognitiveServicesDeletedAccountResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.CognitiveServicesDeletedAccountResource GetCognitiveServicesDeletedAccountResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetCognitiveServicesDeletedAccountResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCognitiveServicesDeletedAccountResource (id As ResourceIdentifier) As CognitiveServicesDeletedAccountResource" />
      <MemberSignature Language="F#" Value="abstract member GetCognitiveServicesDeletedAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CognitiveServicesDeletedAccountResource&#xA;override this.GetCognitiveServicesDeletedAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CognitiveServicesDeletedAccountResource" Usage="mockableCognitiveServicesArmClient.GetCognitiveServicesDeletedAccountResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.CognitiveServicesDeletedAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesDeletedAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.CognitiveServicesDeletedAccountResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesDeletedAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesDeletedAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCognitiveServicesEncryptionScopeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.CognitiveServicesEncryptionScopeResource GetCognitiveServicesEncryptionScopeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.CognitiveServicesEncryptionScopeResource GetCognitiveServicesEncryptionScopeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetCognitiveServicesEncryptionScopeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCognitiveServicesEncryptionScopeResource (id As ResourceIdentifier) As CognitiveServicesEncryptionScopeResource" />
      <MemberSignature Language="F#" Value="abstract member GetCognitiveServicesEncryptionScopeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CognitiveServicesEncryptionScopeResource&#xA;override this.GetCognitiveServicesEncryptionScopeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CognitiveServicesEncryptionScopeResource" Usage="mockableCognitiveServicesArmClient.GetCognitiveServicesEncryptionScopeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.CognitiveServicesEncryptionScopeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesEncryptionScopeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.CognitiveServicesEncryptionScopeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesEncryptionScopeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesEncryptionScopeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCognitiveServicesPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.CognitiveServicesPrivateEndpointConnectionResource GetCognitiveServicesPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.CognitiveServicesPrivateEndpointConnectionResource GetCognitiveServicesPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetCognitiveServicesPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCognitiveServicesPrivateEndpointConnectionResource (id As ResourceIdentifier) As CognitiveServicesPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetCognitiveServicesPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CognitiveServicesPrivateEndpointConnectionResource&#xA;override this.GetCognitiveServicesPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CognitiveServicesPrivateEndpointConnectionResource" Usage="mockableCognitiveServicesArmClient.GetCognitiveServicesPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.CognitiveServicesPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.CognitiveServicesPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.CognitiveServicesPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommitmentPlanAccountAssociationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.CommitmentPlanAccountAssociationResource GetCommitmentPlanAccountAssociationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.CommitmentPlanAccountAssociationResource GetCommitmentPlanAccountAssociationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetCommitmentPlanAccountAssociationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCommitmentPlanAccountAssociationResource (id As ResourceIdentifier) As CommitmentPlanAccountAssociationResource" />
      <MemberSignature Language="F#" Value="abstract member GetCommitmentPlanAccountAssociationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CommitmentPlanAccountAssociationResource&#xA;override this.GetCommitmentPlanAccountAssociationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CommitmentPlanAccountAssociationResource" Usage="mockableCognitiveServicesArmClient.GetCommitmentPlanAccountAssociationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.CommitmentPlanAccountAssociationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.CommitmentPlanAccountAssociationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.CommitmentPlanAccountAssociationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.CommitmentPlanAccountAssociationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.CommitmentPlanAccountAssociationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommitmentPlanResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.CommitmentPlanResource GetCommitmentPlanResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.CommitmentPlanResource GetCommitmentPlanResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetCommitmentPlanResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCommitmentPlanResource (id As ResourceIdentifier) As CommitmentPlanResource" />
      <MemberSignature Language="F#" Value="abstract member GetCommitmentPlanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CommitmentPlanResource&#xA;override this.GetCommitmentPlanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.CommitmentPlanResource" Usage="mockableCognitiveServicesArmClient.GetCommitmentPlanResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.CommitmentPlanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.CommitmentPlanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.CommitmentPlanResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.CommitmentPlanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.CommitmentPlanResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefenderForAISettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.DefenderForAISettingResource GetDefenderForAISettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.DefenderForAISettingResource GetDefenderForAISettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetDefenderForAISettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefenderForAISettingResource (id As ResourceIdentifier) As DefenderForAISettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetDefenderForAISettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.DefenderForAISettingResource&#xA;override this.GetDefenderForAISettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.DefenderForAISettingResource" Usage="mockableCognitiveServicesArmClient.GetDefenderForAISettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.DefenderForAISettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.DefenderForAISettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.DefenderForAISettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.DefenderForAISettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.DefenderForAISettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkSecurityPerimeterConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.NetworkSecurityPerimeterConfigurationResource GetNetworkSecurityPerimeterConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.NetworkSecurityPerimeterConfigurationResource GetNetworkSecurityPerimeterConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetNetworkSecurityPerimeterConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkSecurityPerimeterConfigurationResource (id As ResourceIdentifier) As NetworkSecurityPerimeterConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkSecurityPerimeterConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.NetworkSecurityPerimeterConfigurationResource&#xA;override this.GetNetworkSecurityPerimeterConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.NetworkSecurityPerimeterConfigurationResource" Usage="mockableCognitiveServicesArmClient.GetNetworkSecurityPerimeterConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.NetworkSecurityPerimeterConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.NetworkSecurityPerimeterConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.NetworkSecurityPerimeterConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.NetworkSecurityPerimeterConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.NetworkSecurityPerimeterConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRaiBlocklistItemResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.RaiBlocklistItemResource GetRaiBlocklistItemResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.RaiBlocklistItemResource GetRaiBlocklistItemResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetRaiBlocklistItemResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRaiBlocklistItemResource (id As ResourceIdentifier) As RaiBlocklistItemResource" />
      <MemberSignature Language="F#" Value="abstract member GetRaiBlocklistItemResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.RaiBlocklistItemResource&#xA;override this.GetRaiBlocklistItemResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.RaiBlocklistItemResource" Usage="mockableCognitiveServicesArmClient.GetRaiBlocklistItemResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.RaiBlocklistItemResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.RaiBlocklistItemResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.RaiBlocklistItemResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.RaiBlocklistItemResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.RaiBlocklistItemResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRaiBlocklistResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.RaiBlocklistResource GetRaiBlocklistResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.RaiBlocklistResource GetRaiBlocklistResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetRaiBlocklistResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRaiBlocklistResource (id As ResourceIdentifier) As RaiBlocklistResource" />
      <MemberSignature Language="F#" Value="abstract member GetRaiBlocklistResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.RaiBlocklistResource&#xA;override this.GetRaiBlocklistResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.RaiBlocklistResource" Usage="mockableCognitiveServicesArmClient.GetRaiBlocklistResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.RaiBlocklistResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.RaiBlocklistResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.RaiBlocklistResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.RaiBlocklistResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.RaiBlocklistResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRaiContentFilterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.RaiContentFilterResource GetRaiContentFilterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.RaiContentFilterResource GetRaiContentFilterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetRaiContentFilterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRaiContentFilterResource (id As ResourceIdentifier) As RaiContentFilterResource" />
      <MemberSignature Language="F#" Value="abstract member GetRaiContentFilterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.RaiContentFilterResource&#xA;override this.GetRaiContentFilterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.RaiContentFilterResource" Usage="mockableCognitiveServicesArmClient.GetRaiContentFilterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.RaiContentFilterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.RaiContentFilterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.RaiContentFilterResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.RaiContentFilterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.RaiContentFilterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRaiPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CognitiveServices.RaiPolicyResource GetRaiPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CognitiveServices.RaiPolicyResource GetRaiPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CognitiveServices.Mocking.MockableCognitiveServicesArmClient.GetRaiPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRaiPolicyResource (id As ResourceIdentifier) As RaiPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetRaiPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.RaiPolicyResource&#xA;override this.GetRaiPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CognitiveServices.RaiPolicyResource" Usage="mockableCognitiveServicesArmClient.GetRaiPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CognitiveServices</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CognitiveServices.RaiPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CognitiveServices.RaiPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CognitiveServices.RaiPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CognitiveServices.RaiPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CognitiveServices.RaiPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
