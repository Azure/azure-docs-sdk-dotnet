<Type Name="IRecoveryServicesOperations" FullName="Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesOperations">
  <TypeSignature Language="C#" Value="public interface IRecoveryServicesOperations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRecoveryServicesOperations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesOperations" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRecoveryServicesOperations" />
  <TypeSignature Language="F#" Value="type IRecoveryServicesOperations = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.RecoveryServices</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            RecoveryServicesOperations operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckNameAvailabilityWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.RecoveryServices.Models.CheckNameAvailabilityResult&gt;&gt; CheckNameAvailabilityWithHttpMessagesAsync (string resourceGroupName, string location, Microsoft.Azure.Management.RecoveryServices.Models.CheckNameAvailabilityParameters input, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Management.RecoveryServices.Models.CheckNameAvailabilityResult&gt;&gt; CheckNameAvailabilityWithHttpMessagesAsync(string resourceGroupName, string location, class Microsoft.Azure.Management.RecoveryServices.Models.CheckNameAvailabilityParameters input, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.RecoveryServices.IRecoveryServicesOperations.CheckNameAvailabilityWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.RecoveryServices.Models.CheckNameAvailabilityParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckNameAvailabilityWithHttpMessagesAsync (resourceGroupName As String, location As String, input As CheckNameAvailabilityParameters, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of CheckNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailabilityWithHttpMessagesAsync : string * string * Microsoft.Azure.Management.RecoveryServices.Models.CheckNameAvailabilityParameters * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.RecoveryServices.Models.CheckNameAvailabilityResult&gt;&gt;" Usage="iRecoveryServicesOperations.CheckNameAvailabilityWithHttpMessagesAsync (resourceGroupName, location, input, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.RecoveryServices</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.RecoveryServices.Models.CheckNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="input" Type="Microsoft.Azure.Management.RecoveryServices.Models.CheckNameAvailabilityParameters" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            The name of the resource group where the recovery services vault is
            present.
            </param>
        <param name="location">
            Location of the resource
            </param>
        <param name="input">
            Contains information about Resource type and Resource name
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            API to check for resource name availability.
            A name is available if no other resource exists that has the same
            SubscriptionId, Resource Name and Type
            or if one or more such resources exist, each of these must be GC'd
            and their time of deletion be more than 24 Hours Ago
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
