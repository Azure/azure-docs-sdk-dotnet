<Type Name="AttestationClient" FullName="Azure.Security.Attestation.AttestationClient">
  <TypeSignature Language="C#" Value="public class AttestationClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttestationClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.Attestation.AttestationClient" />
  <TypeSignature Language="VB.NET" Value="Public Class AttestationClient" />
  <TypeSignature Language="F#" Value="type AttestationClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.Attestation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Attestation Client for the Microsoft Azure Attestation service.
            
             The Attestation client contains the implementation of the "Attest" family of MAA apis.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AttestationClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Parameterless constructor for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttestationClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Security.Attestation.AttestationClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Security.Attestation.AttestationClient" Usage="new Azure.Security.Attestation.AttestationClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">Uri for the Microsoft Azure Attestation Service Instance to use.</param>
        <param name="credential">Credentials to be used in the Client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Security.Attestation.AttestationClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttestationClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Security.Attestation.AttestationClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Security.Attestation.AttestationClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.Attestation.AttestationClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As AttestationClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Security.Attestation.AttestationClient : Uri * Azure.Core.TokenCredential * Azure.Security.Attestation.AttestationClientOptions -&gt; Azure.Security.Attestation.AttestationClient" Usage="new Azure.Security.Attestation.AttestationClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Security.Attestation.AttestationClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">Uri for the Microsoft Azure Attestation Service Instance to use.</param>
        <param name="credential">Credentials to be used in the Client.</param>
        <param name="options">
          <see cref="T:Azure.Security.Attestation.AttestationClientOptions" /> used to configure the API client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Security.Attestation.AttestationClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttestOpenEnclave">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt; AttestOpenEnclave (Azure.Security.Attestation.AttestationRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.AttestationResult&gt; AttestOpenEnclave(class Azure.Security.Attestation.AttestationRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationClient.AttestOpenEnclave(Azure.Security.Attestation.AttestationRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AttestOpenEnclave (request As AttestationRequest, Optional cancellationToken As CancellationToken = Nothing) As AttestationResponse(Of AttestationResult)" />
      <MemberSignature Language="F#" Value="abstract member AttestOpenEnclave : Azure.Security.Attestation.AttestationRequest * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;&#xA;override this.AttestOpenEnclave : Azure.Security.Attestation.AttestationRequest * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;" Usage="attestationClient.AttestOpenEnclave (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Azure.Security.Attestation.AttestationRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">Aggregate type containing the information needed to perform an attestation operation.</param>
        <param name="cancellationToken">Cancellation token used to cancel the request.</param>
        <summary>
            Attest an Open Enclave enclave.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> which contains the validated claims for the supplied <paramref name="request" />.</returns>
        <remarks>The <see cref="P:Azure.Security.Attestation.AttestationRequest.Evidence" /> must be an OpenEnclave Report or OpenEnclave Evidence.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttestOpenEnclaveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;&gt; AttestOpenEnclaveAsync (Azure.Security.Attestation.AttestationRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.AttestationResult&gt;&gt; AttestOpenEnclaveAsync(class Azure.Security.Attestation.AttestationRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationClient.AttestOpenEnclaveAsync(Azure.Security.Attestation.AttestationRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AttestOpenEnclaveAsync (request As AttestationRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AttestationResponse(Of AttestationResult))" />
      <MemberSignature Language="F#" Value="abstract member AttestOpenEnclaveAsync : Azure.Security.Attestation.AttestationRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;&gt;&#xA;override this.AttestOpenEnclaveAsync : Azure.Security.Attestation.AttestationRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;&gt;" Usage="attestationClient.AttestOpenEnclaveAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Azure.Security.Attestation.AttestationRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">Aggregate type containing the information needed to perform an attestation operation.</param>
        <param name="cancellationToken">Cancellation token used to cancel the request.</param>
        <summary>
            Attest an Open Enclave enclave.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> which contains the validated claims for the supplied <paramref name="request" />.</returns>
        <remarks>The <see cref="P:Azure.Security.Attestation.AttestationRequest.Evidence" /> must be an OpenEnclave Report or OpenEnclave Evidence.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttestSgxEnclave">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt; AttestSgxEnclave (Azure.Security.Attestation.AttestationRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.AttestationResult&gt; AttestSgxEnclave(class Azure.Security.Attestation.AttestationRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationClient.AttestSgxEnclave(Azure.Security.Attestation.AttestationRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AttestSgxEnclave (request As AttestationRequest, Optional cancellationToken As CancellationToken = Nothing) As AttestationResponse(Of AttestationResult)" />
      <MemberSignature Language="F#" Value="abstract member AttestSgxEnclave : Azure.Security.Attestation.AttestationRequest * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;&#xA;override this.AttestSgxEnclave : Azure.Security.Attestation.AttestationRequest * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;" Usage="attestationClient.AttestSgxEnclave (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Azure.Security.Attestation.AttestationRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">Aggregate type containing the information needed to perform an attestation operation.</param>
        <param name="cancellationToken">Cancellation token used to cancel the request.</param>
        <summary>
             Attest an Intel SGX enclave.
             </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> which contains the validated claims for the supplied <paramref name="request" />.</returns>
        <remarks>The <see cref="P:Azure.Security.Attestation.AttestationRequest.Evidence" /> must be an Intel SGX Quote.
             <seealso href="https://software.intel.com/content/www/us/en/develop/articles/code-sample-intel-software-guard-extensions-remote-attestation-end-to-end-example.html" />  for more information.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttestSgxEnclaveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;&gt; AttestSgxEnclaveAsync (Azure.Security.Attestation.AttestationRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.AttestationResult&gt;&gt; AttestSgxEnclaveAsync(class Azure.Security.Attestation.AttestationRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationClient.AttestSgxEnclaveAsync(Azure.Security.Attestation.AttestationRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AttestSgxEnclaveAsync (request As AttestationRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AttestationResponse(Of AttestationResult))" />
      <MemberSignature Language="F#" Value="abstract member AttestSgxEnclaveAsync : Azure.Security.Attestation.AttestationRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;&gt;&#xA;override this.AttestSgxEnclaveAsync : Azure.Security.Attestation.AttestationRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;&gt;" Usage="attestationClient.AttestSgxEnclaveAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.AttestationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Azure.Security.Attestation.AttestationRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">Aggregate type containing the information needed to perform an attestation operation.</param>
        <param name="cancellationToken">Cancellation token used to cancel the request.</param>
        <summary>
             Attest an Intel SGX enclave.
             </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> which contains the validated claims for the supplied <paramref name="request" />.</returns>
        <remarks>The <see cref="P:Azure.Security.Attestation.AttestationRequest.Evidence" /> must be an Intel SGX Quote.
             <seealso href="https://software.intel.com/content/www/us/en/develop/articles/code-sample-intel-software-guard-extensions-remote-attestation-end-to-end-example.html" />  for more information.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttestTpm">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.Attestation.TpmAttestationResponse&gt; AttestTpm (Azure.Security.Attestation.TpmAttestationRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.Attestation.TpmAttestationResponse&gt; AttestTpm(class Azure.Security.Attestation.TpmAttestationRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationClient.AttestTpm(Azure.Security.Attestation.TpmAttestationRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AttestTpm (request As TpmAttestationRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TpmAttestationResponse)" />
      <MemberSignature Language="F#" Value="abstract member AttestTpm : Azure.Security.Attestation.TpmAttestationRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.Attestation.TpmAttestationResponse&gt;&#xA;override this.AttestTpm : Azure.Security.Attestation.TpmAttestationRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.Attestation.TpmAttestationResponse&gt;" Usage="attestationClient.AttestTpm (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.Attestation.TpmAttestationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Azure.Security.Attestation.TpmAttestationRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">TPM Attestation request.</param>
        <param name="cancellationToken">Cancellation token used to cancel this operation.</param>
        <summary>
            Attest a TPM based enclave.
            See <seealso href="https://docs.microsoft.com/en-us/azure/attestation/virtualization-based-security-protocol" /> for more information.
            </summary>
        <returns>A <see cref="T:Azure.Security.Attestation.TpmAttestationResponse" /> containing the TPM attestation response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttestTpmAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.Attestation.TpmAttestationResponse&gt;&gt; AttestTpmAsync (Azure.Security.Attestation.TpmAttestationRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.Attestation.TpmAttestationResponse&gt;&gt; AttestTpmAsync(class Azure.Security.Attestation.TpmAttestationRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationClient.AttestTpmAsync(Azure.Security.Attestation.TpmAttestationRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AttestTpmAsync (request As TpmAttestationRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TpmAttestationResponse))" />
      <MemberSignature Language="F#" Value="abstract member AttestTpmAsync : Azure.Security.Attestation.TpmAttestationRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.Attestation.TpmAttestationResponse&gt;&gt;&#xA;override this.AttestTpmAsync : Azure.Security.Attestation.TpmAttestationRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.Attestation.TpmAttestationResponse&gt;&gt;" Usage="attestationClient.AttestTpmAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.Attestation.TpmAttestationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Azure.Security.Attestation.TpmAttestationRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">TPM Attestation request.</param>
        <param name="cancellationToken">Cancellation token used to cancel this operation.</param>
        <summary>
            Attest a TPM based enclave.
            See <seealso href="https://docs.microsoft.com/en-us/azure/attestation/virtualization-based-security-protocol" /> for more information.
            </summary>
        <returns>A <see cref="T:Azure.Security.Attestation.TpmAttestationResponse" /> containing the TPM attestation response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Security.Attestation.AttestationClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.Security.Attestation.AttestationClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the URI used to communicate with the service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSigningCertificates">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Security.Attestation.AttestationSigner&gt;&gt; GetSigningCertificates (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Security.Attestation.AttestationSigner&gt;&gt; GetSigningCertificates(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationClient.GetSigningCertificates(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSigningCertificates (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IReadOnlyList(Of AttestationSigner))" />
      <MemberSignature Language="F#" Value="abstract member GetSigningCertificates : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Security.Attestation.AttestationSigner&gt;&gt;&#xA;override this.GetSigningCertificates : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Security.Attestation.AttestationSigner&gt;&gt;" Usage="attestationClient.GetSigningCertificates cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Security.Attestation.AttestationSigner&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Cancellation token used to cancel this operation.</param>
        <summary>
            Retrieves the signing certificates used to sign attestation requests.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> whose specialization contains a list of signers which can be used to sign attestation tokens.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSigningCertificatesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Security.Attestation.AttestationSigner&gt;&gt;&gt; GetSigningCertificatesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Security.Attestation.AttestationSigner&gt;&gt;&gt; GetSigningCertificatesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationClient.GetSigningCertificatesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSigningCertificatesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IReadOnlyList(Of AttestationSigner)))" />
      <MemberSignature Language="F#" Value="abstract member GetSigningCertificatesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Security.Attestation.AttestationSigner&gt;&gt;&gt;&#xA;override this.GetSigningCertificatesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Security.Attestation.AttestationSigner&gt;&gt;&gt;" Usage="attestationClient.GetSigningCertificatesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Security.Attestation.AttestationSigner&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Cancellation token used to cancel this operation.</param>
        <summary>
            Retrieves the signing certificates used to sign attestation requests.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> whose specialization contains a list of signers which can be used to sign attestation tokens.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
