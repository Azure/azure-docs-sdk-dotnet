<Type Name="AttestationModelFactory" FullName="Azure.Security.Attestation.AttestationModelFactory">
  <TypeSignature Language="C#" Value="public static class AttestationModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AttestationModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.Attestation.AttestationModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class AttestationModelFactory" />
  <TypeSignature Language="F#" Value="type AttestationModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.Attestation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Factory class for creating Attestation Service Model types, used for Mocking.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AttestationResponse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Azure.Security.Attestation.AttestationResponse&lt;T&gt; AttestationResponse&lt;T&gt; (Azure.Response response, Azure.Security.Attestation.AttestationToken token, T body = default) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Security.Attestation.AttestationResponse`1&lt;!!T&gt; AttestationResponse&lt;class T&gt;(class Azure.Response response, class Azure.Security.Attestation.AttestationToken token, !!T body) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationModelFactory.AttestationResponse``1(Azure.Response,Azure.Security.Attestation.AttestationToken,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AttestationResponse(Of T As Class) (response As Response, token As AttestationToken, Optional body As T = Nothing) As AttestationResponse(Of T)" />
      <MemberSignature Language="F#" Value="static member AttestationResponse : Azure.Response * Azure.Security.Attestation.AttestationToken * 'T -&gt; Azure.Security.Attestation.AttestationResponse&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="Azure.Security.Attestation.AttestationModelFactory.AttestationResponse (response, token, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.Attestation.AttestationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="response" Type="Azure.Response" />
        <Parameter Name="token" Type="Azure.Security.Attestation.AttestationToken" />
        <Parameter Name="body" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of the token body.</typeparam>
        <param name="response">Response type associated with the underlying response.</param>
        <param name="token">Attestation Token to be included in the response.</param>
        <param name="body">Optional body instance. If no body is provided, the body of the token is used.</param>
        <summary>
            Create an instance of an AttestationResponse object for mocking purposes.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse" /> object.</returns>
        <remarks>The <paramref name="body" /> parameter is provided to create an attestation response whose Value property is something other than the body of the token.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttestationResult">
      <MemberSignature Language="C#" Value="public static Azure.Security.Attestation.AttestationResult AttestationResult (string jti = default, string issuer = default, DateTimeOffset issuedAt = default, DateTimeOffset expiration = default, DateTimeOffset notBefore = default, object cnf = default, string nonce = default, string version = default, object runtimeClaims = default, object inittimeClaims = default, object policyClaims = default, string verifierType = default, Azure.Security.Attestation.AttestationSigner policySigner = default, BinaryData policyHash = default, bool? isDebuggable = default, float? productId = default, string mrEnclave = default, string mrSigner = default, float? svn = default, BinaryData enclaveHeldData = default, object sgxCollateral = default, string deprecatedVersion = default, bool? deprecatedIsDebuggable = default, object deprecatedSgxCollateral = default, BinaryData deprecatedEnclaveHeldData = default, BinaryData deprecatedEnclaveHeldData2 = default, float? deprecatedProductId = default, string deprecatedMrEnclave = default, string deprecatedMrSigner = default, float? deprecatedSvn = default, string deprecatedTee = default, Azure.Security.Attestation.AttestationSigner deprecatedPolicySigner = default, BinaryData deprecatedPolicyHash = default, string deprecatedRpData = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Security.Attestation.AttestationResult AttestationResult(string jti, string issuer, valuetype System.DateTimeOffset issuedAt, valuetype System.DateTimeOffset expiration, valuetype System.DateTimeOffset notBefore, object cnf, string nonce, string version, object runtimeClaims, object inittimeClaims, object policyClaims, string verifierType, class Azure.Security.Attestation.AttestationSigner policySigner, class System.BinaryData policyHash, valuetype System.Nullable`1&lt;bool&gt; isDebuggable, valuetype System.Nullable`1&lt;float32&gt; productId, string mrEnclave, string mrSigner, valuetype System.Nullable`1&lt;float32&gt; svn, class System.BinaryData enclaveHeldData, object sgxCollateral, string deprecatedVersion, valuetype System.Nullable`1&lt;bool&gt; deprecatedIsDebuggable, object deprecatedSgxCollateral, class System.BinaryData deprecatedEnclaveHeldData, class System.BinaryData deprecatedEnclaveHeldData2, valuetype System.Nullable`1&lt;float32&gt; deprecatedProductId, string deprecatedMrEnclave, string deprecatedMrSigner, valuetype System.Nullable`1&lt;float32&gt; deprecatedSvn, string deprecatedTee, class Azure.Security.Attestation.AttestationSigner deprecatedPolicySigner, class System.BinaryData deprecatedPolicyHash, string deprecatedRpData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationModelFactory.AttestationResult(System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.Object,System.String,System.String,System.Object,System.Object,System.Object,System.String,Azure.Security.Attestation.AttestationSigner,System.BinaryData,System.Nullable{System.Boolean},System.Nullable{System.Single},System.String,System.String,System.Nullable{System.Single},System.BinaryData,System.Object,System.String,System.Nullable{System.Boolean},System.Object,System.BinaryData,System.BinaryData,System.Nullable{System.Single},System.String,System.String,System.Nullable{System.Single},System.String,Azure.Security.Attestation.AttestationSigner,System.BinaryData,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AttestationResult (Optional jti As String = Nothing, Optional issuer As String = Nothing, Optional issuedAt As DateTimeOffset = Nothing, Optional expiration As DateTimeOffset = Nothing, Optional notBefore As DateTimeOffset = Nothing, Optional cnf As Object = Nothing, Optional nonce As String = Nothing, Optional version As String = Nothing, Optional runtimeClaims As Object = Nothing, Optional inittimeClaims As Object = Nothing, Optional policyClaims As Object = Nothing, Optional verifierType As String = Nothing, Optional policySigner As AttestationSigner = Nothing, Optional policyHash As BinaryData = Nothing, Optional isDebuggable As Nullable(Of Boolean) = Nothing, Optional productId As Nullable(Of Single) = Nothing, Optional mrEnclave As String = Nothing, Optional mrSigner As String = Nothing, Optional svn As Nullable(Of Single) = Nothing, Optional enclaveHeldData As BinaryData = Nothing, Optional sgxCollateral As Object = Nothing, Optional deprecatedVersion As String = Nothing, Optional deprecatedIsDebuggable As Nullable(Of Boolean) = Nothing, Optional deprecatedSgxCollateral As Object = Nothing, Optional deprecatedEnclaveHeldData As BinaryData = Nothing, Optional deprecatedEnclaveHeldData2 As BinaryData = Nothing, Optional deprecatedProductId As Nullable(Of Single) = Nothing, Optional deprecatedMrEnclave As String = Nothing, Optional deprecatedMrSigner As String = Nothing, Optional deprecatedSvn As Nullable(Of Single) = Nothing, Optional deprecatedTee As String = Nothing, Optional deprecatedPolicySigner As AttestationSigner = Nothing, Optional deprecatedPolicyHash As BinaryData = Nothing, Optional deprecatedRpData As String = Nothing) As AttestationResult" />
      <MemberSignature Language="F#" Value="static member AttestationResult : string * string * DateTimeOffset * DateTimeOffset * DateTimeOffset * obj * string * string * obj * obj * obj * string * Azure.Security.Attestation.AttestationSigner * BinaryData * Nullable&lt;bool&gt; * Nullable&lt;single&gt; * string * string * Nullable&lt;single&gt; * BinaryData * obj * string * Nullable&lt;bool&gt; * obj * BinaryData * BinaryData * Nullable&lt;single&gt; * string * string * Nullable&lt;single&gt; * string * Azure.Security.Attestation.AttestationSigner * BinaryData * string -&gt; Azure.Security.Attestation.AttestationResult" Usage="Azure.Security.Attestation.AttestationModelFactory.AttestationResult (jti, issuer, issuedAt, expiration, notBefore, cnf, nonce, version, runtimeClaims, inittimeClaims, policyClaims, verifierType, policySigner, policyHash, isDebuggable, productId, mrEnclave, mrSigner, svn, enclaveHeldData, sgxCollateral, deprecatedVersion, deprecatedIsDebuggable, deprecatedSgxCollateral, deprecatedEnclaveHeldData, deprecatedEnclaveHeldData2, deprecatedProductId, deprecatedMrEnclave, deprecatedMrSigner, deprecatedSvn, deprecatedTee, deprecatedPolicySigner, deprecatedPolicyHash, deprecatedRpData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.Attestation.AttestationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jti" Type="System.String" />
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="issuedAt" Type="System.DateTimeOffset" />
        <Parameter Name="expiration" Type="System.DateTimeOffset" />
        <Parameter Name="notBefore" Type="System.DateTimeOffset" />
        <Parameter Name="cnf" Type="System.Object" />
        <Parameter Name="nonce" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="runtimeClaims" Type="System.Object" />
        <Parameter Name="inittimeClaims" Type="System.Object" />
        <Parameter Name="policyClaims" Type="System.Object" />
        <Parameter Name="verifierType" Type="System.String" />
        <Parameter Name="policySigner" Type="Azure.Security.Attestation.AttestationSigner" />
        <Parameter Name="policyHash" Type="System.BinaryData" />
        <Parameter Name="isDebuggable" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="productId" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="mrEnclave" Type="System.String" />
        <Parameter Name="mrSigner" Type="System.String" />
        <Parameter Name="svn" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="enclaveHeldData" Type="System.BinaryData" />
        <Parameter Name="sgxCollateral" Type="System.Object" />
        <Parameter Name="deprecatedVersion" Type="System.String" />
        <Parameter Name="deprecatedIsDebuggable" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="deprecatedSgxCollateral" Type="System.Object" />
        <Parameter Name="deprecatedEnclaveHeldData" Type="System.BinaryData" />
        <Parameter Name="deprecatedEnclaveHeldData2" Type="System.BinaryData" />
        <Parameter Name="deprecatedProductId" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="deprecatedMrEnclave" Type="System.String" />
        <Parameter Name="deprecatedMrSigner" Type="System.String" />
        <Parameter Name="deprecatedSvn" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="deprecatedTee" Type="System.String" />
        <Parameter Name="deprecatedPolicySigner" Type="Azure.Security.Attestation.AttestationSigner" />
        <Parameter Name="deprecatedPolicyHash" Type="System.BinaryData" />
        <Parameter Name="deprecatedRpData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jti"> Unique Identifier for the token. </param>
        <param name="issuer"> The Principal who issued the token. </param>
        <param name="issuedAt"> The time at which the token was issued, in the number of seconds since 1970-01-0T00:00:00Z UTC. </param>
        <param name="expiration"> The expiration time after which the token is no longer valid, in the number of seconds since 1970-01-0T00:00:00Z UTC. </param>
        <param name="notBefore"> The not before time before which the token cannot be considered valid, in the number of seconds since 1970-01-0T00:00:00Z UTC. </param>
        <param name="cnf"> An RFC 7800 Proof of Possession Key. </param>
        <param name="nonce"> The Nonce input to the attestation request, if provided. </param>
        <param name="version"> The Schema version of this structure. Current Value: 1.0. </param>
        <param name="runtimeClaims"> Runtime Claims. </param>
        <param name="inittimeClaims"> Inittime Claims. </param>
        <param name="policyClaims"> Policy Generated Claims. </param>
        <param name="verifierType"> The Attestation type being attested. </param>
        <param name="policySigner"> The certificate used to sign the policy object, if specified. </param>
        <param name="policyHash"> The SHA256 hash of the BASE64URL encoded policy text used for attestation. </param>
        <param name="isDebuggable"> True if the enclave is debuggable, false otherwise. </param>
        <param name="productId"> The SGX Product ID for the enclave. </param>
        <param name="mrEnclave"> The HEX encoded SGX MRENCLAVE value for the enclave. </param>
        <param name="mrSigner"> The HEX encoded SGX MRSIGNER value for the enclave. </param>
        <param name="svn"> The SGX SVN value for the enclave. </param>
        <param name="enclaveHeldData"> A copy of the RuntimeData specified as an input to the attest call. </param>
        <param name="sgxCollateral"> The SGX SVN value for the enclave. </param>
        <param name="deprecatedVersion"> DEPRECATED: Private Preview version of x-ms-ver claim. </param>
        <param name="deprecatedIsDebuggable"> DEPRECATED: Private Preview version of x-ms-sgx-is-debuggable claim. </param>
        <param name="deprecatedSgxCollateral"> DEPRECATED: Private Preview version of x-ms-sgx-collateral claim. </param>
        <param name="deprecatedEnclaveHeldData"> DEPRECATED: Private Preview version of x-ms-sgx-ehd claim. </param>
        <param name="deprecatedEnclaveHeldData2"> DEPRECATED: Private Preview version of x-ms-sgx-ehd claim. </param>
        <param name="deprecatedProductId"> DEPRECATED: Private Preview version of x-ms-sgx-product-id. </param>
        <param name="deprecatedMrEnclave"> DEPRECATED: Private Preview version of x-ms-sgx-mrenclave. </param>
        <param name="deprecatedMrSigner"> DEPRECATED: Private Preview version of x-ms-sgx-mrsigner. </param>
        <param name="deprecatedSvn"> DEPRECATED: Private Preview version of x-ms-sgx-svn. </param>
        <param name="deprecatedTee"> DEPRECATED: Private Preview version of x-ms-tee. </param>
        <param name="deprecatedPolicySigner"> DEPRECATED: Private Preview version of x-ms-policy-signer. </param>
        <param name="deprecatedPolicyHash"> DEPRECATED: Private Preview version of x-ms-policy-hash. </param>
        <param name="deprecatedRpData"> DEPRECATED: Private Preview version of nonce. </param>
        <summary> Initializes a new instance of AttestationResult for mocking purposes. </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResult" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyCertificatesModificationResult">
      <MemberSignature Language="C#" Value="public static Azure.Security.Attestation.PolicyCertificatesModificationResult PolicyCertificatesModificationResult (Azure.Security.Attestation.PolicyCertificateResolution certificateResolution, string certificateThumbprint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Security.Attestation.PolicyCertificatesModificationResult PolicyCertificatesModificationResult(valuetype Azure.Security.Attestation.PolicyCertificateResolution certificateResolution, string certificateThumbprint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationModelFactory.PolicyCertificatesModificationResult(Azure.Security.Attestation.PolicyCertificateResolution,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PolicyCertificatesModificationResult (certificateResolution As PolicyCertificateResolution, certificateThumbprint As String) As PolicyCertificatesModificationResult" />
      <MemberSignature Language="F#" Value="static member PolicyCertificatesModificationResult : Azure.Security.Attestation.PolicyCertificateResolution * string -&gt; Azure.Security.Attestation.PolicyCertificatesModificationResult" Usage="Azure.Security.Attestation.AttestationModelFactory.PolicyCertificatesModificationResult (certificateResolution, certificateThumbprint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.Attestation.PolicyCertificatesModificationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateResolution" Type="Azure.Security.Attestation.PolicyCertificateResolution" />
        <Parameter Name="certificateThumbprint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certificateThumbprint">The thumbprint of the certificate which was modified.</param>
        <param name="certificateResolution">The modification which was performed.</param>
        <summary>
            Creates a new instance of <see cref="T:Azure.Security.Attestation.PolicyCertificatesModificationResult" /> for mocking purposes.
            </summary>
        <returns>A <see cref="T:Azure.Security.Attestation.PolicyCertificatesModificationResult" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyModificationResult">
      <MemberSignature Language="C#" Value="public static Azure.Security.Attestation.PolicyModificationResult PolicyModificationResult (Azure.Security.Attestation.PolicyModification policyModification, string policyHash, Azure.Security.Attestation.AttestationSigner signer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Security.Attestation.PolicyModificationResult PolicyModificationResult(valuetype Azure.Security.Attestation.PolicyModification policyModification, string policyHash, class Azure.Security.Attestation.AttestationSigner signer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationModelFactory.PolicyModificationResult(Azure.Security.Attestation.PolicyModification,System.String,Azure.Security.Attestation.AttestationSigner)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PolicyModificationResult (policyModification As PolicyModification, policyHash As String, signer As AttestationSigner) As PolicyModificationResult" />
      <MemberSignature Language="F#" Value="static member PolicyModificationResult : Azure.Security.Attestation.PolicyModification * string * Azure.Security.Attestation.AttestationSigner -&gt; Azure.Security.Attestation.PolicyModificationResult" Usage="Azure.Security.Attestation.AttestationModelFactory.PolicyModificationResult (policyModification, policyHash, signer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.Attestation.PolicyModificationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyModification" Type="Azure.Security.Attestation.PolicyModification" />
        <Parameter Name="policyHash" Type="System.String" />
        <Parameter Name="signer" Type="Azure.Security.Attestation.AttestationSigner" />
      </Parameters>
      <Docs>
        <param name="policyModification">The policy Modification which has occurred.</param>
        <param name="policyHash">The SHA256 hash of the policy token which was modified</param>
        <param name="signer">The signer which was used to sign the token which modified the policy.</param>
        <summary>
            Create a PolicyModificationResult type for mocking purposes.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
