<Type Name="MockableAdvisorArmClient" FullName="Azure.ResourceManager.Advisor.Mocking.MockableAdvisorArmClient">
  <TypeSignature Language="C#" Value="public class MockableAdvisorArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableAdvisorArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Advisor.Mocking.MockableAdvisorArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableAdvisorArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableAdvisorArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Advisor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableAdvisorArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Advisor.Mocking.MockableAdvisorArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Advisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Advisor.Mocking.MockableAdvisorArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataEntityResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Advisor.MetadataEntityResource GetMetadataEntityResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Advisor.MetadataEntityResource GetMetadataEntityResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Advisor.Mocking.MockableAdvisorArmClient.GetMetadataEntityResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMetadataEntityResource (id As ResourceIdentifier) As MetadataEntityResource" />
      <MemberSignature Language="F#" Value="abstract member GetMetadataEntityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Advisor.MetadataEntityResource&#xA;override this.GetMetadataEntityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Advisor.MetadataEntityResource" Usage="mockableAdvisorArmClient.GetMetadataEntityResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Advisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Advisor.MetadataEntityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Advisor.MetadataEntityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Advisor.MetadataEntityResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Advisor.MetadataEntityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Advisor.MetadataEntityResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceRecommendationBase">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource&gt; GetResourceRecommendationBase (Azure.Core.ResourceIdentifier scope, string recommendationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource&gt; GetResourceRecommendationBase(class Azure.Core.ResourceIdentifier scope, string recommendationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Advisor.Mocking.MockableAdvisorArmClient.GetResourceRecommendationBase(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceRecommendationBase (scope As ResourceIdentifier, recommendationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceRecommendationBaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceRecommendationBase : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource&gt;&#xA;override this.GetResourceRecommendationBase : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource&gt;" Usage="mockableAdvisorArmClient.GetResourceRecommendationBase (scope, recommendationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Advisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="recommendationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="recommendationId"> The recommendation ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Obtains details of a cached recommendation.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}</description></item><item><term>Operation Id</term><description>Recommendations_Get</description></item><item><term>Default Api Version</term><description>2020-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="recommendationId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="recommendationId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceRecommendationBaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource&gt;&gt; GetResourceRecommendationBaseAsync (Azure.Core.ResourceIdentifier scope, string recommendationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource&gt;&gt; GetResourceRecommendationBaseAsync(class Azure.Core.ResourceIdentifier scope, string recommendationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Advisor.Mocking.MockableAdvisorArmClient.GetResourceRecommendationBaseAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceRecommendationBaseAsync (scope As ResourceIdentifier, recommendationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceRecommendationBaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetResourceRecommendationBaseAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource&gt;&gt;&#xA;override this.GetResourceRecommendationBaseAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource&gt;&gt;" Usage="mockableAdvisorArmClient.GetResourceRecommendationBaseAsync (scope, recommendationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Advisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="recommendationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="recommendationId"> The recommendation ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Obtains details of a cached recommendation.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}</description></item><item><term>Operation Id</term><description>Recommendations_Get</description></item><item><term>Default Api Version</term><description>2020-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="recommendationId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="recommendationId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceRecommendationBaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource GetResourceRecommendationBaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource GetResourceRecommendationBaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Advisor.Mocking.MockableAdvisorArmClient.GetResourceRecommendationBaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceRecommendationBaseResource (id As ResourceIdentifier) As ResourceRecommendationBaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetResourceRecommendationBaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource&#xA;override this.GetResourceRecommendationBaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource" Usage="mockableAdvisorArmClient.GetResourceRecommendationBaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Advisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Advisor.ResourceRecommendationBaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceRecommendationBases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Advisor.ResourceRecommendationBaseCollection GetResourceRecommendationBases (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Advisor.ResourceRecommendationBaseCollection GetResourceRecommendationBases(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Advisor.Mocking.MockableAdvisorArmClient.GetResourceRecommendationBases(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceRecommendationBases (scope As ResourceIdentifier) As ResourceRecommendationBaseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetResourceRecommendationBases : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Advisor.ResourceRecommendationBaseCollection&#xA;override this.GetResourceRecommendationBases : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Advisor.ResourceRecommendationBaseCollection" Usage="mockableAdvisorArmClient.GetResourceRecommendationBases scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Advisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Advisor.ResourceRecommendationBaseCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of ResourceRecommendationBaseResources in the ArmClient. </summary>
        <returns> An object representing collection of ResourceRecommendationBaseResources and their operations over a ResourceRecommendationBaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSuppressionContractResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Advisor.SuppressionContractResource GetSuppressionContractResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Advisor.SuppressionContractResource GetSuppressionContractResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Advisor.Mocking.MockableAdvisorArmClient.GetSuppressionContractResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSuppressionContractResource (id As ResourceIdentifier) As SuppressionContractResource" />
      <MemberSignature Language="F#" Value="abstract member GetSuppressionContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Advisor.SuppressionContractResource&#xA;override this.GetSuppressionContractResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Advisor.SuppressionContractResource" Usage="mockableAdvisorArmClient.GetSuppressionContractResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Advisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Advisor.SuppressionContractResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Advisor.SuppressionContractResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Advisor.SuppressionContractResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Advisor.SuppressionContractResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Advisor.SuppressionContractResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
