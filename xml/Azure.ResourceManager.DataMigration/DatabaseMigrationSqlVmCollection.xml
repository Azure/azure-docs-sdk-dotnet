<Type Name="DatabaseMigrationSqlVmCollection" FullName="Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmCollection">
  <TypeSignature Language="C#" Value="public class DatabaseMigrationSqlVmCollection : Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DatabaseMigrationSqlVmCollection extends Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DatabaseMigrationSqlVmCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type DatabaseMigrationSqlVmCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get a <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmCollection" /> instance call the GetDatabaseMigrationSqlVms method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DatabaseMigrationSqlVmCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt; CreateOrUpdate (Azure.WaitUntil waitUntil, string sqlVirtualMachineName, string targetDBName, Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt; CreateOrUpdate(valuetype Azure.WaitUntil waitUntil, string sqlVirtualMachineName, string targetDBName, class Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmCollection.CreateOrUpdate(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (waitUntil As WaitUntil, sqlVirtualMachineName As String, targetDBName As String, data As DatabaseMigrationSqlVmData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DatabaseMigrationSqlVmResource)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : Azure.WaitUntil * string * string * Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;&#xA;override this.CreateOrUpdate : Azure.WaitUntil * string * string * Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;" Usage="databaseMigrationSqlVmCollection.CreateOrUpdate (waitUntil, sqlVirtualMachineName, targetDBName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="sqlVirtualMachineName" Type="System.String" />
        <Parameter Name="targetDBName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="sqlVirtualMachineName"> The String to use. </param>
        <param name="targetDBName"> The name of the target database. </param>
        <param name="data"> Details of SqlMigrationService resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a new database migration to a given SQL VM.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}
            Operation Id: DatabaseMigrationsSqlVm_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlVirtualMachineName" /> or <paramref name="targetDBName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlVirtualMachineName" />, <paramref name="targetDBName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;&gt; CreateOrUpdateAsync (Azure.WaitUntil waitUntil, string sqlVirtualMachineName, string targetDBName, Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;&gt; CreateOrUpdateAsync(valuetype Azure.WaitUntil waitUntil, string sqlVirtualMachineName, string targetDBName, class Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (waitUntil As WaitUntil, sqlVirtualMachineName As String, targetDBName As String, data As DatabaseMigrationSqlVmData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DatabaseMigrationSqlVmResource))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : Azure.WaitUntil * string * string * Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;&gt;&#xA;override this.CreateOrUpdateAsync : Azure.WaitUntil * string * string * Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;&gt;" Usage="databaseMigrationSqlVmCollection.CreateOrUpdateAsync (waitUntil, sqlVirtualMachineName, targetDBName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="sqlVirtualMachineName" Type="System.String" />
        <Parameter Name="targetDBName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="sqlVirtualMachineName"> The String to use. </param>
        <param name="targetDBName"> The name of the target database. </param>
        <param name="data"> Details of SqlMigrationService resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a new database migration to a given SQL VM.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}
            Operation Id: DatabaseMigrationsSqlVm_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlVirtualMachineName" /> or <paramref name="targetDBName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlVirtualMachineName" />, <paramref name="targetDBName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (string sqlVirtualMachineName, string targetDBName, Guid? migrationOperationId = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(string sqlVirtualMachineName, string targetDBName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; migrationOperationId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmCollection.Exists(System.String,System.String,System.Nullable{System.Guid},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (sqlVirtualMachineName As String, targetDBName As String, Optional migrationOperationId As Nullable(Of Guid) = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : string * string * Nullable&lt;Guid&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : string * string * Nullable&lt;Guid&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="databaseMigrationSqlVmCollection.Exists (sqlVirtualMachineName, targetDBName, migrationOperationId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlVirtualMachineName" Type="System.String" />
        <Parameter Name="targetDBName" Type="System.String" />
        <Parameter Name="migrationOperationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlVirtualMachineName"> The String to use. </param>
        <param name="targetDBName"> The name of the target database. </param>
        <param name="migrationOperationId"> Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved. </param>
        <param name="expand"> Complete migration details be included in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}
            Operation Id: DatabaseMigrationsSqlVm_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlVirtualMachineName" /> or <paramref name="targetDBName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlVirtualMachineName" /> or <paramref name="targetDBName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (string sqlVirtualMachineName, string targetDBName, Guid? migrationOperationId = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(string sqlVirtualMachineName, string targetDBName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; migrationOperationId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmCollection.ExistsAsync(System.String,System.String,System.Nullable{System.Guid},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (sqlVirtualMachineName As String, targetDBName As String, Optional migrationOperationId As Nullable(Of Guid) = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : string * string * Nullable&lt;Guid&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : string * string * Nullable&lt;Guid&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="databaseMigrationSqlVmCollection.ExistsAsync (sqlVirtualMachineName, targetDBName, migrationOperationId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlVirtualMachineName" Type="System.String" />
        <Parameter Name="targetDBName" Type="System.String" />
        <Parameter Name="migrationOperationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlVirtualMachineName"> The String to use. </param>
        <param name="targetDBName"> The name of the target database. </param>
        <param name="migrationOperationId"> Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved. </param>
        <param name="expand"> Complete migration details be included in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}
            Operation Id: DatabaseMigrationsSqlVm_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlVirtualMachineName" /> or <paramref name="targetDBName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlVirtualMachineName" /> or <paramref name="targetDBName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt; Get (string sqlVirtualMachineName, string targetDBName, Guid? migrationOperationId = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt; Get(string sqlVirtualMachineName, string targetDBName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; migrationOperationId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmCollection.Get(System.String,System.String,System.Nullable{System.Guid},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (sqlVirtualMachineName As String, targetDBName As String, Optional migrationOperationId As Nullable(Of Guid) = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DatabaseMigrationSqlVmResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * Nullable&lt;Guid&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;&#xA;override this.Get : string * string * Nullable&lt;Guid&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;" Usage="databaseMigrationSqlVmCollection.Get (sqlVirtualMachineName, targetDBName, migrationOperationId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlVirtualMachineName" Type="System.String" />
        <Parameter Name="targetDBName" Type="System.String" />
        <Parameter Name="migrationOperationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlVirtualMachineName"> The String to use. </param>
        <param name="targetDBName"> The name of the target database. </param>
        <param name="migrationOperationId"> Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved. </param>
        <param name="expand"> Complete migration details be included in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the specified database migration for a given SQL VM.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}
            Operation Id: DatabaseMigrationsSqlVm_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlVirtualMachineName" /> or <paramref name="targetDBName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlVirtualMachineName" /> or <paramref name="targetDBName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;&gt; GetAsync (string sqlVirtualMachineName, string targetDBName, Guid? migrationOperationId = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;&gt; GetAsync(string sqlVirtualMachineName, string targetDBName, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; migrationOperationId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmCollection.GetAsync(System.String,System.String,System.Nullable{System.Guid},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (sqlVirtualMachineName As String, targetDBName As String, Optional migrationOperationId As Nullable(Of Guid) = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DatabaseMigrationSqlVmResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * Nullable&lt;Guid&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;&gt;&#xA;override this.GetAsync : string * string * Nullable&lt;Guid&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;&gt;" Usage="databaseMigrationSqlVmCollection.GetAsync (sqlVirtualMachineName, targetDBName, migrationOperationId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlVirtualMachineName" Type="System.String" />
        <Parameter Name="targetDBName" Type="System.String" />
        <Parameter Name="migrationOperationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlVirtualMachineName"> The String to use. </param>
        <param name="targetDBName"> The name of the target database. </param>
        <param name="migrationOperationId"> Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved. </param>
        <param name="expand"> Complete migration details be included in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the specified database migration for a given SQL VM.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}
            Operation Id: DatabaseMigrationsSqlVm_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sqlVirtualMachineName" /> or <paramref name="targetDBName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlVirtualMachineName" /> or <paramref name="targetDBName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
