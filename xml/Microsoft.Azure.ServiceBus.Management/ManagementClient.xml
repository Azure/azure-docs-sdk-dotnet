<Type Name="ManagementClient" FullName="Microsoft.Azure.ServiceBus.Management.ManagementClient">
  <TypeSignature Language="C#" Value="public class ManagementClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementClient" />
  <TypeSignature Language="F#" Value="type ManagementClient = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClient (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.ServiceBus.Management.ManagementClient : string -&gt; Microsoft.Azure.ServiceBus.Management.ManagementClient" Usage="new Microsoft.Azure.ServiceBus.Management.ManagementClient connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Namespace connection string.</param>
        <summary>
            Initializes a new <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> which can be used to perform management opertions on ServiceBus entities.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClient (Microsoft.Azure.ServiceBus.ServiceBusConnectionStringBuilder connectionStringBuilder, Microsoft.Azure.ServiceBus.Primitives.ITokenProvider tokenProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.ServiceBus.ServiceBusConnectionStringBuilder connectionStringBuilder, class Microsoft.Azure.ServiceBus.Primitives.ITokenProvider tokenProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.#ctor(Microsoft.Azure.ServiceBus.ServiceBusConnectionStringBuilder,Microsoft.Azure.ServiceBus.Primitives.ITokenProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionStringBuilder As ServiceBusConnectionStringBuilder, Optional tokenProvider As ITokenProvider = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.ServiceBus.Management.ManagementClient : Microsoft.Azure.ServiceBus.ServiceBusConnectionStringBuilder * Microsoft.Azure.ServiceBus.Primitives.ITokenProvider -&gt; Microsoft.Azure.ServiceBus.Management.ManagementClient" Usage="new Microsoft.Azure.ServiceBus.Management.ManagementClient (connectionStringBuilder, tokenProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionStringBuilder" Type="Microsoft.Azure.ServiceBus.ServiceBusConnectionStringBuilder" />
        <Parameter Name="tokenProvider" Type="Microsoft.Azure.ServiceBus.Primitives.ITokenProvider" />
      </Parameters>
      <Docs>
        <param name="connectionStringBuilder">
          <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnectionStringBuilder" /> having endpoint information.</param>
        <param name="tokenProvider">Token provider which will generate security tokens for authorization.</param>
        <summary>
            Initializes a new <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> which can be used to perform management opertions on ServiceBus entities.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClient (string endpoint, Microsoft.Azure.ServiceBus.Primitives.ITokenProvider tokenProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string endpoint, class Microsoft.Azure.ServiceBus.Primitives.ITokenProvider tokenProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.#ctor(System.String,Microsoft.Azure.ServiceBus.Primitives.ITokenProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As String, tokenProvider As ITokenProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.ServiceBus.Management.ManagementClient : string * Microsoft.Azure.ServiceBus.Primitives.ITokenProvider -&gt; Microsoft.Azure.ServiceBus.Management.ManagementClient" Usage="new Microsoft.Azure.ServiceBus.Management.ManagementClient (endpoint, tokenProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.String" />
        <Parameter Name="tokenProvider" Type="Microsoft.Azure.ServiceBus.Primitives.ITokenProvider" />
      </Parameters>
      <Docs>
        <param name="endpoint">Fully qualified domain name for Service Bus. Most likely, {yournamespace}.servicebus.windows.net</param>
        <param name="tokenProvider">Token provider which will generate security tokens for authorization.</param>
        <summary>
            Initializes a new <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> which can be used to perform management opertions on ServiceBus entities.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneRequest">
      <MemberSignature Language="C#" Value="public static System.Net.Http.HttpRequestMessage CloneRequest (System.Net.Http.HttpRequestMessage req);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Http.HttpRequestMessage CloneRequest(class System.Net.Http.HttpRequestMessage req) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.CloneRequest(System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CloneRequest (req As HttpRequestMessage) As HttpRequestMessage" />
      <MemberSignature Language="F#" Value="static member CloneRequest : System.Net.Http.HttpRequestMessage -&gt; System.Net.Http.HttpRequestMessage" Usage="Microsoft.Azure.ServiceBus.Management.ManagementClient.CloneRequest req" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="req" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="req">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CloseAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CloseAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.CloseAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function CloseAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.CloseAsync : unit -&gt; System.Threading.Tasks.Task" Usage="managementClient.CloseAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt; CreateQueueAsync (Microsoft.Azure.ServiceBus.Management.QueueDescription queueDescription, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.QueueDescription&gt; CreateQueueAsync(class Microsoft.Azure.ServiceBus.Management.QueueDescription queueDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.CreateQueueAsync(Microsoft.Azure.ServiceBus.Management.QueueDescription,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateQueueAsync : Microsoft.Azure.ServiceBus.Management.QueueDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;&#xA;override this.CreateQueueAsync : Microsoft.Azure.ServiceBus.Management.QueueDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;" Usage="managementClient.CreateQueueAsync (queueDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueDescription" Type="Microsoft.Azure.ServiceBus.Management.QueueDescription" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueDescription">A <see cref="T:Microsoft.Azure.ServiceBus.Management.QueueDescription" /> object describing the attributes with which the new queue will be created.</param>
        <param name="cancellationToken"></param>
        <summary>
            Creates a new queue in the service namespace with the given name.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.ServiceBus.Management.QueueDescription" /> of the newly created queue.</returns>
        <remarks>Throws if a queue already exists.</remarks>
        <exception cref="T:System.ArgumentNullException">Queue name is null or empty.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.Management.MessagingEntityAlreadyExistsException">A queue with the same nameexists under the same service namespace.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt; CreateQueueAsync (string queuePath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.QueueDescription&gt; CreateQueueAsync(string queuePath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.CreateQueueAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateQueueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;&#xA;override this.CreateQueueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;" Usage="managementClient.CreateQueueAsync (queuePath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queuePath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queuePath">The name of the queue relative to the service namespace base address.</param>
        <param name="cancellationToken"></param>
        <summary>
            Creates a new queue in the service namespace with the given name.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.ServiceBus.Management.QueueDescription" /> of the newly created queue.</returns>
        <remarks>Throws if a queue already exists. <see cref="T:Microsoft.Azure.ServiceBus.Management.QueueDescription" /> for default values of queue properties.</remarks>
        <exception cref="T:System.ArgumentNullException">Queue name is null or empty.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="queuePath" /> is greater than 260 characters.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.Management.MessagingEntityAlreadyExistsException">An entity with the same name exists under the same service namespace.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt; CreateRuleAsync (string topicName, string subscriptionName, Microsoft.Azure.ServiceBus.RuleDescription ruleDescription, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.RuleDescription&gt; CreateRuleAsync(string topicName, string subscriptionName, class Microsoft.Azure.ServiceBus.RuleDescription ruleDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.CreateRuleAsync(System.String,System.String,Microsoft.Azure.ServiceBus.RuleDescription,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateRuleAsync : string * string * Microsoft.Azure.ServiceBus.RuleDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;&#xA;override this.CreateRuleAsync : string * string * Microsoft.Azure.ServiceBus.RuleDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;" Usage="managementClient.CreateRuleAsync (topicName, subscriptionName, ruleDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicName" Type="System.String" />
        <Parameter Name="subscriptionName" Type="System.String" />
        <Parameter Name="ruleDescription" Type="Microsoft.Azure.ServiceBus.RuleDescription" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicName">The topic name relative to the service namespace base address.</param>
        <param name="subscriptionName">The name of the subscription.</param>
        <param name="ruleDescription">A <see cref="T:Microsoft.Azure.ServiceBus.RuleDescription" /> object describing the attributes with which the messages are matched and acted upon.</param>
        <param name="cancellationToken"></param>
        <summary>
            Adds a new rule to the subscription under given topic.
            </summary>
        <returns>
          <see cref="T:Microsoft.Azure.ServiceBus.RuleDescription" /> of the recently created rule.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Subscription or rule description is null.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.Management.MessagingEntityAlreadyExistsException">A subscription with the same name exists under the same service namespace.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt; CreateSubscriptionAsync (Microsoft.Azure.ServiceBus.Management.SubscriptionDescription subscriptionDescription, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt; CreateSubscriptionAsync(class Microsoft.Azure.ServiceBus.Management.SubscriptionDescription subscriptionDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.CreateSubscriptionAsync(Microsoft.Azure.ServiceBus.Management.SubscriptionDescription,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateSubscriptionAsync : Microsoft.Azure.ServiceBus.Management.SubscriptionDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;&#xA;override this.CreateSubscriptionAsync : Microsoft.Azure.ServiceBus.Management.SubscriptionDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;" Usage="managementClient.CreateSubscriptionAsync (subscriptionDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionDescription" Type="Microsoft.Azure.ServiceBus.Management.SubscriptionDescription" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionDescription">A <see cref="T:Microsoft.Azure.ServiceBus.Management.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param>
        <param name="cancellationToken"></param>
        <summary>
            Creates a new subscription within a topic in the service namespace with the given name.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.ServiceBus.Management.SubscriptionDescription" /> of the newly created subscription.</returns>
        <remarks>Throws if a subscription already exists.
            Be default, A "pass-through" filter is created for this subscription, which means it will allow all messages to go to this subscription. The name of the filter is represented by <see cref="F:Microsoft.Azure.ServiceBus.RuleDescription.DefaultRuleName" />.
            <see cref="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.CreateSubscriptionAsync(Microsoft.Azure.ServiceBus.Management.SubscriptionDescription,Microsoft.Azure.ServiceBus.RuleDescription,System.Threading.CancellationToken)" /> for creating subscription with a different filter.</remarks>
        <exception cref="T:System.ArgumentNullException">Subscription description is null.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.Management.MessagingEntityAlreadyExistsException">A subscription with the same name exists under the same service namespace.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt; CreateSubscriptionAsync (Microsoft.Azure.ServiceBus.Management.SubscriptionDescription subscriptionDescription, Microsoft.Azure.ServiceBus.RuleDescription defaultRule, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt; CreateSubscriptionAsync(class Microsoft.Azure.ServiceBus.Management.SubscriptionDescription subscriptionDescription, class Microsoft.Azure.ServiceBus.RuleDescription defaultRule, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.CreateSubscriptionAsync(Microsoft.Azure.ServiceBus.Management.SubscriptionDescription,Microsoft.Azure.ServiceBus.RuleDescription,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateSubscriptionAsync : Microsoft.Azure.ServiceBus.Management.SubscriptionDescription * Microsoft.Azure.ServiceBus.RuleDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;&#xA;override this.CreateSubscriptionAsync : Microsoft.Azure.ServiceBus.Management.SubscriptionDescription * Microsoft.Azure.ServiceBus.RuleDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;" Usage="managementClient.CreateSubscriptionAsync (subscriptionDescription, defaultRule, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionDescription" Type="Microsoft.Azure.ServiceBus.Management.SubscriptionDescription" />
        <Parameter Name="defaultRule" Type="Microsoft.Azure.ServiceBus.RuleDescription" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionDescription">A <see cref="T:Microsoft.Azure.ServiceBus.Management.SubscriptionDescription" /> object describing the attributes with which the new subscription will be created.</param>
        <param name="defaultRule"> A <see cref="T:Microsoft.Azure.ServiceBus.RuleDescription" /> object describing the default rule. If null, then pass-through filter with name <see cref="F:Microsoft.Azure.ServiceBus.RuleDescription.DefaultRuleName" /> will be created.</param>
        <param name="cancellationToken"></param>
        <summary>
            Creates a new subscription within a topic with the provided default rule.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.ServiceBus.Management.SubscriptionDescription" /> of the newly created subscription.</returns>
        <remarks>Throws if a subscription already exists. </remarks>
        <exception cref="T:System.ArgumentNullException">Subscription description is null.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.Management.MessagingEntityAlreadyExistsException">A subscription with the same name exists under the same service namespace.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt; CreateSubscriptionAsync (string topicPath, string subscriptionName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt; CreateSubscriptionAsync(string topicPath, string subscriptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.CreateSubscriptionAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateSubscriptionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;&#xA;override this.CreateSubscriptionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;" Usage="managementClient.CreateSubscriptionAsync (topicPath, subscriptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="subscriptionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">The path of the topic relative to the service namespace base address.</param>
        <param name="subscriptionName">The name of the subscription.</param>
        <param name="cancellationToken"></param>
        <summary>
            Creates a new subscription within a topic in the service namespace with the given name.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.ServiceBus.Management.SubscriptionDescription" /> of the newly created subscription.</returns>
        <remarks>Throws if a subscription already exists. <see cref="T:Microsoft.Azure.ServiceBus.Management.SubscriptionDescription" /> for default values of subscription properties.
            Be default, A "pass-through" filter is created for this subscription, which means it will allow all messages to go to this subscription. The name of the filter is represented by <see cref="F:Microsoft.Azure.ServiceBus.RuleDescription.DefaultRuleName" />.
            <see cref="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.CreateSubscriptionAsync(Microsoft.Azure.ServiceBus.Management.SubscriptionDescription,Microsoft.Azure.ServiceBus.RuleDescription,System.Threading.CancellationToken)" /> for creating subscription with a different filter.</remarks>
        <exception cref="T:System.ArgumentNullException">Topic path or subscription name is null or empty.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="topicPath" /> is greater than 260 characters or <paramref name="subscriptionName" /> is greater than 50 characters.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.Management.MessagingEntityAlreadyExistsException">A subscription with the same name exists under the same service namespace.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTopicAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt; CreateTopicAsync (Microsoft.Azure.ServiceBus.Management.TopicDescription topicDescription, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.TopicDescription&gt; CreateTopicAsync(class Microsoft.Azure.ServiceBus.Management.TopicDescription topicDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.CreateTopicAsync(Microsoft.Azure.ServiceBus.Management.TopicDescription,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateTopicAsync : Microsoft.Azure.ServiceBus.Management.TopicDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;&#xA;override this.CreateTopicAsync : Microsoft.Azure.ServiceBus.Management.TopicDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;" Usage="managementClient.CreateTopicAsync (topicDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicDescription" Type="Microsoft.Azure.ServiceBus.Management.TopicDescription" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicDescription">A <see cref="T:Microsoft.Azure.ServiceBus.Management.TopicDescription" /> object describing the attributes with which the new topic will be created.</param>
        <param name="cancellationToken"></param>
        <summary>
            Creates a new topic in the service namespace with the given name.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.ServiceBus.Management.TopicDescription" /> of the newly created topic.</returns>
        <remarks>Throws if a topic already exists. <see cref="T:Microsoft.Azure.ServiceBus.Management.TopicDescription" /> for default values of topic properties.</remarks>
        <exception cref="T:System.ArgumentNullException">Topic description is null.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.Management.MessagingEntityAlreadyExistsException">A topic with the same name exists under the same service namespace.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTopicAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt; CreateTopicAsync (string topicPath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.TopicDescription&gt; CreateTopicAsync(string topicPath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.CreateTopicAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateTopicAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;&#xA;override this.CreateTopicAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;" Usage="managementClient.CreateTopicAsync (topicPath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">The name of the topic relative to the service namespace base address.</param>
        <param name="cancellationToken"></param>
        <summary>
            Creates a new topic in the service namespace with the given name.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.ServiceBus.Management.TopicDescription" /> of the newly created topic.</returns>
        <remarks>Throws if a topic already exists. <see cref="T:Microsoft.Azure.ServiceBus.Management.TopicDescription" /> for default values of topic properties.</remarks>
        <exception cref="T:System.ArgumentNullException">Topic name is null or empty.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="topicPath" /> is greater than 260 characters.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.Management.MessagingEntityAlreadyExistsException">A topic with the same name exists under the same service namespace.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteQueueAsync (string queuePath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteQueueAsync(string queuePath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.DeleteQueueAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteQueueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteQueueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="managementClient.DeleteQueueAsync (queuePath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queuePath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queuePath">The name of the queue relative to the service namespace base address.</param>
        <param name="cancellationToken"></param>
        <summary>
            Deletes the queue described by the path relative to the service namespace base address.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="queuePath" /> is empty or null, or path starts or ends with "/".</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of path is greater than 260.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Queue with this name does not exist.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteRuleAsync (string topicPath, string subscriptionName, string ruleName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteRuleAsync(string topicPath, string subscriptionName, string ruleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.DeleteRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="managementClient.DeleteRuleAsync (topicPath, subscriptionName, ruleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="subscriptionName" Type="System.String" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">The name of the topic relative to the service namespace base address.</param>
        <param name="subscriptionName">The name of the subscription to delete.</param>
        <param name="ruleName">The name of the rule to delete.</param>
        <param name="cancellationToken"></param>
        <summary>
            Deletes the rule described by <paramref name="ruleName" /> from <paramref name="subscriptionName" /> under <paramref name="topicPath" />./&gt;
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <paramref name="topicPath" />, <paramref name="subscriptionName" />, or <paramref name="ruleName" /> is null, white space empty or not in the right format.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of topic path is greater than 260 or length of subscription-name/rule-name is greater than 50.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Rule with this name does not exist.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteSubscriptionAsync (string topicPath, string subscriptionName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteSubscriptionAsync(string topicPath, string subscriptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.DeleteSubscriptionAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSubscriptionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteSubscriptionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="managementClient.DeleteSubscriptionAsync (topicPath, subscriptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="subscriptionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">The name of the topic relative to the service namespace base address.</param>
        <param name="subscriptionName">The name of the subscription to delete.</param>
        <param name="cancellationToken"></param>
        <summary>
            Deletes the subscription with the specified topic and subscription name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicPath" /> or <paramref name="subscriptionName" /> is empty or null, or path starts or ends with "/".</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of topic path is greater than 260 or length of subscription name is greater than 50.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Subscription with this name does not exist.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteTopicAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteTopicAsync (string topicPath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteTopicAsync(string topicPath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.DeleteTopicAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteTopicAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteTopicAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="managementClient.DeleteTopicAsync (topicPath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">The name of the topic relative to the service namespace base address.</param>
        <param name="cancellationToken"></param>
        <summary>
            Deletes the topic described by the name relative to the service namespace base address.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topicPath" /> is empty or null, or path starts or ends with "/".</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of topic path is greater than 260.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Topic with this name does not exist.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt; GetQueueAsync (string queuePath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.QueueDescription&gt; GetQueueAsync(string queuePath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.GetQueueAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetQueueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;&#xA;override this.GetQueueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;" Usage="managementClient.GetQueueAsync (queuePath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queuePath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queuePath">The path of the queue relative to service bus namespace.</param>
        <param name="cancellationToken"></param>
        <summary>
            Retrieves a queue from the service namespace.
            </summary>
        <returns>
          <see cref="T:Microsoft.Azure.ServiceBus.Management.QueueDescription" /> containing information about the queue.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <paramref name="queuePath" /> is null, white space empty or not in the right format.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of queue path is greater than 260.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Queue with this name does not exist.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueueRuntimeInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueRuntimeInfo&gt; GetQueueRuntimeInfoAsync (string queuePath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.QueueRuntimeInfo&gt; GetQueueRuntimeInfoAsync(string queuePath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.GetQueueRuntimeInfoAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetQueueRuntimeInfoAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueRuntimeInfo&gt;&#xA;override this.GetQueueRuntimeInfoAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueRuntimeInfo&gt;" Usage="managementClient.GetQueueRuntimeInfoAsync (queuePath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueRuntimeInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queuePath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queuePath">The path of the queue relative to service bus namespace.</param>
        <param name="cancellationToken"></param>
        <summary>
            Retrieves the runtime information of a queue.
            </summary>
        <returns>
          <see cref="T:Microsoft.Azure.ServiceBus.Management.QueueRuntimeInfo" /> containing runtime information about the queue.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <paramref name="queuePath" /> is null, white space empty or not in the right format.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of queue path is greater than 260.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Queue with this name does not exist.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueuesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;&gt; GetQueuesAsync (int count = 100, int skip = 0, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;&gt; GetQueuesAsync(int32 count, int32 skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.GetQueuesAsync(System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetQueuesAsync : int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;&gt;&#xA;override this.GetQueuesAsync : int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;&gt;" Usage="managementClient.GetQueuesAsync (count, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="skip" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="count">The number of queues to fetch. Defaults to 100. Maximum value allowed is 100.</param>
        <param name="skip">The number of queues to skip. Defaults to 0. Cannot be negative.</param>
        <param name="cancellationToken"></param>
        <summary>
            Retrieves the list of queues present in the namespace.
            </summary>
        <returns>
          <see cref="T:System.Collections.Generic.IList`1" /> containing list of queues.</returns>
        <remarks>You can simulate pages of list of entities by manipulating <paramref name="count" /> and <paramref name="skip" />.
            skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">If the parameters are out of range.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt; GetRuleAsync (string topicPath, string subscriptionName, string ruleName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.RuleDescription&gt; GetRuleAsync(string topicPath, string subscriptionName, string ruleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.GetRuleAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;&#xA;override this.GetRuleAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;" Usage="managementClient.GetRuleAsync (topicPath, subscriptionName, ruleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="subscriptionName" Type="System.String" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">The path of the topic relative to service bus namespace.</param>
        <param name="subscriptionName">The subscription name the rule belongs to.</param>
        <param name="ruleName">The name of the rule to retrieve.</param>
        <param name="cancellationToken"></param>
        <summary>
            Retrieves a rule from the service namespace.
            </summary>
        <returns>
          <see cref="T:Microsoft.Azure.ServiceBus.RuleDescription" /> containing information about the rule.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <paramref name="topicPath" />, <paramref name="subscriptionName" /> or <paramref name="ruleName" /> is null, white space empty or not in the right format.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of topic path is greater than 260 or length of subscription-name/rule-name is greater than 50.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Topic/Subscription/Rule with this name does not exist.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRulesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;&gt; GetRulesAsync (string topicPath, string subscriptionName, int count = 100, int skip = 0, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.ServiceBus.RuleDescription&gt;&gt; GetRulesAsync(string topicPath, string subscriptionName, int32 count, int32 skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.GetRulesAsync(System.String,System.String,System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetRulesAsync : string * string * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;&gt;&#xA;override this.GetRulesAsync : string * string * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;&gt;" Usage="managementClient.GetRulesAsync (topicPath, subscriptionName, count, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="subscriptionName" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="skip" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">The topic path.</param>
        <param name="subscriptionName"> The subscription for which all the rules need to be retrieved.</param>
        <param name="count">The number of rules to fetch. Defaults to 100. Maximum value allowed is 100.</param>
        <param name="skip">The number of rules to skip. Defaults to 0. Cannot be negative.</param>
        <param name="cancellationToken"></param>
        <summary>
            Retrieves the list of rules for a given subscription in a topic.
            </summary>
        <returns>
          <see cref="T:System.Collections.Generic.IList`1" /> containing list of rules.</returns>
        <remarks>You can simulate pages of list of entities by manipulating <paramref name="count" /> and <paramref name="skip" />.
            skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">If the parameters are out of range.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt; GetSubscriptionAsync (string topicPath, string subscriptionName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt; GetSubscriptionAsync(string topicPath, string subscriptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.GetSubscriptionAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;&#xA;override this.GetSubscriptionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;" Usage="managementClient.GetSubscriptionAsync (topicPath, subscriptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="subscriptionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">The path of the topic relative to service bus namespace.</param>
        <param name="subscriptionName">The subscription name.</param>
        <param name="cancellationToken"></param>
        <summary>
            Retrieves a subscription from the service namespace.
            </summary>
        <returns>
          <see cref="T:Microsoft.Azure.ServiceBus.Management.SubscriptionDescription" /> containing information about the subscription.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <paramref name="topicPath" />, <paramref name="subscriptionName" /> is null, white space empty or not in the right format.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of topic path is greater than 260 or length of subscription-name is greater than 50.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Topic or Subscription with this name does not exist.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionRuntimeInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionRuntimeInfo&gt; GetSubscriptionRuntimeInfoAsync (string topicPath, string subscriptionName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.SubscriptionRuntimeInfo&gt; GetSubscriptionRuntimeInfoAsync(string topicPath, string subscriptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.GetSubscriptionRuntimeInfoAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionRuntimeInfoAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionRuntimeInfo&gt;&#xA;override this.GetSubscriptionRuntimeInfoAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionRuntimeInfo&gt;" Usage="managementClient.GetSubscriptionRuntimeInfoAsync (topicPath, subscriptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionRuntimeInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="subscriptionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">The path of the topic relative to service bus namespace.</param>
        <param name="subscriptionName">The subscription name.</param>
        <param name="cancellationToken"></param>
        <summary>
            Retrieves the runtime information of a subscription.
            </summary>
        <returns>
          <see cref="T:Microsoft.Azure.ServiceBus.Management.SubscriptionRuntimeInfo" /> containing runtime information about the subscription.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <paramref name="topicPath" />, <paramref name="subscriptionName" /> is null, white space empty or not in the right format.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of topic path is greater than 260 or length of subscription-name is greater than 50.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Topic or Subscription with this name does not exist.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;&gt; GetSubscriptionsAsync (string topicPath, int count = 100, int skip = 0, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;&gt; GetSubscriptionsAsync(string topicPath, int32 count, int32 skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.GetSubscriptionsAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionsAsync : string * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;&gt;&#xA;override this.GetSubscriptionsAsync : string * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;&gt;" Usage="managementClient.GetSubscriptionsAsync (topicPath, count, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="skip" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">The topic path under which all the subscriptions need to be retrieved.</param>
        <param name="count">The number of subscriptions to fetch. Defaults to 100. Maximum value allowed is 100.</param>
        <param name="skip">The number of subscriptions to skip. Defaults to 0. Cannot be negative.</param>
        <param name="cancellationToken"></param>
        <summary>
            Retrieves the list of subscriptions present in the topic.
            </summary>
        <returns>
          <see cref="T:System.Collections.Generic.IList`1" /> containing list of subscriptions.</returns>
        <remarks>You can simulate pages of list of entities by manipulating <paramref name="count" /> and <paramref name="skip" />.
            skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">If the parameters are out of range.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTopicAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt; GetTopicAsync (string topicPath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.TopicDescription&gt; GetTopicAsync(string topicPath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.GetTopicAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTopicAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;&#xA;override this.GetTopicAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;" Usage="managementClient.GetTopicAsync (topicPath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">The path of the topic relative to service bus namespace.</param>
        <param name="cancellationToken"></param>
        <summary>
            Retrieves a topic from the service namespace.
            </summary>
        <returns>
          <see cref="T:Microsoft.Azure.ServiceBus.Management.TopicDescription" /> containing information about the topic.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <paramref name="topicPath" /> is null, white space empty or not in the right format.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of topic path is greater than 260.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Topic with this name does not exist.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTopicRuntimeInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicRuntimeInfo&gt; GetTopicRuntimeInfoAsync (string topicPath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.TopicRuntimeInfo&gt; GetTopicRuntimeInfoAsync(string topicPath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.GetTopicRuntimeInfoAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTopicRuntimeInfoAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicRuntimeInfo&gt;&#xA;override this.GetTopicRuntimeInfoAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicRuntimeInfo&gt;" Usage="managementClient.GetTopicRuntimeInfoAsync (topicPath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicRuntimeInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">The path of the topic relative to service bus namespace.</param>
        <param name="cancellationToken"></param>
        <summary>
            Retrieves the runtime information of a topic.
            </summary>
        <returns>
          <see cref="T:Microsoft.Azure.ServiceBus.Management.TopicRuntimeInfo" /> containing runtime information about the topic.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <paramref name="topicPath" /> is null, white space empty or not in the right format.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The length of topic path is greater than 260.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Topic with this name does not exist.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTopicsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;&gt; GetTopicsAsync (int count = 100, int skip = 0, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;&gt; GetTopicsAsync(int32 count, int32 skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.GetTopicsAsync(System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetTopicsAsync : int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;&gt;&#xA;override this.GetTopicsAsync : int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;&gt;" Usage="managementClient.GetTopicsAsync (count, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="skip" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="count">The number of topics to fetch. Defaults to 100. Maximum value allowed is 100.</param>
        <param name="skip">The number of topics to skip. Defaults to 0. Cannot be negative.</param>
        <param name="cancellationToken"></param>
        <summary>
            Retrieves the list of topics present in the namespace.
            </summary>
        <returns>
          <see cref="T:System.Collections.Generic.IList`1" /> containing list of topics.</returns>
        <remarks>You can simulate pages of list of entities by manipulating <paramref name="count" /> and <paramref name="skip" />.
            skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">If the parameters are out of range.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out. The timeout period is initialized through the <see cref="T:Microsoft.Azure.ServiceBus.ServiceBusConnection" /> class. You may need to increase the value of timeout to avoid this exception if the timeout value is relatively low.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or an unexpected exception occured.</exception>
      </Docs>
    </Member>
    <Member MemberName="QueueExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; QueueExistsAsync (string queuePath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; QueueExistsAsync(string queuePath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.QueueExistsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member QueueExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.QueueExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="managementClient.QueueExistsAsync (queuePath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queuePath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queuePath">Path of the queue entity to check.</param>
        <param name="cancellationToken"></param>
        <summary>
            Checks whether a given queue exists or not.
            </summary>
        <returns>True if queue exists, false otherwise.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Queue path provided is not valid.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="SubscriptionExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; SubscriptionExistsAsync (string topicPath, string subscriptionName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; SubscriptionExistsAsync(string topicPath, string subscriptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.SubscriptionExistsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SubscriptionExistsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.SubscriptionExistsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="managementClient.SubscriptionExistsAsync (topicPath, subscriptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="subscriptionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">Path of the topic.</param>
        <param name="subscriptionName">Name of the subscription to check.</param>
        <param name="cancellationToken"></param>
        <summary>
            Checks whether a given subscription exists or not.
            </summary>
        <returns>True if subscription exists, false otherwise.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">topic or subscription path provided is not valid.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="TopicExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; TopicExistsAsync (string topicPath, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TopicExistsAsync(string topicPath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.TopicExistsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member TopicExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.TopicExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="managementClient.TopicExistsAsync (topicPath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">Path of the topic entity to check.</param>
        <param name="cancellationToken"></param>
        <summary>
            Checks whether a given topic exists or not.
            </summary>
        <returns>True if topic exists, false otherwise.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">topic path provided is not valid.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt; UpdateQueueAsync (Microsoft.Azure.ServiceBus.Management.QueueDescription queueDescription, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.QueueDescription&gt; UpdateQueueAsync(class Microsoft.Azure.ServiceBus.Management.QueueDescription queueDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.UpdateQueueAsync(Microsoft.Azure.ServiceBus.Management.QueueDescription,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateQueueAsync : Microsoft.Azure.ServiceBus.Management.QueueDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;&#xA;override this.UpdateQueueAsync : Microsoft.Azure.ServiceBus.Management.QueueDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;" Usage="managementClient.UpdateQueueAsync (queueDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.QueueDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueDescription" Type="Microsoft.Azure.ServiceBus.Management.QueueDescription" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueDescription">A <see cref="T:Microsoft.Azure.ServiceBus.Management.QueueDescription" /> object describing the attributes with which the queue will be updated.</param>
        <param name="cancellationToken"></param>
        <summary>
            Updates an existing queue.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.ServiceBus.Management.QueueDescription" /> of the updated queue.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Queue descriptor is null.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Described queue was not found.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt; UpdateRuleAsync (string topicPath, string subscriptionName, Microsoft.Azure.ServiceBus.RuleDescription ruleDescription, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.RuleDescription&gt; UpdateRuleAsync(string topicPath, string subscriptionName, class Microsoft.Azure.ServiceBus.RuleDescription ruleDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.UpdateRuleAsync(System.String,System.String,Microsoft.Azure.ServiceBus.RuleDescription,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateRuleAsync : string * string * Microsoft.Azure.ServiceBus.RuleDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;&#xA;override this.UpdateRuleAsync : string * string * Microsoft.Azure.ServiceBus.RuleDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;" Usage="managementClient.UpdateRuleAsync (topicPath, subscriptionName, ruleDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.RuleDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicPath" Type="System.String" />
        <Parameter Name="subscriptionName" Type="System.String" />
        <Parameter Name="ruleDescription" Type="Microsoft.Azure.ServiceBus.RuleDescription" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicPath">Path of the topic.</param>
        <param name="subscriptionName">Name of the subscription.</param>
        <param name="ruleDescription">A <see cref="T:Microsoft.Azure.ServiceBus.RuleDescription" /> object describing the attributes with which the rule will be updated.</param>
        <param name="cancellationToken"></param>
        <summary>
            Updates an existing rule for a topic-subscription.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.ServiceBus.RuleDescription" /> of the updated rule.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">rule descriptor is null.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Described topic/subscription/rule was not found.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt; UpdateSubscriptionAsync (Microsoft.Azure.ServiceBus.Management.SubscriptionDescription subscriptionDescription, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt; UpdateSubscriptionAsync(class Microsoft.Azure.ServiceBus.Management.SubscriptionDescription subscriptionDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.UpdateSubscriptionAsync(Microsoft.Azure.ServiceBus.Management.SubscriptionDescription,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateSubscriptionAsync : Microsoft.Azure.ServiceBus.Management.SubscriptionDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;&#xA;override this.UpdateSubscriptionAsync : Microsoft.Azure.ServiceBus.Management.SubscriptionDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;" Usage="managementClient.UpdateSubscriptionAsync (subscriptionDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.SubscriptionDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionDescription" Type="Microsoft.Azure.ServiceBus.Management.SubscriptionDescription" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionDescription">A <see cref="T:Microsoft.Azure.ServiceBus.Management.SubscriptionDescription" /> object describing the attributes with which the subscription will be updated.</param>
        <param name="cancellationToken"></param>
        <summary>
            Updates an existing subscription under a topic.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.ServiceBus.Management.SubscriptionDescription" /> of the updated subscription.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">subscription descriptor is null.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Described subscription was not found.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateTopicAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt; UpdateTopicAsync (Microsoft.Azure.ServiceBus.Management.TopicDescription topicDescription, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.ServiceBus.Management.TopicDescription&gt; UpdateTopicAsync(class Microsoft.Azure.ServiceBus.Management.TopicDescription topicDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ServiceBus.Management.ManagementClient.UpdateTopicAsync(Microsoft.Azure.ServiceBus.Management.TopicDescription,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTopicAsync : Microsoft.Azure.ServiceBus.Management.TopicDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;&#xA;override this.UpdateTopicAsync : Microsoft.Azure.ServiceBus.Management.TopicDescription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;" Usage="managementClient.UpdateTopicAsync (topicDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ServiceBus</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.ServiceBus.Management.TopicDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topicDescription" Type="Microsoft.Azure.ServiceBus.Management.TopicDescription" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topicDescription">A <see cref="T:Microsoft.Azure.ServiceBus.Management.TopicDescription" /> object describing the attributes with which the topic will be updated.</param>
        <param name="cancellationToken"></param>
        <summary>
            Updates an existing topic.
            </summary>
        <returns>The <see cref="T:Microsoft.Azure.ServiceBus.Management.TopicDescription" /> of the updated topic.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Topic descriptor is null.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.MessagingEntityNotFoundException">Described topic was not found.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusTimeoutException">The operation times out.</exception>
        <exception cref="T:System.UnauthorizedAccessException">No sufficient permission to perform this operation. You should check to ensure that your <see cref="T:Microsoft.Azure.ServiceBus.Management.ManagementClient" /> has the correct <see cref="T:Microsoft.Azure.ServiceBus.Primitives.TokenProvider" /> credentials to perform this operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.QuotaExceededException">Either the specified size in the description is not supported or the maximum allowable quota has been reached. You must specify one of the supported size values, delete existing entities, or increase your quota size.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServerBusyException">The server is busy. You should wait before you retry the operation.</exception>
        <exception cref="T:Microsoft.Azure.ServiceBus.ServiceBusException">An internal error or unexpected exception occurs.</exception>
      </Docs>
    </Member>
  </Members>
</Type>