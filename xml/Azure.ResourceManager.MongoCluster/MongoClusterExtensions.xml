<Type Name="MongoClusterExtensions" FullName="Azure.ResourceManager.MongoCluster.MongoClusterExtensions">
  <TypeSignature Language="C#" Value="public static class MongoClusterExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MongoClusterExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MongoCluster.MongoClusterExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MongoClusterExtensions" />
  <TypeSignature Language="F#" Value="type MongoClusterExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.MongoCluster. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckMongoClusterNameAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt; CheckMongoClusterNameAvailability (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt; CheckMongoClusterNameAvailability(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.MongoClusterExtensions.CheckMongoClusterNameAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckMongoClusterNameAvailability (subscriptionResource As SubscriptionResource, location As AzureLocation, content As MongoClusterNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MongoClusterNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="static member CheckMongoClusterNameAvailability : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;" Usage="Azure.ResourceManager.MongoCluster.MongoClusterExtensions.CheckMongoClusterNameAvailability (subscriptionResource, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> The CheckAvailability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if mongo cluster name is available for use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/checkMongoClusterNameAvailability</description></item><item><term>Operation Id</term><description>MongoClusters_CheckMongoClusterNameAvailability</description></item><item><term>Default Api Version</term><description>2024-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterSubscriptionResource.CheckMongoClusterNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckMongoClusterNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;&gt; CheckMongoClusterNameAvailabilityAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;&gt; CheckMongoClusterNameAvailabilityAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.MongoClusterExtensions.CheckMongoClusterNameAvailabilityAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckMongoClusterNameAvailabilityAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, content As MongoClusterNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MongoClusterNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="static member CheckMongoClusterNameAvailabilityAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;&gt;" Usage="Azure.ResourceManager.MongoCluster.MongoClusterExtensions.CheckMongoClusterNameAvailabilityAsync (subscriptionResource, location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of the Azure region. </param>
        <param name="content"> The CheckAvailability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if mongo cluster name is available for use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/checkMongoClusterNameAvailability</description></item><item><term>Operation Id</term><description>MongoClusters_CheckMongoClusterNameAvailability</description></item><item><term>Default Api Version</term><description>2024-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterSubscriptionResource.CheckMongoClusterNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.MongoCluster.Models.MongoClusterNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMongoCluster">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt; GetMongoCluster (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string mongoClusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.MongoCluster.MongoClusterResource&gt; GetMongoCluster(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string mongoClusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoCluster(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMongoCluster (resourceGroupResource As ResourceGroupResource, mongoClusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MongoClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetMongoCluster : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;" Usage="Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoCluster (resourceGroupResource, mongoClusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="mongoClusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="mongoClusterName"> The name of the mongo cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about a mongo cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}</description></item><item><term>Operation Id</term><description>MongoCluster_Get</description></item><item><term>Default Api Version</term><description>2024-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterResourceGroupResource.GetMongoCluster(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="mongoClusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="mongoClusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMongoClusterAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;&gt; GetMongoClusterAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string mongoClusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;&gt; GetMongoClusterAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string mongoClusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClusterAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMongoClusterAsync (resourceGroupResource As ResourceGroupResource, mongoClusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MongoClusterResource))" />
      <MemberSignature Language="F#" Value="static member GetMongoClusterAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;&gt;" Usage="Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClusterAsync (resourceGroupResource, mongoClusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="mongoClusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="mongoClusterName"> The name of the mongo cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about a mongo cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}</description></item><item><term>Operation Id</term><description>MongoCluster_Get</description></item><item><term>Default Api Version</term><description>2024-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterResourceGroupResource.GetMongoClusterAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="mongoClusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="mongoClusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMongoClusterFirewallRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource GetMongoClusterFirewallRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource GetMongoClusterFirewallRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClusterFirewallRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMongoClusterFirewallRuleResource (client As ArmClient, id As ResourceIdentifier) As MongoClusterFirewallRuleResource" />
      <MemberSignature Language="F#" Value="static member GetMongoClusterFirewallRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource" Usage="Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClusterFirewallRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterArmClient.GetMongoClusterFirewallRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterFirewallRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMongoClusterPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource GetMongoClusterPrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource GetMongoClusterPrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClusterPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMongoClusterPrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As MongoClusterPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetMongoClusterPrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource" Usage="Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClusterPrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterArmClient.GetMongoClusterPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMongoClusterResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MongoCluster.MongoClusterResource GetMongoClusterResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.MongoCluster.MongoClusterResource GetMongoClusterResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClusterResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMongoClusterResource (client As ArmClient, id As ResourceIdentifier) As MongoClusterResource" />
      <MemberSignature Language="F#" Value="static member GetMongoClusterResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.MongoCluster.MongoClusterResource" Usage="Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClusterResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MongoCluster.MongoClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.MongoCluster.MongoClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterArmClient.GetMongoClusterResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMongoClusters">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MongoCluster.MongoClusterCollection GetMongoClusters (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.MongoCluster.MongoClusterCollection GetMongoClusters(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClusters(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMongoClusters (resourceGroupResource As ResourceGroupResource) As MongoClusterCollection" />
      <MemberSignature Language="F#" Value="static member GetMongoClusters : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.MongoCluster.MongoClusterCollection" Usage="Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClusters resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MongoCluster.MongoClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of MongoClusterResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterResourceGroupResource.GetMongoClusters" /> instead.</description></item></summary>
        <returns> An object representing collection of MongoClusterResources and their operations over a MongoClusterResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMongoClusters">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt; GetMongoClusters (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.MongoCluster.MongoClusterResource&gt; GetMongoClusters(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClusters(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMongoClusters (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MongoClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetMongoClusters : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;" Usage="Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClusters (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the mongo clusters in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/mongoClusters</description></item><item><term>Operation Id</term><description>MongoCluster_List</description></item><item><term>Default Api Version</term><description>2024-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterSubscriptionResource.GetMongoClusters(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMongoClustersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt; GetMongoClustersAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.MongoCluster.MongoClusterResource&gt; GetMongoClustersAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClustersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMongoClustersAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MongoClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetMongoClustersAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;" Usage="Azure.ResourceManager.MongoCluster.MongoClusterExtensions.GetMongoClustersAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoCluster</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.MongoCluster.MongoClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the mongo clusters in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/mongoClusters</description></item><item><term>Operation Id</term><description>MongoCluster_List</description></item><item><term>Default Api Version</term><description>2024-07-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.MongoCluster.Mocking.MockableMongoClusterSubscriptionResource.GetMongoClusters(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.MongoCluster.MongoClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
