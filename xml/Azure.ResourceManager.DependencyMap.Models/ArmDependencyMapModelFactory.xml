<Type Name="ArmDependencyMapModelFactory" FullName="Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmDependencyMapModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmDependencyMapModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmDependencyMapModelFactory" />
  <TypeSignature Language="F#" Value="type ArmDependencyMapModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DependencyMapData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DependencyMap.DependencyMapData DependencyMapData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState? dependencyMapProvisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DependencyMap.DependencyMapData DependencyMapData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState&gt; dependencyMapProvisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.DependencyMapData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DependencyMapData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional dependencyMapProvisioningState As Nullable(Of DependencyMapProvisioningState) = Nothing) As DependencyMapData" />
      <MemberSignature Language="F#" Value="static member DependencyMapData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState&gt; -&gt; Azure.ResourceManager.DependencyMap.DependencyMapData" Usage="Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.DependencyMapData (id, name, resourceType, systemData, tags, location, dependencyMapProvisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DependencyMap.DependencyMapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="dependencyMapProvisioningState" Type="System.Nullable&lt;Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="dependencyMapProvisioningState"> The resource-specific properties for this resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyMapDiscoverySourceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceData DependencyMapDiscoverySourceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.DependencyMap.Models.DependencyMapDiscoverySourceProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceData DependencyMapDiscoverySourceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DependencyMap.Models.DependencyMapDiscoverySourceProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.DependencyMapDiscoverySourceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.DependencyMap.Models.DependencyMapDiscoverySourceProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DependencyMapDiscoverySourceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional properties As DependencyMapDiscoverySourceProperties = Nothing) As DependencyMapDiscoverySourceData" />
      <MemberSignature Language="F#" Value="static member DependencyMapDiscoverySourceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.DependencyMap.Models.DependencyMapDiscoverySourceProperties -&gt; Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceData" Usage="Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.DependencyMapDiscoverySourceData (id, name, resourceType, systemData, tags, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="properties" Type="Azure.ResourceManager.DependencyMap.Models.DependencyMapDiscoverySourceProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="properties">
            The resource-specific properties for this resource.
            Please note <see cref="T:Azure.ResourceManager.DependencyMap.Models.DependencyMapDiscoverySourceProperties" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DependencyMap.Models.OffAzureDiscoverySourceProperties" />.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DependencyMap.DependencyMapDiscoverySourceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyMapDiscoverySourceProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DependencyMap.Models.DependencyMapDiscoverySourceProperties DependencyMapDiscoverySourceProperties (Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState? provisioningState = default, string sourceType = default, Azure.Core.ResourceIdentifier sourceId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DependencyMap.Models.DependencyMapDiscoverySourceProperties DependencyMapDiscoverySourceProperties(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState&gt; provisioningState, string sourceType, class Azure.Core.ResourceIdentifier sourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.DependencyMapDiscoverySourceProperties(System.Nullable{Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState},System.String,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DependencyMapDiscoverySourceProperties (Optional provisioningState As Nullable(Of DependencyMapProvisioningState) = Nothing, Optional sourceType As String = Nothing, Optional sourceId As ResourceIdentifier = Nothing) As DependencyMapDiscoverySourceProperties" />
      <MemberSignature Language="F#" Value="static member DependencyMapDiscoverySourceProperties : Nullable&lt;Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState&gt; * string * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DependencyMap.Models.DependencyMapDiscoverySourceProperties" Usage="Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.DependencyMapDiscoverySourceProperties (provisioningState, sourceType, sourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DependencyMap.Models.DependencyMapDiscoverySourceProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState&gt;" />
        <Parameter Name="sourceType" Type="System.String" />
        <Parameter Name="sourceId" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="provisioningState"> Provisioning state of Discovery Source resource. </param>
        <param name="sourceType"> Source type of Discovery Source resource. </param>
        <param name="sourceId"> Source ArmId of Discovery Source resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DependencyMap.Models.DependencyMapDiscoverySourceProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DependencyMap.Models.DependencyMapDiscoverySourceProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportDependenciesContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DependencyMap.Models.ExportDependenciesContent ExportDependenciesContent (Azure.Core.ResourceIdentifier focusedMachineId = default, Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter filters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DependencyMap.Models.ExportDependenciesContent ExportDependenciesContent(class Azure.Core.ResourceIdentifier focusedMachineId, class Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.ExportDependenciesContent(Azure.Core.ResourceIdentifier,Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExportDependenciesContent (Optional focusedMachineId As ResourceIdentifier = Nothing, Optional filters As DependencyMapVisualizationFilter = Nothing) As ExportDependenciesContent" />
      <MemberSignature Language="F#" Value="static member ExportDependenciesContent : Azure.Core.ResourceIdentifier * Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter -&gt; Azure.ResourceManager.DependencyMap.Models.ExportDependenciesContent" Usage="Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.ExportDependenciesContent (focusedMachineId, filters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DependencyMap.Models.ExportDependenciesContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusedMachineId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filters" Type="Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter" />
      </Parameters>
      <Docs>
        <param name="focusedMachineId"> Machine arm id. </param>
        <param name="filters"> Filters for ExportDependencies. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DependencyMap.Models.ExportDependenciesContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DependencyMap.Models.ExportDependenciesContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionsForProcessOnFocusedMachineContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DependencyMap.Models.GetConnectionsForProcessOnFocusedMachineContent GetConnectionsForProcessOnFocusedMachineContent (Azure.Core.ResourceIdentifier focusedMachineId = default, string processIdOnFocusedMachine = default, Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter filters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DependencyMap.Models.GetConnectionsForProcessOnFocusedMachineContent GetConnectionsForProcessOnFocusedMachineContent(class Azure.Core.ResourceIdentifier focusedMachineId, string processIdOnFocusedMachine, class Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.GetConnectionsForProcessOnFocusedMachineContent(Azure.Core.ResourceIdentifier,System.String,Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConnectionsForProcessOnFocusedMachineContent (Optional focusedMachineId As ResourceIdentifier = Nothing, Optional processIdOnFocusedMachine As String = Nothing, Optional filters As DependencyMapVisualizationFilter = Nothing) As GetConnectionsForProcessOnFocusedMachineContent" />
      <MemberSignature Language="F#" Value="static member GetConnectionsForProcessOnFocusedMachineContent : Azure.Core.ResourceIdentifier * string * Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter -&gt; Azure.ResourceManager.DependencyMap.Models.GetConnectionsForProcessOnFocusedMachineContent" Usage="Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.GetConnectionsForProcessOnFocusedMachineContent (focusedMachineId, processIdOnFocusedMachine, filters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DependencyMap.Models.GetConnectionsForProcessOnFocusedMachineContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusedMachineId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="processIdOnFocusedMachine" Type="System.String" />
        <Parameter Name="filters" Type="Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter" />
      </Parameters>
      <Docs>
        <param name="focusedMachineId"> Machine arm id. </param>
        <param name="processIdOnFocusedMachine"> Process id. </param>
        <param name="filters"> Filters for GetProcessNetworkConnections. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DependencyMap.Models.GetConnectionsForProcessOnFocusedMachineContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DependencyMap.Models.GetConnectionsForProcessOnFocusedMachineContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionsWithConnectedMachineForFocusedMachineContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DependencyMap.Models.GetConnectionsWithConnectedMachineForFocusedMachineContent GetConnectionsWithConnectedMachineForFocusedMachineContent (Azure.Core.ResourceIdentifier focusedMachineId = default, Azure.Core.ResourceIdentifier connectedMachineId = default, Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter filters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DependencyMap.Models.GetConnectionsWithConnectedMachineForFocusedMachineContent GetConnectionsWithConnectedMachineForFocusedMachineContent(class Azure.Core.ResourceIdentifier focusedMachineId, class Azure.Core.ResourceIdentifier connectedMachineId, class Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.GetConnectionsWithConnectedMachineForFocusedMachineContent(Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConnectionsWithConnectedMachineForFocusedMachineContent (Optional focusedMachineId As ResourceIdentifier = Nothing, Optional connectedMachineId As ResourceIdentifier = Nothing, Optional filters As DependencyMapVisualizationFilter = Nothing) As GetConnectionsWithConnectedMachineForFocusedMachineContent" />
      <MemberSignature Language="F#" Value="static member GetConnectionsWithConnectedMachineForFocusedMachineContent : Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter -&gt; Azure.ResourceManager.DependencyMap.Models.GetConnectionsWithConnectedMachineForFocusedMachineContent" Usage="Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.GetConnectionsWithConnectedMachineForFocusedMachineContent (focusedMachineId, connectedMachineId, filters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DependencyMap.Models.GetConnectionsWithConnectedMachineForFocusedMachineContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusedMachineId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectedMachineId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filters" Type="Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter" />
      </Parameters>
      <Docs>
        <param name="focusedMachineId"> Source machine arm id. </param>
        <param name="connectedMachineId"> Destination machine arm id. </param>
        <param name="filters"> Filters for GetNetworkConnectionsBetweenMachines. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DependencyMap.Models.GetConnectionsWithConnectedMachineForFocusedMachineContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DependencyMap.Models.GetConnectionsWithConnectedMachineForFocusedMachineContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDependencyViewForFocusedMachineContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DependencyMap.Models.GetDependencyViewForFocusedMachineContent GetDependencyViewForFocusedMachineContent (Azure.Core.ResourceIdentifier focusedMachineId = default, Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter filters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DependencyMap.Models.GetDependencyViewForFocusedMachineContent GetDependencyViewForFocusedMachineContent(class Azure.Core.ResourceIdentifier focusedMachineId, class Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.GetDependencyViewForFocusedMachineContent(Azure.Core.ResourceIdentifier,Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDependencyViewForFocusedMachineContent (Optional focusedMachineId As ResourceIdentifier = Nothing, Optional filters As DependencyMapVisualizationFilter = Nothing) As GetDependencyViewForFocusedMachineContent" />
      <MemberSignature Language="F#" Value="static member GetDependencyViewForFocusedMachineContent : Azure.Core.ResourceIdentifier * Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter -&gt; Azure.ResourceManager.DependencyMap.Models.GetDependencyViewForFocusedMachineContent" Usage="Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.GetDependencyViewForFocusedMachineContent (focusedMachineId, filters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DependencyMap.Models.GetDependencyViewForFocusedMachineContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusedMachineId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filters" Type="Azure.ResourceManager.DependencyMap.Models.DependencyMapVisualizationFilter" />
      </Parameters>
      <Docs>
        <param name="focusedMachineId"> Machine arm id. </param>
        <param name="filters"> Filters for GetSingleMachineDependencyView. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DependencyMap.Models.GetDependencyViewForFocusedMachineContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DependencyMap.Models.GetDependencyViewForFocusedMachineContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffAzureDiscoverySourceProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DependencyMap.Models.OffAzureDiscoverySourceProperties OffAzureDiscoverySourceProperties (Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState? provisioningState = default, Azure.Core.ResourceIdentifier sourceId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DependencyMap.Models.OffAzureDiscoverySourceProperties OffAzureDiscoverySourceProperties(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState&gt; provisioningState, class Azure.Core.ResourceIdentifier sourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.OffAzureDiscoverySourceProperties(System.Nullable{Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState},Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffAzureDiscoverySourceProperties (Optional provisioningState As Nullable(Of DependencyMapProvisioningState) = Nothing, Optional sourceId As ResourceIdentifier = Nothing) As OffAzureDiscoverySourceProperties" />
      <MemberSignature Language="F#" Value="static member OffAzureDiscoverySourceProperties : Nullable&lt;Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState&gt; * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DependencyMap.Models.OffAzureDiscoverySourceProperties" Usage="Azure.ResourceManager.DependencyMap.Models.ArmDependencyMapModelFactory.OffAzureDiscoverySourceProperties (provisioningState, sourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DependencyMap</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DependencyMap.Models.OffAzureDiscoverySourceProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.DependencyMap.Models.DependencyMapProvisioningState&gt;" />
        <Parameter Name="sourceId" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="provisioningState"> Provisioning state of Discovery Source resource. </param>
        <param name="sourceId"> Source ArmId of Discovery Source resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DependencyMap.Models.OffAzureDiscoverySourceProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DependencyMap.Models.OffAzureDiscoverySourceProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
