<Type Name="MockableAppComplianceAutomationTenantResource" FullName="Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource">
  <TypeSignature Language="C#" Value="public class MockableAppComplianceAutomationTenantResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableAppComplianceAutomationTenantResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableAppComplianceAutomationTenantResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableAppComplianceAutomationTenantResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to TenantResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableAppComplianceAutomationTenantResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAppComplianceReportNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt; CheckAppComplianceReportNameAvailability (Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt; CheckAppComplianceReportNameAvailability(class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.CheckAppComplianceReportNameAvailability(Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckAppComplianceReportNameAvailability (content As AppComplianceReportNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppComplianceReportNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckAppComplianceReportNameAvailability : Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&#xA;override this.CheckAppComplianceReportNameAvailability : Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;" Usage="mockableAppComplianceAutomationTenantResource.CheckAppComplianceReportNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if the given name is available for a report.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/checkNameAvailability</description></item><item><term>Operation Id</term><description>ProviderActions_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckAppComplianceReportNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt; CheckAppComplianceReportNameAvailabilityAsync (Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt; CheckAppComplianceReportNameAvailabilityAsync(class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.CheckAppComplianceReportNameAvailabilityAsync(Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckAppComplianceReportNameAvailabilityAsync (content As AppComplianceReportNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppComplianceReportNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckAppComplianceReportNameAvailabilityAsync : Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt;&#xA;override this.CheckAppComplianceReportNameAvailabilityAsync : Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt;" Usage="mockableAppComplianceAutomationTenantResource.CheckAppComplianceReportNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceReportNameAvailabilityContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check if the given name is available for a report.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/checkNameAvailability</description></item><item><term>Operation Id</term><description>ProviderActions_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReport">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt; GetAppComplianceReport (string reportName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt; GetAppComplianceReport(string reportName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetAppComplianceReport(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReport (reportName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppComplianceReportResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReport : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&#xA;override this.GetAppComplianceReport : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;" Usage="mockableAppComplianceAutomationTenantResource.GetAppComplianceReport (reportName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reportName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="reportName"> Report Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation report and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}</description></item><item><term>Operation Id</term><description>Report_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reportName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="reportName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReportAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt; GetAppComplianceReportAsync (string reportName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt; GetAppComplianceReportAsync(string reportName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetAppComplianceReportAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReportAsync (reportName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppComplianceReportResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReportAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt;&#xA;override this.GetAppComplianceReportAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt;" Usage="mockableAppComplianceAutomationTenantResource.GetAppComplianceReportAsync (reportName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reportName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="reportName"> Report Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation report and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}</description></item><item><term>Operation Id</term><description>Report_Get</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reportName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="reportName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppComplianceReports">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportCollection GetAppComplianceReports ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportCollection GetAppComplianceReports() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetAppComplianceReports" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppComplianceReports () As AppComplianceReportCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppComplianceReports : unit -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportCollection&#xA;override this.GetAppComplianceReports : unit -&gt; Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportCollection" Usage="mockableAppComplianceAutomationTenantResource.GetAppComplianceReports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.AppComplianceReportCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppComplianceReportResources in the TenantResource. </summary>
        <returns> An object representing collection of AppComplianceReportResources and their operations over a AppComplianceReportResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionCountProviderAction">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt; GetCollectionCountProviderAction (Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt; GetCollectionCountProviderAction(class Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetCollectionCountProviderAction(Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollectionCountProviderAction (content As ReportCollectionGetCountContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReportCollectionGetCountResult)" />
      <MemberSignature Language="F#" Value="abstract member GetCollectionCountProviderAction : Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;&#xA;override this.GetCollectionCountProviderAction : Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;" Usage="mockableAppComplianceAutomationTenantResource.GetCollectionCountProviderAction (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the count of reports.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/getCollectionCount</description></item><item><term>Operation Id</term><description>ProviderActions_GetCollectionCount</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionCountProviderActionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;&gt; GetCollectionCountProviderActionAsync (Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;&gt; GetCollectionCountProviderActionAsync(class Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetCollectionCountProviderActionAsync(Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollectionCountProviderActionAsync (content As ReportCollectionGetCountContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReportCollectionGetCountResult))" />
      <MemberSignature Language="F#" Value="abstract member GetCollectionCountProviderActionAsync : Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;&gt;&#xA;override this.GetCollectionCountProviderActionAsync : Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;&gt;" Usage="mockableAppComplianceAutomationTenantResource.GetCollectionCountProviderActionAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.ReportCollectionGetCountContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the count of reports.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/getCollectionCount</description></item><item><term>Operation Id</term><description>ProviderActions_GetCollectionCount</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInUseStorageAccountsProviderAction">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt; GetInUseStorageAccountsProviderAction (Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt; GetInUseStorageAccountsProviderAction(class Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetInUseStorageAccountsProviderAction(Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInUseStorageAccountsProviderAction (content As ReportListInUseStorageAccountsContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReportListInUseStorageAccountsResult)" />
      <MemberSignature Language="F#" Value="abstract member GetInUseStorageAccountsProviderAction : Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;&#xA;override this.GetInUseStorageAccountsProviderAction : Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;" Usage="mockableAppComplianceAutomationTenantResource.GetInUseStorageAccountsProviderAction (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the storage accounts which are in use by related reports
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/listInUseStorageAccounts</description></item><item><term>Operation Id</term><description>ProviderActions_ListInUseStorageAccounts</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInUseStorageAccountsProviderActionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;&gt; GetInUseStorageAccountsProviderActionAsync (Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;&gt; GetInUseStorageAccountsProviderActionAsync(class Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetInUseStorageAccountsProviderActionAsync(Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInUseStorageAccountsProviderActionAsync (content As ReportListInUseStorageAccountsContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReportListInUseStorageAccountsResult))" />
      <MemberSignature Language="F#" Value="abstract member GetInUseStorageAccountsProviderActionAsync : Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;&gt;&#xA;override this.GetInUseStorageAccountsProviderActionAsync : Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;&gt;" Usage="mockableAppComplianceAutomationTenantResource.GetInUseStorageAccountsProviderActionAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.ReportListInUseStorageAccountsContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the storage accounts which are in use by related reports
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/listInUseStorageAccounts</description></item><item><term>Operation Id</term><description>ProviderActions_ListInUseStorageAccounts</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOverviewStatusProviderAction">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt; GetOverviewStatusProviderAction (Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt; GetOverviewStatusProviderAction(class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetOverviewStatusProviderAction(Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOverviewStatusProviderAction (content As AppComplianceGetOverviewStatusContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppComplianceGetOverviewStatusResult)" />
      <MemberSignature Language="F#" Value="abstract member GetOverviewStatusProviderAction : Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;&#xA;override this.GetOverviewStatusProviderAction : Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;" Usage="mockableAppComplianceAutomationTenantResource.GetOverviewStatusProviderAction (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the resource overview status.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/getOverviewStatus</description></item><item><term>Operation Id</term><description>ProviderActions_GetOverviewStatus</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOverviewStatusProviderActionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;&gt; GetOverviewStatusProviderActionAsync (Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;&gt; GetOverviewStatusProviderActionAsync(class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetOverviewStatusProviderActionAsync(Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOverviewStatusProviderActionAsync (content As AppComplianceGetOverviewStatusContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppComplianceGetOverviewStatusResult))" />
      <MemberSignature Language="F#" Value="abstract member GetOverviewStatusProviderActionAsync : Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;&gt;&#xA;override this.GetOverviewStatusProviderActionAsync : Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;&gt;" Usage="mockableAppComplianceAutomationTenantResource.GetOverviewStatusProviderActionAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceGetOverviewStatusContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the resource overview status.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/getOverviewStatus</description></item><item><term>Operation Id</term><description>ProviderActions_GetOverviewStatus</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.ReportResource&gt; GetReportResource (string reportName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.ReportResource&gt; GetReportResource(string reportName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetReportResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportResource (reportName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReportResource)" />
      <MemberSignature Language="F#" Value="abstract member GetReportResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.ReportResource&gt;&#xA;override this.GetReportResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.ReportResource&gt;" Usage="mockableAppComplianceAutomationTenantResource.GetReportResource (reportName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.ReportResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reportName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reportName"> Report Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation report and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}</description></item><item><term>Operation Id</term><description>Report_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reportName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="reportName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.ReportResource&gt;&gt; GetReportResourceAsync (string reportName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppComplianceAutomation.ReportResource&gt;&gt; GetReportResourceAsync(string reportName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetReportResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportResourceAsync (reportName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReportResource))" />
      <MemberSignature Language="F#" Value="abstract member GetReportResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.ReportResource&gt;&gt;&#xA;override this.GetReportResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.ReportResource&gt;&gt;" Usage="mockableAppComplianceAutomationTenantResource.GetReportResourceAsync (reportName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppComplianceAutomation.ReportResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reportName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reportName"> Report Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the AppComplianceAutomation report and its properties.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/reports/{reportName}</description></item><item><term>Operation Id</term><description>Report_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reportName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="reportName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppComplianceAutomation.ReportResourceCollection GetReportResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppComplianceAutomation.ReportResourceCollection GetReportResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.GetReportResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportResources () As ReportResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetReportResources : unit -&gt; Azure.ResourceManager.AppComplianceAutomation.ReportResourceCollection&#xA;override this.GetReportResources : unit -&gt; Azure.ResourceManager.AppComplianceAutomation.ReportResourceCollection" Usage="mockableAppComplianceAutomationTenantResource.GetReportResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppComplianceAutomation.ReportResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ReportResources in the TenantResource. </summary>
        <returns> An object representing collection of ReportResources and their operations over a ReportResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnboardProviderAction">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt; OnboardProviderAction (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt; OnboardProviderAction(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.OnboardProviderAction(Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnboardProviderAction (waitUntil As WaitUntil, content As AppComplianceOnboardContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of AppComplianceOnboardResult)" />
      <MemberSignature Language="F#" Value="abstract member OnboardProviderAction : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;&#xA;override this.OnboardProviderAction : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;" Usage="mockableAppComplianceAutomationTenantResource.OnboardProviderAction (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Onboard given subscriptions to Microsoft.AppComplianceAutomation provider.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/onboard</description></item><item><term>Operation Id</term><description>ProviderActions_Onboard</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="OnboardProviderActionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;&gt; OnboardProviderActionAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;&gt; OnboardProviderActionAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.OnboardProviderActionAsync(Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnboardProviderActionAsync (waitUntil As WaitUntil, content As AppComplianceOnboardContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of AppComplianceOnboardResult))" />
      <MemberSignature Language="F#" Value="abstract member OnboardProviderActionAsync : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;&gt;&#xA;override this.OnboardProviderActionAsync : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;&gt;" Usage="mockableAppComplianceAutomationTenantResource.OnboardProviderActionAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.AppComplianceOnboardContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Onboard given subscriptions to Microsoft.AppComplianceAutomation provider.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/onboard</description></item><item><term>Operation Id</term><description>ProviderActions_Onboard</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerEvaluationProviderAction">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt; TriggerEvaluationProviderAction (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt; TriggerEvaluationProviderAction(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.TriggerEvaluationProviderAction(Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TriggerEvaluationProviderAction (waitUntil As WaitUntil, content As TriggerEvaluationContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of TriggerEvaluationResult)" />
      <MemberSignature Language="F#" Value="abstract member TriggerEvaluationProviderAction : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;&#xA;override this.TriggerEvaluationProviderAction : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;" Usage="mockableAppComplianceAutomationTenantResource.TriggerEvaluationProviderAction (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Trigger quick evaluation for the given subscriptions.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/triggerEvaluation</description></item><item><term>Operation Id</term><description>ProviderActions_TriggerEvaluation</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerEvaluationProviderActionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;&gt; TriggerEvaluationProviderActionAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;&gt; TriggerEvaluationProviderActionAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppComplianceAutomation.Mocking.MockableAppComplianceAutomationTenantResource.TriggerEvaluationProviderActionAsync(Azure.WaitUntil,Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TriggerEvaluationProviderActionAsync (waitUntil As WaitUntil, content As TriggerEvaluationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of TriggerEvaluationResult))" />
      <MemberSignature Language="F#" Value="abstract member TriggerEvaluationProviderActionAsync : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;&gt;&#xA;override this.TriggerEvaluationProviderActionAsync : Azure.WaitUntil * Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;&gt;" Usage="mockableAppComplianceAutomationTenantResource.TriggerEvaluationProviderActionAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppComplianceAutomation</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="content" Type="Azure.ResourceManager.AppComplianceAutomation.Models.TriggerEvaluationContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The content of the action request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Trigger quick evaluation for the given subscriptions.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AppComplianceAutomation/triggerEvaluation</description></item><item><term>Operation Id</term><description>ProviderActions_TriggerEvaluation</description></item><item><term>Default Api Version</term><description>2024-06-27</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
