<Type Name="TestScenario" FullName="System.Fabric.Testability.Scenario.TestScenario">
  <TypeSignature Language="C#" Value="public abstract class TestScenario : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TestScenario extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.Testability.Scenario.TestScenario" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Base class for TestScenarios which defines all the common methods and functionality.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TestScenario (System.Fabric.FabricClient fabricClient, System.Fabric.Testability.Scenario.TestScenarioParameters testScenarioParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Fabric.FabricClient fabricClient, class System.Fabric.Testability.Scenario.TestScenarioParameters testScenarioParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Testability.Scenario.TestScenario.#ctor(System.Fabric.FabricClient,System.Fabric.Testability.Scenario.TestScenarioParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fabricClient" Type="System.Fabric.FabricClient" />
        <Parameter Name="testScenarioParameters" Type="System.Fabric.Testability.Scenario.TestScenarioParameters" />
      </Parameters>
      <Docs>
        <param name="fabricClient">This API supports the Service Fabric platform and is not meant to be called from your code</param>
        <param name="testScenarioParameters">This API supports the Service Fabric platform and is not meant to be called from your code</param>
        <summary>
            This API supports the Service Fabric platform and is not meant to be called from your code
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Testability.Scenario.TestScenario.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This method will dispose the TestScenario.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ExecuteAsync (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ExecuteAsync(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Fabric.Testability.Scenario.TestScenario/&lt;ExecuteAsync&gt;d__20))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token">the Cancellation token for the async operation.</param>
        <summary>
            This method executes the test with the specified parameter set passed into the constructor.
            </summary>
        <returns>Returns a Task which represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Fabric.FabricValidationException">If any service does not stabilize within the specified timeout.</exception>
      </Docs>
    </Member>
    <Member MemberName="FabricClient">
      <MemberSignature Language="C#" Value="protected System.Fabric.FabricClient FabricClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.FabricClient FabricClient" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Testability.Scenario.TestScenario.FabricClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.FabricClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This API supports the Service Fabric platform and is not meant to be called from your code
            </summary>
        <value>
            Returns <see cref="T:System.Fabric.FabricClient" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElapsedTime">
      <MemberSignature Language="C#" Value="protected TimeSpan GetElapsedTime ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.TimeSpan GetElapsedTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This API supports the Service Fabric platform and is not meant to be called from your code
            </summary>
        <returns>This API supports the Service Fabric platform and is not meant to be called from your code</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleTaskComplete">
      <MemberSignature Language="C#" Value="protected void HandleTaskComplete (System.Threading.Tasks.Task t, string actionId, string actionName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void HandleTaskComplete(class System.Threading.Tasks.Task t, string actionId, string actionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete(System.Threading.Tasks.Task,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Threading.Tasks.Task" />
        <Parameter Name="actionId" Type="System.String" />
        <Parameter Name="actionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t">This API supports the Service Fabric platform and is not meant to be called from your code</param>
        <param name="actionId">This API supports the Service Fabric platform and is not meant to be called from your code</param>
        <param name="actionName">This API supports the Service Fabric platform and is not meant to be called from your code</param>
        <summary>
            This API supports the Service Fabric platform and is not meant to be called from your code
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDispose">
      <MemberSignature Language="C#" Value="protected abstract void OnDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Testability.Scenario.TestScenario.OnDispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">This API supports the Service Fabric platform and is not meant to be called from your code</param>
        <summary>
            This API supports the Service Fabric platform and is not meant to be called from your code
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecuteAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task OnExecuteAsync (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnExecuteAsync(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token">This API supports the Service Fabric platform and is not meant to be called from your code</param>
        <summary>
            This API supports the Service Fabric platform and is not meant to be called from your code
            </summary>
        <returns>A task representing the execution of the TestScenario.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ProgressChangedEventHandler ProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public class System.ComponentModel.ProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="F:System.Fabric.Testability.Scenario.TestScenario.ProgressChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event handler which exposes the current progress of the test. When handled it gives you the ProgressChangedEventArgs
            which gives out a total % of the test which has already completed and the last operation (string) that was performed 
            which can be useful for logging.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="protected void ReportProgress (string progressReport);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReportProgress(string progressReport) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progressReport" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progressReport">This API supports the Service Fabric platform and is not meant to be called from your code</param>
        <summary>
            This API supports the Service Fabric platform and is not meant to be called from your code
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportProgress">
      <MemberSignature Language="C#" Value="protected void ReportProgress (string format, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReportProgress(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">This API supports the Service Fabric platform and is not meant to be called from your code</param>
        <param name="args">This API supports the Service Fabric platform and is not meant to be called from your code</param>
        <summary>
            This API supports the Service Fabric platform and is not meant to be called from your code
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScenarioParameters">
      <MemberSignature Language="C#" Value="protected System.Fabric.Testability.Scenario.TestScenarioParameters ScenarioParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Fabric.Testability.Scenario.TestScenarioParameters ScenarioParameters" />
      <MemberSignature Language="DocId" Value="P:System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Fabric.Testability.Scenario.TestScenarioParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This API supports the Service Fabric platform and is not meant to be called from your code
            </summary>
        <value>
            Returns <see cref="T:System.Fabric.Testability.Scenario.TestScenarioParameters" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateScenarioAtExitAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task ValidateScenarioAtExitAsync (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task ValidateScenarioAtExitAsync(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>System.Fabric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token">This API supports the Service Fabric platform and is not meant to be called from your code</param>
        <summary>
            This API supports the Service Fabric platform and is not meant to be called from your code
            </summary>
        <returns>A task representing the validation operation - implemented by the derived TestScenario - that needs to run when OnExecuteAsync has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>