<Type Name="SignalRUpstreamTemplate" FullName="Azure.Provisioning.SignalR.SignalRUpstreamTemplate">
  <TypeSignature Language="C#" Value="public class SignalRUpstreamTemplate : Azure.Provisioning.Primitives.ProvisionableConstruct" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignalRUpstreamTemplate extends Azure.Provisioning.Primitives.ProvisionableConstruct" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.SignalR.SignalRUpstreamTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class SignalRUpstreamTemplate&#xA;Inherits ProvisionableConstruct" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type SignalRUpstreamTemplate = class&#xA;    inherit ProvisionableConstruct" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class SignalRUpstreamTemplate : Azure.Provisioning.Primitives.ProvisioningConstruct" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignalRUpstreamTemplate extends Azure.Provisioning.Primitives.ProvisioningConstruct" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class SignalRUpstreamTemplate&#xA;Inherits ProvisioningConstruct" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type SignalRUpstreamTemplate = class&#xA;    inherit ProvisioningConstruct" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning.SignalR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Provisioning.Primitives.ProvisionableConstruct</BaseTypeName>
    <BaseTypeName FrameworkAlternate="azure-dotnet-preview">Azure.Provisioning.Primitives.ProvisioningConstruct</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Upstream template item settings. It defines the Upstream URL of the
            incoming requests.             The template defines the pattern of the
            event, the hub or the category of the incoming request that matches
            current URL template.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignalRUpstreamTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.SignalR.SignalRUpstreamTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.SignalR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new SignalRUpstreamTemplate.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Auth">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.SignalR.SignalRUpstreamAuthSettings Auth { get; set; }" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.SignalR.SignalRUpstreamAuthSettings Auth" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.SignalR.SignalRUpstreamTemplate.Auth" />
      <MemberSignature Language="VB.NET" Value="Public Property Auth As SignalRUpstreamAuthSettings" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="member this.Auth : Azure.Provisioning.SignalR.SignalRUpstreamAuthSettings with get, set" Usage="Azure.Provisioning.SignalR.SignalRUpstreamTemplate.Auth" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;Azure.Provisioning.SignalR.SignalRUpstreamAuthSettings&gt; Auth { get; set; }" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;class Azure.Provisioning.SignalR.SignalRUpstreamAuthSettings&gt; Auth" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Property Auth As BicepValue(Of SignalRUpstreamAuthSettings)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="member this.Auth : Azure.Provisioning.BicepValue&lt;Azure.Provisioning.SignalR.SignalRUpstreamAuthSettings&gt; with get, set" Usage="Azure.Provisioning.SignalR.SignalRUpstreamTemplate.Auth" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.SignalR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Provisioning.SignalR.SignalRUpstreamAuthSettings</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Provisioning.BicepValue&lt;Azure.Provisioning.SignalR.SignalRUpstreamAuthSettings&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Upstream auth settings. If not set, no auth is used for upstream
            messages.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryPattern">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;string&gt; CategoryPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;string&gt; CategoryPattern" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.SignalR.SignalRUpstreamTemplate.CategoryPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryPattern As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="member this.CategoryPattern : Azure.Provisioning.BicepValue&lt;string&gt; with get, set" Usage="Azure.Provisioning.SignalR.SignalRUpstreamTemplate.CategoryPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.SignalR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the matching pattern for category names. If not set, it
            matches any category.             There are 3 kind of patterns
            supported:                 1. "*", it to matches any
            category name.                 2. Combine multiple categories with
            ",", for example "connections,messages", it
            matches category "connections" and "messages".
            3. The single category name, for example,
            "connections", it matches the category
            "connections".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineProvisionableProperties">
      <MemberSignature Language="C#" Value="protected override void DefineProvisionableProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DefineProvisionableProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.SignalR.SignalRUpstreamTemplate.DefineProvisionableProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DefineProvisionableProperties ()" />
      <MemberSignature Language="F#" Value="override this.DefineProvisionableProperties : unit -&gt; unit" Usage="signalRUpstreamTemplate.DefineProvisionableProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.SignalR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Define all the provisionable properties of SignalRUpstreamTemplate.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventPattern">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;string&gt; EventPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;string&gt; EventPattern" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.SignalR.SignalRUpstreamTemplate.EventPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property EventPattern As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="member this.EventPattern : Azure.Provisioning.BicepValue&lt;string&gt; with get, set" Usage="Azure.Provisioning.SignalR.SignalRUpstreamTemplate.EventPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.SignalR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the matching pattern for event names. If not set, it
            matches any event.             There are 3 kind of patterns supported:
            1. "*", it to matches any event name.
            2. Combine multiple events with ",", for
            example "connect,disconnect", it matches event
            "connect" and "disconnect".                 3. The
            single event name, for example, "connect", it matches
            "connect".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HubPattern">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;string&gt; HubPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;string&gt; HubPattern" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.SignalR.SignalRUpstreamTemplate.HubPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property HubPattern As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="member this.HubPattern : Azure.Provisioning.BicepValue&lt;string&gt; with get, set" Usage="Azure.Provisioning.SignalR.SignalRUpstreamTemplate.HubPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.SignalR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the matching pattern for hub names. If not set, it matches
            any hub.             There are 3 kind of patterns supported:
            1. "*", it to matches any hub name.
            2. Combine multiple hubs with ",", for
            example "hub1,hub2", it matches "hub1" and
            "hub2".                 3. The single hub name, for example,
            "hub1", it matches "hub1".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlTemplate">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;string&gt; UrlTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;string&gt; UrlTemplate" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.SignalR.SignalRUpstreamTemplate.UrlTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property UrlTemplate As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="member this.UrlTemplate : Azure.Provisioning.BicepValue&lt;string&gt; with get, set" Usage="Azure.Provisioning.SignalR.SignalRUpstreamTemplate.UrlTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.SignalR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Upstream URL template. You can use 3 predefined
            parameters {hub}, {category} {event} inside the template, the value of
            the Upstream URL is dynamically calculated when the client request
            comes in.             For example, if the urlTemplate is
            `http://example.com/{hub}/api/{event}`, with a client request from hub
            `chat` connects, it will first POST to this URL:
            `http://example.com/chat/api/connect`.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
