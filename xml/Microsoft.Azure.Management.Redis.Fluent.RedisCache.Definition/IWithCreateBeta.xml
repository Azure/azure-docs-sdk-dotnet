<Type Name="IWithCreateBeta" FullName="Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreateBeta">
  <TypeSignature Language="C#" Value="public interface IWithCreateBeta : Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWithCreateBeta implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreateBeta" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWithCreateBeta&#xA;Implements IBeta" />
  <TypeSignature Language="F#" Value="type IWithCreateBeta = interface&#xA;    interface IBeta" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A Redis Cache definition with sufficient inputs to create a new
            Redis Cache in the cloud, but exposing additional optional inputs to
            specify.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WithFirewallRule">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate WithFirewallRule (Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate WithFirewallRule(class Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreateBeta.WithFirewallRule(Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithFirewallRule (rule As IRedisFirewallRule) As IWithCreate" />
      <MemberSignature Language="F#" Value="abstract member WithFirewallRule : Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule -&gt; Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate" Usage="iWithCreateBeta.WithFirewallRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="Microsoft.Azure.Management.Redis.Fluent.Models.IRedisFirewallRule" />
      </Parameters>
      <Docs>
        <param name="rule">Firewall rule that specifies name, lowest and highest IP address included in the range of permitted IP addresses.</param>
        <summary>
            Creates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of Redis Cache definition.</return>
      </Docs>
    </Member>
    <Member MemberName="WithFirewallRule">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate WithFirewallRule (string name, string lowestIp, string highestIp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate WithFirewallRule(string name, string lowestIp, string highestIp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreateBeta.WithFirewallRule(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithFirewallRule (name As String, lowestIp As String, highestIp As String) As IWithCreate" />
      <MemberSignature Language="F#" Value="abstract member WithFirewallRule : string * string * string -&gt; Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate" Usage="iWithCreateBeta.WithFirewallRule (name, lowestIp, highestIp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lowestIp" Type="System.String" />
        <Parameter Name="highestIp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Name of the rule.</param>
        <param name="lowestIp">Lowest IP address included in the range.</param>
        <param name="highestIp">Highest IP address included in the range.</param>
        <summary>
            Creates Redis cache firewall rule with range of IP addresses permitted to connect to the cache.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of Redis Cache definition.</return>
      </Docs>
    </Member>
    <Member MemberName="WithMinimumTlsVersion">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate WithMinimumTlsVersion (Microsoft.Azure.Management.Redis.Fluent.Models.TlsVersion tlsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate WithMinimumTlsVersion(class Microsoft.Azure.Management.Redis.Fluent.Models.TlsVersion tlsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreateBeta.WithMinimumTlsVersion(Microsoft.Azure.Management.Redis.Fluent.Models.TlsVersion)" />
      <MemberSignature Language="F#" Value="abstract member WithMinimumTlsVersion : Microsoft.Azure.Management.Redis.Fluent.Models.TlsVersion -&gt; Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate" Usage="iWithCreateBeta.WithMinimumTlsVersion tlsVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Redis.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tlsVersion" Type="Microsoft.Azure.Management.Redis.Fluent.Models.TlsVersion" />
      </Parameters>
      <Docs>
        <param name="tlsVersion">Minimum TLS version.</param>
        <summary>
            Requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2').
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of Redis Cache definition.</return>
      </Docs>
    </Member>
  </Members>
</Type>