<Type Name="Tenant" FullName="Azure.Provisioning.ResourceManager.Tenant">
  <TypeSignature Language="C#" Value="public class Tenant : Azure.Provisioning.Resource&lt;Azure.ResourceManager.Resources.TenantData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Tenant extends Azure.Provisioning.Resource`1&lt;class Azure.ResourceManager.Resources.TenantData&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.ResourceManager.Tenant" />
  <TypeSignature Language="VB.NET" Value="Public Class Tenant&#xA;Inherits Resource(Of TenantData)" />
  <TypeSignature Language="F#" Value="type Tenant = class&#xA;    inherit Resource&lt;TenantData&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
    <AssemblyVersion>0.2.0.0</AssemblyVersion>
    <AssemblyVersion>0.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Provisioning.Resource&lt;Azure.ResourceManager.Resources.TenantData&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">Azure.ResourceManager.Resources.TenantData</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Tenant resource.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tenant (Azure.Provisioning.IConstruct scope, Guid? tenantId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Provisioning.IConstruct scope, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; tenantId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.ResourceManager.Tenant.#ctor(Azure.Provisioning.IConstruct,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As IConstruct, Optional tenantId As Nullable(Of Guid) = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Provisioning.ResourceManager.Tenant : Azure.Provisioning.IConstruct * Nullable&lt;Guid&gt; -&gt; Azure.Provisioning.ResourceManager.Tenant" Usage="new Azure.Provisioning.ResourceManager.Tenant (scope, tenantId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Provisioning.IConstruct" />
        <Parameter Name="tenantId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="scope">The scope the tenant belongs to.</param>
        <param name="tenantId">The tenant id.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Provisioning.ResourceManager.Tenant" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureName">
      <MemberSignature Language="C#" Value="protected override string GetAzureName (Azure.Provisioning.IConstruct scope, string? resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetAzureName(class Azure.Provisioning.IConstruct scope, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.ResourceManager.Tenant.GetAzureName(Azure.Provisioning.IConstruct,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAzureName (scope As IConstruct, resourceName As String) As String" />
      <MemberSignature Language="F#" Value="override this.GetAzureName : Azure.Provisioning.IConstruct * string -&gt; string" Usage="tenant.GetAzureName (scope, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Provisioning.IConstruct" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">The scope.</param>
        <param name="resourceName">The resource name.</param>
        <summary>
            Validate and sanitize the resource name.
            </summary>
        <returns>Sanitized resource name.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">If the resource name violates rules that cannot be sanitized.</exception>
      </Docs>
    </Member>
    <Member MemberName="TenantIdExpression">
      <MemberSignature Language="C#" Value="public const string TenantIdExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string TenantIdExpression" />
      <MemberSignature Language="DocId" Value="F:Azure.Provisioning.ResourceManager.Tenant.TenantIdExpression" />
      <MemberSignature Language="VB.NET" Value="Public Const TenantIdExpression As String " />
      <MemberSignature Language="F#" Value="val mutable TenantIdExpression : string" Usage="Azure.Provisioning.ResourceManager.Tenant.TenantIdExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>0.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The tenant id Bicep expression.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
