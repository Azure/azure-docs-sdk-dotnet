<Type Name="CallingServerModelFactory" FullName="Azure.Communication.CallingServer.CallingServerModelFactory">
  <TypeSignature Language="C#" Value="public static class CallingServerModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CallingServerModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.CallingServer.CallingServerModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class CallingServerModelFactory" />
  <TypeSignature Language="F#" Value="type CallingServerModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for read-only models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddParticipantResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallingServer.AddParticipantResult AddParticipantResult (string participantId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallingServer.AddParticipantResult AddParticipantResult(string participantId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerModelFactory.AddParticipantResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddParticipantResult (Optional participantId As String = Nothing) As AddParticipantResult" />
      <MemberSignature Language="F#" Value="static member AddParticipantResult : string -&gt; Azure.Communication.CallingServer.AddParticipantResult" Usage="Azure.Communication.CallingServer.CallingServerModelFactory.AddParticipantResult participantId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.AddParticipantResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participantId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="participantId"> The id of the added participant. </param>
        <summary> Initializes a new instance of AddParticipantResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallingServer.AddParticipantResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParticipantResultEvent">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallingServer.AddParticipantResultEvent AddParticipantResultEvent (Azure.Communication.CallingServer.ResultInfo resultInfo = default, string operationContext = default, Azure.Communication.CallingServer.OperationStatus status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallingServer.AddParticipantResultEvent AddParticipantResultEvent(class Azure.Communication.CallingServer.ResultInfo resultInfo, string operationContext, valuetype Azure.Communication.CallingServer.OperationStatus status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerModelFactory.AddParticipantResultEvent(Azure.Communication.CallingServer.ResultInfo,System.String,Azure.Communication.CallingServer.OperationStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddParticipantResultEvent (Optional resultInfo As ResultInfo = Nothing, Optional operationContext As String = Nothing, Optional status As OperationStatus = Nothing) As AddParticipantResultEvent" />
      <MemberSignature Language="F#" Value="static member AddParticipantResultEvent : Azure.Communication.CallingServer.ResultInfo * string * Azure.Communication.CallingServer.OperationStatus -&gt; Azure.Communication.CallingServer.AddParticipantResultEvent" Usage="Azure.Communication.CallingServer.CallingServerModelFactory.AddParticipantResultEvent (resultInfo, operationContext, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.AddParticipantResultEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultInfo" Type="Azure.Communication.CallingServer.ResultInfo" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="status" Type="Azure.Communication.CallingServer.OperationStatus" />
      </Parameters>
      <Docs>
        <param name="resultInfo"> The result details. </param>
        <param name="operationContext"> The operation context. </param>
        <param name="status"> The status of the operation. </param>
        <summary> Initializes a new instance of AddParticipantResultEvent. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallingServer.AddParticipantResultEvent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallConnectionStateChangedEvent">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallingServer.CallConnectionStateChangedEvent CallConnectionStateChangedEvent (string serverCallId = default, string callConnectionId = default, Azure.Communication.CallingServer.CallConnectionState callConnectionState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallingServer.CallConnectionStateChangedEvent CallConnectionStateChangedEvent(string serverCallId, string callConnectionId, valuetype Azure.Communication.CallingServer.CallConnectionState callConnectionState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerModelFactory.CallConnectionStateChangedEvent(System.String,System.String,Azure.Communication.CallingServer.CallConnectionState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallConnectionStateChangedEvent (Optional serverCallId As String = Nothing, Optional callConnectionId As String = Nothing, Optional callConnectionState As CallConnectionState = Nothing) As CallConnectionStateChangedEvent" />
      <MemberSignature Language="F#" Value="static member CallConnectionStateChangedEvent : string * string * Azure.Communication.CallingServer.CallConnectionState -&gt; Azure.Communication.CallingServer.CallConnectionStateChangedEvent" Usage="Azure.Communication.CallingServer.CallingServerModelFactory.CallConnectionStateChangedEvent (serverCallId, callConnectionId, callConnectionState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.CallConnectionStateChangedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="callConnectionState" Type="Azure.Communication.CallingServer.CallConnectionState" />
      </Parameters>
      <Docs>
        <param name="serverCallId"> The server call.id. </param>
        <param name="callConnectionId"> The call connection id. </param>
        <param name="callConnectionState"> The call connection state. </param>
        <summary> Initializes a new instance of CallConnectionStateChangedEvent. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallingServer.CallConnectionStateChangedEvent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallRecordingProperties">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallingServer.CallRecordingProperties CallRecordingProperties (Azure.Communication.CallingServer.CallRecordingState recordingState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallingServer.CallRecordingProperties CallRecordingProperties(valuetype Azure.Communication.CallingServer.CallRecordingState recordingState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerModelFactory.CallRecordingProperties(Azure.Communication.CallingServer.CallRecordingState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallRecordingProperties (Optional recordingState As CallRecordingState = Nothing) As CallRecordingProperties" />
      <MemberSignature Language="F#" Value="static member CallRecordingProperties : Azure.Communication.CallingServer.CallRecordingState -&gt; Azure.Communication.CallingServer.CallRecordingProperties" Usage="Azure.Communication.CallingServer.CallingServerModelFactory.CallRecordingProperties recordingState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.CallRecordingProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingState" Type="Azure.Communication.CallingServer.CallRecordingState" />
      </Parameters>
      <Docs>
        <param name="recordingState"> The state of the recording. </param>
        <summary> Initializes a new instance of CallRecordingProperties. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallingServer.CallRecordingProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallRecordingStateChangeEvent">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallingServer.CallRecordingStateChangeEvent CallRecordingStateChangeEvent (string recordingId = default, Azure.Communication.CallingServer.CallRecordingState state = default, DateTimeOffset startDateTime = default, string serverCallId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallingServer.CallRecordingStateChangeEvent CallRecordingStateChangeEvent(string recordingId, valuetype Azure.Communication.CallingServer.CallRecordingState state, valuetype System.DateTimeOffset startDateTime, string serverCallId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerModelFactory.CallRecordingStateChangeEvent(System.String,Azure.Communication.CallingServer.CallRecordingState,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallRecordingStateChangeEvent (Optional recordingId As String = Nothing, Optional state As CallRecordingState = Nothing, Optional startDateTime As DateTimeOffset = Nothing, Optional serverCallId As String = Nothing) As CallRecordingStateChangeEvent" />
      <MemberSignature Language="F#" Value="static member CallRecordingStateChangeEvent : string * Azure.Communication.CallingServer.CallRecordingState * DateTimeOffset * string -&gt; Azure.Communication.CallingServer.CallRecordingStateChangeEvent" Usage="Azure.Communication.CallingServer.CallingServerModelFactory.CallRecordingStateChangeEvent (recordingId, state, startDateTime, serverCallId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.CallRecordingStateChangeEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="state" Type="Azure.Communication.CallingServer.CallRecordingState" />
        <Parameter Name="startDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="serverCallId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="recordingId"> The call recording id. </param>
        <param name="state"> The state of the recording. </param>
        <param name="startDateTime"> The time of the recording started. </param>
        <param name="serverCallId"> The server call.id. </param>
        <summary> Initializes a new instance of CallRecordingStateChangeEvent. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallingServer.CallRecordingStateChangeEvent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAllMediaOperationsResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallingServer.CancelAllMediaOperationsResult CancelAllMediaOperationsResult (string operationId = default, Azure.Communication.CallingServer.OperationStatus status = default, string operationContext = default, Azure.Communication.CallingServer.ResultInfo resultInfo = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallingServer.CancelAllMediaOperationsResult CancelAllMediaOperationsResult(string operationId, valuetype Azure.Communication.CallingServer.OperationStatus status, string operationContext, class Azure.Communication.CallingServer.ResultInfo resultInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerModelFactory.CancelAllMediaOperationsResult(System.String,Azure.Communication.CallingServer.OperationStatus,System.String,Azure.Communication.CallingServer.ResultInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CancelAllMediaOperationsResult (Optional operationId As String = Nothing, Optional status As OperationStatus = Nothing, Optional operationContext As String = Nothing, Optional resultInfo As ResultInfo = Nothing) As CancelAllMediaOperationsResult" />
      <MemberSignature Language="F#" Value="static member CancelAllMediaOperationsResult : string * Azure.Communication.CallingServer.OperationStatus * string * Azure.Communication.CallingServer.ResultInfo -&gt; Azure.Communication.CallingServer.CancelAllMediaOperationsResult" Usage="Azure.Communication.CallingServer.CallingServerModelFactory.CancelAllMediaOperationsResult (operationId, status, operationContext, resultInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.CancelAllMediaOperationsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="status" Type="Azure.Communication.CallingServer.OperationStatus" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInfo" Type="Azure.Communication.CallingServer.ResultInfo" />
      </Parameters>
      <Docs>
        <param name="operationId"> The operation id. </param>
        <param name="status"> The status of the operation. </param>
        <param name="operationContext"> The operation context provided by client. </param>
        <param name="resultInfo"> The result info for the operation. </param>
        <summary> Initializes a new instance of CancelAllMediaOperationsResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallingServer.CancelAllMediaOperationsResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayAudioResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallingServer.PlayAudioResult PlayAudioResult (string operationId = default, Azure.Communication.CallingServer.OperationStatus status = default, string operationContext = default, Azure.Communication.CallingServer.ResultInfo resultInfo = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallingServer.PlayAudioResult PlayAudioResult(string operationId, valuetype Azure.Communication.CallingServer.OperationStatus status, string operationContext, class Azure.Communication.CallingServer.ResultInfo resultInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerModelFactory.PlayAudioResult(System.String,Azure.Communication.CallingServer.OperationStatus,System.String,Azure.Communication.CallingServer.ResultInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlayAudioResult (Optional operationId As String = Nothing, Optional status As OperationStatus = Nothing, Optional operationContext As String = Nothing, Optional resultInfo As ResultInfo = Nothing) As PlayAudioResult" />
      <MemberSignature Language="F#" Value="static member PlayAudioResult : string * Azure.Communication.CallingServer.OperationStatus * string * Azure.Communication.CallingServer.ResultInfo -&gt; Azure.Communication.CallingServer.PlayAudioResult" Usage="Azure.Communication.CallingServer.CallingServerModelFactory.PlayAudioResult (operationId, status, operationContext, resultInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.PlayAudioResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="status" Type="Azure.Communication.CallingServer.OperationStatus" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInfo" Type="Azure.Communication.CallingServer.ResultInfo" />
      </Parameters>
      <Docs>
        <param name="operationId"> The operation id. </param>
        <param name="status"> The status of the operation. </param>
        <param name="operationContext"> The operation context provided by client. </param>
        <param name="resultInfo"> The result info for the operation. </param>
        <summary> Initializes a new instance of PlayAudioResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallingServer.PlayAudioResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayAudioResultEvent">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallingServer.PlayAudioResultEvent PlayAudioResultEvent (Azure.Communication.CallingServer.ResultInfo resultInfo = default, string operationContext = default, Azure.Communication.CallingServer.OperationStatus status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallingServer.PlayAudioResultEvent PlayAudioResultEvent(class Azure.Communication.CallingServer.ResultInfo resultInfo, string operationContext, valuetype Azure.Communication.CallingServer.OperationStatus status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerModelFactory.PlayAudioResultEvent(Azure.Communication.CallingServer.ResultInfo,System.String,Azure.Communication.CallingServer.OperationStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlayAudioResultEvent (Optional resultInfo As ResultInfo = Nothing, Optional operationContext As String = Nothing, Optional status As OperationStatus = Nothing) As PlayAudioResultEvent" />
      <MemberSignature Language="F#" Value="static member PlayAudioResultEvent : Azure.Communication.CallingServer.ResultInfo * string * Azure.Communication.CallingServer.OperationStatus -&gt; Azure.Communication.CallingServer.PlayAudioResultEvent" Usage="Azure.Communication.CallingServer.CallingServerModelFactory.PlayAudioResultEvent (resultInfo, operationContext, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.PlayAudioResultEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultInfo" Type="Azure.Communication.CallingServer.ResultInfo" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="status" Type="Azure.Communication.CallingServer.OperationStatus" />
      </Parameters>
      <Docs>
        <param name="resultInfo"> The result details. </param>
        <param name="operationContext"> The operation context. </param>
        <param name="status"> The status of the operation. </param>
        <summary> Initializes a new instance of PlayAudioResultEvent. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallingServer.PlayAudioResultEvent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultInfo">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallingServer.ResultInfo ResultInfo (int code = 0, int subcode = 0, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallingServer.ResultInfo ResultInfo(int32 code, int32 subcode, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerModelFactory.ResultInfo(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResultInfo (Optional code As Integer = 0, Optional subcode As Integer = 0, Optional message As String = Nothing) As ResultInfo" />
      <MemberSignature Language="F#" Value="static member ResultInfo : int * int * string -&gt; Azure.Communication.CallingServer.ResultInfo" Usage="Azure.Communication.CallingServer.CallingServerModelFactory.ResultInfo (code, subcode, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.ResultInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
        <Parameter Name="subcode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="code"> The result code associated with the operation. </param>
        <param name="subcode"> The subcode that further classifies the result. </param>
        <param name="message"> The message is a detail explanation of subcode. </param>
        <summary> Initializes a new instance of ResultInfo. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallingServer.ResultInfo" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecordingResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallingServer.StartRecordingResult StartRecordingResult (string recordingId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallingServer.StartRecordingResult StartRecordingResult(string recordingId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerModelFactory.StartRecordingResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartRecordingResult (Optional recordingId As String = Nothing) As StartRecordingResult" />
      <MemberSignature Language="F#" Value="static member StartRecordingResult : string -&gt; Azure.Communication.CallingServer.StartRecordingResult" Usage="Azure.Communication.CallingServer.CallingServerModelFactory.StartRecordingResult recordingId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.StartRecordingResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="recordingId"> The recording id of the started recording. </param>
        <summary> Initializes a new instance of StartRecordingResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallingServer.StartRecordingResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToneInfo">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallingServer.ToneInfo ToneInfo (int sequenceId = 0, Azure.Communication.CallingServer.ToneValue tone = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallingServer.ToneInfo ToneInfo(int32 sequenceId, valuetype Azure.Communication.CallingServer.ToneValue tone) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerModelFactory.ToneInfo(System.Int32,Azure.Communication.CallingServer.ToneValue)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToneInfo (Optional sequenceId As Integer = 0, Optional tone As ToneValue = Nothing) As ToneInfo" />
      <MemberSignature Language="F#" Value="static member ToneInfo : int * Azure.Communication.CallingServer.ToneValue -&gt; Azure.Communication.CallingServer.ToneInfo" Usage="Azure.Communication.CallingServer.CallingServerModelFactory.ToneInfo (sequenceId, tone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.ToneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceId" Type="System.Int32" />
        <Parameter Name="tone" Type="Azure.Communication.CallingServer.ToneValue" />
      </Parameters>
      <Docs>
        <param name="sequenceId"> The sequence id which can be used to determine if the same tone was played multiple times or if any tones were missed. </param>
        <param name="tone"> The tone value. </param>
        <summary> Initializes a new instance of ToneInfo. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallingServer.ToneInfo" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToneReceivedEvent">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallingServer.ToneReceivedEvent ToneReceivedEvent (Azure.Communication.CallingServer.ToneInfo toneInfo = default, string callConnectionId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallingServer.ToneReceivedEvent ToneReceivedEvent(class Azure.Communication.CallingServer.ToneInfo toneInfo, string callConnectionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallingServerModelFactory.ToneReceivedEvent(Azure.Communication.CallingServer.ToneInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToneReceivedEvent (Optional toneInfo As ToneInfo = Nothing, Optional callConnectionId As String = Nothing) As ToneReceivedEvent" />
      <MemberSignature Language="F#" Value="static member ToneReceivedEvent : Azure.Communication.CallingServer.ToneInfo * string -&gt; Azure.Communication.CallingServer.ToneReceivedEvent" Usage="Azure.Communication.CallingServer.CallingServerModelFactory.ToneReceivedEvent (toneInfo, callConnectionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallingServer.ToneReceivedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toneInfo" Type="Azure.Communication.CallingServer.ToneInfo" />
        <Parameter Name="callConnectionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toneInfo"> The tone info. </param>
        <param name="callConnectionId"> The call connection id. </param>
        <summary> Initializes a new instance of ToneReceivedEvent. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallingServer.ToneReceivedEvent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
