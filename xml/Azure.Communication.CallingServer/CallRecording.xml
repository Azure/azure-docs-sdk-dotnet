<Type Name="CallRecording" FullName="Azure.Communication.CallingServer.CallRecording">
  <TypeSignature Language="C#" Value="public class CallRecording" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallRecording extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.CallingServer.CallRecording" />
  <TypeSignature Language="VB.NET" Value="Public Class CallRecording" />
  <TypeSignature Language="F#" Value="type CallRecording = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Azure Communication Services Call Recording client.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CallRecording ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:Azure.Communication.CallingServer.CallRecording" /> for mocking.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRecording">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteRecording (Uri recordingLocation, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteRecording(class System.Uri recordingLocation, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.DeleteRecording(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRecording (recordingLocation As Uri, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteRecording : Uri * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteRecording : Uri * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callRecording.DeleteRecording (recordingLocation, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingLocation" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingLocation">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            The <see cref="M:Azure.Communication.CallingServer.CallRecording.DeleteRecording(System.Uri,System.Threading.CancellationToken)" />
            operation deletes the specified content from storage.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRecordingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteRecordingAsync (Uri recordingLocation, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteRecordingAsync(class System.Uri recordingLocation, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.DeleteRecordingAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRecordingAsync (recordingLocation As Uri, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteRecordingAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteRecordingAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callRecording.DeleteRecordingAsync (recordingLocation, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingLocation" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingLocation">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            The <see cref="M:Azure.Communication.CallingServer.CallRecording.DeleteRecordingAsync(System.Uri,System.Threading.CancellationToken)" />
            operation deletes the specified content from storage
            using parallel requests.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadStreaming">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.IO.Stream&gt; DownloadStreaming (Uri sourceLocation, Azure.HttpRange range = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.IO.Stream&gt; DownloadStreaming(class System.Uri sourceLocation, valuetype Azure.HttpRange range, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.DownloadStreaming(System.Uri,Azure.HttpRange,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadStreaming (sourceLocation As Uri, Optional range As HttpRange = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member DownloadStreaming : Uri * Azure.HttpRange * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;&#xA;override this.DownloadStreaming : Uri * Azure.HttpRange * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;" Usage="callRecording.DownloadStreaming (sourceLocation, range, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLocation" Type="System.Uri" />
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceLocation">
             Recording's content's url location.
             </param>
        <param name="range">
             If provided, only download the bytes of the content in the specified range.
             If not provided, download the entire content.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be canceled.
             </param>
        <summary>
             The <see cref="M:Azure.Communication.CallingServer.CallRecording.DownloadStreaming(System.Uri,Azure.HttpRange,System.Threading.CancellationToken)" />
             operation downloads the recording's content.
            
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> containing the
             downloaded content.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadStreamingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt; DownloadStreamingAsync (Uri sourceLocation, Azure.HttpRange range = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.IO.Stream&gt;&gt; DownloadStreamingAsync(class System.Uri sourceLocation, valuetype Azure.HttpRange range, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.DownloadStreamingAsync(System.Uri,Azure.HttpRange,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadStreamingAsync (sourceLocation As Uri, Optional range As HttpRange = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Stream))" />
      <MemberSignature Language="F#" Value="abstract member DownloadStreamingAsync : Uri * Azure.HttpRange * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;&#xA;override this.DownloadStreamingAsync : Uri * Azure.HttpRange * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;" Usage="callRecording.DownloadStreamingAsync (sourceLocation, range, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLocation" Type="System.Uri" />
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceLocation">
             Recording's content's url location.
             </param>
        <param name="range">
             If provided, only download the bytes of the content in the specified range.
             If not provided, download the entire content.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be canceled.
             </param>
        <summary>
             The <see cref="M:Azure.Communication.CallingServer.CallRecording.DownloadStreamingAsync(System.Uri,Azure.HttpRange,System.Threading.CancellationToken)" />
             operation downloads the recording's content.
            
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> containing the
             downloaded content.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadTo (Uri sourceLocation, System.IO.Stream destinationStream, Azure.Communication.CallingServer.ContentTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadTo(class System.Uri sourceLocation, class System.IO.Stream destinationStream, valuetype Azure.Communication.CallingServer.ContentTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.DownloadTo(System.Uri,System.IO.Stream,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTo (sourceLocation As Uri, destinationStream As Stream, Optional transferOptions As ContentTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadTo : Uri * System.IO.Stream * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DownloadTo : Uri * System.IO.Stream * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callRecording.DownloadTo (sourceLocation, destinationStream, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLocation" Type="System.Uri" />
        <Parameter Name="destinationStream" Type="System.IO.Stream" />
        <Parameter Name="transferOptions" Type="Azure.Communication.CallingServer.ContentTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceLocation">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
        <param name="destinationStream">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Communication.CallingServer.ContentTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            The <see cref="M:Azure.Communication.CallingServer.CallRecording.DownloadTo(System.Uri,System.IO.Stream,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
            operation downloads the specified content using parallel requests,
            and writes the content to <paramref name="destinationStream" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadTo (Uri sourceLocation, string destinationPath, Azure.Communication.CallingServer.ContentTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadTo(class System.Uri sourceLocation, string destinationPath, valuetype Azure.Communication.CallingServer.ContentTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.DownloadTo(System.Uri,System.String,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadTo (sourceLocation As Uri, destinationPath As String, Optional transferOptions As ContentTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadTo : Uri * string * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DownloadTo : Uri * string * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callRecording.DownloadTo (sourceLocation, destinationPath, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLocation" Type="System.Uri" />
        <Parameter Name="destinationPath" Type="System.String" />
        <Parameter Name="transferOptions" Type="Azure.Communication.CallingServer.ContentTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceLocation">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
        <param name="destinationPath">
            A file path to write the downloaded content to.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Communication.CallingServer.ContentTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            The <see cref="M:Azure.Communication.CallingServer.CallRecording.DownloadTo(System.Uri,System.String,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
            operation downloads the specified content using parallel requests,
            and writes the content to <paramref name="destinationPath" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadToAsync (Uri sourceLocation, System.IO.Stream destinationStream, Azure.Communication.CallingServer.ContentTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadToAsync(class System.Uri sourceLocation, class System.IO.Stream destinationStream, valuetype Azure.Communication.CallingServer.ContentTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.DownloadToAsync(System.Uri,System.IO.Stream,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadToAsync (sourceLocation As Uri, destinationStream As Stream, Optional transferOptions As ContentTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadToAsync : Uri * System.IO.Stream * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadToAsync : Uri * System.IO.Stream * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callRecording.DownloadToAsync (sourceLocation, destinationStream, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLocation" Type="System.Uri" />
        <Parameter Name="destinationStream" Type="System.IO.Stream" />
        <Parameter Name="transferOptions" Type="Azure.Communication.CallingServer.ContentTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceLocation">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
        <param name="destinationStream">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Communication.CallingServer.ContentTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            The <see cref="M:Azure.Communication.CallingServer.CallRecording.DownloadToAsync(System.Uri,System.IO.Stream,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
            operation downloads the specified content using parallel requests,
            and writes the content to <paramref name="destinationStream" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadToAsync (Uri sourceLocation, string destinationPath, Azure.Communication.CallingServer.ContentTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadToAsync(class System.Uri sourceLocation, string destinationPath, valuetype Azure.Communication.CallingServer.ContentTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.DownloadToAsync(System.Uri,System.String,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadToAsync (sourceLocation As Uri, destinationPath As String, Optional transferOptions As ContentTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadToAsync : Uri * string * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadToAsync : Uri * string * Azure.Communication.CallingServer.ContentTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callRecording.DownloadToAsync (sourceLocation, destinationPath, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLocation" Type="System.Uri" />
        <Parameter Name="destinationPath" Type="System.String" />
        <Parameter Name="transferOptions" Type="Azure.Communication.CallingServer.ContentTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceLocation">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
        <param name="destinationPath">
            A file path to write the downloaded content to.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Communication.CallingServer.ContentTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
        <summary>
            The <see cref="M:Azure.Communication.CallingServer.CallRecording.DownloadToAsync(System.Uri,System.String,Azure.Communication.CallingServer.ContentTransferOptions,System.Threading.CancellationToken)" />
            operation downloads the specified content using parallel requests,
            and writes the content to <paramref name="destinationPath" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordingState">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt; GetRecordingState (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallingServer.RecordingStateResult&gt; GetRecordingState(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.GetRecordingState(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordingState (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecordingStateResult)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordingState : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;&#xA;override this.GetRecordingState : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;" Usage="callRecording.GetRecordingState (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to get the state of.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the current recording state by recording id.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordingStateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;&gt; GetRecordingStateAsync (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallingServer.RecordingStateResult&gt;&gt; GetRecordingStateAsync(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.GetRecordingStateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordingStateAsync (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecordingStateResult))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordingStateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;&gt;&#xA;override this.GetRecordingStateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;&gt;" Usage="callRecording.GetRecordingStateAsync (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to get the state of.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the current recording state by recording id.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseRecording">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PauseRecording (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PauseRecording(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.PauseRecording(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PauseRecording (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PauseRecording : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.PauseRecording : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callRecording.PauseRecording (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to pause.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Pause recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseRecordingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PauseRecordingAsync (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PauseRecordingAsync(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.PauseRecordingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PauseRecordingAsync (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PauseRecordingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PauseRecordingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callRecording.PauseRecordingAsync (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to pause.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Pause recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeRecording">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ResumeRecording (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ResumeRecording(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.ResumeRecording(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResumeRecording (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member ResumeRecording : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ResumeRecording : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callRecording.ResumeRecording (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to resume.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            resume recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeRecordingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ResumeRecordingAsync (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ResumeRecordingAsync(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.ResumeRecordingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResumeRecordingAsync (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ResumeRecordingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ResumeRecordingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callRecording.ResumeRecordingAsync (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to pause.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Resume recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecording">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt; StartRecording (Azure.Communication.CallingServer.StartRecordingOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallingServer.RecordingStateResult&gt; StartRecording(class Azure.Communication.CallingServer.StartRecordingOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.StartRecording(Azure.Communication.CallingServer.StartRecordingOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecording (options As StartRecordingOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecordingStateResult)" />
      <MemberSignature Language="F#" Value="abstract member StartRecording : Azure.Communication.CallingServer.StartRecordingOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;&#xA;override this.StartRecording : Azure.Communication.CallingServer.StartRecordingOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;" Usage="callRecording.StartRecording (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallingServer.StartRecordingOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">Options for start recording</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Start recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecordingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;&gt; StartRecordingAsync (Azure.Communication.CallingServer.StartRecordingOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallingServer.RecordingStateResult&gt;&gt; StartRecordingAsync(class Azure.Communication.CallingServer.StartRecordingOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.StartRecordingAsync(Azure.Communication.CallingServer.StartRecordingOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecordingAsync (options As StartRecordingOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecordingStateResult))" />
      <MemberSignature Language="F#" Value="abstract member StartRecordingAsync : Azure.Communication.CallingServer.StartRecordingOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;&gt;&#xA;override this.StartRecordingAsync : Azure.Communication.CallingServer.StartRecordingOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;&gt;" Usage="callRecording.StartRecordingAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallingServer.RecordingStateResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallingServer.StartRecordingOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">Options for start recording</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Start recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRecording">
      <MemberSignature Language="C#" Value="public virtual Azure.Response StopRecording (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response StopRecording(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.StopRecording(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopRecording (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member StopRecording : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.StopRecording : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callRecording.StopRecording (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to stop.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Stop recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRecordingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; StopRecordingAsync (string recordingId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; StopRecordingAsync(string recordingId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallingServer.CallRecording.StopRecordingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopRecordingAsync (recordingId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member StopRecordingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.StopRecordingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callRecording.StopRecordingAsync (recordingId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallingServer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordingId">The recording id to stop.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Stop recording of the call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
