<Type Name="DeadLetterWithResourceIdentity" FullName="Azure.Provisioning.EventGrid.DeadLetterWithResourceIdentity">
  <TypeSignature Language="C#" Value="public class DeadLetterWithResourceIdentity : Azure.Provisioning.Primitives.ProvisioningConstruct" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DeadLetterWithResourceIdentity extends Azure.Provisioning.Primitives.ProvisioningConstruct" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.EventGrid.DeadLetterWithResourceIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class DeadLetterWithResourceIdentity&#xA;Inherits ProvisioningConstruct" />
  <TypeSignature Language="F#" Value="type DeadLetterWithResourceIdentity = class&#xA;    inherit ProvisioningConstruct" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning.EventGrid</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Provisioning.Primitives.ProvisioningConstruct</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Information about the deadletter destination with resource identity.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeadLetterWithResourceIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.EventGrid.DeadLetterWithResourceIdentity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new DeadLetterWithResourceIdentity.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterDestination">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;Azure.Provisioning.EventGrid.DeadLetterDestination&gt; DeadLetterDestination { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;class Azure.Provisioning.EventGrid.DeadLetterDestination&gt; DeadLetterDestination" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.EventGrid.DeadLetterWithResourceIdentity.DeadLetterDestination" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterDestination As BicepValue(Of DeadLetterDestination)" />
      <MemberSignature Language="F#" Value="member this.DeadLetterDestination : Azure.Provisioning.BicepValue&lt;Azure.Provisioning.EventGrid.DeadLetterDestination&gt; with get, set" Usage="Azure.Provisioning.EventGrid.DeadLetterWithResourceIdentity.DeadLetterDestination" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;Azure.Provisioning.EventGrid.DeadLetterDestination&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Information about the destination where events have to be delivered for
            the event subscription.             Uses the managed identity setup on
            the parent resource (namely, topic or domain) to acquire the
            authentication tokens being used during dead-lettering.
            Please note
            Azure.ResourceManager.EventGrid.Models.DeadLetterDestination is the
            base class. According to the scenario, a derived class of the base
            class might need to be assigned here, or this property needs to be
            casted to one of the possible derived classes.             The
            available derived classes include
            Azure.ResourceManager.EventGrid.Models.StorageBlobDeadLetterDestination.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;Azure.Provisioning.EventGrid.EventSubscriptionIdentity&gt; Identity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;class Azure.Provisioning.EventGrid.EventSubscriptionIdentity&gt; Identity" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.EventGrid.DeadLetterWithResourceIdentity.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Property Identity As BicepValue(Of EventSubscriptionIdentity)" />
      <MemberSignature Language="F#" Value="member this.Identity : Azure.Provisioning.BicepValue&lt;Azure.Provisioning.EventGrid.EventSubscriptionIdentity&gt; with get, set" Usage="Azure.Provisioning.EventGrid.DeadLetterWithResourceIdentity.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;Azure.Provisioning.EventGrid.EventSubscriptionIdentity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The identity to use when dead-lettering events.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
