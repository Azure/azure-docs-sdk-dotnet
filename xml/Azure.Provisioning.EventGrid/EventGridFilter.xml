<Type Name="EventGridFilter" FullName="Azure.Provisioning.EventGrid.EventGridFilter">
  <TypeSignature Language="C#" Value="public class EventGridFilter : Azure.Provisioning.Primitives.ProvisionableConstruct" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventGridFilter extends Azure.Provisioning.Primitives.ProvisionableConstruct" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.EventGrid.EventGridFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventGridFilter&#xA;Inherits ProvisionableConstruct" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type EventGridFilter = class&#xA;    inherit ProvisionableConstruct" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class EventGridFilter : Azure.Provisioning.Primitives.ProvisioningConstruct" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventGridFilter extends Azure.Provisioning.Primitives.ProvisioningConstruct" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class EventGridFilter&#xA;Inherits ProvisioningConstruct" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type EventGridFilter = class&#xA;    inherit ProvisioningConstruct" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning.EventGrid</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Provisioning.Primitives.ProvisionableConstruct</BaseTypeName>
    <BaseTypeName FrameworkAlternate="azure-dotnet-preview">Azure.Provisioning.Primitives.ProvisioningConstruct</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This is the base type that represents a filter. To configure a filter, do
            not directly instantiate an object of this class. Instead, instantiate
            an object of a derived class such as BoolEqualsFilter,
            NumberInFilter, StringEqualsFilter etc depending on the type of the key
            based on             which you want to filter.             Please note
            Azure.ResourceManager.EventGrid.Models.EventGridFilter is the base class.
            According to the scenario, a derived class of the base class might need to
            be assigned here, or this property needs to be casted to one of the
            possible derived classes.             The available derived classes
            include Azure.ResourceManager.EventGrid.Models.BoolEqualsFilter,
            Azure.ResourceManager.EventGrid.Models.IsNotNullFilter,
            Azure.ResourceManager.EventGrid.Models.IsNullOrUndefinedFilter,
            Azure.ResourceManager.EventGrid.Models.NumberGreaterThanFilter,
            Azure.ResourceManager.EventGrid.Models.NumberGreaterThanOrEqualsFilter,
            Azure.ResourceManager.EventGrid.Models.NumberInFilter,
            Azure.ResourceManager.EventGrid.Models.NumberInRangeFilter,
            Azure.ResourceManager.EventGrid.Models.NumberLessThanFilter,
            Azure.ResourceManager.EventGrid.Models.NumberLessThanOrEqualsFilter,
            Azure.ResourceManager.EventGrid.Models.NumberNotInFilter,
            Azure.ResourceManager.EventGrid.Models.NumberNotInRangeFilter,
            Azure.ResourceManager.EventGrid.Models.StringBeginsWithFilter,
            Azure.ResourceManager.EventGrid.Models.StringContainsFilter,
            Azure.ResourceManager.EventGrid.Models.StringEndsWithFilter,
            Azure.ResourceManager.EventGrid.Models.StringInFilter,
            Azure.ResourceManager.EventGrid.Models.StringNotBeginsWithFilter,
            Azure.ResourceManager.EventGrid.Models.StringNotContainsFilter,
            Azure.ResourceManager.EventGrid.Models.StringNotEndsWithFilter and
            Azure.ResourceManager.EventGrid.Models.StringNotInFilter.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventGridFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.EventGrid.EventGridFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new EventGridFilter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineProvisionableProperties">
      <MemberSignature Language="C#" Value="protected override void DefineProvisionableProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DefineProvisionableProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.EventGrid.EventGridFilter.DefineProvisionableProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DefineProvisionableProperties ()" />
      <MemberSignature Language="F#" Value="override this.DefineProvisionableProperties : unit -&gt; unit" Usage="eventGridFilter.DefineProvisionableProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Define all the provisionable properties of EventGridFilter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;string&gt; Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;string&gt; Key" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.EventGrid.EventGridFilter.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="member this.Key : Azure.Provisioning.BicepValue&lt;string&gt; with get, set" Usage="Azure.Provisioning.EventGrid.EventGridFilter.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning.EventGrid</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The field/property in the event based on which you want to filter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
