<Type Name="NotificationMessagesClient" FullName="Azure.Communication.Messages.NotificationMessagesClient">
  <TypeSignature Language="C#" Value="public class NotificationMessagesClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NotificationMessagesClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.Messages.NotificationMessagesClient" />
  <TypeSignature Language="VB.NET" Value="Public Class NotificationMessagesClient" />
  <TypeSignature Language="F#" Value="type NotificationMessagesClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.Messages</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The NotificationMessages service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NotificationMessagesClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:Azure.Communication.Messages.NotificationMessagesClient" /> for mocking.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotificationMessagesClient (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.Messages.NotificationMessagesClient : string -&gt; Azure.Communication.Messages.NotificationMessagesClient" Usage="new Azure.Communication.Messages.NotificationMessagesClient connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        <summary>
            Initializes a new instance of <see cref="T:Azure.Communication.Messages.NotificationMessagesClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotificationMessagesClient (string connectionString, Azure.Communication.Messages.CommunicationMessagesClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class Azure.Communication.Messages.CommunicationMessagesClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.#ctor(System.String,Azure.Communication.Messages.CommunicationMessagesClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, options As CommunicationMessagesClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.Messages.NotificationMessagesClient : string * Azure.Communication.Messages.CommunicationMessagesClientOptions -&gt; Azure.Communication.Messages.NotificationMessagesClient" Usage="new Azure.Communication.Messages.NotificationMessagesClient (connectionString, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="options" Type="Azure.Communication.Messages.CommunicationMessagesClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        <param name="options">Client options exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.Messages.NotificationMessagesClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotificationMessagesClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.Messages.NotificationMessagesClient : Uri * Azure.AzureKeyCredential -&gt; Azure.Communication.Messages.NotificationMessagesClient" Usage="new Azure.Communication.Messages.NotificationMessagesClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The communication resource, for example https://my-resource.communication.azure.com. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <summary> Initializes a new instance of NotificationMessagesClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotificationMessagesClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.Messages.NotificationMessagesClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Communication.Messages.NotificationMessagesClient" Usage="new Azure.Communication.Messages.NotificationMessagesClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The communication resource, for example https://my-resource.communication.azure.com. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <summary> Initializes a new instance of NotificationMessagesClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotificationMessagesClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.Communication.Messages.CommunicationMessagesClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.Communication.Messages.CommunicationMessagesClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.Communication.Messages.CommunicationMessagesClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, Optional options As CommunicationMessagesClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.Messages.NotificationMessagesClient : Uri * Azure.AzureKeyCredential * Azure.Communication.Messages.CommunicationMessagesClientOptions -&gt; Azure.Communication.Messages.NotificationMessagesClient" Usage="new Azure.Communication.Messages.NotificationMessagesClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.Communication.Messages.CommunicationMessagesClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI of the Azure Communication Services resource.</param>
        <param name="credential">The <see cref="T:Azure.AzureKeyCredential" /> used to authenticate requests.</param>
        <param name="options">Client options exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.Messages.NotificationMessagesClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotificationMessagesClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Communication.Messages.CommunicationMessagesClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Communication.Messages.CommunicationMessagesClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Communication.Messages.CommunicationMessagesClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As CommunicationMessagesClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.Messages.NotificationMessagesClient : Uri * Azure.Core.TokenCredential * Azure.Communication.Messages.CommunicationMessagesClientOptions -&gt; Azure.Communication.Messages.NotificationMessagesClient" Usage="new Azure.Communication.Messages.NotificationMessagesClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Communication.Messages.CommunicationMessagesClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The communication resource, for example https://my-resource.communication.azure.com. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of NotificationMessagesClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadMedia">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.IO.Stream&gt; DownloadMedia (string mediaContentId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.IO.Stream&gt; DownloadMedia(string mediaContentId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.DownloadMedia(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadMedia (mediaContentId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member DownloadMedia : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;&#xA;override this.DownloadMedia : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.IO.Stream&gt;" Usage="notificationMessagesClient.DownloadMedia (mediaContentId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaContentId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaContentId">The Media Identifier contained in the User to Business message event.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The <see cref="M:Azure.Communication.Messages.NotificationMessagesClient.DownloadMedia(System.String,System.Threading.CancellationToken)" /> downloads
            the Media payload from a User to Business message asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadMediaAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt; DownloadMediaAsync (string mediaContentId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.IO.Stream&gt;&gt; DownloadMediaAsync(string mediaContentId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.DownloadMediaAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadMediaAsync (mediaContentId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Stream))" />
      <MemberSignature Language="F#" Value="abstract member DownloadMediaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;&#xA;override this.DownloadMediaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;" Usage="notificationMessagesClient.DownloadMediaAsync (mediaContentId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.IO.Stream&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaContentId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaContentId">The Media Identifier contained in the User to Business message event.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Download the Media payload from a User to Business message asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadMediaTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadMediaTo (string mediaContentId, System.IO.Stream destinationStream, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadMediaTo(string mediaContentId, class System.IO.Stream destinationStream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.DownloadMediaTo(System.String,System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadMediaTo (mediaContentId As String, destinationStream As Stream, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadMediaTo : string * System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DownloadMediaTo : string * System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Response" Usage="notificationMessagesClient.DownloadMediaTo (mediaContentId, destinationStream, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaContentId" Type="System.String" />
        <Parameter Name="destinationStream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaContentId">The Media Identifier contained in the User to Business message event.</param>
        <param name="destinationStream"> A <see cref="T:System.IO.Stream" /> to write the downloaded content to. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The <see cref="M:Azure.Communication.Messages.NotificationMessagesClient.DownloadMediaTo(System.String,System.IO.Stream,System.Threading.CancellationToken)" /> operation downloads the
            specified content, and writes the content to <paramref name="destinationStream" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadMediaTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadMediaTo (string mediaContentId, string destinationPath, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadMediaTo(string mediaContentId, string destinationPath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.DownloadMediaTo(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadMediaTo (mediaContentId As String, destinationPath As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadMediaTo : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DownloadMediaTo : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="notificationMessagesClient.DownloadMediaTo (mediaContentId, destinationPath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaContentId" Type="System.String" />
        <Parameter Name="destinationPath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaContentId">The Media Identifier contained in the User to Business message event.</param>
        <param name="destinationPath"> A file path to write the downloaded content to. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The <see cref="M:Azure.Communication.Messages.NotificationMessagesClient.DownloadMediaTo(System.String,System.String,System.Threading.CancellationToken)" /> operation downloads the
            specified content, and writes the content to <paramref name="destinationPath" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadMediaToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadMediaToAsync (string mediaContentId, System.IO.Stream destinationStream, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadMediaToAsync(string mediaContentId, class System.IO.Stream destinationStream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.DownloadMediaToAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadMediaToAsync (mediaContentId As String, destinationStream As Stream, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadMediaToAsync : string * System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadMediaToAsync : string * System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="notificationMessagesClient.DownloadMediaToAsync (mediaContentId, destinationStream, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaContentId" Type="System.String" />
        <Parameter Name="destinationStream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaContentId">The Media Identifier contained in the User to Business message event.</param>
        <param name="destinationStream"> A <see cref="T:System.IO.Stream" /> to write the downloaded content to. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The <see cref="M:Azure.Communication.Messages.NotificationMessagesClient.DownloadMediaToAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)" /> operation downloads the
            specified content asynchronously, and writes the content to <paramref name="destinationStream" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadMediaToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadMediaToAsync (string mediaContentId, string destinationPath, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadMediaToAsync(string mediaContentId, string destinationPath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.DownloadMediaToAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadMediaToAsync (mediaContentId As String, destinationPath As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadMediaToAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadMediaToAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="notificationMessagesClient.DownloadMediaToAsync (mediaContentId, destinationPath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaContentId" Type="System.String" />
        <Parameter Name="destinationPath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaContentId">The Media Identifier contained in the User to Business message event.</param>
        <param name="destinationPath"> A file path to write the downloaded content to. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The <see cref="M:Azure.Communication.Messages.NotificationMessagesClient.DownloadMediaTo(System.String,System.String,System.Threading.CancellationToken)" /> operation downloads the
            specified content, and writes the content to <paramref name="destinationPath" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.Messages.NotificationMessagesClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Communication.Messages.NotificationMessagesClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.Messages.SendMessageResult&gt; Send (Azure.Communication.Messages.NotificationContent notificationContent, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.Messages.SendMessageResult&gt; Send(class Azure.Communication.Messages.NotificationContent notificationContent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.Send(Azure.Communication.Messages.NotificationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Send (notificationContent As NotificationContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SendMessageResult)" />
      <MemberSignature Language="F#" Value="abstract member Send : Azure.Communication.Messages.NotificationContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.Messages.SendMessageResult&gt;&#xA;override this.Send : Azure.Communication.Messages.NotificationContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.Messages.SendMessageResult&gt;" Usage="notificationMessagesClient.Send (notificationContent, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.Messages.SendMessageResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationContent" Type="Azure.Communication.Messages.NotificationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="notificationContent"> Details of the message to send. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Sends a notification message from Business to User. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="notificationContent" /> is null. </exception>
        <example>
This sample shows how to call Send.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

NotificationContent notificationContent = new TextNotificationContent(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), new string[] { "<to>" }, "<content>");
Response<SendMessageResult> response = client.Send(notificationContent);
]]></code>
This sample shows how to call Send with all parameters.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

NotificationContent notificationContent = new TextNotificationContent(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), new string[] { "<to>" }, "<content>");
Response<SendMessageResult> response = client.Send(notificationContent);
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Send (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Send(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.Send(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Send (content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Send : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.Send : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="notificationMessagesClient.Send (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Sends a notification message from Business to User.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item><item><description>
            Please try the simpler <see cref="M:Azure.Communication.Messages.NotificationMessagesClient.Send(Azure.Communication.Messages.NotificationContent,System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call Send and parse the result.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

using RequestContent content = RequestContent.Create(new
{
    kind = "text",
    content = "<content>",
    channelRegistrationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
    to = new object[]
    {
        "<to>"
    },
});
Response response = client.Send(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("messageId").ToString());
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("to").ToString());
]]></code>
This sample shows how to call Send with all request content and parse the result.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

using RequestContent content = RequestContent.Create(new
{
    kind = "text",
    content = "<content>",
    channelRegistrationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
    to = new object[]
    {
        "<to>"
    },
});
Response response = client.Send(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("messageId").ToString());
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("to").ToString());
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Messages.SendMessageResult&gt;&gt; SendAsync (Azure.Communication.Messages.NotificationContent notificationContent, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.Messages.SendMessageResult&gt;&gt; SendAsync(class Azure.Communication.Messages.NotificationContent notificationContent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.SendAsync(Azure.Communication.Messages.NotificationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendAsync (notificationContent As NotificationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SendMessageResult))" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : Azure.Communication.Messages.NotificationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Messages.SendMessageResult&gt;&gt;&#xA;override this.SendAsync : Azure.Communication.Messages.NotificationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Messages.SendMessageResult&gt;&gt;" Usage="notificationMessagesClient.SendAsync (notificationContent, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Messages.SendMessageResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationContent" Type="Azure.Communication.Messages.NotificationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="notificationContent"> Details of the message to send. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Sends a notification message from Business to User. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="notificationContent" /> is null. </exception>
        <example>
This sample shows how to call SendAsync.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

NotificationContent notificationContent = new TextNotificationContent(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), new string[] { "<to>" }, "<content>");
Response<SendMessageResult> response = await client.SendAsync(notificationContent);
]]></code>
This sample shows how to call SendAsync with all parameters.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

NotificationContent notificationContent = new TextNotificationContent(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), new string[] { "<to>" }, "<content>");
Response<SendMessageResult> response = await client.SendAsync(notificationContent);
]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendAsync (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendAsync(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Messages.NotificationMessagesClient.SendAsync(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendAsync (content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="notificationMessagesClient.SendAsync (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Messages</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Sends a notification message from Business to User.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item><item><description>
            Please try the simpler <see cref="M:Azure.Communication.Messages.NotificationMessagesClient.SendAsync(Azure.Communication.Messages.NotificationContent,System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
This sample shows how to call SendAsync and parse the result.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

using RequestContent content = RequestContent.Create(new
{
    kind = "text",
    content = "<content>",
    channelRegistrationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
    to = new object[]
    {
        "<to>"
    },
});
Response response = await client.SendAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("messageId").ToString());
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("to").ToString());
]]></code>
This sample shows how to call SendAsync with all request content and parse the result.
<code><![CDATA[
NotificationMessagesClient client = new NotificationMessagesClient(null);

using RequestContent content = RequestContent.Create(new
{
    kind = "text",
    content = "<content>",
    channelRegistrationId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
    to = new object[]
    {
        "<to>"
    },
});
Response response = await client.SendAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("messageId").ToString());
Console.WriteLine(result.GetProperty("receipts")[0].GetProperty("to").ToString());
]]></code></example>
      </Docs>
    </Member>
  </Members>
</Type>
