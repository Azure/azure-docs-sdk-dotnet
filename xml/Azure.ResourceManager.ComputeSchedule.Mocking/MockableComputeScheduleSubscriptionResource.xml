<Type Name="MockableComputeScheduleSubscriptionResource" FullName="Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableComputeScheduleSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableComputeScheduleSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableComputeScheduleSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableComputeScheduleSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableComputeScheduleSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelVirtualMachineOperations">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt; CancelVirtualMachineOperations (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt; CancelVirtualMachineOperations(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.CancelVirtualMachineOperations(System.String,Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelVirtualMachineOperations (locationparameter As String, content As CancelOperationsContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CancelOperationsResult)" />
      <MemberSignature Language="F#" Value="abstract member CancelVirtualMachineOperations : string * Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;&#xA;override this.CancelVirtualMachineOperations : string * Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;" Usage="mockableComputeScheduleSubscriptionResource.CancelVirtualMachineOperations (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesCancelOperations: Cancel a previously submitted (start/deallocate/hibernate) request
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesCancelOperations</description></item><item><term>Operation Id</term><description>ScheduledActions_CancelVirtualMachineOperations</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelVirtualMachineOperationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;&gt; CancelVirtualMachineOperationsAsync (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;&gt; CancelVirtualMachineOperationsAsync(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.CancelVirtualMachineOperationsAsync(System.String,Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelVirtualMachineOperationsAsync (locationparameter As String, content As CancelOperationsContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CancelOperationsResult))" />
      <MemberSignature Language="F#" Value="abstract member CancelVirtualMachineOperationsAsync : string * Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;&gt;&#xA;override this.CancelVirtualMachineOperationsAsync : string * Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;&gt;" Usage="mockableComputeScheduleSubscriptionResource.CancelVirtualMachineOperationsAsync (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.CancelOperationsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesCancelOperations: Cancel a previously submitted (start/deallocate/hibernate) request
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesCancelOperations</description></item><item><term>Operation Id</term><description>ScheduledActions_CancelVirtualMachineOperations</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualMachineDeallocate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt; ExecuteVirtualMachineDeallocate (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt; ExecuteVirtualMachineDeallocate(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineDeallocate(System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteVirtualMachineDeallocate (locationparameter As String, content As ExecuteDeallocateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeallocateResourceOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteVirtualMachineDeallocate : string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&#xA;override this.ExecuteVirtualMachineDeallocate : string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;" Usage="mockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineDeallocate (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesExecuteDeallocate: Execute deallocate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteDeallocate</description></item><item><term>Operation Id</term><description>ScheduledActions_ExecuteVirtualMachineDeallocate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualMachineDeallocateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt; ExecuteVirtualMachineDeallocateAsync (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt; ExecuteVirtualMachineDeallocateAsync(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineDeallocateAsync(System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteVirtualMachineDeallocateAsync (locationparameter As String, content As ExecuteDeallocateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeallocateResourceOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member ExecuteVirtualMachineDeallocateAsync : string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt;&#xA;override this.ExecuteVirtualMachineDeallocateAsync : string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt;" Usage="mockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineDeallocateAsync (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.ExecuteDeallocateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesExecuteDeallocate: Execute deallocate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteDeallocate</description></item><item><term>Operation Id</term><description>ScheduledActions_ExecuteVirtualMachineDeallocate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualMachineHibernate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt; ExecuteVirtualMachineHibernate (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt; ExecuteVirtualMachineHibernate(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineHibernate(System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteVirtualMachineHibernate (locationparameter As String, content As ExecuteHibernateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HibernateResourceOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteVirtualMachineHibernate : string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&#xA;override this.ExecuteVirtualMachineHibernate : string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;" Usage="mockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineHibernate (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesExecuteHibernate: Execute hibernate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteHibernate</description></item><item><term>Operation Id</term><description>ScheduledActions_ExecuteVirtualMachineHibernate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualMachineHibernateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt; ExecuteVirtualMachineHibernateAsync (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt; ExecuteVirtualMachineHibernateAsync(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineHibernateAsync(System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteVirtualMachineHibernateAsync (locationparameter As String, content As ExecuteHibernateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HibernateResourceOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member ExecuteVirtualMachineHibernateAsync : string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt;&#xA;override this.ExecuteVirtualMachineHibernateAsync : string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt;" Usage="mockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineHibernateAsync (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.ExecuteHibernateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesExecuteHibernate: Execute hibernate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteHibernate</description></item><item><term>Operation Id</term><description>ScheduledActions_ExecuteVirtualMachineHibernate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualMachineStart">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt; ExecuteVirtualMachineStart (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt; ExecuteVirtualMachineStart(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineStart(System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteVirtualMachineStart (locationparameter As String, content As ExecuteStartContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StartResourceOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteVirtualMachineStart : string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&#xA;override this.ExecuteVirtualMachineStart : string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;" Usage="mockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineStart (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesExecuteStart: Execute start operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteStart</description></item><item><term>Operation Id</term><description>ScheduledActions_ExecuteVirtualMachineStart</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteVirtualMachineStartAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt; ExecuteVirtualMachineStartAsync (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt; ExecuteVirtualMachineStartAsync(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineStartAsync(System.String,Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteVirtualMachineStartAsync (locationparameter As String, content As ExecuteStartContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StartResourceOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member ExecuteVirtualMachineStartAsync : string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt;&#xA;override this.ExecuteVirtualMachineStartAsync : string * Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt;" Usage="mockableComputeScheduleSubscriptionResource.ExecuteVirtualMachineStartAsync (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.ExecuteStartContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesExecuteStart: Execute start operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteStart</description></item><item><term>Operation Id</term><description>ScheduledActions_ExecuteVirtualMachineStart</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineOperationErrors">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt; GetVirtualMachineOperationErrors (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt; GetVirtualMachineOperationErrors(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.GetVirtualMachineOperationErrors(System.String,Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineOperationErrors (locationparameter As String, content As GetOperationErrorsContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GetOperationErrorsResult)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineOperationErrors : string * Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;&#xA;override this.GetVirtualMachineOperationErrors : string * Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;" Usage="mockableComputeScheduleSubscriptionResource.GetVirtualMachineOperationErrors (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesGetOperationErrors: Get error details on operation errors (like transient errors encountered, additional logs) if they exist.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationErrors</description></item><item><term>Operation Id</term><description>ScheduledActions_GetVirtualMachineOperationErrors</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineOperationErrorsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;&gt; GetVirtualMachineOperationErrorsAsync (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;&gt; GetVirtualMachineOperationErrorsAsync(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.GetVirtualMachineOperationErrorsAsync(System.String,Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineOperationErrorsAsync (locationparameter As String, content As GetOperationErrorsContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GetOperationErrorsResult))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineOperationErrorsAsync : string * Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;&gt;&#xA;override this.GetVirtualMachineOperationErrorsAsync : string * Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;&gt;" Usage="mockableComputeScheduleSubscriptionResource.GetVirtualMachineOperationErrorsAsync (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.GetOperationErrorsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesGetOperationErrors: Get error details on operation errors (like transient errors encountered, additional logs) if they exist.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationErrors</description></item><item><term>Operation Id</term><description>ScheduledActions_GetVirtualMachineOperationErrors</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineOperationStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt; GetVirtualMachineOperationStatus (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt; GetVirtualMachineOperationStatus(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.GetVirtualMachineOperationStatus(System.String,Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineOperationStatus (locationparameter As String, content As GetOperationStatusContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GetOperationStatusResult)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineOperationStatus : string * Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;&#xA;override this.GetVirtualMachineOperationStatus : string * Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;" Usage="mockableComputeScheduleSubscriptionResource.GetVirtualMachineOperationStatus (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesGetOperationStatus: Polling endpoint to read status of operations performed on virtual machines
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationStatus</description></item><item><term>Operation Id</term><description>ScheduledActions_GetVirtualMachineOperationStatus</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineOperationStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;&gt; GetVirtualMachineOperationStatusAsync (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;&gt; GetVirtualMachineOperationStatusAsync(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.GetVirtualMachineOperationStatusAsync(System.String,Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineOperationStatusAsync (locationparameter As String, content As GetOperationStatusContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GetOperationStatusResult))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineOperationStatusAsync : string * Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;&gt;&#xA;override this.GetVirtualMachineOperationStatusAsync : string * Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;&gt;" Usage="mockableComputeScheduleSubscriptionResource.GetVirtualMachineOperationStatusAsync (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.GetOperationStatusContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesGetOperationStatus: Polling endpoint to read status of operations performed on virtual machines
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationStatus</description></item><item><term>Operation Id</term><description>ScheduledActions_GetVirtualMachineOperationStatus</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitVirtualMachineDeallocate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt; SubmitVirtualMachineDeallocate (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt; SubmitVirtualMachineDeallocate(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.SubmitVirtualMachineDeallocate(System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubmitVirtualMachineDeallocate (locationparameter As String, content As SubmitDeallocateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeallocateResourceOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member SubmitVirtualMachineDeallocate : string * Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&#xA;override this.SubmitVirtualMachineDeallocate : string * Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;" Usage="mockableComputeScheduleSubscriptionResource.SubmitVirtualMachineDeallocate (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesSubmitDeallocate: Schedule deallocate operation for a batch of virtual machines at datetime in future.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitDeallocate</description></item><item><term>Operation Id</term><description>ScheduledActions_SubmitVirtualMachineDeallocate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitVirtualMachineDeallocateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt; SubmitVirtualMachineDeallocateAsync (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt; SubmitVirtualMachineDeallocateAsync(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.SubmitVirtualMachineDeallocateAsync(System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubmitVirtualMachineDeallocateAsync (locationparameter As String, content As SubmitDeallocateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeallocateResourceOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member SubmitVirtualMachineDeallocateAsync : string * Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt;&#xA;override this.SubmitVirtualMachineDeallocateAsync : string * Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt;" Usage="mockableComputeScheduleSubscriptionResource.SubmitVirtualMachineDeallocateAsync (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.DeallocateResourceOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.SubmitDeallocateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesSubmitDeallocate: Schedule deallocate operation for a batch of virtual machines at datetime in future.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitDeallocate</description></item><item><term>Operation Id</term><description>ScheduledActions_SubmitVirtualMachineDeallocate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitVirtualMachineHibernate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt; SubmitVirtualMachineHibernate (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt; SubmitVirtualMachineHibernate(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.SubmitVirtualMachineHibernate(System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubmitVirtualMachineHibernate (locationparameter As String, content As SubmitHibernateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HibernateResourceOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member SubmitVirtualMachineHibernate : string * Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&#xA;override this.SubmitVirtualMachineHibernate : string * Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;" Usage="mockableComputeScheduleSubscriptionResource.SubmitVirtualMachineHibernate (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesSubmitHibernate: Schedule hibernate operation for a batch of virtual machines at datetime in future.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitHibernate</description></item><item><term>Operation Id</term><description>ScheduledActions_SubmitVirtualMachineHibernate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitVirtualMachineHibernateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt; SubmitVirtualMachineHibernateAsync (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt; SubmitVirtualMachineHibernateAsync(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.SubmitVirtualMachineHibernateAsync(System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubmitVirtualMachineHibernateAsync (locationparameter As String, content As SubmitHibernateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HibernateResourceOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member SubmitVirtualMachineHibernateAsync : string * Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt;&#xA;override this.SubmitVirtualMachineHibernateAsync : string * Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt;" Usage="mockableComputeScheduleSubscriptionResource.SubmitVirtualMachineHibernateAsync (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.HibernateResourceOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.SubmitHibernateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesSubmitHibernate: Schedule hibernate operation for a batch of virtual machines at datetime in future.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitHibernate</description></item><item><term>Operation Id</term><description>ScheduledActions_SubmitVirtualMachineHibernate</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitVirtualMachineStart">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt; SubmitVirtualMachineStart (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt; SubmitVirtualMachineStart(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.SubmitVirtualMachineStart(System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubmitVirtualMachineStart (locationparameter As String, content As SubmitStartContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StartResourceOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member SubmitVirtualMachineStart : string * Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&#xA;override this.SubmitVirtualMachineStart : string * Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;" Usage="mockableComputeScheduleSubscriptionResource.SubmitVirtualMachineStart (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesSubmitStart: Schedule start operation for a batch of virtual machines at datetime in future.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitStart</description></item><item><term>Operation Id</term><description>ScheduledActions_SubmitVirtualMachineStart</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SubmitVirtualMachineStartAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt; SubmitVirtualMachineStartAsync (string locationparameter, Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt; SubmitVirtualMachineStartAsync(string locationparameter, class Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ComputeSchedule.Mocking.MockableComputeScheduleSubscriptionResource.SubmitVirtualMachineStartAsync(System.String,Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubmitVirtualMachineStartAsync (locationparameter As String, content As SubmitStartContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StartResourceOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member SubmitVirtualMachineStartAsync : string * Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt;&#xA;override this.SubmitVirtualMachineStartAsync : string * Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt;" Usage="mockableComputeScheduleSubscriptionResource.SubmitVirtualMachineStartAsync (locationparameter, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ComputeSchedule</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ComputeSchedule.Models.StartResourceOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationparameter" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ComputeSchedule.Models.SubmitStartContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationparameter"> The location name. </param>
        <param name="content"> The request body. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            VirtualMachinesSubmitStart: Schedule start operation for a batch of virtual machines at datetime in future.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitStart</description></item><item><term>Operation Id</term><description>ScheduledActions_SubmitVirtualMachineStart</description></item><item><term>Default Api Version</term><description>2024-10-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationparameter" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationparameter" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
