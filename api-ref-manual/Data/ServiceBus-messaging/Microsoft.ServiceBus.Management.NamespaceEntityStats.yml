### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats
  commentId: T:Microsoft.ServiceBus.Management.NamespaceEntityStats
  id: NamespaceEntityStats
  parent: Microsoft.ServiceBus.Management
  children:
  - Microsoft.ServiceBus.Management.NamespaceEntityStats.#ctor
  - Microsoft.ServiceBus.Management.NamespaceEntityStats.EventHubCount
  - Microsoft.ServiceBus.Management.NamespaceEntityStats.NotificationHubCount
  - Microsoft.ServiceBus.Management.NamespaceEntityStats.QueueCount
  - Microsoft.ServiceBus.Management.NamespaceEntityStats.RelayCount
  - Microsoft.ServiceBus.Management.NamespaceEntityStats.Serializer
  - Microsoft.ServiceBus.Management.NamespaceEntityStats.TopicCount
  langs:
  - csharp
  - vb
  name: NamespaceEntityStats
  nameWithType: NamespaceEntityStats
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: NamespaceEntityStats
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
    startLine: 11
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  syntax:
    content: >-
      [DataContract(Name = "NamespaceEntityStats", Namespace = "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")]

      public class NamespaceEntityStats
    content.vb: >-
      <DataContract(Name:="NamespaceEntityStats", Namespace:="http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")>

      Public Class NamespaceEntityStats
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: NamespaceEntityStats
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/netservices/2010/10/servicebus/connect
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.Serializer
  commentId: F:Microsoft.ServiceBus.Management.NamespaceEntityStats.Serializer
  id: Serializer
  parent: Microsoft.ServiceBus.Management.NamespaceEntityStats
  langs:
  - csharp
  - vb
  name: Serializer
  nameWithType: NamespaceEntityStats.Serializer
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.Serializer
  type: Field
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Serializer
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
    startLine: 16
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Specifies the status of the serializer.
  example: []
  syntax:
    content: public static readonly DataContractSerializer Serializer
    content.vb: Public Shared ReadOnly Serializer As DataContractSerializer
    return:
      type: System.Runtime.Serialization.DataContractSerializer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.#ctor
  commentId: M:Microsoft.ServiceBus.Management.NamespaceEntityStats.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.Management.NamespaceEntityStats
  langs:
  - csharp
  - vb
  name: NamespaceEntityStats()
  nameWithType: NamespaceEntityStats.NamespaceEntityStats()
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.NamespaceEntityStats()
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
    startLine: 19
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Initializes a new instance of the4 <xref href="Microsoft.ServiceBus.Management.NamespaceEntityStats" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public NamespaceEntityStats()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.Management.NamespaceEntityStats.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.TopicCount
  commentId: P:Microsoft.ServiceBus.Management.NamespaceEntityStats.TopicCount
  id: TopicCount
  parent: Microsoft.ServiceBus.Management.NamespaceEntityStats
  langs:
  - csharp
  - vb
  name: TopicCount
  nameWithType: NamespaceEntityStats.TopicCount
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.TopicCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: TopicCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
    startLine: 25
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the number of topics associated with the status.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "TopicCount", IsRequired = false, Order = 100, EmitDefaultValue = true)]

      public long TopicCount { get; set; }
    content.vb: >-
      <DataMember(Name:="TopicCount", IsRequired:=False, Order:=100, EmitDefaultValue:=True)>

      Public Property TopicCount As Long
    parameters: []
    return:
      type: System.Int64
      description: The number of topics associated with the status.
  overload: Microsoft.ServiceBus.Management.NamespaceEntityStats.TopicCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: TopicCount
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 100
    - name: EmitDefaultValue
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.QueueCount
  commentId: P:Microsoft.ServiceBus.Management.NamespaceEntityStats.QueueCount
  id: QueueCount
  parent: Microsoft.ServiceBus.Management.NamespaceEntityStats
  langs:
  - csharp
  - vb
  name: QueueCount
  nameWithType: NamespaceEntityStats.QueueCount
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.QueueCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: QueueCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
    startLine: 30
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the number of queue associated with the status.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "QueueCount", IsRequired = false, Order = 101, EmitDefaultValue = true)]

      public long QueueCount { get; set; }
    content.vb: >-
      <DataMember(Name:="QueueCount", IsRequired:=False, Order:=101, EmitDefaultValue:=True)>

      Public Property QueueCount As Long
    parameters: []
    return:
      type: System.Int64
      description: The number of queue associated with the status.
  overload: Microsoft.ServiceBus.Management.NamespaceEntityStats.QueueCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: QueueCount
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 101
    - name: EmitDefaultValue
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.RelayCount
  commentId: P:Microsoft.ServiceBus.Management.NamespaceEntityStats.RelayCount
  id: RelayCount
  parent: Microsoft.ServiceBus.Management.NamespaceEntityStats
  langs:
  - csharp
  - vb
  name: RelayCount
  nameWithType: NamespaceEntityStats.RelayCount
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.RelayCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: RelayCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
    startLine: 35
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the number of relays associated with the status.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "RelayCount", IsRequired = false, Order = 102, EmitDefaultValue = true)]

      public long RelayCount { get; set; }
    content.vb: >-
      <DataMember(Name:="RelayCount", IsRequired:=False, Order:=102, EmitDefaultValue:=True)>

      Public Property RelayCount As Long
    parameters: []
    return:
      type: System.Int64
      description: The number of relays associated with the status.
  overload: Microsoft.ServiceBus.Management.NamespaceEntityStats.RelayCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: RelayCount
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 102
    - name: EmitDefaultValue
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.NotificationHubCount
  commentId: P:Microsoft.ServiceBus.Management.NamespaceEntityStats.NotificationHubCount
  id: NotificationHubCount
  parent: Microsoft.ServiceBus.Management.NamespaceEntityStats
  langs:
  - csharp
  - vb
  name: NotificationHubCount
  nameWithType: NamespaceEntityStats.NotificationHubCount
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.NotificationHubCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: NotificationHubCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
    startLine: 40
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the number of notification hub.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "NotificationHubCount", IsRequired = false, Order = 103, EmitDefaultValue = true)]

      public long NotificationHubCount { get; set; }
    content.vb: >-
      <DataMember(Name:="NotificationHubCount", IsRequired:=False, Order:=103, EmitDefaultValue:=True)>

      Public Property NotificationHubCount As Long
    parameters: []
    return:
      type: System.Int64
      description: The number of notification hub.
  overload: Microsoft.ServiceBus.Management.NamespaceEntityStats.NotificationHubCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: NotificationHubCount
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 103
    - name: EmitDefaultValue
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.EventHubCount
  commentId: P:Microsoft.ServiceBus.Management.NamespaceEntityStats.EventHubCount
  id: EventHubCount
  parent: Microsoft.ServiceBus.Management.NamespaceEntityStats
  langs:
  - csharp
  - vb
  name: EventHubCount
  nameWithType: NamespaceEntityStats.EventHubCount
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.EventHubCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EventHubCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceEntityStats.cs
    startLine: 45
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the number of event hub.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "EventHubCount", IsRequired = false, Order = 104, EmitDefaultValue = true)]

      public long EventHubCount { get; set; }
    content.vb: >-
      <DataMember(Name:="EventHubCount", IsRequired:=False, Order:=104, EmitDefaultValue:=True)>

      Public Property EventHubCount As Long
    parameters: []
    return:
      type: System.Int64
      description: The number of event hub.
  overload: Microsoft.ServiceBus.Management.NamespaceEntityStats.EventHubCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: EventHubCount
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 104
    - name: EmitDefaultValue
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceBus.Management
  commentId: N:Microsoft.ServiceBus.Management
  isExternal: false
  name: Microsoft.ServiceBus.Management
  nameWithType: Microsoft.ServiceBus.Management
  fullName: Microsoft.ServiceBus.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization.DataContractSerializer
  commentId: T:System.Runtime.Serialization.DataContractSerializer
  parent: System.Runtime.Serialization
  isExternal: true
  name: DataContractSerializer
  nameWithType: DataContractSerializer
  fullName: System.Runtime.Serialization.DataContractSerializer
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats
  commentId: T:Microsoft.ServiceBus.Management.NamespaceEntityStats
  isExternal: false
  name: NamespaceEntityStats
  nameWithType: NamespaceEntityStats
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Management.NamespaceEntityStats.#ctor
  isExternal: false
  name: NamespaceEntityStats
  nameWithType: NamespaceEntityStats.NamespaceEntityStats
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.NamespaceEntityStats
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.TopicCount*
  commentId: Overload:Microsoft.ServiceBus.Management.NamespaceEntityStats.TopicCount
  isExternal: false
  name: TopicCount
  nameWithType: NamespaceEntityStats.TopicCount
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.TopicCount
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.QueueCount*
  commentId: Overload:Microsoft.ServiceBus.Management.NamespaceEntityStats.QueueCount
  isExternal: false
  name: QueueCount
  nameWithType: NamespaceEntityStats.QueueCount
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.QueueCount
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.RelayCount*
  commentId: Overload:Microsoft.ServiceBus.Management.NamespaceEntityStats.RelayCount
  isExternal: false
  name: RelayCount
  nameWithType: NamespaceEntityStats.RelayCount
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.RelayCount
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.NotificationHubCount*
  commentId: Overload:Microsoft.ServiceBus.Management.NamespaceEntityStats.NotificationHubCount
  isExternal: false
  name: NotificationHubCount
  nameWithType: NamespaceEntityStats.NotificationHubCount
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.NotificationHubCount
- uid: Microsoft.ServiceBus.Management.NamespaceEntityStats.EventHubCount*
  commentId: Overload:Microsoft.ServiceBus.Management.NamespaceEntityStats.EventHubCount
  isExternal: false
  name: EventHubCount
  nameWithType: NamespaceEntityStats.EventHubCount
  fullName: Microsoft.ServiceBus.Management.NamespaceEntityStats.EventHubCount
