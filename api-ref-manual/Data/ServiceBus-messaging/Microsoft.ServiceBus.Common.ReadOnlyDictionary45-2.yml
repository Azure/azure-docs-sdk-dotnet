### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  commentId: T:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  id: ReadOnlyDictionary45`2
  parent: Microsoft.ServiceBus.Common
  children:
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ContainsKey(`0)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Count
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Dictionary
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.GetEnumerator
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Item(`0)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Keys
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#IsSynchronized
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#SyncRoot
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Clear
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Contains(System.Object)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#GetEnumerator
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsFixedSize
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsReadOnly
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Item(System.Object)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Keys
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Remove(System.Object)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Values
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.TryGetValue(`0,`1@)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Values
  langs:
  - csharp
  - vb
  name: ReadOnlyDictionary45<TKey, TValue>
  nameWithType: ReadOnlyDictionary45<TKey, TValue>
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ReadOnlyDictionary45
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 25
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: >-
      [Serializable]

      public class ReadOnlyDictionary45<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable
    content.vb: >-
      <Serializable>

      Public Class ReadOnlyDictionary45(Of TKey, TValue)
          Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IDictionary, ICollection, IEnumerable
    typeParameters:
    - id: TKey
      description: ''
    - id: TValue
      description: ''
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.IDictionary
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue)
  name.vb: ReadOnlyDictionary45(Of TKey, TValue)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1})'
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ReadOnlyDictionary45(IDictionary<TKey, TValue>)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ReadOnlyDictionary45(IDictionary<TKey, TValue>)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ReadOnlyDictionary45(System.Collections.Generic.IDictionary<TKey, TValue>)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 41
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: public ReadOnlyDictionary45(IDictionary<TKey, TValue> dictionary)
    content.vb: Public Sub New(dictionary As IDictionary(Of TKey, TValue))
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      description: ''
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.#ctor*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ReadOnlyDictionary45(IDictionary(Of TKey, TValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ReadOnlyDictionary45(System.Collections.Generic.IDictionary(Of TKey, TValue))
  name.vb: ReadOnlyDictionary45(IDictionary(Of TKey, TValue))
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Dictionary
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Dictionary
  id: Dictionary
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: Dictionary
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Dictionary
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.Dictionary
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Dictionary
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 58
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: protected IDictionary<TKey, TValue> Dictionary { get; }
    content.vb: Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TValue)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Dictionary*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Dictionary
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).Dictionary
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Keys
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Keys
  id: Keys
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Keys
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.Keys
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Keys
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 63
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: public ReadOnlyDictionary45<TKey, TValue>.KeyCollection Keys { get; }
    content.vb: Public ReadOnly Property Keys As ReadOnlyDictionary45(Of TKey, TValue).KeyCollection
    parameters: []
    return:
      type: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Keys*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Keys
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).Keys
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Values
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Values
  id: Values
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Values
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.Values
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Values
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 74
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: public ReadOnlyDictionary45<TKey, TValue>.ValueCollection Values { get; }
    content.vb: Public ReadOnly Property Values As ReadOnlyDictionary45(Of TKey, TValue).ValueCollection
    parameters: []
    return:
      type: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Values*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Values
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).Values
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ContainsKey(`0)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ContainsKey(TKey)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ContainsKey(TKey)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ContainsKey(TKey)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ContainsKey
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 88
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: public bool ContainsKey(TKey key)
    content.vb: Public Function ContainsKey(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: ''
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ContainsKey*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ContainsKey(TKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ContainsKey(TKey)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary<TKey, TValue>.Keys
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary<TKey, TValue>.Keys
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 92
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: ICollection<TKey> IDictionary<TKey, TValue>.Keys { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TKey}}
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.TryGetValue(`0,`1@)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey, out TValue)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: TryGetValue
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 101
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: public bool TryGetValue(TKey key, out TValue value)
    content.vb: Public Function TryGetValue(key As TKey, ByRef value As TValue) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: ''
    - id: value
      type: '{TValue}'
      description: ''
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.TryGetValue*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
  name.vb: TryGetValue(TKey, ByRef TValue)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Values
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary<TKey, TValue>.Values
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary<TKey, TValue>.Values
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.IDictionary<TKey,TValue>.Values
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 105
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: ICollection<TValue> IDictionary<TKey, TValue>.Values { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TValue}}
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Item(`0)
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Item(`0)
  id: Item(`0)
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: Item[TKey]
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Item[TKey]
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.Item[TKey]
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: this[]
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 113
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: public TValue this[TKey key] { get; }
    content.vb: Public ReadOnly Property Item(key As TKey) As TValue
    parameters:
    - id: key
      type: '{TKey}'
      description: ''
    return:
      type: '{TValue}'
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Item*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Item(TKey)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.IDictionary<TKey,TValue>.Add
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 119
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: void IDictionary<TKey, TValue>.Add(TKey key, TValue value)
    content.vb: Sub System.Collections.Generic.IDictionary<TKey,TValue>.Add(key As TKey, value As TValue) Implements IDictionary(Of TKey, TValue).Add
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary<TKey, TValue>.Remove(TKey)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.IDictionary<TKey,TValue>.Remove
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 128
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: bool IDictionary<TKey, TValue>.Remove(TKey key)
    content.vb: Function System.Collections.Generic.IDictionary<TKey,TValue>.Remove(key As TKey) As Boolean Implements IDictionary(Of TKey, TValue).Remove
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary<TKey, TValue>.Item[TKey]
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary<TKey, TValue>.Item[TKey]
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.IDictionary<TKey,TValue>.this[]
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 137
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: TValue IDictionary<TKey, TValue>.this[TKey key] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Item(key As TKey) As TValue Implements IDictionary(Of TKey, TValue).this
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: '{TValue}'
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)
  modifiers.csharp:
  - get
  - set
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Count
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Count
  id: Count
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Count
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.Count
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Count
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 156
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Count*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
  - System.Collections.ICollection.Count
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).Count
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 160
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: bool ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue> item)
    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(item As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 164
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: void ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(array As KeyValuePair(Of TKey, TValue)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
    - id: arrayIndex
      type: System.Int32
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 168
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: bool ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 172
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: void ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue> item)
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(item As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<TKey, TValue>>.Clear()
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Clear()
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 181
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: void ICollection<KeyValuePair<TKey, TValue>>.Clear()
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Clear
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 190
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: bool ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue> item)
    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(item As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.GetEnumerator
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.GetEnumerator()
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: GetEnumerator
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 204
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of TKey, TValue))
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).GetEnumerator()
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IEnumerable.GetEnumerator()
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 213
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary.Add(Object, Object)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.Add(Object, Object)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IDictionary.Add
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 231
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: void IDictionary.Add(object key, object value)
    content.vb: Sub System.Collections.IDictionary.Add(key As Object, value As Object) Implements IDictionary.Add
    parameters:
    - id: key
      type: System.Object
      description: ''
    - id: value
      type: System.Object
      description: ''
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Add*
  implements:
  - System.Collections.IDictionary.Add(System.Object,System.Object)
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Add(Object, Object)
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Add(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Clear
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Clear
  id: System#Collections#IDictionary#Clear
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary.Clear()
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.Clear()
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.Clear()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IDictionary.Clear
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 241
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: void IDictionary.Clear()
    content.vb: Sub System.Collections.IDictionary.Clear Implements IDictionary.Clear
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Clear*
  implements:
  - System.Collections.IDictionary.Clear
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Clear()
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Clear()
  name.vb: System.Collections.IDictionary.Clear()
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Contains(System.Object)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary.Contains(Object)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.Contains(Object)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IDictionary.Contains
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 252
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: bool IDictionary.Contains(object key)
    content.vb: Function System.Collections.IDictionary.Contains(key As Object) As Boolean Implements IDictionary.Contains
    parameters:
    - id: key
      type: System.Object
      description: ''
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Contains*
  implements:
  - System.Collections.IDictionary.Contains(System.Object)
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Contains(Object)
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Contains(System.Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#GetEnumerator
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#GetEnumerator
  id: System#Collections#IDictionary#GetEnumerator
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary.GetEnumerator()
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.GetEnumerator()
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IDictionary.GetEnumerator
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 257
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: IDictionaryEnumerator IDictionary.GetEnumerator()
    content.vb: Function System.Collections.IDictionary.GetEnumerator As IDictionaryEnumerator Implements IDictionary.GetEnumerator
    return:
      type: System.Collections.IDictionaryEnumerator
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#GetEnumerator*
  implements:
  - System.Collections.IDictionary.GetEnumerator
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  name.vb: System.Collections.IDictionary.GetEnumerator()
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsFixedSize
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary.IsFixedSize
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.IsFixedSize
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IDictionary.IsFixedSize
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 265
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: bool IDictionary.IsFixedSize { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsFixedSize As Boolean Implements IDictionary.IsFixedSize
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsFixedSize*
  implements:
  - System.Collections.IDictionary.IsFixedSize
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsReadOnly
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary.IsReadOnly
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.IsReadOnly
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IDictionary.IsReadOnly
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 269
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: bool IDictionary.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsReadOnly As Boolean Implements IDictionary.IsReadOnly
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsReadOnly*
  implements:
  - System.Collections.IDictionary.IsReadOnly
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Keys
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary.Keys
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.Keys
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.Keys
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IDictionary.Keys
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 273
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: ICollection IDictionary.Keys { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Keys As ICollection Implements IDictionary.Keys
    parameters: []
    return:
      type: System.Collections.ICollection
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Keys*
  implements:
  - System.Collections.IDictionary.Keys
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Keys
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Remove(System.Object)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary.Remove(Object)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.Remove(Object)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IDictionary.Remove
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 281
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: void IDictionary.Remove(object key)
    content.vb: Sub System.Collections.IDictionary.Remove(key As Object) Implements IDictionary.Remove
    parameters:
    - id: key
      type: System.Object
      description: ''
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Remove*
  implements:
  - System.Collections.IDictionary.Remove(System.Object)
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Remove(Object)
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Remove(System.Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Values
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary.Values
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.Values
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.Values
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IDictionary.Values
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 290
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: ICollection IDictionary.Values { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Values As ICollection Implements IDictionary.Values
    parameters: []
    return:
      type: System.Collections.ICollection
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Values*
  implements:
  - System.Collections.IDictionary.Values
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Values
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Item(System.Object)
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: IDictionary.Item[Object]
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.Item[Object]
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.Item[System.Object]
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IDictionary.this[]
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 296
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: object IDictionary.this[object key] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Item(key As Object) As Object Implements IDictionary.this
    parameters:
    - id: key
      type: System.Object
    return:
      type: System.Object
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Item*
  implements:
  - System.Collections.IDictionary.Item(System.Object)
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Item(Object)
  modifiers.csharp:
  - get
  - set
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ICollection.CopyTo(Array, Int32)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.ICollection.CopyTo
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 316
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
      description: ''
    - id: index
      type: System.Int32
      description: ''
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#CopyTo*
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#IsSynchronized
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ICollection.IsSynchronized
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.ICollection.IsSynchronized
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 362
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#IsSynchronized*
  implements:
  - System.Collections.ICollection.IsSynchronized
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#SyncRoot
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ICollection.SyncRoot
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.ICollection.SyncRoot
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 366
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#SyncRoot*
  implements:
  - System.Collections.ICollection.SyncRoot
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
references:
- uid: Microsoft.ServiceBus.Common
  commentId: N:Microsoft.ServiceBus.Common
  isExternal: false
  name: Microsoft.ServiceBus.Common
  nameWithType: Microsoft.ServiceBus.Common
  fullName: Microsoft.ServiceBus.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.IDictionary{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<TKey, TValue>>
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue))
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: ICollection(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.#ctor
  isExternal: false
  name: ReadOnlyDictionary45
  nameWithType: ReadOnlyDictionary45.ReadOnlyDictionary45
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ReadOnlyDictionary45
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Dictionary*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Dictionary
  isExternal: false
  name: Dictionary
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Dictionary
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.Dictionary
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Dictionary
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).Dictionary
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Keys*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Keys
  isExternal: false
  name: Keys
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Keys
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.Keys
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Keys
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).Keys
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection
  commentId: T:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection
  parent: Microsoft.ServiceBus.Common
  isExternal: false
  name: ReadOnlyDictionary45.KeyCollection<>
  nameWithType: ReadOnlyDictionary45.KeyCollection<>
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.KeyCollection<>
  nameWithType.vb: ReadOnlyDictionary45.KeyCollection(Of )
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.KeyCollection(Of )
  name.vb: ReadOnlyDictionary45.KeyCollection(Of )
  spec.csharp:
  - uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection
    name: ReadOnlyDictionary45.KeyCollection
    nameWithType: ReadOnlyDictionary45.KeyCollection
    fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.KeyCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.KeyCollection
    name: ReadOnlyDictionary45.KeyCollection
    nameWithType: ReadOnlyDictionary45.KeyCollection
    fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.KeyCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Values*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Values
  isExternal: false
  name: Values
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Values
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.Values
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Values
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).Values
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  commentId: T:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  parent: Microsoft.ServiceBus.Common
  isExternal: false
  name: ReadOnlyDictionary45.ValueCollection<>
  nameWithType: ReadOnlyDictionary45.ValueCollection<>
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection<>
  nameWithType.vb: ReadOnlyDictionary45.ValueCollection(Of )
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection(Of )
  name.vb: ReadOnlyDictionary45.ValueCollection(Of )
  spec.csharp:
  - uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
    name: ReadOnlyDictionary45.ValueCollection
    nameWithType: ReadOnlyDictionary45.ValueCollection
    fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
    name: ReadOnlyDictionary45.ValueCollection
    nameWithType: ReadOnlyDictionary45.ValueCollection
    fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ContainsKey*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ContainsKey
  isExternal: false
  name: ContainsKey
  nameWithType: ReadOnlyDictionary45.ContainsKey
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ContainsKey
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<TKey, TValue>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of TKey, TValue).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<TKey, TValue>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of TKey, TValue).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: TKey
  isExternal: false
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  isExternal: false
  name: IDictionary<TKey, TValue>.Keys
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary<TKey, TValue>.Keys
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Keys
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Keys
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.ICollection{{TKey}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TKey>
  nameWithType: ICollection<TKey>
  fullName: System.Collections.Generic.ICollection<TKey>
  nameWithType.vb: ICollection(Of TKey)
  fullname.vb: System.Collections.Generic.ICollection(Of TKey)
  name.vb: ICollection(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Keys
  commentId: P:System.Collections.Generic.IDictionary`2.Keys
  isExternal: true
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.TryGetValue*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.TryGetValue
  isExternal: false
  name: TryGetValue
  nameWithType: ReadOnlyDictionary45.TryGetValue
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.TryGetValue
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<TKey, TValue>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of TKey, TValue).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<TKey, TValue>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of TKey, TValue).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: TValue
  isExternal: false
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  isExternal: false
  name: IDictionary<TKey, TValue>.Values
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary<TKey, TValue>.Values
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Values
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Values
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: System.Collections.Generic.ICollection{{TValue}}
  commentId: T:System.Collections.Generic.ICollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TValue>
  nameWithType: ICollection<TValue>
  fullName: System.Collections.Generic.ICollection<TValue>
  nameWithType.vb: ICollection(Of TValue)
  fullname.vb: System.Collections.Generic.ICollection(Of TValue)
  name.vb: ICollection(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Values
  commentId: P:System.Collections.Generic.IDictionary`2.Values
  isExternal: true
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Item*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Item
  isExternal: false
  name: Item
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Item
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.Item
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Item
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).Item
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add
  isExternal: false
  name: IDictionary.Add
  nameWithType: ReadOnlyDictionary45.IDictionary.Add
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.IDictionary.Add
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.Generic.IDictionary<TKey,TValue>.Add
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.IDictionary<TKey,TValue>.Add
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Add
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<TKey, TValue>.Add
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of TKey, TValue).Add
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
  isExternal: true
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<TKey, TValue>.Add
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of TKey, TValue).Add
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove
  isExternal: false
  name: IDictionary.Remove
  nameWithType: ReadOnlyDictionary45.IDictionary.Remove
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.IDictionary.Remove
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.Generic.IDictionary<TKey,TValue>.Remove
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.IDictionary<TKey,TValue>.Remove
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Remove
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<TKey, TValue>.Remove
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of TKey, TValue).Remove
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  isExternal: true
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<TKey, TValue>.Remove
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of TKey, TValue).Remove
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item
  isExternal: false
  name: IDictionary<TKey, TValue>.Item
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary<TKey, TValue>.Item
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Item
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Item
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Item
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Item
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Item(`0)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  name: Item[TKey]
  nameWithType: IDictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<TKey, TValue>.Item
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of TKey, TValue).Item
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: IDictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<TKey, TValue>.Item
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of TKey, TValue).Item
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Count*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.Count
  isExternal: false
  name: Count
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Count
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.Count
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Count
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Count
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count
- uid: System.Collections.ICollection.Count
  commentId: P:System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: true
  name: Count
  nameWithType: ICollection.Count
  fullName: System.Collections.ICollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains
  isExternal: false
  name: ICollection.Contains
  nameWithType: ReadOnlyDictionary45.ICollection.Contains
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.ICollection.Contains
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(KeyValuePair<TKey, TValue>)
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Contains(KeyValuePair(Of TKey, TValue))
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Contains(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Contains
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of KeyValuePair(Of TKey, TValue)).Contains
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.KeyValuePair{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo
  isExternal: false
  name: ICollection.CopyTo
  nameWithType: ReadOnlyDictionary45.ICollection.CopyTo
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.ICollection.CopyTo
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)
  name.vb: CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<KeyValuePair<TKey, TValue>>.CopyTo
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
  name: KeyValuePair<TKey, TValue>[]
  nameWithType: KeyValuePair<TKey, TValue>[]
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>[]
  nameWithType.vb: KeyValuePair(Of TKey, TValue)()
  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)()
  name.vb: KeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  isExternal: false
  name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add
  isExternal: false
  name: ICollection.Add
  nameWithType: ReadOnlyDictionary45.ICollection.Add
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.ICollection.Add
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(KeyValuePair<TKey, TValue>)
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Add(KeyValuePair(Of TKey, TValue))
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Add(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Add
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of KeyValuePair(Of TKey, TValue)).Add
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  isExternal: false
  name: ICollection.Clear
  nameWithType: ReadOnlyDictionary45.ICollection.Clear
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.ICollection.Clear
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Clear
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Clear()
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Clear
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of KeyValuePair(Of TKey, TValue)).Clear
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove
  isExternal: false
  name: ICollection.Remove
  nameWithType: ReadOnlyDictionary45.ICollection.Remove
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.ICollection.Remove
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(KeyValuePair<TKey, TValue>)
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Remove(KeyValuePair(Of TKey, TValue))
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Remove(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Remove
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of KeyValuePair(Of TKey, TValue)).Remove
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.GetEnumerator*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: ReadOnlyDictionary45.GetEnumerator
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerator<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: ReadOnlyDictionary45.IEnumerable.GetEnumerator
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Add*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Add
  isExternal: false
  name: IDictionary.Add
  nameWithType: ReadOnlyDictionary45.IDictionary.Add
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.IDictionary.Add
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.IDictionary.Add
  name.vb: System.Collections.IDictionary.Add
- uid: System.Collections.IDictionary.Add(System.Object,System.Object)
  commentId: M:System.Collections.IDictionary.Add(System.Object,System.Object)
  parent: System.Collections.IDictionary
  isExternal: true
  name: Add(Object, Object)
  nameWithType: IDictionary.Add(Object, Object)
  fullName: System.Collections.IDictionary.Add(System.Object, System.Object)
  spec.csharp:
  - uid: System.Collections.IDictionary.Add(System.Object,System.Object)
    name: Add
    nameWithType: IDictionary.Add
    fullName: System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.Add(System.Object,System.Object)
    name: Add
    nameWithType: IDictionary.Add
    fullName: System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Clear*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Clear
  isExternal: false
  name: IDictionary.Clear
  nameWithType: ReadOnlyDictionary45.IDictionary.Clear
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.IDictionary.Clear
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.IDictionary.Clear
  name.vb: System.Collections.IDictionary.Clear
- uid: System.Collections.IDictionary.Clear
  commentId: M:System.Collections.IDictionary.Clear
  parent: System.Collections.IDictionary
  isExternal: true
  name: Clear()
  nameWithType: IDictionary.Clear()
  fullName: System.Collections.IDictionary.Clear()
  spec.csharp:
  - uid: System.Collections.IDictionary.Clear
    name: Clear
    nameWithType: IDictionary.Clear
    fullName: System.Collections.IDictionary.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.Clear
    name: Clear
    nameWithType: IDictionary.Clear
    fullName: System.Collections.IDictionary.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Contains*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Contains
  isExternal: false
  name: IDictionary.Contains
  nameWithType: ReadOnlyDictionary45.IDictionary.Contains
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.IDictionary.Contains
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.IDictionary.Contains
  name.vb: System.Collections.IDictionary.Contains
- uid: System.Collections.IDictionary.Contains(System.Object)
  commentId: M:System.Collections.IDictionary.Contains(System.Object)
  parent: System.Collections.IDictionary
  isExternal: true
  name: Contains(Object)
  nameWithType: IDictionary.Contains(Object)
  fullName: System.Collections.IDictionary.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.IDictionary.Contains(System.Object)
    name: Contains
    nameWithType: IDictionary.Contains
    fullName: System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.Contains(System.Object)
    name: Contains
    nameWithType: IDictionary.Contains
    fullName: System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#GetEnumerator*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#GetEnumerator
  isExternal: false
  name: IDictionary.GetEnumerator
  nameWithType: ReadOnlyDictionary45.IDictionary.GetEnumerator
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.IDictionary.GetEnumerator
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.IDictionary.GetEnumerator
  name.vb: System.Collections.IDictionary.GetEnumerator
- uid: System.Collections.IDictionary.GetEnumerator
  commentId: M:System.Collections.IDictionary.GetEnumerator
  parent: System.Collections.IDictionary
  isExternal: true
  name: GetEnumerator()
  nameWithType: IDictionary.GetEnumerator()
  fullName: System.Collections.IDictionary.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IDictionary.GetEnumerator
    name: GetEnumerator
    nameWithType: IDictionary.GetEnumerator
    fullName: System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.GetEnumerator
    name: GetEnumerator
    nameWithType: IDictionary.GetEnumerator
    fullName: System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IDictionaryEnumerator
  commentId: T:System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsFixedSize*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsFixedSize
  isExternal: false
  name: IDictionary.IsFixedSize
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.IsFixedSize
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.IDictionary.IsFixedSize
  commentId: P:System.Collections.IDictionary.IsFixedSize
  parent: System.Collections.IDictionary
  isExternal: true
  name: IsFixedSize
  nameWithType: IDictionary.IsFixedSize
  fullName: System.Collections.IDictionary.IsFixedSize
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsReadOnly*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#IsReadOnly
  isExternal: false
  name: IDictionary.IsReadOnly
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.IsReadOnly
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.IDictionary.IsReadOnly
  commentId: P:System.Collections.IDictionary.IsReadOnly
  parent: System.Collections.IDictionary
  isExternal: true
  name: IsReadOnly
  nameWithType: IDictionary.IsReadOnly
  fullName: System.Collections.IDictionary.IsReadOnly
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Keys*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Keys
  isExternal: false
  name: IDictionary.Keys
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.Keys
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.Keys
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Keys
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
- uid: System.Collections.IDictionary.Keys
  commentId: P:System.Collections.IDictionary.Keys
  parent: System.Collections.IDictionary
  isExternal: true
  name: Keys
  nameWithType: IDictionary.Keys
  fullName: System.Collections.IDictionary.Keys
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Remove*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Remove
  isExternal: false
  name: IDictionary.Remove
  nameWithType: ReadOnlyDictionary45.IDictionary.Remove
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.IDictionary.Remove
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.IDictionary.Remove
  name.vb: System.Collections.IDictionary.Remove
- uid: System.Collections.IDictionary.Remove(System.Object)
  commentId: M:System.Collections.IDictionary.Remove(System.Object)
  parent: System.Collections.IDictionary
  isExternal: true
  name: Remove(Object)
  nameWithType: IDictionary.Remove(Object)
  fullName: System.Collections.IDictionary.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.IDictionary.Remove(System.Object)
    name: Remove
    nameWithType: IDictionary.Remove
    fullName: System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.Remove(System.Object)
    name: Remove
    nameWithType: IDictionary.Remove
    fullName: System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Values*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Values
  isExternal: false
  name: IDictionary.Values
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.Values
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.Values
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Values
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
- uid: System.Collections.IDictionary.Values
  commentId: P:System.Collections.IDictionary.Values
  parent: System.Collections.IDictionary
  isExternal: true
  name: Values
  nameWithType: IDictionary.Values
  fullName: System.Collections.IDictionary.Values
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Item*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#IDictionary#Item
  isExternal: false
  name: IDictionary.Item
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.IDictionary.Item
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.IDictionary.Item
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Item
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.IDictionary.Item
  name.vb: System.Collections.IDictionary.Item
- uid: System.Collections.IDictionary.Item(System.Object)
  commentId: P:System.Collections.IDictionary.Item(System.Object)
  parent: System.Collections.IDictionary
  isExternal: true
  name: Item[Object]
  nameWithType: IDictionary.Item[Object]
  fullName: System.Collections.IDictionary.Item[System.Object]
  nameWithType.vb: IDictionary.Item(Object)
  fullname.vb: System.Collections.IDictionary.Item(System.Object)
  name.vb: Item(Object)
  spec.csharp:
  - uid: System.Collections.IDictionary.Item(System.Object)
    name: Item
    nameWithType: IDictionary.Item
    fullName: System.Collections.IDictionary.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.IDictionary.Item(System.Object)
    name: Item
    nameWithType: IDictionary.Item
    fullName: System.Collections.IDictionary.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#CopyTo*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#CopyTo
  isExternal: false
  name: ICollection.CopyTo
  nameWithType: ReadOnlyDictionary45.ICollection.CopyTo
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.System.Collections.ICollection.CopyTo
  nameWithType.vb: ReadOnlyDictionary45.System.Collections.ICollection.CopyTo
  name.vb: System.Collections.ICollection.CopyTo
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#IsSynchronized*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#IsSynchronized
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ICollection.IsSynchronized
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: true
  name: IsSynchronized
  nameWithType: ICollection.IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#SyncRoot*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.System#Collections#ICollection#SyncRoot
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ICollection.SyncRoot
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: true
  name: SyncRoot
  nameWithType: ICollection.SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
