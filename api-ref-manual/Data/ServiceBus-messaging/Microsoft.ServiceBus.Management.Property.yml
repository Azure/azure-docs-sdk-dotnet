### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Management.Property
  commentId: T:Microsoft.ServiceBus.Management.Property
  id: Property
  parent: Microsoft.ServiceBus.Management
  children:
  - Microsoft.ServiceBus.Management.Property.Clone
  - Microsoft.ServiceBus.Management.Property.Created
  - Microsoft.ServiceBus.Management.Property.Modified
  - Microsoft.ServiceBus.Management.Property.Name
  - Microsoft.ServiceBus.Management.Property.Revision
  - Microsoft.ServiceBus.Management.Property.Serializer
  - Microsoft.ServiceBus.Management.Property.Value
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: Property
  fullName: Microsoft.ServiceBus.Management.Property
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Property
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
    startLine: 12
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Represents the service bus property.
  example: []
  syntax:
    content: >-
      [DataContract(Name = "Property", Namespace = "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")]

      public class Property : ICloneable
    content.vb: >-
      <DataContract(Name:="Property", Namespace:="http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")>

      Public Class Property
          Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Property
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/netservices/2010/10/servicebus/connect
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.Management.Property.Serializer
  commentId: F:Microsoft.ServiceBus.Management.Property.Serializer
  id: Serializer
  parent: Microsoft.ServiceBus.Management.Property
  langs:
  - csharp
  - vb
  name: Serializer
  nameWithType: Property.Serializer
  fullName: Microsoft.ServiceBus.Management.Property.Serializer
  type: Field
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Serializer
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
    startLine: 24
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: The serializer associated with the property.
  example: []
  syntax:
    content: public static readonly DataContractSerializer Serializer
    content.vb: Public Shared ReadOnly Serializer As DataContractSerializer
    return:
      type: System.Runtime.Serialization.DataContractSerializer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.ServiceBus.Management.Property.Name
  commentId: P:Microsoft.ServiceBus.Management.Property.Name
  id: Name
  parent: Microsoft.ServiceBus.Management.Property
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Property.Name
  fullName: Microsoft.ServiceBus.Management.Property.Name
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Name
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the name of the property.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Name", IsRequired = true, Order = 100)]

      public string Name { get; set; }
    content.vb: >-
      <DataMember(Name:="Name", IsRequired:=True, Order:=100)>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: The name of the property.
  overload: Microsoft.ServiceBus.Management.Property.Name*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Name
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Order
      type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.Property.Value
  commentId: P:Microsoft.ServiceBus.Management.Property.Value
  id: Value
  parent: Microsoft.ServiceBus.Management.Property
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Property.Value
  fullName: Microsoft.ServiceBus.Management.Property.Value
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Value
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
    startLine: 33
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the property value.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Value", IsRequired = true, Order = 101)]

      public string Value { get; set; }
    content.vb: >-
      <DataMember(Name:="Value", IsRequired:=True, Order:=101)>

      Public Property Value As String
    parameters: []
    return:
      type: System.String
      description: The property value.
  overload: Microsoft.ServiceBus.Management.Property.Value*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Value
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Order
      type: System.Int32
      value: 101
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.Property.Created
  commentId: P:Microsoft.ServiceBus.Management.Property.Created
  id: Created
  parent: Microsoft.ServiceBus.Management.Property
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: Property.Created
  fullName: Microsoft.ServiceBus.Management.Property.Created
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Created
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
    startLine: 38
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets when the property was created.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Created", IsRequired = false, Order = 102, EmitDefaultValue = false)]

      public DateTime Created { get; }
    content.vb: >-
      <DataMember(Name:="Created", IsRequired:=False, Order:=102, EmitDefaultValue:=False)>

      Public ReadOnly Property Created As Date
    parameters: []
    return:
      type: System.DateTime
      description: The date when the property was created.
  overload: Microsoft.ServiceBus.Management.Property.Created*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Created
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 102
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Management.Property.Modified
  commentId: P:Microsoft.ServiceBus.Management.Property.Modified
  id: Modified
  parent: Microsoft.ServiceBus.Management.Property
  langs:
  - csharp
  - vb
  name: Modified
  nameWithType: Property.Modified
  fullName: Microsoft.ServiceBus.Management.Property.Modified
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Modified
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
    startLine: 43
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets when the property was modified.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Modified", IsRequired = false, Order = 103, EmitDefaultValue = false)]

      public DateTime Modified { get; }
    content.vb: >-
      <DataMember(Name:="Modified", IsRequired:=False, Order:=103, EmitDefaultValue:=False)>

      Public ReadOnly Property Modified As Date
    parameters: []
    return:
      type: System.DateTime
      description: The date when the property was modified.
  overload: Microsoft.ServiceBus.Management.Property.Modified*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Modified
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 103
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Management.Property.Revision
  commentId: P:Microsoft.ServiceBus.Management.Property.Revision
  id: Revision
  parent: Microsoft.ServiceBus.Management.Property
  langs:
  - csharp
  - vb
  name: Revision
  nameWithType: Property.Revision
  fullName: Microsoft.ServiceBus.Management.Property.Revision
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Revision
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
    startLine: 48
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the version of the property.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Revision", IsRequired = false, Order = 104, EmitDefaultValue = false)]

      public long Revision { get; set; }
    content.vb: >-
      <DataMember(Name:="Revision", IsRequired:=False, Order:=104, EmitDefaultValue:=False)>

      Public Property Revision As Long
    parameters: []
    return:
      type: System.Int64
      description: The version of the property.
  overload: Microsoft.ServiceBus.Management.Property.Revision*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Revision
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 104
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.Property.Clone
  commentId: M:Microsoft.ServiceBus.Management.Property.Clone
  id: Clone
  parent: Microsoft.ServiceBus.Management.Property
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Property.Clone()
  fullName: Microsoft.ServiceBus.Management.Property.Clone()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Clone
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/Property.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Creates a copy of this instance.
  example: []
  syntax:
    content: public object Clone()
    content.vb: Public Function Clone As Object
    return:
      type: System.Object
      description: A created copy of this instance.
  overload: Microsoft.ServiceBus.Management.Property.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceBus.Management
  commentId: N:Microsoft.ServiceBus.Management
  isExternal: false
  name: Microsoft.ServiceBus.Management
  nameWithType: Microsoft.ServiceBus.Management
  fullName: Microsoft.ServiceBus.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization.DataContractSerializer
  commentId: T:System.Runtime.Serialization.DataContractSerializer
  parent: System.Runtime.Serialization
  isExternal: true
  name: DataContractSerializer
  nameWithType: DataContractSerializer
  fullName: System.Runtime.Serialization.DataContractSerializer
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Microsoft.ServiceBus.Management.Property.Name*
  commentId: Overload:Microsoft.ServiceBus.Management.Property.Name
  isExternal: false
  name: Name
  nameWithType: Property.Name
  fullName: Microsoft.ServiceBus.Management.Property.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Management.Property.Value*
  commentId: Overload:Microsoft.ServiceBus.Management.Property.Value
  isExternal: false
  name: Value
  nameWithType: Property.Value
  fullName: Microsoft.ServiceBus.Management.Property.Value
- uid: Microsoft.ServiceBus.Management.Property.Created*
  commentId: Overload:Microsoft.ServiceBus.Management.Property.Created
  isExternal: false
  name: Created
  nameWithType: Property.Created
  fullName: Microsoft.ServiceBus.Management.Property.Created
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.ServiceBus.Management.Property.Modified*
  commentId: Overload:Microsoft.ServiceBus.Management.Property.Modified
  isExternal: false
  name: Modified
  nameWithType: Property.Modified
  fullName: Microsoft.ServiceBus.Management.Property.Modified
- uid: Microsoft.ServiceBus.Management.Property.Revision*
  commentId: Overload:Microsoft.ServiceBus.Management.Property.Revision
  isExternal: false
  name: Revision
  nameWithType: Property.Revision
  fullName: Microsoft.ServiceBus.Management.Property.Revision
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceBus.Management.Property.Clone*
  commentId: Overload:Microsoft.ServiceBus.Management.Property.Clone
  isExternal: false
  name: Clone
  nameWithType: Property.Clone
  fullName: Microsoft.ServiceBus.Management.Property.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
