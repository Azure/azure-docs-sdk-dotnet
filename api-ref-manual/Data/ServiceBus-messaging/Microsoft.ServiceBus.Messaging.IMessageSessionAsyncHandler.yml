### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  commentId: T:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  id: IMessageSessionAsyncHandler
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  - Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  - Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  langs:
  - csharp
  - vb
  name: IMessageSessionAsyncHandler
  nameWithType: IMessageSessionAsyncHandler
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  type: Interface
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandler.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IMessageSessionAsyncHandler
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandler.cs
    startLine: 10
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Represents an interface for the asynchronous handler for the message session.
  example: []
  syntax:
    content: public interface IMessageSessionAsyncHandler
    content.vb: Public Interface IMessageSessionAsyncHandler
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  commentId: M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  id: OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  parent: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  langs:
  - csharp
  - vb
  name: OnMessageAsync(MessageSession, BrokeredMessage)
  nameWithType: IMessageSessionAsyncHandler.OnMessageAsync(MessageSession, BrokeredMessage)
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession, Microsoft.ServiceBus.Messaging.BrokeredMessage)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandler.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnMessageAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandler.cs
    startLine: 16
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Raises an event that occurs when a message has been brokered.
  example: []
  syntax:
    content: Task OnMessageAsync(MessageSession session, BrokeredMessage message)
    content.vb: Function OnMessageAsync(session As MessageSession, message As BrokeredMessage) As Task
    parameters:
    - id: session
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: The message session.
    - id: message
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: The brokered message.
    return:
      type: System.Threading.Tasks.Task
      description: The task object representing the asynchronous operation.
  overload: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync*
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  commentId: M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  id: OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  parent: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  langs:
  - csharp
  - vb
  name: OnCloseSessionAsync(MessageSession)
  nameWithType: IMessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession)
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandler.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnCloseSessionAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandler.cs
    startLine: 21
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Raises an event that occurs when the session has been asynchronously closed.
  example: []
  syntax:
    content: Task OnCloseSessionAsync(MessageSession session)
    content.vb: Function OnCloseSessionAsync(session As MessageSession) As Task
    parameters:
    - id: session
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: The closed session.
    return:
      type: System.Threading.Tasks.Task
      description: The task object representing the asynchronous operation.
  overload: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync*
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  commentId: M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  id: OnSessionLostAsync(System.Exception)
  parent: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  langs:
  - csharp
  - vb
  name: OnSessionLostAsync(Exception)
  nameWithType: IMessageSessionAsyncHandler.OnSessionLostAsync(Exception)
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandler.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnSessionLostAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandler.cs
    startLine: 26
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Raises an event that occurs when the session has been lost.
  example: []
  syntax:
    content: Task OnSessionLostAsync(Exception exception)
    content.vb: Function OnSessionLostAsync(exception As Exception) As Task
    parameters:
    - id: exception
      type: System.Exception
      description: The exception that occurred that caused the lost session.
    return:
      type: System.Threading.Tasks.Task
      description: The task object representing the asynchronous operation.
  overload: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync*
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync
  isExternal: false
  name: OnMessageAsync
  nameWithType: IMessageSessionAsyncHandler.OnMessageAsync
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync
- uid: Microsoft.ServiceBus.Messaging.MessageSession
  commentId: T:Microsoft.ServiceBus.Messaging.MessageSession
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessageSession
  nameWithType: MessageSession
  fullName: Microsoft.ServiceBus.Messaging.MessageSession
- uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
  commentId: T:Microsoft.ServiceBus.Messaging.BrokeredMessage
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: BrokeredMessage
  nameWithType: BrokeredMessage
  fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync
  isExternal: false
  name: OnCloseSessionAsync
  nameWithType: IMessageSessionAsyncHandler.OnCloseSessionAsync
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync
  isExternal: false
  name: OnSessionLostAsync
  nameWithType: IMessageSessionAsyncHandler.OnSessionLostAsync
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
