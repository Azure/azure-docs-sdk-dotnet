### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1
  commentId: T:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1
  id: DefaultEventProcessorFactory`1
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor
  - Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor(`0)
  - Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)
  langs:
  - csharp
  - vb
  name: DefaultEventProcessorFactory<T>
  nameWithType: DefaultEventProcessorFactory<T>
  fullName: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory<T>
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/DefaultEventProcessorFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: DefaultEventProcessorFactory
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/DefaultEventProcessorFactory.cs
    startLine: 10
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Represents the factory for the default event processor.
  example: []
  syntax:
    content: 'public class DefaultEventProcessorFactory<T> : IEventProcessorFactory where T : IEventProcessor'
    content.vb: >-
      Public Class DefaultEventProcessorFactory(Of T As IEventProcessor)
          Implements IEventProcessorFactory
    typeParameters:
    - id: T
      description: The type of the event.
  inheritance:
  - System.Object
  implements:
  - Microsoft.ServiceBus.Messaging.IEventProcessorFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: DefaultEventProcessorFactory(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory(Of T)
  name.vb: DefaultEventProcessorFactory(Of T)
- uid: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor
  commentId: M:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1
  langs:
  - csharp
  - vb
  name: DefaultEventProcessorFactory()
  nameWithType: DefaultEventProcessorFactory<T>.DefaultEventProcessorFactory()
  fullName: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory<T>.DefaultEventProcessorFactory()
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/DefaultEventProcessorFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/DefaultEventProcessorFactory.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public DefaultEventProcessorFactory()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor*
  nameWithType.vb: DefaultEventProcessorFactory(Of T).DefaultEventProcessorFactory()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory(Of T).DefaultEventProcessorFactory()
- uid: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor(`0)
  commentId: M:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1
  langs:
  - csharp
  - vb
  name: DefaultEventProcessorFactory(T)
  nameWithType: DefaultEventProcessorFactory<T>.DefaultEventProcessorFactory(T)
  fullName: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory<T>.DefaultEventProcessorFactory(T)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/DefaultEventProcessorFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/DefaultEventProcessorFactory.cs
    startLine: 22
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory%601\" data-throw-if-not-resolved=\"false\"></xref> class using the specified instance."
  example: []
  syntax:
    content: public DefaultEventProcessorFactory(T instance)
    content.vb: Public Sub New(instance As T)
    parameters:
    - id: instance
      type: '{T}'
      description: The instance.
  overload: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor*
  nameWithType.vb: DefaultEventProcessorFactory(Of T).DefaultEventProcessorFactory(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory(Of T).DefaultEventProcessorFactory(T)
- uid: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)
  commentId: M:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)
  id: CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)
  parent: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1
  langs:
  - csharp
  - vb
  name: CreateEventProcessor(PartitionContext)
  nameWithType: DefaultEventProcessorFactory<T>.CreateEventProcessor(PartitionContext)
  fullName: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory<T>.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/DefaultEventProcessorFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateEventProcessor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/DefaultEventProcessorFactory.cs
    startLine: 30
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates an event processor.
  example: []
  syntax:
    content: public IEventProcessor CreateEventProcessor(PartitionContext context)
    content.vb: Public Function CreateEventProcessor(context As PartitionContext) As IEventProcessor
    parameters:
    - id: context
      type: Microsoft.ServiceBus.Messaging.PartitionContext
      description: The partition context.
    return:
      type: Microsoft.ServiceBus.Messaging.IEventProcessor
      description: The created event processor.
  overload: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.CreateEventProcessor*
  implements:
  - Microsoft.ServiceBus.Messaging.IEventProcessorFactory.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)
  nameWithType.vb: DefaultEventProcessorFactory(Of T).CreateEventProcessor(PartitionContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory(Of T).CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceBus.Messaging.IEventProcessorFactory
  commentId: T:Microsoft.ServiceBus.Messaging.IEventProcessorFactory
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: IEventProcessorFactory
  nameWithType: IEventProcessorFactory
  fullName: Microsoft.ServiceBus.Messaging.IEventProcessorFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1
  commentId: T:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1
  isExternal: false
  name: DefaultEventProcessorFactory<T>
  nameWithType: DefaultEventProcessorFactory<T>
  fullName: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory<T>
  nameWithType.vb: DefaultEventProcessorFactory(Of T)
  fullname.vb: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory(Of T)
  name.vb: DefaultEventProcessorFactory(Of T)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1
    name: DefaultEventProcessorFactory
    nameWithType: DefaultEventProcessorFactory
    fullName: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1
    name: DefaultEventProcessorFactory
    nameWithType: DefaultEventProcessorFactory
    fullName: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.#ctor
  isExternal: false
  name: DefaultEventProcessorFactory
  nameWithType: DefaultEventProcessorFactory.DefaultEventProcessorFactory
  fullName: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory.DefaultEventProcessorFactory
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.CreateEventProcessor*
  commentId: Overload:Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1.CreateEventProcessor
  isExternal: false
  name: CreateEventProcessor
  nameWithType: DefaultEventProcessorFactory.CreateEventProcessor
  fullName: Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory.CreateEventProcessor
- uid: Microsoft.ServiceBus.Messaging.IEventProcessorFactory.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)
  commentId: M:Microsoft.ServiceBus.Messaging.IEventProcessorFactory.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)
  parent: Microsoft.ServiceBus.Messaging.IEventProcessorFactory
  isExternal: false
  name: CreateEventProcessor(PartitionContext)
  nameWithType: IEventProcessorFactory.CreateEventProcessor(PartitionContext)
  fullName: Microsoft.ServiceBus.Messaging.IEventProcessorFactory.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.IEventProcessorFactory.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)
    name: CreateEventProcessor
    nameWithType: IEventProcessorFactory.CreateEventProcessor
    fullName: Microsoft.ServiceBus.Messaging.IEventProcessorFactory.CreateEventProcessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.PartitionContext
    name: PartitionContext
    nameWithType: PartitionContext
    fullName: Microsoft.ServiceBus.Messaging.PartitionContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.IEventProcessorFactory.CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)
    name: CreateEventProcessor
    nameWithType: IEventProcessorFactory.CreateEventProcessor
    fullName: Microsoft.ServiceBus.Messaging.IEventProcessorFactory.CreateEventProcessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.PartitionContext
    name: PartitionContext
    nameWithType: PartitionContext
    fullName: Microsoft.ServiceBus.Messaging.PartitionContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.PartitionContext
  commentId: T:Microsoft.ServiceBus.Messaging.PartitionContext
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: PartitionContext
  nameWithType: PartitionContext
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor
  commentId: T:Microsoft.ServiceBus.Messaging.IEventProcessor
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: IEventProcessor
  nameWithType: IEventProcessor
  fullName: Microsoft.ServiceBus.Messaging.IEventProcessor
