### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.EventHubSender
  commentId: T:Microsoft.ServiceBus.Messaging.EventHubSender
  id: EventHubSender
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.EventHubSender.CreateFromConnectionString(System.String)
  - Microsoft.ServiceBus.Messaging.EventHubSender.OnAbort
  - Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.EventHubSender.OnClose(System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.EventHubSender.OnEndClose(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.EventHubSender.OnEndOpen(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.EventHubSender.OnOpen(System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId
  - Microsoft.ServiceBus.Messaging.EventHubSender.Path
  - Microsoft.ServiceBus.Messaging.EventHubSender.Send(Microsoft.ServiceBus.Messaging.EventData)
  - Microsoft.ServiceBus.Messaging.EventHubSender.SendAsync(Microsoft.ServiceBus.Messaging.EventData)
  - Microsoft.ServiceBus.Messaging.EventHubSender.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  - Microsoft.ServiceBus.Messaging.EventHubSender.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  langs:
  - csharp
  - vb
  name: EventHubSender
  nameWithType: EventHubSender
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EventHubSender
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 14
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "A client class used in send operations for an Event \nHub. Represents a logical sender connection to a specific Event Hub partition."
  example: []
  syntax:
    content: 'public sealed class EventHubSender : ClientEntity, IMessageClientEntity, ICloseable'
    content.vb: >-
      Public NotInheritable Class EventHubSender
          Inherits ClientEntity
          Implements IMessageClientEntity, ICloseable
  inheritance:
  - System.Object
  - Microsoft.ServiceBus.Messaging.ClientEntity
  inheritedMembers:
  - Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
  - Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
  - Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  - Microsoft.ServiceBus.Messaging.ClientEntity.Close
  - Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  - Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.Path
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubSender.Path
  id: Path
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: EventHubSender.Path
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.Path
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Path
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 42
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the path of the Event Hub.
  example: []
  syntax:
    content: public string Path { get; }
    content.vb: Public ReadOnly Property Path As String
    parameters: []
    return:
      type: System.String
      description: The Event Hub path.
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.Path*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId
  id: PartitionId
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: PartitionId
  nameWithType: EventHubSender.PartitionId
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PartitionId
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 46
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the partition ID for a logical partition of an Event Hub.
  example: []
  syntax:
    content: public string PartitionId { get; }
    content.vb: Public ReadOnly Property PartitionId As String
    parameters: []
    return:
      type: System.String
      description: The partition identifier.
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.CreateFromConnectionString(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.CreateFromConnectionString(System.String)
  id: CreateFromConnectionString(System.String)
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String)
  nameWithType: EventHubSender.CreateFromConnectionString(String)
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.CreateFromConnectionString(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateFromConnectionString
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 69
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nCreates a new instance of <xref href=\"Microsoft.ServiceBus.Messaging.EventHubSender\" data-throw-if-not-resolved=\"false\"></xref> using the supplied connection string.\nIntended to be used to send using a ConnectionString with SharedAcessSignature and Publisher.\n"
  remarks: >-
    The connection can be obtained either from the Azure portal, or created from

    a <xref href="Microsoft.ServiceBus.ServiceBusConnectionStringBuilder" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public static EventHubSender CreateFromConnectionString(string connectionString)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String) As EventHubSender
    parameters:
    - id: connectionString
      type: System.String
      description: The connection string used.
    return:
      type: Microsoft.ServiceBus.Messaging.EventHubSender
      description: The created <xref href="Microsoft.ServiceBus.Messaging.EventHubSender" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.CreateFromConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.Send(Microsoft.ServiceBus.Messaging.EventData)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.Send(Microsoft.ServiceBus.Messaging.EventData)
  id: Send(Microsoft.ServiceBus.Messaging.EventData)
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: Send(EventData)
  nameWithType: EventHubSender.Send(EventData)
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.Send(Microsoft.ServiceBus.Messaging.EventData)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Send
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 89
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Sends event data to the logical partition represented by \n<xref href=\"Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId\" data-throw-if-not-resolved=\"false\"></xref>."
  example: []
  syntax:
    content: public void Send(EventData data)
    content.vb: Public Sub Send(data As EventData)
    parameters:
    - id: data
      type: Microsoft.ServiceBus.Messaging.EventData
      description: The <xref href="Microsoft.ServiceBus.Messaging.EventData" data-throw-if-not-resolved="false"></xref> to send.
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.Send*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.SendAsync(Microsoft.ServiceBus.Messaging.EventData)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.SendAsync(Microsoft.ServiceBus.Messaging.EventData)
  id: SendAsync(Microsoft.ServiceBus.Messaging.EventData)
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: SendAsync(EventData)
  nameWithType: EventHubSender.SendAsync(EventData)
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.SendAsync(Microsoft.ServiceBus.Messaging.EventData)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SendAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 99
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Asynchronous version of \n<xref href=\"Microsoft.ServiceBus.Messaging.EventHubSender.Send(Microsoft.ServiceBus.Messaging.EventData)\" data-throw-if-not-resolved=\"false\"></xref>."
  example: []
  syntax:
    content: public Task SendAsync(EventData data)
    content.vb: Public Function SendAsync(data As EventData) As Task
    parameters:
    - id: data
      type: Microsoft.ServiceBus.Messaging.EventData
      description: The <xref href="Microsoft.ServiceBus.Messaging.EventData" data-throw-if-not-resolved="false"></xref> to send.
    return:
      type: System.Threading.Tasks.Task
      description: The task representing the asynchronous operation.
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.SendAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  id: SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: SendBatch(IEnumerable<EventData>)
  nameWithType: EventHubSender.SendBatch(IEnumerable<EventData>)
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.SendBatch(System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.EventData>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SendBatch
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 114
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Sends a batch of event data to the logical partition represented by \n<xref href=\"Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId\" data-throw-if-not-resolved=\"false\"></xref>."
  remarks: "User should make sure the total serialized size of <span class=\"paramref\">eventDataList</span> should be \nunder the size limit of one event data transmission, which is 256k by default."
  example: []
  syntax:
    content: public void SendBatch(IEnumerable<EventData> eventDataList)
    content.vb: Public Sub SendBatch(eventDataList As IEnumerable(Of EventData))
    parameters:
    - id: eventDataList
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData}
      description: An IEnumerable object containing event data instances.
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.SendBatch*
  exceptions:
  - type: Microsoft.ServiceBus.Messaging.MessageSizeExceededException
    commentId: T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException
    description: "Thrown if the total serialized size of <span class=\"paramref\">eventDataList</span> \nexceeds the allowed size limit for one event transmission (256k by default)."
  nameWithType.vb: EventHubSender.SendBatch(IEnumerable(Of EventData))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.EventHubSender.SendBatch(System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.EventData))
  name.vb: SendBatch(IEnumerable(Of EventData))
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  id: SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: SendBatchAsync(IEnumerable<EventData>)
  nameWithType: EventHubSender.SendBatchAsync(IEnumerable<EventData>)
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.SendBatchAsync(System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.EventData>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SendBatchAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 128
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Asynchronously sends a batch of event data to the logical partition represented by \n<xref href=\"Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId\" data-throw-if-not-resolved=\"false\"></xref>."
  remarks: "User should make sure the total serialized size of <span class=\"paramref\">eventDataList</span> should be \nunder the size limit of one event data transmission, which is 256k by default."
  example: []
  syntax:
    content: public Task SendBatchAsync(IEnumerable<EventData> eventDataList)
    content.vb: Public Function SendBatchAsync(eventDataList As IEnumerable(Of EventData)) As Task
    parameters:
    - id: eventDataList
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData}
      description: An IEnumerable object containing event data instances.
    return:
      type: System.Threading.Tasks.Task
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.SendBatchAsync*
  exceptions:
  - type: Microsoft.ServiceBus.Messaging.MessageSizeExceededException
    commentId: T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException
    description: "Thrown if the total serialized size of <span class=\"paramref\">eventDataList</span> \nexceeds the allowed size limit for one event transmission (256k by default)."
  nameWithType.vb: EventHubSender.SendBatchAsync(IEnumerable(Of EventData))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.EventHubSender.SendBatchAsync(System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.EventData))
  name.vb: SendBatchAsync(IEnumerable(Of EventData))
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnAbort
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.OnAbort
  id: OnAbort
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: OnAbort()
  nameWithType: EventHubSender.OnAbort()
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnAbort()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnAbort
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 136
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: protected override void OnAbort()
    content.vb: Protected Overrides Sub OnAbort
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.OnAbort*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnOpen(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: OnOpen(TimeSpan)
  nameWithType: EventHubSender.OnOpen(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnOpen(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnOpen
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 144
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: protected override void OnOpen(TimeSpan timeout)
    content.vb: Protected Overrides Sub OnOpen(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: System.TimeSpan
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.OnOpen*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: EventHubSender.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginOpen
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 150
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: protected override IAsyncResult OnBeginOpen(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected Overrides Function OnBeginOpen(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: timeout
      type: System.TimeSpan
    - id: callback
      type: System.AsyncCallback
    - id: state
      type: System.Object
    return:
      type: System.IAsyncResult
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginOpen*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnEndOpen(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: OnEndOpen(IAsyncResult)
  nameWithType: EventHubSender.OnEndOpen(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnEndOpen(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndOpen
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 156
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: protected override void OnEndOpen(IAsyncResult result)
    content.vb: Protected Overrides Sub OnEndOpen(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.OnEndOpen*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnClose(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: OnClose(TimeSpan)
  nameWithType: EventHubSender.OnClose(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnClose(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnClose
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 161
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: protected override void OnClose(TimeSpan timeout)
    content.vb: Protected Overrides Sub OnClose(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: System.TimeSpan
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.OnClose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: EventHubSender.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginClose
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 171
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: protected override IAsyncResult OnBeginClose(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected Overrides Function OnBeginClose(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: timeout
      type: System.TimeSpan
    - id: callback
      type: System.AsyncCallback
    - id: state
      type: System.Object
    return:
      type: System.IAsyncResult
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginClose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnEndClose(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.EventHubSender
  langs:
  - csharp
  - vb
  name: OnEndClose(IAsyncResult)
  nameWithType: EventHubSender.OnEndClose(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnEndClose(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndClose
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubSender.cs
    startLine: 181
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: protected override void OnEndClose(IAsyncResult result)
    content.vb: Protected Overrides Sub OnEndClose(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  overload: Microsoft.ServiceBus.Messaging.EventHubSender.OnEndClose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceBus.Messaging.ClientEntity
  commentId: T:Microsoft.ServiceBus.Messaging.ClientEntity
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: ClientEntity
  nameWithType: ClientEntity
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
  commentId: P:Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: RetryPolicy
  nameWithType: ClientEntity.RetryPolicy
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
  commentId: P:Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: IsClosed
  nameWithType: ClientEntity.IsClosed
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
  commentId: P:Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThisLock
  nameWithType: ClientEntity.ThisLock
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: Abort()
  nameWithType: ClientEntity.Abort()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Abort()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
    name: Abort
    nameWithType: ClientEntity.Abort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
    name: Abort
    nameWithType: ClientEntity.Abort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.Close
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.Close
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: Close()
  nameWithType: ClientEntity.Close()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Close()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Close
    name: Close
    nameWithType: ClientEntity.Close
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Close
    name: Close
    nameWithType: ClientEntity.Close
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: CloseAsync()
  nameWithType: ClientEntity.CloseAsync()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
    name: CloseAsync
    nameWithType: ClientEntity.CloseAsync
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
    name: CloseAsync
    nameWithType: ClientEntity.CloseAsync
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: Fault()
  nameWithType: ClientEntity.Fault()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Fault()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
    name: Fault
    nameWithType: ClientEntity.Fault
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
    name: Fault
    nameWithType: ClientEntity.Fault
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfClosed()
  nameWithType: ClientEntity.ThrowIfClosed()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
    name: ThrowIfClosed
    nameWithType: ClientEntity.ThrowIfClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
    name: ThrowIfClosed
    nameWithType: ClientEntity.ThrowIfClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: ClientEntity.ThrowIfDisposed()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: ClientEntity.ThrowIfDisposed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: ClientEntity.ThrowIfDisposed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfDisposedOrNotOpen()
  nameWithType: ClientEntity.ThrowIfDisposedOrNotOpen()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
    name: ThrowIfDisposedOrNotOpen
    nameWithType: ClientEntity.ThrowIfDisposedOrNotOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
    name: ThrowIfDisposedOrNotOpen
    nameWithType: ClientEntity.ThrowIfDisposedOrNotOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfFaulted()
  nameWithType: ClientEntity.ThrowIfFaulted()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
    name: ThrowIfFaulted
    nameWithType: ClientEntity.ThrowIfFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
    name: ThrowIfFaulted
    nameWithType: ClientEntity.ThrowIfFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfDisposedOrImmutable()
  nameWithType: ClientEntity.ThrowIfDisposedOrImmutable()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
    name: ThrowIfDisposedOrImmutable
    nameWithType: ClientEntity.ThrowIfDisposedOrImmutable
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
    name: ThrowIfDisposedOrImmutable
    nameWithType: ClientEntity.ThrowIfDisposedOrImmutable
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnOpened()
  nameWithType: ClientEntity.OnOpened()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
    name: OnOpened
    nameWithType: ClientEntity.OnOpened
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
    name: OnOpened
    nameWithType: ClientEntity.OnOpened
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnClosed()
  nameWithType: ClientEntity.OnClosed()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
    name: OnClosed
    nameWithType: ClientEntity.OnClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
    name: OnClosed
    nameWithType: ClientEntity.OnClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnFaulted()
  nameWithType: ClientEntity.OnFaulted()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
    name: OnFaulted
    nameWithType: ClientEntity.OnFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
    name: OnFaulted
    nameWithType: ClientEntity.OnFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.Path*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.Path
  isExternal: false
  name: Path
  nameWithType: EventHubSender.Path
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId
  isExternal: false
  name: PartitionId
  nameWithType: EventHubSender.PartitionId
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId
- uid: Microsoft.ServiceBus.Messaging.EventHubSender
  commentId: T:Microsoft.ServiceBus.Messaging.EventHubSender
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EventHubSender
  nameWithType: EventHubSender
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender
- uid: Microsoft.ServiceBus.ServiceBusConnectionStringBuilder
  commentId: T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder
  isExternal: false
  name: ServiceBusConnectionStringBuilder
  nameWithType: ServiceBusConnectionStringBuilder
  fullName: Microsoft.ServiceBus.ServiceBusConnectionStringBuilder
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.CreateFromConnectionString*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.CreateFromConnectionString
  isExternal: false
  name: CreateFromConnectionString
  nameWithType: EventHubSender.CreateFromConnectionString
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.CreateFromConnectionString
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubSender.PartitionId
- uid: Microsoft.ServiceBus.Messaging.EventData
  commentId: T:Microsoft.ServiceBus.Messaging.EventData
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EventData
  nameWithType: EventData
  fullName: Microsoft.ServiceBus.Messaging.EventData
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.Send*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.Send
  isExternal: false
  name: Send
  nameWithType: EventHubSender.Send
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.Send
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.Send(Microsoft.ServiceBus.Messaging.EventData)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubSender.Send(Microsoft.ServiceBus.Messaging.EventData)
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.SendAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.SendAsync
  isExternal: false
  name: SendAsync
  nameWithType: EventHubSender.SendAsync
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.SendAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.SendBatch*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.SendBatch
  isExternal: false
  name: SendBatch
  nameWithType: EventHubSender.SendBatch
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.SendBatch
- uid: Microsoft.ServiceBus.Messaging.MessageSizeExceededException
  commentId: T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException
  isExternal: false
  name: MessageSizeExceededException
  nameWithType: MessageSizeExceededException
  fullName: Microsoft.ServiceBus.Messaging.MessageSizeExceededException
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EventData>
  nameWithType: IEnumerable<EventData>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.EventData>
  nameWithType.vb: IEnumerable(Of EventData)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.EventData)
  name.vb: IEnumerable(Of EventData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.EventData
    name: EventData
    nameWithType: EventData
    fullName: Microsoft.ServiceBus.Messaging.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.EventData
    name: EventData
    nameWithType: EventData
    fullName: Microsoft.ServiceBus.Messaging.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.SendBatchAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.SendBatchAsync
  isExternal: false
  name: SendBatchAsync
  nameWithType: EventHubSender.SendBatchAsync
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.SendBatchAsync
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnAbort()
  nameWithType: ClientEntity.OnAbort()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
    name: OnAbort
    nameWithType: ClientEntity.OnAbort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
    name: OnAbort
    nameWithType: ClientEntity.OnAbort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnAbort*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.OnAbort
  isExternal: false
  name: OnAbort
  nameWithType: EventHubSender.OnAbort
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnAbort
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnOpen(TimeSpan)
  nameWithType: ClientEntity.OnOpen(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: ClientEntity.OnOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: ClientEntity.OnOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnOpen*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.OnOpen
  isExternal: false
  name: OnOpen
  nameWithType: EventHubSender.OnOpen
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnOpen
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ClientEntity.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: ClientEntity.OnBeginOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: ClientEntity.OnBeginOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginOpen*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginOpen
  isExternal: false
  name: OnBeginOpen
  nameWithType: EventHubSender.OnBeginOpen
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginOpen
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnEndOpen(IAsyncResult)
  nameWithType: ClientEntity.OnEndOpen(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: ClientEntity.OnEndOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: ClientEntity.OnEndOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnEndOpen*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.OnEndOpen
  isExternal: false
  name: OnEndOpen
  nameWithType: EventHubSender.OnEndOpen
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnEndOpen
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnClose(TimeSpan)
  nameWithType: ClientEntity.OnClose(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: ClientEntity.OnClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: ClientEntity.OnClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnClose*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.OnClose
  isExternal: false
  name: OnClose
  nameWithType: EventHubSender.OnClose
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnClose
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ClientEntity.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: ClientEntity.OnBeginClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: ClientEntity.OnBeginClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginClose*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginClose
  isExternal: false
  name: OnBeginClose
  nameWithType: EventHubSender.OnBeginClose
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnBeginClose
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnEndClose(IAsyncResult)
  nameWithType: ClientEntity.OnEndClose(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: ClientEntity.OnEndClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: ClientEntity.OnEndClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.EventHubSender.OnEndClose*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubSender.OnEndClose
  isExternal: false
  name: OnEndClose
  nameWithType: EventHubSender.OnEndClose
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender.OnEndClose
