### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.MessageSender
  commentId: T:Microsoft.ServiceBus.Messaging.MessageSender
  id: MessageSender
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.MessageSender.BatchFlushInterval
  - Microsoft.ServiceBus.Messaging.MessageSender.BatchingEnabled
  - Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSendEventData(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData},System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.MessageSender.OnEndCancelScheduledMessage(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.MessageSender.OnEndScheduleMessage(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.MessageSender.OnEndSend(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.MessageSender.OnEndSendEventData(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.MessageSender.OnSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.MessageSender.Path
  - Microsoft.ServiceBus.Messaging.MessageSender.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  - Microsoft.ServiceBus.Messaging.MessageSender.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  - Microsoft.ServiceBus.Messaging.MessageSender.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  - Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  - Microsoft.ServiceBus.Messaging.MessageSender.SupportsGetRuntimeEntityDescription
  langs:
  - csharp
  - vb
  name: MessageSender
  nameWithType: MessageSender
  fullName: Microsoft.ServiceBus.Messaging.MessageSender
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MessageSender
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 58
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: 'The MessageSender class is used to send messages from the Service Bus. '
  remarks: "Please note that message delivery mechanism does not provide by default all time reliable message\n         receiving. Service Bus deletes the message once it goes out of the system. For a guaranteed delivery, you \n         can use the PeekLock delivery mode.\n<example>\n<pre><code>//********************************************************************************\n//                             Sending messages to a Queue\n//********************************************************************************\n\n// Create a sender\nMessageSender myMessageSender = myQueueClient.CreateSender(SendMode.Default);\n\n// Send messages\nList&lt;object&gt; Issues = new List&lt;object&gt;();\nforeach (var issue in Issues)\n{\nmyMessageSender.Send(new BrokeredMessage(issue));\n}</code></pre>\n</example>\n<example>\n<pre><code>//********************************************************************************\n//                           Recieving messages from a Queue\n//********************************************************************************\n\n// Create a receiver\nMessageReceiver myMessageReceiver = \nmyQueueClient.CreateReceiver(ReceiveMode.PeekLock);\n\n// Receive messages\nfor (int count = 0; count &lt; Issues.Count; count++)\n{\nvar message = myMessageReceiver.Receive();\nmessage.Complete();\n}</code></pre>         \n</example>\n"
  example: []
  syntax:
    content: 'public abstract class MessageSender : ClientEntity, IMessageClientEntity, ICloseable, IMessageSender'
    content.vb: >-
      Public MustInherit Class MessageSender
          Inherits ClientEntity
          Implements IMessageClientEntity, ICloseable, IMessageSender
  inheritance:
  - System.Object
  - Microsoft.ServiceBus.Messaging.ClientEntity
  inheritedMembers:
  - Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
  - Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
  - Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  - Microsoft.ServiceBus.Messaging.ClientEntity.Close
  - Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  - Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceBus.Messaging.MessageSender.Path
  commentId: P:Microsoft.ServiceBus.Messaging.MessageSender.Path
  id: Path
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: MessageSender.Path
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.Path
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Path
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 84
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Gets the path of the queue or topic relative to the \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactory\" data-throw-if-not-resolved=\"false\"></xref> base address."
  example: []
  syntax:
    content: public abstract string Path { get; }
    content.vb: Public MustOverride ReadOnly Property Path As String
    parameters: []
    return:
      type: System.String
      description: The path of the queue or topic relative to the <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> base address.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.Path*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.MessageSender.BatchFlushInterval
  commentId: P:Microsoft.ServiceBus.Messaging.MessageSender.BatchFlushInterval
  id: BatchFlushInterval
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: BatchFlushInterval
  nameWithType: MessageSender.BatchFlushInterval
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.BatchFlushInterval
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: BatchFlushInterval
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 90
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the batch flush interval.
  example: []
  syntax:
    content: public virtual TimeSpan BatchFlushInterval { get; }
    content.vb: Public Overridable ReadOnly Property BatchFlushInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: A batch flush interval. The default value is 20 ms.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.BatchFlushInterval*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "Thrown when the \n<xref href=\"Microsoft.ServiceBus.Messaging.MessageSender\" data-throw-if-not-resolved=\"false\"></xref> is in closing, closed, or faulted state."
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.MessageSender.SupportsGetRuntimeEntityDescription
  commentId: P:Microsoft.ServiceBus.Messaging.MessageSender.SupportsGetRuntimeEntityDescription
  id: SupportsGetRuntimeEntityDescription
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: SupportsGetRuntimeEntityDescription
  nameWithType: MessageSender.SupportsGetRuntimeEntityDescription
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.SupportsGetRuntimeEntityDescription
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SupportsGetRuntimeEntityDescription
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 148
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: ''
  example: []
  syntax:
    content: protected abstract bool SupportsGetRuntimeEntityDescription { get; }
    content.vb: Protected MustOverride ReadOnly Property SupportsGetRuntimeEntityDescription As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Messaging.MessageSender.SupportsGetRuntimeEntityDescription*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.MessageSender.BatchingEnabled
  commentId: P:Microsoft.ServiceBus.Messaging.MessageSender.BatchingEnabled
  id: BatchingEnabled
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: BatchingEnabled
  nameWithType: MessageSender.BatchingEnabled
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.BatchingEnabled
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: BatchingEnabled
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 152
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets a value indicating whether the batching is enabled.
  example: []
  syntax:
    content: protected bool BatchingEnabled { get; }
    content.vb: Protected ReadOnly Property BatchingEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if batching is enabled; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.BatchingEnabled*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.MessageSender.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  id: Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: Send(BrokeredMessage)
  nameWithType: MessageSender.Send(BrokeredMessage)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Send
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 167
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Sends the specified brokered message.
  example: []
  syntax:
    content: public void Send(BrokeredMessage message)
    content.vb: Public Sub Send(message As BrokeredMessage)
    parameters:
    - id: message
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: The brokered message to send.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.Send*
  exceptions:
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Thrown when operation times out. Timeout period is initialized through the \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings\" data-throw-if-not-resolved=\"false\"></xref>. You may need to increase the value of \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref> to avoid this exception if the timeout value is relatively low."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when <span class="paramref">message</span> is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessageSender.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  id: SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: SendAsync(BrokeredMessage)
  nameWithType: MessageSender.SendAsync(BrokeredMessage)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SendAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 180
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously sends the specified brokered message.
  example: []
  syntax:
    content: public Task SendAsync(BrokeredMessage message)
    content.vb: Public Function SendAsync(message As BrokeredMessage) As Task
    parameters:
    - id: message
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: The brokered message to send.
    return:
      type: System.Threading.Tasks.Task
      description: The asynchronous result of the operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.SendAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessageSender.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  id: SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: SendBatch(IEnumerable<BrokeredMessage>)
  nameWithType: MessageSender.SendBatch(IEnumerable<BrokeredMessage>)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.SendBatch(System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.BrokeredMessage>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SendBatch
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 207
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Sends a set of brokered messages (for batch processing).
  example: []
  syntax:
    content: public void SendBatch(IEnumerable<BrokeredMessage> messages)
    content.vb: Public Sub SendBatch(messages As IEnumerable(Of BrokeredMessage))
    parameters:
    - id: messages
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
      description: The collection of brokered messages to send.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.SendBatch*
  nameWithType.vb: MessageSender.SendBatch(IEnumerable(Of BrokeredMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.MessageSender.SendBatch(System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.BrokeredMessage))
  name.vb: SendBatch(IEnumerable(Of BrokeredMessage))
- uid: Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  id: SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: SendBatchAsync(IEnumerable<BrokeredMessage>)
  nameWithType: MessageSender.SendBatchAsync(IEnumerable<BrokeredMessage>)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync(System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.BrokeredMessage>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SendBatchAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 215
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously sends a set of brokered messages (for batch processing).
  example: []
  syntax:
    content: public Task SendBatchAsync(IEnumerable<BrokeredMessage> messages)
    content.vb: Public Function SendBatchAsync(messages As IEnumerable(Of BrokeredMessage)) As Task
    parameters:
    - id: messages
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
      description: The collection of brokered messages to send.
    return:
      type: System.Threading.Tasks.Task
      description: The asynchronous result of the operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync*
  nameWithType.vb: MessageSender.SendBatchAsync(IEnumerable(Of BrokeredMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync(System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.BrokeredMessage))
  name.vb: SendBatchAsync(IEnumerable(Of BrokeredMessage))
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: OnBeginSend(TrackingContext, IEnumerable<BrokeredMessage>, Boolean, TimeSpan, AsyncCallback, Object)
  nameWithType: MessageSender.OnBeginSend(TrackingContext, IEnumerable<BrokeredMessage>, Boolean, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend(Microsoft.ServiceBus.Tracing.TrackingContext, System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.BrokeredMessage>, System.Boolean, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginSend
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 384
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the begin send action. This method is intended for internal consumption and cannot be implemented in a concrete class by the user.
  example: []
  syntax:
    content: protected abstract IAsyncResult OnBeginSend(TrackingContext trackingContext, IEnumerable<BrokeredMessage> messages, bool fromSync, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected MustOverride Function OnBeginSend(trackingContext As TrackingContext, messages As IEnumerable(Of BrokeredMessage), fromSync As Boolean, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: trackingContext
      type: Microsoft.ServiceBus.Tracing.TrackingContext
      description: ''
    - id: messages
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
      description: ''
    - id: fromSync
      type: System.Boolean
      description: ''
    - id: timeout
      type: System.TimeSpan
      description: ''
    - id: callback
      type: System.AsyncCallback
      description: ''
    - id: state
      type: System.Object
      description: ''
    return:
      type: System.IAsyncResult
      description: ''
  overload: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend*
  nameWithType.vb: MessageSender.OnBeginSend(TrackingContext, IEnumerable(Of BrokeredMessage), Boolean, TimeSpan, AsyncCallback, Object)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend(Microsoft.ServiceBus.Tracing.TrackingContext, System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.BrokeredMessage), System.Boolean, System.TimeSpan, System.AsyncCallback, System.Object)
  name.vb: OnBeginSend(TrackingContext, IEnumerable(Of BrokeredMessage), Boolean, TimeSpan, AsyncCallback, Object)
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnEndSend(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndSend(System.IAsyncResult)
  id: OnEndSend(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: OnEndSend(IAsyncResult)
  nameWithType: MessageSender.OnEndSend(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnEndSend(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndSend
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 388
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the end send action. This method is intended for internal consumption and cannot be implemented in a concrete class by the user.
  example: []
  syntax:
    content: protected abstract void OnEndSend(IAsyncResult result)
    content.vb: Protected MustOverride Sub OnEndSend(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: ''
  overload: Microsoft.ServiceBus.Messaging.MessageSender.OnEndSend*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSendEventData(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData},System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSendEventData(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData},System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginSendEventData(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData},System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: OnBeginSendEventData(TrackingContext, IEnumerable<EventData>, TimeSpan, AsyncCallback, Object)
  nameWithType: MessageSender.OnBeginSendEventData(TrackingContext, IEnumerable<EventData>, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSendEventData(Microsoft.ServiceBus.Tracing.TrackingContext, System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.EventData>, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginSendEventData
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 397
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the begin send event data action. This method is intended for internal consumption and cannot be implemented in a concrete class by the user.
  example: []
  syntax:
    content: protected abstract IAsyncResult OnBeginSendEventData(TrackingContext trackingContext, IEnumerable<EventData> eventDatas, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected MustOverride Function OnBeginSendEventData(trackingContext As TrackingContext, eventDatas As IEnumerable(Of EventData), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: trackingContext
      type: Microsoft.ServiceBus.Tracing.TrackingContext
      description: ''
    - id: eventDatas
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData}
      description: ''
    - id: timeout
      type: System.TimeSpan
      description: ''
    - id: callback
      type: System.AsyncCallback
      description: ''
    - id: state
      type: System.Object
      description: ''
    return:
      type: System.IAsyncResult
      description: ''
  overload: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSendEventData*
  nameWithType.vb: MessageSender.OnBeginSendEventData(TrackingContext, IEnumerable(Of EventData), TimeSpan, AsyncCallback, Object)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSendEventData(Microsoft.ServiceBus.Tracing.TrackingContext, System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.EventData), System.TimeSpan, System.AsyncCallback, System.Object)
  name.vb: OnBeginSendEventData(TrackingContext, IEnumerable(Of EventData), TimeSpan, AsyncCallback, Object)
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnEndSendEventData(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndSendEventData(System.IAsyncResult)
  id: OnEndSendEventData(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: OnEndSendEventData(IAsyncResult)
  nameWithType: MessageSender.OnEndSendEventData(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnEndSendEventData(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndSendEventData
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 401
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the end send event data action. This method is intended for internal consumption and cannot be implemented in a concrete class by the user.
  example: []
  syntax:
    content: protected abstract void OnEndSendEventData(IAsyncResult result)
    content.vb: Protected MustOverride Sub OnEndSendEventData(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The result of the operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.OnEndSendEventData*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.OnSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan)
  id: OnSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: OnSend(TrackingContext, IEnumerable<BrokeredMessage>, TimeSpan)
  nameWithType: MessageSender.OnSend(TrackingContext, IEnumerable<BrokeredMessage>, TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnSend(Microsoft.ServiceBus.Tracing.TrackingContext, System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.BrokeredMessage>, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnSend
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 415
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nThis allows concrete implementations to override (if needed) what should be done when sending <span class=\"paramref\">messages</span> in a synchronous manner.\n"
  remarks: "\n<p>Typically the timeout comes from <xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>OnSend is equal to <code>this.OnEndSend(this.OnBeginSend(messages, timeout, null, null));</code>.</p>\n"
  example: []
  syntax:
    content: protected virtual void OnSend(TrackingContext trackingContext, IEnumerable<BrokeredMessage> messages, TimeSpan timeout)
    content.vb: Protected Overridable Sub OnSend(trackingContext As TrackingContext, messages As IEnumerable(Of BrokeredMessage), timeout As TimeSpan)
    parameters:
    - id: trackingContext
      type: Microsoft.ServiceBus.Tracing.TrackingContext
      description: TrackingContext to use.
    - id: messages
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
      description: A list of <xref href="Microsoft.ServiceBus.Messaging.BrokeredMessage" data-throw-if-not-resolved="false"></xref> to be sent.
    - id: timeout
      type: System.TimeSpan
      description: >
        A client side timeout value for the operation. The operation should be aborted or cancel

        if the duration exceeded this timeout.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.OnSend*
  nameWithType.vb: MessageSender.OnSend(TrackingContext, IEnumerable(Of BrokeredMessage), TimeSpan)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.ServiceBus.Messaging.MessageSender.OnSend(Microsoft.ServiceBus.Tracing.TrackingContext, System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.BrokeredMessage), System.TimeSpan)
  name.vb: OnSend(TrackingContext, IEnumerable(Of BrokeredMessage), TimeSpan)
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginScheduleMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: OnBeginScheduleMessage(TrackingContext, IEnumerable<BrokeredMessage>, TimeSpan, AsyncCallback, Object)
  nameWithType: MessageSender.OnBeginScheduleMessage(TrackingContext, IEnumerable<BrokeredMessage>, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage(Microsoft.ServiceBus.Tracing.TrackingContext, System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.BrokeredMessage>, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginScheduleMessage
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 534
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nThis allows concrete implementations to override (if needed) what should be done to schedule sends\n"
  example: []
  syntax:
    content: protected abstract IAsyncResult OnBeginScheduleMessage(TrackingContext trackingContext, IEnumerable<BrokeredMessage> messages, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected MustOverride Function OnBeginScheduleMessage(trackingContext As TrackingContext, messages As IEnumerable(Of BrokeredMessage), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: trackingContext
      type: Microsoft.ServiceBus.Tracing.TrackingContext
      description: Tracking context to use.
    - id: messages
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
      description: Messages to be scheduled.
    - id: timeout
      type: System.TimeSpan
      description: >-
        A client side timeout value for the operation. The operation should be aborted or cancel

        if the duration exceeded this timeout.
    - id: callback
      type: System.AsyncCallback
      description: A user callback to be invoked when the operation completes.
    - id: state
      type: System.Object
      description: The state to be passed to the callback when the operation completes.
    return:
      type: System.IAsyncResult
      description: a <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> for the operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage*
  nameWithType.vb: MessageSender.OnBeginScheduleMessage(TrackingContext, IEnumerable(Of BrokeredMessage), TimeSpan, AsyncCallback, Object)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage(Microsoft.ServiceBus.Tracing.TrackingContext, System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.BrokeredMessage), System.TimeSpan, System.AsyncCallback, System.Object)
  name.vb: OnBeginScheduleMessage(TrackingContext, IEnumerable(Of BrokeredMessage), TimeSpan, AsyncCallback, Object)
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnEndScheduleMessage(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndScheduleMessage(System.IAsyncResult)
  id: OnEndScheduleMessage(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: OnEndScheduleMessage(IAsyncResult)
  nameWithType: MessageSender.OnEndScheduleMessage(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnEndScheduleMessage(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndScheduleMessage
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 539
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Raises an event when ending the message schedule.
  example: []
  syntax:
    content: protected abstract IEnumerable<long> OnEndScheduleMessage(IAsyncResult result)
    content.vb: Protected MustOverride Function OnEndScheduleMessage(result As IAsyncResult) As IEnumerable(Of Long)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The result of the operation.
    return:
      type: System.Collections.Generic.IEnumerable{System.Int64}
      description: The result of the operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.OnEndScheduleMessage*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginCancelScheduledMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: OnBeginCancelScheduledMessage(TrackingContext, IEnumerable<Int64>, TimeSpan, AsyncCallback, Object)
  nameWithType: MessageSender.OnBeginCancelScheduledMessage(TrackingContext, IEnumerable<Int64>, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage(Microsoft.ServiceBus.Tracing.TrackingContext, System.Collections.Generic.IEnumerable<System.Int64>, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginCancelScheduledMessage
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 551
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nThis allows concrete implementations to override (if needed) what should be done to cancel scheduled sends\n"
  example: []
  syntax:
    content: protected abstract IAsyncResult OnBeginCancelScheduledMessage(TrackingContext trackingContext, IEnumerable<long> sequenceNumbers, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected MustOverride Function OnBeginCancelScheduledMessage(trackingContext As TrackingContext, sequenceNumbers As IEnumerable(Of Long), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: trackingContext
      type: Microsoft.ServiceBus.Tracing.TrackingContext
      description: Tracking context to use.
    - id: sequenceNumbers
      type: System.Collections.Generic.IEnumerable{System.Int64}
      description: Sequence Number of the message to cancelled.
    - id: timeout
      type: System.TimeSpan
      description: >-
        A client side timeout value for the operation. The operation should be aborted or cancel

        if the duration exceeded this timeout.
    - id: callback
      type: System.AsyncCallback
      description: A user callback to be invoked when the operation completes.
    - id: state
      type: System.Object
      description: The state to be passed to the callback when the operation completes.
    return:
      type: System.IAsyncResult
      description: a <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> for the operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage*
  nameWithType.vb: MessageSender.OnBeginCancelScheduledMessage(TrackingContext, IEnumerable(Of Int64), TimeSpan, AsyncCallback, Object)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage(Microsoft.ServiceBus.Tracing.TrackingContext, System.Collections.Generic.IEnumerable(Of System.Int64), System.TimeSpan, System.AsyncCallback, System.Object)
  name.vb: OnBeginCancelScheduledMessage(TrackingContext, IEnumerable(Of Int64), TimeSpan, AsyncCallback, Object)
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnEndCancelScheduledMessage(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndCancelScheduledMessage(System.IAsyncResult)
  id: OnEndCancelScheduledMessage(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.MessageSender
  langs:
  - csharp
  - vb
  name: OnEndCancelScheduledMessage(IAsyncResult)
  nameWithType: MessageSender.OnEndCancelScheduledMessage(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnEndCancelScheduledMessage(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndCancelScheduledMessage
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSender.cs
    startLine: 555
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Raises an event when ending the cancellation of the scheduled message.
  example: []
  syntax:
    content: protected abstract void OnEndCancelScheduledMessage(IAsyncResult result)
    content.vb: Protected MustOverride Sub OnEndCancelScheduledMessage(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The result of the operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSender.OnEndCancelScheduledMessage*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceBus.Messaging.ClientEntity
  commentId: T:Microsoft.ServiceBus.Messaging.ClientEntity
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: ClientEntity
  nameWithType: ClientEntity
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
  commentId: P:Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: RetryPolicy
  nameWithType: ClientEntity.RetryPolicy
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
  commentId: P:Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: IsClosed
  nameWithType: ClientEntity.IsClosed
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
  commentId: P:Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThisLock
  nameWithType: ClientEntity.ThisLock
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: Abort()
  nameWithType: ClientEntity.Abort()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Abort()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
    name: Abort
    nameWithType: ClientEntity.Abort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
    name: Abort
    nameWithType: ClientEntity.Abort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.Close
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.Close
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: Close()
  nameWithType: ClientEntity.Close()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Close()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Close
    name: Close
    nameWithType: ClientEntity.Close
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Close
    name: Close
    nameWithType: ClientEntity.Close
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: CloseAsync()
  nameWithType: ClientEntity.CloseAsync()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
    name: CloseAsync
    nameWithType: ClientEntity.CloseAsync
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
    name: CloseAsync
    nameWithType: ClientEntity.CloseAsync
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: Fault()
  nameWithType: ClientEntity.Fault()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Fault()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
    name: Fault
    nameWithType: ClientEntity.Fault
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
    name: Fault
    nameWithType: ClientEntity.Fault
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnOpen(TimeSpan)
  nameWithType: ClientEntity.OnOpen(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: ClientEntity.OnOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: ClientEntity.OnOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnClose(TimeSpan)
  nameWithType: ClientEntity.OnClose(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: ClientEntity.OnClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: ClientEntity.OnClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfClosed()
  nameWithType: ClientEntity.ThrowIfClosed()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
    name: ThrowIfClosed
    nameWithType: ClientEntity.ThrowIfClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
    name: ThrowIfClosed
    nameWithType: ClientEntity.ThrowIfClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: ClientEntity.ThrowIfDisposed()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: ClientEntity.ThrowIfDisposed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: ClientEntity.ThrowIfDisposed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfDisposedOrNotOpen()
  nameWithType: ClientEntity.ThrowIfDisposedOrNotOpen()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
    name: ThrowIfDisposedOrNotOpen
    nameWithType: ClientEntity.ThrowIfDisposedOrNotOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
    name: ThrowIfDisposedOrNotOpen
    nameWithType: ClientEntity.ThrowIfDisposedOrNotOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfFaulted()
  nameWithType: ClientEntity.ThrowIfFaulted()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
    name: ThrowIfFaulted
    nameWithType: ClientEntity.ThrowIfFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
    name: ThrowIfFaulted
    nameWithType: ClientEntity.ThrowIfFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfDisposedOrImmutable()
  nameWithType: ClientEntity.ThrowIfDisposedOrImmutable()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
    name: ThrowIfDisposedOrImmutable
    nameWithType: ClientEntity.ThrowIfDisposedOrImmutable
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
    name: ThrowIfDisposedOrImmutable
    nameWithType: ClientEntity.ThrowIfDisposedOrImmutable
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnOpened()
  nameWithType: ClientEntity.OnOpened()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
    name: OnOpened
    nameWithType: ClientEntity.OnOpened
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
    name: OnOpened
    nameWithType: ClientEntity.OnOpened
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnClosed()
  nameWithType: ClientEntity.OnClosed()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
    name: OnClosed
    nameWithType: ClientEntity.OnClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
    name: OnClosed
    nameWithType: ClientEntity.OnClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnFaulted()
  nameWithType: ClientEntity.OnFaulted()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
    name: OnFaulted
    nameWithType: ClientEntity.OnFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
    name: OnFaulted
    nameWithType: ClientEntity.OnFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnAbort()
  nameWithType: ClientEntity.OnAbort()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
    name: OnAbort
    nameWithType: ClientEntity.OnAbort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
    name: OnAbort
    nameWithType: ClientEntity.OnAbort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ClientEntity.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: ClientEntity.OnBeginOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: ClientEntity.OnBeginOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnEndOpen(IAsyncResult)
  nameWithType: ClientEntity.OnEndOpen(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: ClientEntity.OnEndOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: ClientEntity.OnEndOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ClientEntity.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: ClientEntity.OnBeginClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: ClientEntity.OnBeginClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnEndClose(IAsyncResult)
  nameWithType: ClientEntity.OnEndClose(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: ClientEntity.OnEndClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: ClientEntity.OnEndClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory
  commentId: T:Microsoft.ServiceBus.Messaging.MessagingFactory
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory
- uid: Microsoft.ServiceBus.Messaging.MessageSender.Path*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.Path
  isExternal: false
  name: Path
  nameWithType: MessageSender.Path
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Messaging.MessageSender
  commentId: T:Microsoft.ServiceBus.Messaging.MessageSender
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessageSender
  nameWithType: MessageSender
  fullName: Microsoft.ServiceBus.Messaging.MessageSender
- uid: Microsoft.ServiceBus.Messaging.MessageSender.BatchFlushInterval*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.BatchFlushInterval
  isExternal: false
  name: BatchFlushInterval
  nameWithType: MessageSender.BatchFlushInterval
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.BatchFlushInterval
- uid: System.OperationCanceledException
  commentId: T:System.OperationCanceledException
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceBus.Messaging.MessageSender.SupportsGetRuntimeEntityDescription*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.SupportsGetRuntimeEntityDescription
  isExternal: false
  name: SupportsGetRuntimeEntityDescription
  nameWithType: MessageSender.SupportsGetRuntimeEntityDescription
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.SupportsGetRuntimeEntityDescription
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Messaging.MessageSender.BatchingEnabled*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.BatchingEnabled
  isExternal: false
  name: BatchingEnabled
  nameWithType: MessageSender.BatchingEnabled
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.BatchingEnabled
- uid: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
  commentId: T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessagingFactorySettings
  nameWithType: MessagingFactorySettings
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
- uid: Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout
  commentId: P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout
- uid: Microsoft.ServiceBus.Messaging.MessageSender.Send*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.Send
  isExternal: false
  name: Send
  nameWithType: MessageSender.Send
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.Send
- uid: System.TimeoutException
  commentId: T:System.TimeoutException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
  commentId: T:Microsoft.ServiceBus.Messaging.BrokeredMessage
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: BrokeredMessage
  nameWithType: BrokeredMessage
  fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
- uid: Microsoft.ServiceBus.Messaging.MessageSender.SendAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.SendAsync
  isExternal: false
  name: SendAsync
  nameWithType: MessageSender.SendAsync
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.SendAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceBus.Messaging.MessageSender.SendBatch*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.SendBatch
  isExternal: false
  name: SendBatch
  nameWithType: MessageSender.SendBatch
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.SendBatch
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BrokeredMessage>
  nameWithType: IEnumerable<BrokeredMessage>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.BrokeredMessage>
  nameWithType.vb: IEnumerable(Of BrokeredMessage)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.BrokeredMessage)
  name.vb: IEnumerable(Of BrokeredMessage)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync
  isExternal: false
  name: SendBatchAsync
  nameWithType: MessageSender.SendBatchAsync
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend
  isExternal: false
  name: OnBeginSend
  nameWithType: MessageSender.OnBeginSend
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend
- uid: Microsoft.ServiceBus.Tracing.TrackingContext
  commentId: T:Microsoft.ServiceBus.Tracing.TrackingContext
  parent: Microsoft.ServiceBus.Tracing
  isExternal: false
  name: TrackingContext
  nameWithType: TrackingContext
  fullName: Microsoft.ServiceBus.Tracing.TrackingContext
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: Microsoft.ServiceBus.Tracing
  commentId: N:Microsoft.ServiceBus.Tracing
  isExternal: false
  name: Microsoft.ServiceBus.Tracing
  nameWithType: Microsoft.ServiceBus.Tracing
  fullName: Microsoft.ServiceBus.Tracing
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnEndSend*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.OnEndSend
  isExternal: false
  name: OnEndSend
  nameWithType: MessageSender.OnEndSend
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnEndSend
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSendEventData*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSendEventData
  isExternal: false
  name: OnBeginSendEventData
  nameWithType: MessageSender.OnBeginSendEventData
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSendEventData
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EventData>
  nameWithType: IEnumerable<EventData>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.EventData>
  nameWithType.vb: IEnumerable(Of EventData)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.EventData)
  name.vb: IEnumerable(Of EventData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.EventData
    name: EventData
    nameWithType: EventData
    fullName: Microsoft.ServiceBus.Messaging.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.EventData
    name: EventData
    nameWithType: EventData
    fullName: Microsoft.ServiceBus.Messaging.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnEndSendEventData*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.OnEndSendEventData
  isExternal: false
  name: OnEndSendEventData
  nameWithType: MessageSender.OnEndSendEventData
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnEndSendEventData
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnSend*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.OnSend
  isExternal: false
  name: OnSend
  nameWithType: MessageSender.OnSend
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnSend
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage
  isExternal: false
  name: OnBeginScheduleMessage
  nameWithType: MessageSender.OnBeginScheduleMessage
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnEndScheduleMessage*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.OnEndScheduleMessage
  isExternal: false
  name: OnEndScheduleMessage
  nameWithType: MessageSender.OnEndScheduleMessage
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnEndScheduleMessage
- uid: System.Collections.Generic.IEnumerable{System.Int64}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int64}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int64>
  nameWithType: IEnumerable<Int64>
  fullName: System.Collections.Generic.IEnumerable<System.Int64>
  nameWithType.vb: IEnumerable(Of Int64)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Int64)
  name.vb: IEnumerable(Of Int64)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage
  isExternal: false
  name: OnBeginCancelScheduledMessage
  nameWithType: MessageSender.OnBeginCancelScheduledMessage
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage
- uid: Microsoft.ServiceBus.Messaging.MessageSender.OnEndCancelScheduledMessage*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSender.OnEndCancelScheduledMessage
  isExternal: false
  name: OnEndCancelScheduledMessage
  nameWithType: MessageSender.OnEndCancelScheduledMessage
  fullName: Microsoft.ServiceBus.Messaging.MessageSender.OnEndCancelScheduledMessage
