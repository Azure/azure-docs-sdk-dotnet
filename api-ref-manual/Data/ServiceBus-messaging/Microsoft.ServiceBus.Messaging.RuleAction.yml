### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.RuleAction
  commentId: T:Microsoft.ServiceBus.Messaging.RuleAction
  id: RuleAction
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.RuleAction.Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  - Microsoft.ServiceBus.Messaging.RuleAction.Preprocess
  - Microsoft.ServiceBus.Messaging.RuleAction.RequiresPreprocessing
  - Microsoft.ServiceBus.Messaging.RuleAction.System#Runtime#Serialization#IExtensibleDataObject#ExtensionData
  - Microsoft.ServiceBus.Messaging.RuleAction.Validate
  langs:
  - csharp
  - vb
  name: RuleAction
  nameWithType: RuleAction
  fullName: Microsoft.ServiceBus.Messaging.RuleAction
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/RuleAction.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: RuleAction
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/RuleAction.cs
    startLine: 18
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Represents the filter actions which are allowed for the transformation \nof a message that have been matched by a filter expression."
  remarks: "\nFilter actions allow for the transformation of a message that have been matched by a filter expression. \nThe typical use case for filter acions is to append or update the properties that are attached to a message, \nfor example assigning a group ID based on the correlation ID of a message.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Name = "RuleAction", Namespace = "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")]

      [KnownType(typeof (EmptyRuleAction))]

      [KnownType(typeof (SqlRuleAction))]

      [KnownType(typeof (CompositeAction))]

      [KnownType(typeof (RuleCreationAction))]

      [KnownType(typeof (DateTimeOffset))]

      public abstract class RuleAction : IExtensibleDataObject
    content.vb: >-
      <DataContract(Name:="RuleAction", Namespace:="http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")>

      <KnownType(GetType(EmptyRuleAction))>

      <KnownType(GetType(SqlRuleAction))>

      <KnownType(GetType(CompositeAction))>

      <KnownType(GetType(RuleCreationAction))>

      <KnownType(GetType(DateTimeOffset))>

      Public MustInherit Class RuleAction
          Implements IExtensibleDataObject
  seealso:
  - linkId: Microsoft.ServiceBus.Messaging.SqlRuleAction
    commentId: T:Microsoft.ServiceBus.Messaging.SqlRuleAction
  - linkId: Microsoft.ServiceBus.Messaging.EmptyRuleAction
    commentId: T:Microsoft.ServiceBus.Messaging.EmptyRuleAction
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.ServiceBus.Messaging.SqlRuleAction
  implements:
  - System.Runtime.Serialization.IExtensibleDataObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: RuleAction
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/netservices/2010/10/servicebus/connect
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.ServiceBus.Messaging.SqlRuleAction
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.DateTimeOffset
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceBus.Messaging.RuleAction.RequiresPreprocessing
  commentId: P:Microsoft.ServiceBus.Messaging.RuleAction.RequiresPreprocessing
  id: RequiresPreprocessing
  parent: Microsoft.ServiceBus.Messaging.RuleAction
  langs:
  - csharp
  - vb
  name: RequiresPreprocessing
  nameWithType: RuleAction.RequiresPreprocessing
  fullName: Microsoft.ServiceBus.Messaging.RuleAction.RequiresPreprocessing
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/RuleAction.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: RequiresPreprocessing
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/RuleAction.cs
    startLine: 34
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets a value that indicates whether the rule action requires preprocessing.
  example: []
  syntax:
    content: public abstract bool RequiresPreprocessing { get; }
    content.vb: Public MustOverride ReadOnly Property RequiresPreprocessing As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the rule action requires preprocessing; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.RuleAction.RequiresPreprocessing*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.RuleAction.System#Runtime#Serialization#IExtensibleDataObject#ExtensionData
  commentId: P:Microsoft.ServiceBus.Messaging.RuleAction.System#Runtime#Serialization#IExtensibleDataObject#ExtensionData
  id: System#Runtime#Serialization#IExtensibleDataObject#ExtensionData
  isEii: true
  parent: Microsoft.ServiceBus.Messaging.RuleAction
  langs:
  - csharp
  - vb
  name: IExtensibleDataObject.ExtensionData
  nameWithType: RuleAction.IExtensibleDataObject.ExtensionData
  fullName: Microsoft.ServiceBus.Messaging.RuleAction.System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/RuleAction.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/RuleAction.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: ExtensionDataObject IExtensibleDataObject.ExtensionData { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Runtime.Serialization.IExtensibleDataObject.ExtensionData As ExtensionDataObject Implements IExtensibleDataObject.ExtensionData
    parameters: []
    return:
      type: System.Runtime.Serialization.ExtensionDataObject
  overload: Microsoft.ServiceBus.Messaging.RuleAction.System#Runtime#Serialization#IExtensibleDataObject#ExtensionData*
  implements:
  - System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  nameWithType.vb: RuleAction.System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  modifiers.csharp:
  - get
  - set
  name.vb: System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
- uid: Microsoft.ServiceBus.Messaging.RuleAction.Preprocess
  commentId: M:Microsoft.ServiceBus.Messaging.RuleAction.Preprocess
  id: Preprocess
  parent: Microsoft.ServiceBus.Messaging.RuleAction
  langs:
  - csharp
  - vb
  name: Preprocess()
  nameWithType: RuleAction.Preprocess()
  fullName: Microsoft.ServiceBus.Messaging.RuleAction.Preprocess()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/RuleAction.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Preprocess
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/RuleAction.cs
    startLine: 46
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Preprocesses the <xref href="Microsoft.ServiceBus.Messaging.RuleAction" data-throw-if-not-resolved="false"></xref> object.
  remarks: Concrete implementation of this class is free to throw InvalidOperationException is this requires preprocessing.
  example: []
  syntax:
    content: public abstract RuleAction Preprocess()
    content.vb: Public MustOverride Function Preprocess As RuleAction
    return:
      type: Microsoft.ServiceBus.Messaging.RuleAction
      description: The preprocessed <xref href="Microsoft.ServiceBus.Messaging.RuleAction" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.RuleAction.Preprocess*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.RuleAction.Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  commentId: M:Microsoft.ServiceBus.Messaging.RuleAction.Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  id: Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  parent: Microsoft.ServiceBus.Messaging.RuleAction
  langs:
  - csharp
  - vb
  name: Execute(BrokeredMessage)
  nameWithType: RuleAction.Execute(BrokeredMessage)
  fullName: Microsoft.ServiceBus.Messaging.RuleAction.Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/RuleAction.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Execute
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/RuleAction.cs
    startLine: 52
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the filter action on the supplied BrokeredMessage.
  remarks: Concrete implementation of this class is free to throw InvalidOperationException is this requires preprocessing.
  example: []
  syntax:
    content: public abstract BrokeredMessage Execute(BrokeredMessage message)
    content.vb: Public MustOverride Function Execute(message As BrokeredMessage) As BrokeredMessage
    parameters:
    - id: message
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: Input BrokeredMessage.
    return:
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: The modified BrokeredMessage after executing the rule action.
  overload: Microsoft.ServiceBus.Messaging.RuleAction.Execute*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.RuleAction.Validate
  commentId: M:Microsoft.ServiceBus.Messaging.RuleAction.Validate
  id: Validate
  parent: Microsoft.ServiceBus.Messaging.RuleAction
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: RuleAction.Validate()
  fullName: Microsoft.ServiceBus.Messaging.RuleAction.Validate()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/RuleAction.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Validate
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/Filters/RuleAction.cs
    startLine: 68
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: 'Validates the rule action against the grammar. '
  remarks: Concrete implementation of this class is free to throw InvalidOperationException is this requires preprocessing.
  example: []
  syntax:
    content: public abstract void Validate()
    content.vb: Public MustOverride Sub Validate
  overload: Microsoft.ServiceBus.Messaging.RuleAction.Validate*
  seealso:
  - linkId: Microsoft.ServiceBus.Messaging.SqlRuleAction
    commentId: T:Microsoft.ServiceBus.Messaging.SqlRuleAction
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.ServiceBus.Messaging.SqlRuleAction
  commentId: T:Microsoft.ServiceBus.Messaging.SqlRuleAction
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: SqlRuleAction
  nameWithType: SqlRuleAction
  fullName: Microsoft.ServiceBus.Messaging.SqlRuleAction
- uid: Microsoft.ServiceBus.Messaging.EmptyRuleAction
  commentId: T:Microsoft.ServiceBus.Messaging.EmptyRuleAction
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.IExtensibleDataObject
  commentId: T:System.Runtime.Serialization.IExtensibleDataObject
  parent: System.Runtime.Serialization
  isExternal: true
  name: IExtensibleDataObject
  nameWithType: IExtensibleDataObject
  fullName: System.Runtime.Serialization.IExtensibleDataObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Microsoft.ServiceBus.Messaging.RuleAction.RequiresPreprocessing*
  commentId: Overload:Microsoft.ServiceBus.Messaging.RuleAction.RequiresPreprocessing
  isExternal: false
  name: RequiresPreprocessing
  nameWithType: RuleAction.RequiresPreprocessing
  fullName: Microsoft.ServiceBus.Messaging.RuleAction.RequiresPreprocessing
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Messaging.RuleAction.System#Runtime#Serialization#IExtensibleDataObject#ExtensionData*
  commentId: Overload:Microsoft.ServiceBus.Messaging.RuleAction.System#Runtime#Serialization#IExtensibleDataObject#ExtensionData
  isExternal: false
  name: IExtensibleDataObject.ExtensionData
  nameWithType: RuleAction.IExtensibleDataObject.ExtensionData
  fullName: Microsoft.ServiceBus.Messaging.RuleAction.System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  nameWithType.vb: RuleAction.System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  name.vb: System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
- uid: System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  commentId: P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  parent: System.Runtime.Serialization.IExtensibleDataObject
  isExternal: true
  name: ExtensionData
  nameWithType: IExtensibleDataObject.ExtensionData
  fullName: System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
- uid: System.Runtime.Serialization.ExtensionDataObject
  commentId: T:System.Runtime.Serialization.ExtensionDataObject
  parent: System.Runtime.Serialization
  isExternal: true
  name: ExtensionDataObject
  nameWithType: ExtensionDataObject
  fullName: System.Runtime.Serialization.ExtensionDataObject
- uid: Microsoft.ServiceBus.Messaging.RuleAction
  commentId: T:Microsoft.ServiceBus.Messaging.RuleAction
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: RuleAction
  nameWithType: RuleAction
  fullName: Microsoft.ServiceBus.Messaging.RuleAction
- uid: Microsoft.ServiceBus.Messaging.RuleAction.Preprocess*
  commentId: Overload:Microsoft.ServiceBus.Messaging.RuleAction.Preprocess
  isExternal: false
  name: Preprocess
  nameWithType: RuleAction.Preprocess
  fullName: Microsoft.ServiceBus.Messaging.RuleAction.Preprocess
- uid: Microsoft.ServiceBus.Messaging.RuleAction.Execute*
  commentId: Overload:Microsoft.ServiceBus.Messaging.RuleAction.Execute
  isExternal: false
  name: Execute
  nameWithType: RuleAction.Execute
  fullName: Microsoft.ServiceBus.Messaging.RuleAction.Execute
- uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
  commentId: T:Microsoft.ServiceBus.Messaging.BrokeredMessage
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: BrokeredMessage
  nameWithType: BrokeredMessage
  fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
- uid: Microsoft.ServiceBus.Messaging.RuleAction.Validate*
  commentId: Overload:Microsoft.ServiceBus.Messaging.RuleAction.Validate
  isExternal: false
  name: Validate
  nameWithType: RuleAction.Validate
  fullName: Microsoft.ServiceBus.Messaging.RuleAction.Validate
