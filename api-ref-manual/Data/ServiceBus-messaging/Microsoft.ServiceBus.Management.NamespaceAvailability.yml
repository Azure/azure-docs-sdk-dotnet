### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Management.NamespaceAvailability
  commentId: T:Microsoft.ServiceBus.Management.NamespaceAvailability
  id: NamespaceAvailability
  parent: Microsoft.ServiceBus.Management
  children:
  - Microsoft.ServiceBus.Management.NamespaceAvailability.Available
  - Microsoft.ServiceBus.Management.NamespaceAvailability.ExtensionData
  - Microsoft.ServiceBus.Management.NamespaceAvailability.Reason
  - Microsoft.ServiceBus.Management.NamespaceAvailability.ReasonDetail
  - Microsoft.ServiceBus.Management.NamespaceAvailability.Serializer
  langs:
  - csharp
  - vb
  name: NamespaceAvailability
  nameWithType: NamespaceAvailability
  fullName: Microsoft.ServiceBus.Management.NamespaceAvailability
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceAvailability.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: NamespaceAvailability
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceAvailability.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Represents the availability of the given service namespace.
  example: []
  syntax:
    content: >-
      [DataContract(Name = "NamespaceAvailability", Namespace = "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")]

      public class NamespaceAvailability : IExtensibleDataObject
    content.vb: >-
      <DataContract(Name:="NamespaceAvailability", Namespace:="http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")>

      Public Class NamespaceAvailability
          Implements IExtensibleDataObject
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.IExtensibleDataObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: NamespaceAvailability
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/netservices/2010/10/servicebus/connect
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.Management.NamespaceAvailability.Serializer
  commentId: F:Microsoft.ServiceBus.Management.NamespaceAvailability.Serializer
  id: Serializer
  parent: Microsoft.ServiceBus.Management.NamespaceAvailability
  langs:
  - csharp
  - vb
  name: Serializer
  nameWithType: NamespaceAvailability.Serializer
  fullName: Microsoft.ServiceBus.Management.NamespaceAvailability.Serializer
  type: Field
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceAvailability.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Serializer
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceAvailability.cs
    startLine: 33
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: The data contract serializer.
  example: []
  syntax:
    content: public static readonly DataContractSerializer Serializer
    content.vb: Public Shared ReadOnly Serializer As DataContractSerializer
    return:
      type: System.Runtime.Serialization.DataContractSerializer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.ServiceBus.Management.NamespaceAvailability.Available
  commentId: P:Microsoft.ServiceBus.Management.NamespaceAvailability.Available
  id: Available
  parent: Microsoft.ServiceBus.Management.NamespaceAvailability
  langs:
  - csharp
  - vb
  name: Available
  nameWithType: NamespaceAvailability.Available
  fullName: Microsoft.ServiceBus.Management.NamespaceAvailability.Available
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceAvailability.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Available
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceAvailability.cs
    startLine: 37
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets whether the namespace is available.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Result", Order = 101)]

      public bool Available { get; set; }
    content.vb: >-
      <DataMember(Name:="Result", Order:=101)>

      Public Property Available As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the namespace is available; otherwise, false.
  overload: Microsoft.ServiceBus.Management.NamespaceAvailability.Available*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Result
    - name: Order
      type: System.Int32
      value: 101
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.NamespaceAvailability.Reason
  commentId: P:Microsoft.ServiceBus.Management.NamespaceAvailability.Reason
  id: Reason
  parent: Microsoft.ServiceBus.Management.NamespaceAvailability
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: NamespaceAvailability.Reason
  fullName: Microsoft.ServiceBus.Management.NamespaceAvailability.Reason
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceAvailability.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Reason
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceAvailability.cs
    startLine: 42
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the reason for unavailability of a namespace.
  example: []
  syntax:
    content: public UnavailableReason Reason { get; set; }
    content.vb: Public Property Reason As UnavailableReason
    parameters: []
    return:
      type: Microsoft.ServiceBus.Management.UnavailableReason
      description: The reason for unavailability of a namespace.
  overload: Microsoft.ServiceBus.Management.NamespaceAvailability.Reason*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.NamespaceAvailability.ReasonDetail
  commentId: P:Microsoft.ServiceBus.Management.NamespaceAvailability.ReasonDetail
  id: ReasonDetail
  parent: Microsoft.ServiceBus.Management.NamespaceAvailability
  langs:
  - csharp
  - vb
  name: ReasonDetail
  nameWithType: NamespaceAvailability.ReasonDetail
  fullName: Microsoft.ServiceBus.Management.NamespaceAvailability.ReasonDetail
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceAvailability.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ReasonDetail
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceAvailability.cs
    startLine: 46
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the detailed info regarding the reason associated with the namespace.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "ReasonDetail", Order = 102)]

      public string ReasonDetail { get; set; }
    content.vb: >-
      <DataMember(Name:="ReasonDetail", Order:=102)>

      Public Property ReasonDetail As String
    parameters: []
    return:
      type: System.String
      description: The detailed info regarding the reason associated with the namespace.
  overload: Microsoft.ServiceBus.Management.NamespaceAvailability.ReasonDetail*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ReasonDetail
    - name: Order
      type: System.Int32
      value: 102
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.NamespaceAvailability.ExtensionData
  commentId: P:Microsoft.ServiceBus.Management.NamespaceAvailability.ExtensionData
  id: ExtensionData
  parent: Microsoft.ServiceBus.Management.NamespaceAvailability
  langs:
  - csharp
  - vb
  name: ExtensionData
  nameWithType: NamespaceAvailability.ExtensionData
  fullName: Microsoft.ServiceBus.Management.NamespaceAvailability.ExtensionData
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceAvailability.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ExtensionData
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/NamespaceAvailability.cs
    startLine: 51
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the extension data object associated with the namespace.
  example: []
  syntax:
    content: public ExtensionDataObject ExtensionData { get; set; }
    content.vb: Public Property ExtensionData As ExtensionDataObject
    parameters: []
    return:
      type: System.Runtime.Serialization.ExtensionDataObject
      description: The extension data object associated with the namespace.
  overload: Microsoft.ServiceBus.Management.NamespaceAvailability.ExtensionData*
  implements:
  - System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceBus.Management
  commentId: N:Microsoft.ServiceBus.Management
  isExternal: false
  name: Microsoft.ServiceBus.Management
  nameWithType: Microsoft.ServiceBus.Management
  fullName: Microsoft.ServiceBus.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.IExtensibleDataObject
  commentId: T:System.Runtime.Serialization.IExtensibleDataObject
  parent: System.Runtime.Serialization
  isExternal: true
  name: IExtensibleDataObject
  nameWithType: IExtensibleDataObject
  fullName: System.Runtime.Serialization.IExtensibleDataObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.Serialization.DataContractSerializer
  commentId: T:System.Runtime.Serialization.DataContractSerializer
  parent: System.Runtime.Serialization
  isExternal: true
  name: DataContractSerializer
  nameWithType: DataContractSerializer
  fullName: System.Runtime.Serialization.DataContractSerializer
- uid: Microsoft.ServiceBus.Management.NamespaceAvailability.Available*
  commentId: Overload:Microsoft.ServiceBus.Management.NamespaceAvailability.Available
  isExternal: false
  name: Available
  nameWithType: NamespaceAvailability.Available
  fullName: Microsoft.ServiceBus.Management.NamespaceAvailability.Available
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Management.NamespaceAvailability.Reason*
  commentId: Overload:Microsoft.ServiceBus.Management.NamespaceAvailability.Reason
  isExternal: false
  name: Reason
  nameWithType: NamespaceAvailability.Reason
  fullName: Microsoft.ServiceBus.Management.NamespaceAvailability.Reason
- uid: Microsoft.ServiceBus.Management.UnavailableReason
  commentId: T:Microsoft.ServiceBus.Management.UnavailableReason
  parent: Microsoft.ServiceBus.Management
  isExternal: false
  name: UnavailableReason
  nameWithType: UnavailableReason
  fullName: Microsoft.ServiceBus.Management.UnavailableReason
- uid: Microsoft.ServiceBus.Management.NamespaceAvailability.ReasonDetail*
  commentId: Overload:Microsoft.ServiceBus.Management.NamespaceAvailability.ReasonDetail
  isExternal: false
  name: ReasonDetail
  nameWithType: NamespaceAvailability.ReasonDetail
  fullName: Microsoft.ServiceBus.Management.NamespaceAvailability.ReasonDetail
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Management.NamespaceAvailability.ExtensionData*
  commentId: Overload:Microsoft.ServiceBus.Management.NamespaceAvailability.ExtensionData
  isExternal: false
  name: ExtensionData
  nameWithType: NamespaceAvailability.ExtensionData
  fullName: Microsoft.ServiceBus.Management.NamespaceAvailability.ExtensionData
- uid: System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  commentId: P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  parent: System.Runtime.Serialization.IExtensibleDataObject
  isExternal: true
  name: ExtensionData
  nameWithType: IExtensibleDataObject.ExtensionData
  fullName: System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
- uid: System.Runtime.Serialization.ExtensionDataObject
  commentId: T:System.Runtime.Serialization.ExtensionDataObject
  parent: System.Runtime.Serialization
  isExternal: true
  name: ExtensionDataObject
  nameWithType: ExtensionDataObject
  fullName: System.Runtime.Serialization.ExtensionDataObject
