### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.MessageSecurityOverRelayOneway
  commentId: T:Microsoft.ServiceBus.MessageSecurityOverRelayOneway
  id: MessageSecurityOverRelayOneway
  parent: Microsoft.ServiceBus
  children:
  - Microsoft.ServiceBus.MessageSecurityOverRelayOneway.AlgorithmSuite
  - Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType
  langs:
  - csharp
  - vb
  name: MessageSecurityOverRelayOneway
  nameWithType: MessageSecurityOverRelayOneway
  fullName: Microsoft.ServiceBus.MessageSecurityOverRelayOneway
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/MessageSecurityOverRelayOneway.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MessageSecurityOverRelayOneway
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/MessageSecurityOverRelayOneway.cs
    startLine: 17
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: The message security on a one-way connection over the Azure Service Bus relay.
  example: []
  syntax:
    content: public sealed class MessageSecurityOverRelayOneway
    content.vb: Public NotInheritable Class MessageSecurityOverRelayOneway
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType
  commentId: P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType
  id: ClientCredentialType
  parent: Microsoft.ServiceBus.MessageSecurityOverRelayOneway
  langs:
  - csharp
  - vb
  name: ClientCredentialType
  nameWithType: MessageSecurityOverRelayOneway.ClientCredentialType
  fullName: Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/MessageSecurityOverRelayOneway.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ClientCredentialType
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/MessageSecurityOverRelayOneway.cs
    startLine: 37
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the type of client credential the client uses to authenticate itself to the service at the SOAP level.
  example: []
  syntax:
    content: public MessageCredentialType ClientCredentialType { get; set; }
    content.vb: Public Property ClientCredentialType As MessageCredentialType
    parameters: []
    return:
      type: System.ServiceModel.MessageCredentialType
      description: "Returns a \n<xref href=\"System.ServiceModel.MessageCredentialType\" data-throw-if-not-resolved=\"false\"></xref> that contains the credential type. The default is Certificate."
  overload: Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of \n<xref href=\"Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType\" data-throw-if-not-resolved=\"false\"></xref> is not a valid \n<xref href=\"System.ServiceModel.MessageCredentialType\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.MessageSecurityOverRelayOneway.AlgorithmSuite
  commentId: P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.AlgorithmSuite
  id: AlgorithmSuite
  parent: Microsoft.ServiceBus.MessageSecurityOverRelayOneway
  langs:
  - csharp
  - vb
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverRelayOneway.AlgorithmSuite
  fullName: Microsoft.ServiceBus.MessageSecurityOverRelayOneway.AlgorithmSuite
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/MessageSecurityOverRelayOneway.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AlgorithmSuite
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/MessageSecurityOverRelayOneway.cs
    startLine: 55
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the algorithm suite to be used for securing messages at the SOAP level.
  example: []
  syntax:
    content: public SecurityAlgorithmSuite AlgorithmSuite { get; set; }
    content.vb: Public Property AlgorithmSuite As SecurityAlgorithmSuite
    parameters: []
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Returns an \n<xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\" data-throw-if-not-resolved=\"false\"></xref> containing the algorithm suite. The default is Basic256, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm."
  overload: Microsoft.ServiceBus.MessageSecurityOverRelayOneway.AlgorithmSuite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value of the \n<xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\" data-throw-if-not-resolved=\"false\"></xref> is null."
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.MessageCredentialType
  commentId: T:System.ServiceModel.MessageCredentialType
  parent: System.ServiceModel
  isExternal: true
  name: MessageCredentialType
  nameWithType: MessageCredentialType
  fullName: System.ServiceModel.MessageCredentialType
- uid: Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType
  commentId: P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType
- uid: Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType*
  commentId: Overload:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType
  isExternal: false
  name: ClientCredentialType
  nameWithType: MessageSecurityOverRelayOneway.ClientCredentialType
  fullName: Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  commentId: T:System.ServiceModel.Security.SecurityAlgorithmSuite
  parent: System.ServiceModel.Security
  isExternal: true
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
- uid: Microsoft.ServiceBus.MessageSecurityOverRelayOneway.AlgorithmSuite*
  commentId: Overload:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.AlgorithmSuite
  isExternal: false
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverRelayOneway.AlgorithmSuite
  fullName: Microsoft.ServiceBus.MessageSecurityOverRelayOneway.AlgorithmSuite
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ServiceModel.Security
  commentId: N:System.ServiceModel.Security
  isExternal: false
  name: System.ServiceModel.Security
  nameWithType: System.ServiceModel.Security
  fullName: System.ServiceModel.Security
