### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo
  commentId: T:Microsoft.ServiceBus.Management.FarmCertificateInfo
  id: FarmCertificateInfo
  parent: Microsoft.ServiceBus.Management
  children:
  - Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateKeyName
  - Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateName
  - Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateType
  - Microsoft.ServiceBus.Management.FarmCertificateInfo.Downloadable
  - Microsoft.ServiceBus.Management.FarmCertificateInfo.ExpirationDate
  - Microsoft.ServiceBus.Management.FarmCertificateInfo.IsAutoGenerated
  - Microsoft.ServiceBus.Management.FarmCertificateInfo.Thumbprint
  langs:
  - csharp
  - vb
  name: FarmCertificateInfo
  nameWithType: FarmCertificateInfo
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: FarmCertificateInfo
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
    startLine: 23
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Represents the details of the certificate associated with the service bus farm.
  example: []
  syntax:
    content: >-
      [DataContract(Name = "CertificateInfo", Namespace = "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")]

      public class FarmCertificateInfo
    content.vb: >-
      <DataContract(Name:="CertificateInfo", Namespace:="http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")>

      Public Class FarmCertificateInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: CertificateInfo
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/netservices/2010/10/servicebus/connect
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.IsAutoGenerated
  commentId: P:Microsoft.ServiceBus.Management.FarmCertificateInfo.IsAutoGenerated
  id: IsAutoGenerated
  parent: Microsoft.ServiceBus.Management.FarmCertificateInfo
  langs:
  - csharp
  - vb
  name: IsAutoGenerated
  nameWithType: FarmCertificateInfo.IsAutoGenerated
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.IsAutoGenerated
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IsAutoGenerated
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets whether the certificate is auto generated.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IsAutoGenerated { get; set; }
    content.vb: >-
      <DataMember>

      Public Property IsAutoGenerated As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the certificate is auto generated; otherwise, false.
  overload: Microsoft.ServiceBus.Management.FarmCertificateInfo.IsAutoGenerated*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateType
  commentId: P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateType
  id: CertificateType
  parent: Microsoft.ServiceBus.Management.FarmCertificateInfo
  langs:
  - csharp
  - vb
  name: CertificateType
  nameWithType: FarmCertificateInfo.CertificateType
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateType
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CertificateType
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
    startLine: 33
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the type of the certificate.
  example: []
  syntax:
    content: >-
      [DataMember]

      public CertificateType CertificateType { get; set; }
    content.vb: >-
      <DataMember>

      Public Property CertificateType As CertificateType
    parameters: []
    return:
      type: Microsoft.ServiceBus.Management.CertificateType
      description: The type of the certificate.
  overload: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateType*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateKeyName
  commentId: P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateKeyName
  id: CertificateKeyName
  parent: Microsoft.ServiceBus.Management.FarmCertificateInfo
  langs:
  - csharp
  - vb
  name: CertificateKeyName
  nameWithType: FarmCertificateInfo.CertificateKeyName
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateKeyName
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CertificateKeyName
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
    startLine: 38
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the keyname associated with the certificate.
  example: []
  syntax:
    content: >-
      [DataMember]

      public string CertificateKeyName { get; set; }
    content.vb: >-
      <DataMember>

      Public Property CertificateKeyName As String
    parameters: []
    return:
      type: System.String
      description: The keyname associated with the certificate.
  overload: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateKeyName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateName
  commentId: P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateName
  id: CertificateName
  parent: Microsoft.ServiceBus.Management.FarmCertificateInfo
  langs:
  - csharp
  - vb
  name: CertificateName
  nameWithType: FarmCertificateInfo.CertificateName
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateName
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CertificateName
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
    startLine: 43
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the name of the certificate.
  example: []
  syntax:
    content: >-
      [DataMember]

      public string CertificateName { get; set; }
    content.vb: >-
      <DataMember>

      Public Property CertificateName As String
    parameters: []
    return:
      type: System.String
      description: The name of the certificate.
  overload: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.Thumbprint
  commentId: P:Microsoft.ServiceBus.Management.FarmCertificateInfo.Thumbprint
  id: Thumbprint
  parent: Microsoft.ServiceBus.Management.FarmCertificateInfo
  langs:
  - csharp
  - vb
  name: Thumbprint
  nameWithType: FarmCertificateInfo.Thumbprint
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.Thumbprint
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Thumbprint
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
    startLine: 48
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the thumbprint associated with the certificate.
  example: []
  syntax:
    content: >-
      [DataMember]

      public string Thumbprint { get; set; }
    content.vb: >-
      <DataMember>

      Public Property Thumbprint As String
    parameters: []
    return:
      type: System.String
      description: The thumbprint associated with the certificate.
  overload: Microsoft.ServiceBus.Management.FarmCertificateInfo.Thumbprint*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.ExpirationDate
  commentId: P:Microsoft.ServiceBus.Management.FarmCertificateInfo.ExpirationDate
  id: ExpirationDate
  parent: Microsoft.ServiceBus.Management.FarmCertificateInfo
  langs:
  - csharp
  - vb
  name: ExpirationDate
  nameWithType: FarmCertificateInfo.ExpirationDate
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.ExpirationDate
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ExpirationDate
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the expiration date of the certificate.
  example: []
  syntax:
    content: >-
      [DataMember]

      public string ExpirationDate { get; set; }
    content.vb: >-
      <DataMember>

      Public Property ExpirationDate As String
    parameters: []
    return:
      type: System.String
      description: The expiration date of the certificate.
  overload: Microsoft.ServiceBus.Management.FarmCertificateInfo.ExpirationDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.Downloadable
  commentId: P:Microsoft.ServiceBus.Management.FarmCertificateInfo.Downloadable
  id: Downloadable
  parent: Microsoft.ServiceBus.Management.FarmCertificateInfo
  langs:
  - csharp
  - vb
  name: Downloadable
  nameWithType: FarmCertificateInfo.Downloadable
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.Downloadable
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Downloadable
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/FarmCertificateInfo.cs
    startLine: 58
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets whether the certificate is downloadable.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool Downloadable { get; set; }
    content.vb: >-
      <DataMember>

      Public Property Downloadable As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the certificate is downloadable; otherwise, false.
  overload: Microsoft.ServiceBus.Management.FarmCertificateInfo.Downloadable*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceBus.Management
  commentId: N:Microsoft.ServiceBus.Management
  isExternal: false
  name: Microsoft.ServiceBus.Management
  nameWithType: Microsoft.ServiceBus.Management
  fullName: Microsoft.ServiceBus.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.IsAutoGenerated*
  commentId: Overload:Microsoft.ServiceBus.Management.FarmCertificateInfo.IsAutoGenerated
  isExternal: false
  name: IsAutoGenerated
  nameWithType: FarmCertificateInfo.IsAutoGenerated
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.IsAutoGenerated
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateType*
  commentId: Overload:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateType
  isExternal: false
  name: CertificateType
  nameWithType: FarmCertificateInfo.CertificateType
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateType
- uid: Microsoft.ServiceBus.Management.CertificateType
  commentId: T:Microsoft.ServiceBus.Management.CertificateType
  parent: Microsoft.ServiceBus.Management
  isExternal: false
  name: CertificateType
  nameWithType: CertificateType
  fullName: Microsoft.ServiceBus.Management.CertificateType
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateKeyName*
  commentId: Overload:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateKeyName
  isExternal: false
  name: CertificateKeyName
  nameWithType: FarmCertificateInfo.CertificateKeyName
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateKeyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateName*
  commentId: Overload:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateName
  isExternal: false
  name: CertificateName
  nameWithType: FarmCertificateInfo.CertificateName
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateName
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.Thumbprint*
  commentId: Overload:Microsoft.ServiceBus.Management.FarmCertificateInfo.Thumbprint
  isExternal: false
  name: Thumbprint
  nameWithType: FarmCertificateInfo.Thumbprint
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.Thumbprint
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.ExpirationDate*
  commentId: Overload:Microsoft.ServiceBus.Management.FarmCertificateInfo.ExpirationDate
  isExternal: false
  name: ExpirationDate
  nameWithType: FarmCertificateInfo.ExpirationDate
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.ExpirationDate
- uid: Microsoft.ServiceBus.Management.FarmCertificateInfo.Downloadable*
  commentId: Overload:Microsoft.ServiceBus.Management.FarmCertificateInfo.Downloadable
  isExternal: false
  name: Downloadable
  nameWithType: FarmCertificateInfo.Downloadable
  fullName: Microsoft.ServiceBus.Management.FarmCertificateInfo.Downloadable
