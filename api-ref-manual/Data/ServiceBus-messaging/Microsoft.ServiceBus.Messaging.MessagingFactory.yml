### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory
  commentId: T:Microsoft.ServiceBus.Messaging.MessagingFactory
  id: MessagingFactory
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession
  - Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession(System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync
  - Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync(System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Address
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri})
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.TokenProvider)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.TokenProvider)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri})
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.TokenProvider)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.TokenProvider)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateEventHubClient(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateFromConnectionString(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String,System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String,System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.CreateTopicClient(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.GetSettings
  - Microsoft.ServiceBus.Messaging.MessagingFactory.IncrementConnectionResetCount(System.Uri)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.NamespaceEndpoints
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnAbort
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnClose(System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateEventHubClient(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.String,System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateTopicClient(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptMessageSession(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptSessionReceiver(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndClose(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageReceiver(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageSender(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.PairNamespaceAsync(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions)
  - Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount
  - Microsoft.ServiceBus.Messaging.MessagingFactory.ResetConnection
  langs:
  - csharp
  - vb
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MessagingFactory
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 29
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: 'The MessagingFactory class is the anchor class used for run time operations to send and receive to and from queues, topics, or subscriptions. '
  remarks: "Please note that any member method with CreateXXXClient, such as CreateQueueClient, does not create a new entity in the namespace. It only\n         gets handle to an existing entity created earlier using the <xref href=\"Microsoft.ServiceBus.NamespaceManager\" data-throw-if-not-resolved=\"false\"></xref>. If these entities does not exist in the namespace, you will \n         get an exception."
  example:
  - "\n<pre><code>string Address = \"sb://myapp.WindowsAzure.com/\"; //base address of namespace you are connecting to.\nMessagingFactorySettings MsgFactorySettings = new MessagingFactorySettings(); //specify operating timeout (optional)\nMessagingFactory MsgFactory = MessagingFactory.Create(Address, MsgFactorySettings);</code></pre>\n"
  syntax:
    content: 'public abstract class MessagingFactory : ClientEntity, IMessageClientEntity, ICloseable'
    content.vb: >-
      Public MustInherit Class MessagingFactory
          Inherits ClientEntity
          Implements IMessageClientEntity, ICloseable
  seealso:
  - linkId: Microsoft.ServiceBus.NamespaceManager
    commentId: T:Microsoft.ServiceBus.NamespaceManager
  inheritance:
  - System.Object
  - Microsoft.ServiceBus.Messaging.ClientEntity
  inheritedMembers:
  - Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
  - Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
  - Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  - Microsoft.ServiceBus.Messaging.ClientEntity.Close
  - Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  - Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Address
  commentId: P:Microsoft.ServiceBus.Messaging.MessagingFactory.Address
  id: Address
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: MessagingFactory.Address
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Address
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Address
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 49
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the base address of the messaging factory.
  example: []
  syntax:
    content: public Uri Address { get; }
    content.vb: Public ReadOnly Property Address As Uri
    parameters: []
    return:
      type: System.Uri
      description: A URI that represents the base address of the messaging factory.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Address*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.NamespaceEndpoints
  commentId: P:Microsoft.ServiceBus.Messaging.MessagingFactory.NamespaceEndpoints
  id: NamespaceEndpoints
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: NamespaceEndpoints
  nameWithType: MessagingFactory.NamespaceEndpoints
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.NamespaceEndpoints
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: NamespaceEndpoints
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets a list of namespace endpoints.
  example: []
  syntax:
    content: public IEnumerable<Uri> NamespaceEndpoints { get; }
    content.vb: Public ReadOnly Property NamespaceEndpoints As IEnumerable(Of Uri)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: A list of namespace endpoints.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.NamespaceEndpoints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount
  commentId: P:Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount
  id: PrefetchCount
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: PrefetchCount
  nameWithType: MessagingFactory.PrefetchCount
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PrefetchCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 58
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the number of messages that the message receiver can simultaneously request.
  remarks: 'Takes effect on the next acceptmessagesession call to the server '
  example: []
  syntax:
    content: public virtual int PrefetchCount { get; set; }
    content.vb: Public Overridable Property PrefetchCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of messages that the message receiver can simultaneously request.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create
  id: Create
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: MessagingFactory.Create()
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 104
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new messaging factory object.
  example: []
  syntax:
    content: public static MessagingFactory Create()
    content.vb: Public Shared Function Create As MessagingFactory
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateFromConnectionString(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateFromConnectionString(System.String)
  id: CreateFromConnectionString(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String)
  nameWithType: MessagingFactory.CreateFromConnectionString(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateFromConnectionString(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateFromConnectionString
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 113
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object from a connection string.
  example: []
  syntax:
    content: public static MessagingFactory CreateFromConnectionString(string connectionString)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String) As MessagingFactory
    parameters:
    - id: connectionString
      type: System.String
      description: The connection string.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateFromConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String)
  id: Create(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: MessagingFactory.Create(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 133
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static MessagingFactory Create(string address)
    content.vb: Public Shared Function Create(address As String) As MessagingFactory
    parameters:
    - id: address
      type: System.String
      description: The base address of the service namespace.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String})
  id: Create(System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create(IEnumerable<String>)
  nameWithType: MessagingFactory.Create(IEnumerable<String>)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 141
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static MessagingFactory Create(IEnumerable<string> addresses)
    content.vb: Public Shared Function Create(addresses As IEnumerable(Of String)) As MessagingFactory
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.String}
      description: An enumeration of base addresses.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  nameWithType.vb: MessagingFactory.Create(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Create(IEnumerable(Of String))
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri)
  id: Create(System.Uri)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create(Uri)
  nameWithType: MessagingFactory.Create(Uri)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 149
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static MessagingFactory Create(Uri address)
    content.vb: Public Shared Function Create(address As Uri) As MessagingFactory
    parameters:
    - id: address
      type: System.Uri
      description: The namespace base address.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri})
  id: Create(System.Collections.Generic.IEnumerable{System.Uri})
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create(IEnumerable<Uri>)
  nameWithType: MessagingFactory.Create(IEnumerable<Uri>)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable<System.Uri>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 157
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static MessagingFactory Create(IEnumerable<Uri> addresses)
    content.vb: Public Shared Function Create(addresses As IEnumerable(Of Uri)) As MessagingFactory
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: An enumeration of address.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  nameWithType.vb: MessagingFactory.Create(IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: Create(IEnumerable(Of Uri))
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.TokenProvider)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.TokenProvider)
  id: Create(System.String,Microsoft.ServiceBus.TokenProvider)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create(String, TokenProvider)
  nameWithType: MessagingFactory.Create(String, TokenProvider)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String, Microsoft.ServiceBus.TokenProvider)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 170
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static MessagingFactory Create(string address, TokenProvider tokenProvider)
    content.vb: Public Shared Function Create(address As String, tokenProvider As TokenProvider) As MessagingFactory
    parameters:
    - id: address
      type: System.String
      description: The base address of the namespace.
    - id: tokenProvider
      type: Microsoft.ServiceBus.TokenProvider
      description: The token provider.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<span class=\"paramref\">address</span> contains a path appended to the full address of the service namespace."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: Thrown when <span class="paramref">address</span> is empty.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <span class="paramref">tokenProvider</span> or <span class="paramref">address</span> are null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)
  id: Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create(IEnumerable<String>, TokenProvider)
  nameWithType: MessagingFactory.Create(IEnumerable<String>, TokenProvider)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable<System.String>, Microsoft.ServiceBus.TokenProvider)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 179
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static MessagingFactory Create(IEnumerable<string> addresses, TokenProvider tokenProvider)
    content.vb: Public Shared Function Create(addresses As IEnumerable(Of String), tokenProvider As TokenProvider) As MessagingFactory
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.String}
      description: An enumeration of base addresses.
    - id: tokenProvider
      type: Microsoft.ServiceBus.TokenProvider
      description: The token provider.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  nameWithType.vb: MessagingFactory.Create(IEnumerable(Of String), TokenProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable(Of System.String), Microsoft.ServiceBus.TokenProvider)
  name.vb: Create(IEnumerable(Of String), TokenProvider)
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.TokenProvider)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.TokenProvider)
  id: Create(System.Uri,Microsoft.ServiceBus.TokenProvider)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create(Uri, TokenProvider)
  nameWithType: MessagingFactory.Create(Uri, TokenProvider)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri, Microsoft.ServiceBus.TokenProvider)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 191
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static MessagingFactory Create(Uri address, TokenProvider tokenProvider)
    content.vb: Public Shared Function Create(address As Uri, tokenProvider As TokenProvider) As MessagingFactory
    parameters:
    - id: address
      type: System.Uri
      description: The base address of the namespace.
    - id: tokenProvider
      type: Microsoft.ServiceBus.TokenProvider
      description: The token provider.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<span class=\"paramref\">address</span> contains a path appended to the full address of the service namespace."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <span class="paramref">tokenProvider</span> or <span class="paramref">address</span> are null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)
  id: Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create(IEnumerable<Uri>, TokenProvider)
  nameWithType: MessagingFactory.Create(IEnumerable<Uri>, TokenProvider)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable<System.Uri>, Microsoft.ServiceBus.TokenProvider)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 200
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static MessagingFactory Create(IEnumerable<Uri> addresses, TokenProvider tokenProvider)
    content.vb: Public Shared Function Create(addresses As IEnumerable(Of Uri), tokenProvider As TokenProvider) As MessagingFactory
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: An enumeration of address.
    - id: tokenProvider
      type: Microsoft.ServiceBus.TokenProvider
      description: The token provider.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  nameWithType.vb: MessagingFactory.Create(IEnumerable(Of Uri), TokenProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable(Of System.Uri), Microsoft.ServiceBus.TokenProvider)
  name.vb: Create(IEnumerable(Of Uri), TokenProvider)
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  id: Create(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create(String, MessagingFactorySettings)
  nameWithType: MessagingFactory.Create(String, MessagingFactorySettings)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String, Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 214
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static MessagingFactory Create(string address, MessagingFactorySettings factorySettings)
    content.vb: Public Shared Function Create(address As String, factorySettings As MessagingFactorySettings) As MessagingFactory
    parameters:
    - id: address
      type: System.String
      description: The base address of the service namespace.
    - id: factorySettings
      type: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
      description: The <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> settings.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: Thrown when <span class="paramref">address</span> is empty.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <span class="paramref">factorySettings</span> or <span class="paramref">address</span> are null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<span class=\"paramref\">address</span> contains a path appended to the full address of the service namespace."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  id: Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create(IEnumerable<String>, MessagingFactorySettings)
  nameWithType: MessagingFactory.Create(IEnumerable<String>, MessagingFactorySettings)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable<System.String>, Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 224
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static MessagingFactory Create(IEnumerable<string> addresses, MessagingFactorySettings factorySettings)
    content.vb: Public Shared Function Create(addresses As IEnumerable(Of String), factorySettings As MessagingFactorySettings) As MessagingFactory
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.String}
      description: An enumeration of base addresses.
    - id: factorySettings
      type: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
      description: The factory settings.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  nameWithType.vb: MessagingFactory.Create(IEnumerable(Of String), MessagingFactorySettings)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable(Of System.String), Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  name.vb: Create(IEnumerable(Of String), MessagingFactorySettings)
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  id: Create(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create(Uri, MessagingFactorySettings)
  nameWithType: MessagingFactory.Create(Uri, MessagingFactorySettings)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri, Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 236
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static MessagingFactory Create(Uri address, MessagingFactorySettings factorySettings)
    content.vb: Public Shared Function Create(address As Uri, factorySettings As MessagingFactorySettings) As MessagingFactory
    parameters:
    - id: address
      type: System.Uri
      description: The namespace base address.
    - id: factorySettings
      type: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
      description: The <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> settings.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <span class="paramref">address</span> or <span class="paramref">factorySettings</span> is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<span class=\"paramref\">address</span> contains a path appended to the full address of the service namespace."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  id: Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: Create(IEnumerable<Uri>, MessagingFactorySettings)
  nameWithType: MessagingFactory.Create(IEnumerable<Uri>, MessagingFactorySettings)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable<System.Uri>, Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 250
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static MessagingFactory Create(IEnumerable<Uri> addresses, MessagingFactorySettings factorySettings)
    content.vb: Public Shared Function Create(addresses As IEnumerable(Of Uri), factorySettings As MessagingFactorySettings) As MessagingFactory
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: An enumeration of address.
    - id: factorySettings
      type: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
      description: The factory settings.
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  nameWithType.vb: MessagingFactory.Create(IEnumerable(Of Uri), MessagingFactorySettings)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable(Of System.Uri), Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  name.vb: Create(IEnumerable(Of Uri), MessagingFactorySettings)
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String)
  id: CreateAsync(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(String)
  nameWithType: MessagingFactory.CreateAsync(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 270
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a new messaging factory object.
  example: []
  syntax:
    content: public static Task<MessagingFactory> CreateAsync(string address)
    content.vb: Public Shared Function CreateAsync(address As String) As Task(Of MessagingFactory)
    parameters:
    - id: address
      type: System.String
      description: The base address of the service namespace.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
      description: A task instance that represents the asynchronous create operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String})
  id: CreateAsync(System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(IEnumerable<String>)
  nameWithType: MessagingFactory.CreateAsync(IEnumerable<String>)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 278
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a new messaging factory object.
  example: []
  syntax:
    content: public static Task<MessagingFactory> CreateAsync(IEnumerable<string> addresses)
    content.vb: Public Shared Function CreateAsync(addresses As IEnumerable(Of String)) As Task(Of MessagingFactory)
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.String}
      description: An enumeration of base addresses.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
      description: A task instance that represents the asynchronous create operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  nameWithType.vb: MessagingFactory.CreateAsync(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: CreateAsync(IEnumerable(Of String))
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri)
  id: CreateAsync(System.Uri)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(Uri)
  nameWithType: MessagingFactory.CreateAsync(Uri)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 286
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a new messaging factory object.
  example: []
  syntax:
    content: public static Task<MessagingFactory> CreateAsync(Uri address)
    content.vb: Public Shared Function CreateAsync(address As Uri) As Task(Of MessagingFactory)
    parameters:
    - id: address
      type: System.Uri
      description: The namespace base address.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
      description: A task instance that represents the asynchronous create operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri})
  id: CreateAsync(System.Collections.Generic.IEnumerable{System.Uri})
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(IEnumerable<Uri>)
  nameWithType: MessagingFactory.CreateAsync(IEnumerable<Uri>)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable<System.Uri>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 294
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a new messaging factory object.
  example: []
  syntax:
    content: public static Task<MessagingFactory> CreateAsync(IEnumerable<Uri> addresses)
    content.vb: Public Shared Function CreateAsync(addresses As IEnumerable(Of Uri)) As Task(Of MessagingFactory)
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: An enumeration of address.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
      description: A task instance that represents the asynchronous create operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  nameWithType.vb: MessagingFactory.CreateAsync(IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: CreateAsync(IEnumerable(Of Uri))
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.TokenProvider)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.TokenProvider)
  id: CreateAsync(System.String,Microsoft.ServiceBus.TokenProvider)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(String, TokenProvider)
  nameWithType: MessagingFactory.CreateAsync(String, TokenProvider)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String, Microsoft.ServiceBus.TokenProvider)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 303
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a new messaging factory object.
  example: []
  syntax:
    content: public static Task<MessagingFactory> CreateAsync(string address, TokenProvider tokenProvider)
    content.vb: Public Shared Function CreateAsync(address As String, tokenProvider As TokenProvider) As Task(Of MessagingFactory)
    parameters:
    - id: address
      type: System.String
      description: The base address of the service namespace.
    - id: tokenProvider
      type: Microsoft.ServiceBus.TokenProvider
      description: The token provider.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
      description: A task instance that represents the asynchronous create operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)
  id: CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(IEnumerable<String>, TokenProvider)
  nameWithType: MessagingFactory.CreateAsync(IEnumerable<String>, TokenProvider)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable<System.String>, Microsoft.ServiceBus.TokenProvider)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 312
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a new messaging factory object.
  example: []
  syntax:
    content: public static Task<MessagingFactory> CreateAsync(IEnumerable<string> addresses, TokenProvider tokenProvider)
    content.vb: Public Shared Function CreateAsync(addresses As IEnumerable(Of String), tokenProvider As TokenProvider) As Task(Of MessagingFactory)
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.String}
      description: An enumeration of base addresses.
    - id: tokenProvider
      type: Microsoft.ServiceBus.TokenProvider
      description: The token provider.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
      description: A task instance that represents the asynchronous create operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  nameWithType.vb: MessagingFactory.CreateAsync(IEnumerable(Of String), TokenProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable(Of System.String), Microsoft.ServiceBus.TokenProvider)
  name.vb: CreateAsync(IEnumerable(Of String), TokenProvider)
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.TokenProvider)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.TokenProvider)
  id: CreateAsync(System.Uri,Microsoft.ServiceBus.TokenProvider)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(Uri, TokenProvider)
  nameWithType: MessagingFactory.CreateAsync(Uri, TokenProvider)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri, Microsoft.ServiceBus.TokenProvider)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 321
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a new messaging factory object.
  example: []
  syntax:
    content: public static Task<MessagingFactory> CreateAsync(Uri address, TokenProvider tokenProvider)
    content.vb: Public Shared Function CreateAsync(address As Uri, tokenProvider As TokenProvider) As Task(Of MessagingFactory)
    parameters:
    - id: address
      type: System.Uri
      description: The namespace base address.
    - id: tokenProvider
      type: Microsoft.ServiceBus.TokenProvider
      description: The token provider.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
      description: A task instance that represents the asynchronous create operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)
  id: CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(IEnumerable<Uri>, TokenProvider)
  nameWithType: MessagingFactory.CreateAsync(IEnumerable<Uri>, TokenProvider)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable<System.Uri>, Microsoft.ServiceBus.TokenProvider)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 330
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a new messaging factory object.
  example: []
  syntax:
    content: public static Task<MessagingFactory> CreateAsync(IEnumerable<Uri> addresses, TokenProvider tokenProvider)
    content.vb: Public Shared Function CreateAsync(addresses As IEnumerable(Of Uri), tokenProvider As TokenProvider) As Task(Of MessagingFactory)
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: An enumeration of address.
    - id: tokenProvider
      type: Microsoft.ServiceBus.TokenProvider
      description: The token provider.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
      description: A task instance that represents the asynchronous create operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  nameWithType.vb: MessagingFactory.CreateAsync(IEnumerable(Of Uri), TokenProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable(Of System.Uri), Microsoft.ServiceBus.TokenProvider)
  name.vb: CreateAsync(IEnumerable(Of Uri), TokenProvider)
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  id: CreateAsync(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(String, MessagingFactorySettings)
  nameWithType: MessagingFactory.CreateAsync(String, MessagingFactorySettings)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String, Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 344
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a new messaging factory object.
  example: []
  syntax:
    content: public static Task<MessagingFactory> CreateAsync(string address, MessagingFactorySettings factorySettings)
    content.vb: Public Shared Function CreateAsync(address As String, factorySettings As MessagingFactorySettings) As Task(Of MessagingFactory)
    parameters:
    - id: address
      type: System.String
      description: The base address of the service namespace.
    - id: factorySettings
      type: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
      description: The <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> settings.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
      description: A task instance that represents the asynchronous create operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  id: CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(IEnumerable<String>, MessagingFactorySettings)
  nameWithType: MessagingFactory.CreateAsync(IEnumerable<String>, MessagingFactorySettings)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable<System.String>, Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 353
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a new messaging factory object.
  example: []
  syntax:
    content: public static Task<MessagingFactory> CreateAsync(IEnumerable<string> addresses, MessagingFactorySettings factorySettings)
    content.vb: Public Shared Function CreateAsync(addresses As IEnumerable(Of String), factorySettings As MessagingFactorySettings) As Task(Of MessagingFactory)
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.String}
      description: An enumeration of base addresses.
    - id: factorySettings
      type: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
      description: The <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> settings.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
      description: A task instance that represents the asynchronous create operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  nameWithType.vb: MessagingFactory.CreateAsync(IEnumerable(Of String), MessagingFactorySettings)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable(Of System.String), Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  name.vb: CreateAsync(IEnumerable(Of String), MessagingFactorySettings)
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  id: CreateAsync(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(Uri, MessagingFactorySettings)
  nameWithType: MessagingFactory.CreateAsync(Uri, MessagingFactorySettings)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri, Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 362
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a new messaging factory object.
  example: []
  syntax:
    content: public static Task<MessagingFactory> CreateAsync(Uri address, MessagingFactorySettings factorySettings)
    content.vb: Public Shared Function CreateAsync(address As Uri, factorySettings As MessagingFactorySettings) As Task(Of MessagingFactory)
    parameters:
    - id: address
      type: System.Uri
      description: The namespace base address.
    - id: factorySettings
      type: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
      description: The <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> settings.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
      description: A task instance that represents the asynchronous create operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  id: CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(IEnumerable<Uri>, MessagingFactorySettings)
  nameWithType: MessagingFactory.CreateAsync(IEnumerable<Uri>, MessagingFactorySettings)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable<System.Uri>, Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 371
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a new messaging factory object.
  example: []
  syntax:
    content: public static Task<MessagingFactory> CreateAsync(IEnumerable<Uri> addresses, MessagingFactorySettings factorySettings)
    content.vb: Public Shared Function CreateAsync(addresses As IEnumerable(Of Uri), factorySettings As MessagingFactorySettings) As Task(Of MessagingFactory)
    parameters:
    - id: addresses
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: An enumeration of address.
    - id: factorySettings
      type: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
      description: The <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory" data-throw-if-not-resolved="false"></xref> settings.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
      description: A task instance that represents the asynchronous create operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  nameWithType.vb: MessagingFactory.CreateAsync(IEnumerable(Of Uri), MessagingFactorySettings)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable(Of System.Uri), Microsoft.ServiceBus.Messaging.MessagingFactorySettings)
  name.vb: CreateAsync(IEnumerable(Of Uri), MessagingFactorySettings)
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String)
  id: CreateQueueClient(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateQueueClient(String)
  nameWithType: MessagingFactory.CreateQueueClient(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateQueueClient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 448
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new queue client.
  example: []
  syntax:
    content: public QueueClient CreateQueueClient(string path)
    content.vb: Public Function CreateQueueClient(path As String) As QueueClient
    parameters:
    - id: path
      type: System.String
      description: The path of the queue relative to the service namespace base address.
    return:
      type: Microsoft.ServiceBus.Messaging.QueueClient
      description: The newly created queue client.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<span class=\"paramref\">path</span> is null or empty."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<span class=\"paramref\">path</span> length is greater than <xref href=\"Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "The operation times out. The timeout period is initialized through the \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings\" data-throw-if-not-resolved=\"false\"></xref> object. You may need to increase the value of \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref> to avoid this exception if the timeout value is relatively low."
  - type: Microsoft.ServiceBus.Messaging.MessagingException
    commentId: T:Microsoft.ServiceBus.Messaging.MessagingException
    description: An internal error or unexpected exception occurs.
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The factory has been closed or aborted.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  id: CreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateQueueClient(String, ReceiveMode)
  nameWithType: MessagingFactory.CreateQueueClient(String, ReceiveMode)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String, Microsoft.ServiceBus.Messaging.ReceiveMode)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateQueueClient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 466
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new queue client.
  example: []
  syntax:
    content: public QueueClient CreateQueueClient(string path, ReceiveMode receiveMode)
    content.vb: Public Function CreateQueueClient(path As String, receiveMode As ReceiveMode) As QueueClient
    parameters:
    - id: path
      type: System.String
      description: The path of the queue relative to the service namespace base address.
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The receive mode.
    return:
      type: Microsoft.ServiceBus.Messaging.QueueClient
      description: The newly created queue client.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<span class=\"paramref\">path</span> is null or empty."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<span class=\"paramref\">path</span> length is greater than <xref href=\"Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "The operation times out. The timeout period is initialized through the \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings\" data-throw-if-not-resolved=\"false\"></xref> object. You may need to increase the value of \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref> to avoid this exception if the timeout value is relatively low."
  - type: Microsoft.ServiceBus.Messaging.MessagingException
    commentId: T:Microsoft.ServiceBus.Messaging.MessagingException
    description: An internal error or unexpected exception occurs.
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The factory has been closed or aborted.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateEventHubClient(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateEventHubClient(System.String)
  id: CreateEventHubClient(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateEventHubClient(String)
  nameWithType: MessagingFactory.CreateEventHubClient(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateEventHubClient(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateEventHubClient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 559
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new <xref href="Microsoft.ServiceBus.Messaging.EventHubClient" data-throw-if-not-resolved="false"></xref> object using the specified path.
  example: []
  syntax:
    content: public EventHubClient CreateEventHubClient(string path)
    content.vb: Public Function CreateEventHubClient(path As String) As EventHubClient
    parameters:
    - id: path
      type: System.String
      description: The path to the Event Hub.
    return:
      type: Microsoft.ServiceBus.Messaging.EventHubClient
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.EventHubClient" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateEventHubClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <span class="paramref">path</span> is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateTopicClient(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateTopicClient(System.String)
  id: CreateTopicClient(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateTopicClient(String)
  nameWithType: MessagingFactory.CreateTopicClient(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateTopicClient(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateTopicClient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 591
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new topic client.
  example: []
  syntax:
    content: public TopicClient CreateTopicClient(string path)
    content.vb: Public Function CreateTopicClient(path As String) As TopicClient
    parameters:
    - id: path
      type: System.String
      description: The topic path relative to the service namespace base address.
    return:
      type: Microsoft.ServiceBus.Messaging.TopicClient
      description: The newly created topic client.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateTopicClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The supplied <span class="paramref">path</span> is null.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "The operation times out. The timeout period is initialized through the \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings\" data-throw-if-not-resolved=\"false\"></xref> object. You may need to increase the value of \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref> to avoid this exception if the timeout value is relatively low."
  - type: Microsoft.ServiceBus.Messaging.MessagingException
    commentId: T:Microsoft.ServiceBus.Messaging.MessagingException
    description: An internal error or unexpected exception occurs.
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The factory has been closed or aborted.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String)
  id: CreateSubscriptionClient(System.String,System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateSubscriptionClient(String, String)
  nameWithType: MessagingFactory.CreateSubscriptionClient(String, String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSubscriptionClient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 618
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a subscription client.
  example: []
  syntax:
    content: public SubscriptionClient CreateSubscriptionClient(string topicPath, string name)
    content.vb: Public Function CreateSubscriptionClient(topicPath As String, name As String) As SubscriptionClient
    parameters:
    - id: topicPath
      type: System.String
      description: The topic path relative to the service namespace.
    - id: name
      type: System.String
      description: The name of the subscription.
    return:
      type: Microsoft.ServiceBus.Messaging.SubscriptionClient
      description: The newly created subscription client.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The supplied <span class="paramref">topicPath</span> is null or empty.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The length of <span class=\"paramref\">topicPath</span> is greater than \n<xref href=\"Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "The operation times out. The timeout period is initialized through the \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings\" data-throw-if-not-resolved=\"false\"></xref> object. You may need to increase the value of \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref> to avoid this exception if the timeout value is relatively low."
  - type: Microsoft.ServiceBus.Messaging.MessagingException
    commentId: T:Microsoft.ServiceBus.Messaging.MessagingException
    description: An internal error or unexpected exception occurs.
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The factory has been closed or aborted.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  id: CreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateSubscriptionClient(String, String, ReceiveMode)
  nameWithType: MessagingFactory.CreateSubscriptionClient(String, String, ReceiveMode)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String, System.String, Microsoft.ServiceBus.Messaging.ReceiveMode)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSubscriptionClient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 636
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new subscription client.
  example: []
  syntax:
    content: public SubscriptionClient CreateSubscriptionClient(string topicPath, string name, ReceiveMode receiveMode)
    content.vb: Public Function CreateSubscriptionClient(topicPath As String, name As String, receiveMode As ReceiveMode) As SubscriptionClient
    parameters:
    - id: topicPath
      type: System.String
      description: The topic path relative to the service namespace.
    - id: name
      type: System.String
      description: The name of the subscription.
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The receive mode.
    return:
      type: Microsoft.ServiceBus.Messaging.SubscriptionClient
      description: The newly created subscription client.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The supplied <span class="paramref">topicPath</span> is null or empty.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The length of <span class=\"paramref\">topicPath</span> is greater than \n<xref href=\"Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "The operation times out. The timeout period is initialized through the \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings\" data-throw-if-not-resolved=\"false\"></xref> object. You may need to increase the value of \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref> to avoid this exception if the timeout value is relatively low."
  - type: Microsoft.ServiceBus.Messaging.MessagingException
    commentId: T:Microsoft.ServiceBus.Messaging.MessagingException
    description: An internal error or unexpected exception occurs.
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The factory has been closed or aborted.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.IncrementConnectionResetCount(System.Uri)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.IncrementConnectionResetCount(System.Uri)
  id: IncrementConnectionResetCount(System.Uri)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: IncrementConnectionResetCount(Uri)
  nameWithType: MessagingFactory.IncrementConnectionResetCount(Uri)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.IncrementConnectionResetCount(System.Uri)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IncrementConnectionResetCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 705
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: ''
  example: []
  syntax:
    content: protected void IncrementConnectionResetCount(Uri endpoint)
    content.vb: Protected Sub IncrementConnectionResetCount(endpoint As Uri)
    parameters:
    - id: endpoint
      type: System.Uri
      description: ''
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.IncrementConnectionResetCount*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.GetSettings
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.GetSettings
  id: GetSettings
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: GetSettings()
  nameWithType: MessagingFactory.GetSettings()
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.GetSettings()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: GetSettings
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 712
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Retrieves a copy of the settings of the messaging factory.
  example: []
  syntax:
    content: public MessagingFactorySettings GetSettings()
    content.vb: Public Function GetSettings As MessagingFactorySettings
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
      description: A copy of the messaging factory settings.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.GetSettings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.PairNamespaceAsync(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.PairNamespaceAsync(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions)
  id: PairNamespaceAsync(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: PairNamespaceAsync(PairedNamespaceOptions)
  nameWithType: MessagingFactory.PairNamespaceAsync(PairedNamespaceOptions)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.PairNamespaceAsync(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PairNamespaceAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 814
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously pairs a namespace.
  example: []
  syntax:
    content: public Task PairNamespaceAsync(PairedNamespaceOptions options)
    content.vb: Public Function PairNamespaceAsync(options As PairedNamespaceOptions) As Task
    parameters:
    - id: options
      type: Microsoft.ServiceBus.Messaging.PairedNamespaceOptions
      description: The pairing options.
    return:
      type: System.Threading.Tasks.Task
      description: The result of the operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.PairNamespaceAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  id: OnCreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnCreateQueueClient(String, ReceiveMode)
  nameWithType: MessagingFactory.OnCreateQueueClient(String, ReceiveMode)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateQueueClient(System.String, Microsoft.ServiceBus.Messaging.ReceiveMode)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnCreateQueueClient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 825
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the create queue client action.
  example: []
  syntax:
    content: protected virtual QueueClient OnCreateQueueClient(string path, ReceiveMode receiveMode)
    content.vb: Protected Overridable Function OnCreateQueueClient(path As String, receiveMode As ReceiveMode) As QueueClient
    parameters:
    - id: path
      type: System.String
      description: The path of the queue relative to the service namespace base address.
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The receive mode.
    return:
      type: Microsoft.ServiceBus.Messaging.QueueClient
      description: The newly created queue client.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateQueueClient*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateTopicClient(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateTopicClient(System.String)
  id: OnCreateTopicClient(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnCreateTopicClient(String)
  nameWithType: MessagingFactory.OnCreateTopicClient(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateTopicClient(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnCreateTopicClient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 833
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the create topic client action.
  example: []
  syntax:
    content: protected virtual TopicClient OnCreateTopicClient(string path)
    content.vb: Protected Overridable Function OnCreateTopicClient(path As String) As TopicClient
    parameters:
    - id: path
      type: System.String
      description: The path of the topic relative to the service namespace base address.
    return:
      type: Microsoft.ServiceBus.Messaging.TopicClient
      description: The newly created topic client.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateTopicClient*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateEventHubClient(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateEventHubClient(System.String)
  id: OnCreateEventHubClient(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnCreateEventHubClient(String)
  nameWithType: MessagingFactory.OnCreateEventHubClient(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateEventHubClient(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnCreateEventHubClient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 841
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the create event hub client action.
  example: []
  syntax:
    content: protected virtual EventHubClient OnCreateEventHubClient(string path)
    content.vb: Protected Overridable Function OnCreateEventHubClient(path As String) As EventHubClient
    parameters:
    - id: path
      type: System.String
      description: The path of the event hub client.
    return:
      type: Microsoft.ServiceBus.Messaging.EventHubClient
      description: The created <xref href="Microsoft.ServiceBus.Messaging.EventHubClient" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateEventHubClient*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  id: OnCreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnCreateSubscriptionClient(String, String, ReceiveMode)
  nameWithType: MessagingFactory.OnCreateSubscriptionClient(String, String, ReceiveMode)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String, System.String, Microsoft.ServiceBus.Messaging.ReceiveMode)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnCreateSubscriptionClient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 851
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes a create subscription client action.
  example: []
  syntax:
    content: protected virtual SubscriptionClient OnCreateSubscriptionClient(string topicPath, string name, ReceiveMode receiveMode)
    content.vb: Protected Overridable Function OnCreateSubscriptionClient(topicPath As String, name As String, receiveMode As ReceiveMode) As SubscriptionClient
    parameters:
    - id: topicPath
      type: System.String
      description: The path of the subscription relative to the service namespace base address.
    - id: name
      type: System.String
      description: The name of the subscription.
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The receive mode.
    return:
      type: Microsoft.ServiceBus.Messaging.SubscriptionClient
      description: A newly created subscription client.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  id: OnCreateSubscriptionClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnCreateSubscriptionClient(String, ReceiveMode)
  nameWithType: MessagingFactory.OnCreateSubscriptionClient(String, ReceiveMode)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String, Microsoft.ServiceBus.Messaging.ReceiveMode)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnCreateSubscriptionClient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 860
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes a create subscription client action.
  example: []
  syntax:
    content: protected virtual SubscriptionClient OnCreateSubscriptionClient(string subscriptionPath, ReceiveMode receiveMode)
    content.vb: Protected Overridable Function OnCreateSubscriptionClient(subscriptionPath As String, receiveMode As ReceiveMode) As SubscriptionClient
    parameters:
    - id: subscriptionPath
      type: System.String
      description: The subscription path.
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The receive mode.
    return:
      type: Microsoft.ServiceBus.Messaging.SubscriptionClient
      description: A newly created subscription client.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String)
  id: CreateMessageReceiver(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateMessageReceiver(String)
  nameWithType: MessagingFactory.CreateMessageReceiver(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateMessageReceiver
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 877
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a message receiver.
  example: []
  syntax:
    content: public MessageReceiver CreateMessageReceiver(string entityPath)
    content.vb: Public Function CreateMessageReceiver(entityPath As String) As MessageReceiver
    parameters:
    - id: entityPath
      type: System.String
      description: The path of the entity.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageReceiver
      description: The newly created message receiver.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.ResetConnection
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.ResetConnection
  id: ResetConnection
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: ResetConnection()
  nameWithType: MessagingFactory.ResetConnection()
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.ResetConnection()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ResetConnection
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 883
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: ''
  example: []
  syntax:
    content: public virtual void ResetConnection()
    content.vb: Public Overridable Sub ResetConnection
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.ResetConnection*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  id: CreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateMessageReceiver(String, ReceiveMode)
  nameWithType: MessagingFactory.CreateMessageReceiver(String, ReceiveMode)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String, Microsoft.ServiceBus.Messaging.ReceiveMode)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateMessageReceiver
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 892
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a message receiver.
  example: []
  syntax:
    content: public MessageReceiver CreateMessageReceiver(string entityPath, ReceiveMode receiveMode)
    content.vb: Public Function CreateMessageReceiver(entityPath As String, receiveMode As ReceiveMode) As MessageReceiver
    parameters:
    - id: entityPath
      type: System.String
      description: The path of the entity.
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The receive mode.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageReceiver
      description: The newly created message receiver.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String)
  id: CreateMessageReceiverAsync(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateMessageReceiverAsync(String)
  nameWithType: MessagingFactory.CreateMessageReceiverAsync(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateMessageReceiverAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 926
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a message receiver.
  example: []
  syntax:
    content: public Task<MessageReceiver> CreateMessageReceiverAsync(string entityPath)
    content.vb: Public Function CreateMessageReceiverAsync(entityPath As String) As Task(Of MessageReceiver)
    parameters:
    - id: entityPath
      type: System.String
      description: The path of the entity.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessageReceiver}
      description: A task instance that represents the asynchronous create message receiver operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  id: CreateMessageReceiverAsync(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateMessageReceiverAsync(String, ReceiveMode)
  nameWithType: MessagingFactory.CreateMessageReceiverAsync(String, ReceiveMode)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String, Microsoft.ServiceBus.Messaging.ReceiveMode)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateMessageReceiverAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 935
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a message receiver.
  example: []
  syntax:
    content: public Task<MessageReceiver> CreateMessageReceiverAsync(string entityPath, ReceiveMode receiveMode)
    content.vb: Public Function CreateMessageReceiverAsync(entityPath As String, receiveMode As ReceiveMode) As Task(Of MessageReceiver)
    parameters:
    - id: entityPath
      type: System.String
      description: The path of the entity.
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The receive mode.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessageReceiver}
      description: A task instance that represents the asynchronous create message receiver operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession
  id: AcceptMessageSession
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: AcceptMessageSession()
  nameWithType: MessagingFactory.AcceptMessageSession()
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AcceptMessageSession
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1115
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Returns available sessions across all session-enabled subscriptions and queues in the service namespace.
  example: []
  syntax:
    content: public MessageSession AcceptMessageSession()
    content.vb: Public Function AcceptMessageSession As MessageSession
    return:
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: "A \n<xref href=\"Microsoft.ServiceBus.Messaging.MessageSession\" data-throw-if-not-resolved=\"false\"></xref> that allows grouping of related messages for processing in a single transaction. "
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession(System.TimeSpan)
  id: AcceptMessageSession(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: AcceptMessageSession(TimeSpan)
  nameWithType: MessagingFactory.AcceptMessageSession(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AcceptMessageSession
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1124
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Returns available sessions across all session-enabled subscriptions and queues in the service namespace.
  example: []
  syntax:
    content: public MessageSession AcceptMessageSession(TimeSpan serverWaitTime)
    content.vb: Public Function AcceptMessageSession(serverWaitTime As TimeSpan) As MessageSession
    parameters:
    - id: serverWaitTime
      type: System.TimeSpan
      description: The processing time out.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: "A \n<xref href=\"Microsoft.ServiceBus.Messaging.MessageSession\" data-throw-if-not-resolved=\"false\"></xref> that allows grouping of related messages for processing in a single transaction."
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync
  id: AcceptMessageSessionAsync
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: AcceptMessageSessionAsync()
  nameWithType: MessagingFactory.AcceptMessageSessionAsync()
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AcceptMessageSessionAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1131
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously returns available sessions across all session-enabled subscriptions and queues in the service namespace.
  example: []
  syntax:
    content: public Task<MessageSession> AcceptMessageSessionAsync()
    content.vb: Public Function AcceptMessageSessionAsync As Task(Of MessageSession)
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessageSession}
      description: A task instance that represents the asynchronous operation for accept message session.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync(System.TimeSpan)
  id: AcceptMessageSessionAsync(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: AcceptMessageSessionAsync(TimeSpan)
  nameWithType: MessagingFactory.AcceptMessageSessionAsync(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AcceptMessageSessionAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1139
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously returns available sessions across all session-enabled subscriptions and queues in the service namespace.
  example: []
  syntax:
    content: public Task<MessageSession> AcceptMessageSessionAsync(TimeSpan serverWaitTime)
    content.vb: Public Function AcceptMessageSessionAsync(serverWaitTime As TimeSpan) As Task(Of MessageSession)
    parameters:
    - id: serverWaitTime
      type: System.TimeSpan
      description: The processing time out.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessageSession}
      description: A task instance that represents the asynchronous operation for accept message session.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String)
  id: CreateMessageSender(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateMessageSender(String)
  nameWithType: MessagingFactory.CreateMessageSender(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateMessageSender
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1170
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a message sender.
  example: []
  syntax:
    content: public MessageSender CreateMessageSender(string entityPath)
    content.vb: Public Function CreateMessageSender(entityPath As String) As MessageSender
    parameters:
    - id: entityPath
      type: System.String
      description: The path of the entity.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageSender
      description: The newly created message sender.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String,System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String,System.String)
  id: CreateMessageSender(System.String,System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateMessageSender(String, String)
  nameWithType: MessagingFactory.CreateMessageSender(String, String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateMessageSender
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1188
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a message sender.
  example: []
  syntax:
    content: public MessageSender CreateMessageSender(string transferDestinationEntityPath, string viaEntityPath)
    content.vb: Public Function CreateMessageSender(transferDestinationEntityPath As String, viaEntityPath As String) As MessageSender
    parameters:
    - id: transferDestinationEntityPath
      type: System.String
      description: The transfer destination entity path.
    - id: viaEntityPath
      type: System.String
      description: The via-entity path.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageSender
      description: The created <xref href="Microsoft.ServiceBus.Messaging.MessageSender" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String)
  id: CreateMessageSenderAsync(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateMessageSenderAsync(String)
  nameWithType: MessagingFactory.CreateMessageSenderAsync(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateMessageSenderAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1215
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a message sender.
  example: []
  syntax:
    content: public Task<MessageSender> CreateMessageSenderAsync(string entityPath)
    content.vb: Public Function CreateMessageSenderAsync(entityPath As String) As Task(Of MessageSender)
    parameters:
    - id: entityPath
      type: System.String
      description: The path of the entity.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessageSender}
      description: A task instance that represents the asynchronous create message sender operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String,System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String,System.String)
  id: CreateMessageSenderAsync(System.String,System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: CreateMessageSenderAsync(String, String)
  nameWithType: MessagingFactory.CreateMessageSenderAsync(String, String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateMessageSenderAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1224
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously creates a message sender.
  example: []
  syntax:
    content: public Task<MessageSender> CreateMessageSenderAsync(string transferDestinationEntityPath, string viaEntityPath)
    content.vb: Public Function CreateMessageSenderAsync(transferDestinationEntityPath As String, viaEntityPath As String) As Task(Of MessageSender)
    parameters:
    - id: transferDestinationEntityPath
      type: System.String
      description: The transfer destination entity path.
    - id: viaEntityPath
      type: System.String
      description: The via-entity path.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessageSender}
      description: A task instance that represents the asynchronous create message sender operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnBeginCreateMessageReceiver(String, ReceiveMode, TimeSpan, AsyncCallback, Object)
  nameWithType: MessagingFactory.OnBeginCreateMessageReceiver(String, ReceiveMode, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageReceiver(System.String, Microsoft.ServiceBus.Messaging.ReceiveMode, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginCreateMessageReceiver
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1292
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the begin create message receiver action.
  example: []
  syntax:
    content: protected abstract IAsyncResult OnBeginCreateMessageReceiver(string entityName, ReceiveMode receiveMode, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected MustOverride Function OnBeginCreateMessageReceiver(entityName As String, receiveMode As ReceiveMode, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: entityName
      type: System.String
      description: The name of the entity.
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The message receive mode.
    - id: timeout
      type: System.TimeSpan
      description: The wait time before the operation times out.
    - id: callback
      type: System.AsyncCallback
      description: "An \n<xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that references the method to invoke when the operation is complete."
    - id: state
      type: System.Object
      description: A user-defined object that contains information about the receive operation.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous create message receiver action.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageReceiver*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageReceiver(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageReceiver(System.IAsyncResult)
  id: OnEndCreateMessageReceiver(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnEndCreateMessageReceiver(IAsyncResult)
  nameWithType: MessagingFactory.OnEndCreateMessageReceiver(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageReceiver(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndCreateMessageReceiver
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1302
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the end create message receiver action.
  example: []
  syntax:
    content: protected abstract MessageReceiver OnEndCreateMessageReceiver(IAsyncResult result)
    content.vb: Protected MustOverride Function OnEndCreateMessageReceiver(result As IAsyncResult) As MessageReceiver
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The result.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageReceiver
      description: The executed <xref href="Microsoft.ServiceBus.Messaging.MessageReceiver" data-throw-if-not-resolved="false"></xref> action.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageReceiver*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)
  id: OnCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnCreateMessageReceiver(String, ReceiveMode, TimeSpan)
  nameWithType: MessagingFactory.OnCreateMessageReceiver(String, ReceiveMode, TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageReceiver(System.String, Microsoft.ServiceBus.Messaging.ReceiveMode, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnCreateMessageReceiver
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1309
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the create message receiver action.
  example: []
  syntax:
    content: protected virtual MessageReceiver OnCreateMessageReceiver(string entityName, ReceiveMode receiveMode, TimeSpan timeout)
    content.vb: Protected Overridable Function OnCreateMessageReceiver(entityName As String, receiveMode As ReceiveMode, timeout As TimeSpan) As MessageReceiver
    parameters:
    - id: entityName
      type: System.String
      description: The name of the entity.
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The message receive mode.
    - id: timeout
      type: System.TimeSpan
      description: The timeout.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageReceiver
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous create message receiver action.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageReceiver*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnBeginAcceptSessionReceiver(String, String, ReceiveMode, TimeSpan, AsyncCallback, Object)
  nameWithType: MessagingFactory.OnBeginAcceptSessionReceiver(String, String, ReceiveMode, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptSessionReceiver(System.String, System.String, Microsoft.ServiceBus.Messaging.ReceiveMode, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginAcceptSessionReceiver
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1325
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the begin accept session receiver action.
  example: []
  syntax:
    content: protected abstract IAsyncResult OnBeginAcceptSessionReceiver(string entityName, string sessionId, ReceiveMode receiveMode, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected MustOverride Function OnBeginAcceptSessionReceiver(entityName As String, sessionId As String, receiveMode As ReceiveMode, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: entityName
      type: System.String
      description: The name of the entity.
    - id: sessionId
      type: System.String
      description: The session identifier.
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The message receive mode.
    - id: timeout
      type: System.TimeSpan
      description: The wait time before the operation times out.
    - id: callback
      type: System.AsyncCallback
      description: "An \n<xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that references the method to invoke when the operation is complete."
    - id: state
      type: System.Object
      description: A user-defined object that contains information about the receive operation.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous accept session receiver action.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptSessionReceiver*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptSessionReceiver(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptSessionReceiver(System.IAsyncResult)
  id: OnEndAcceptSessionReceiver(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnEndAcceptSessionReceiver(IAsyncResult)
  nameWithType: MessagingFactory.OnEndAcceptSessionReceiver(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptSessionReceiver(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndAcceptSessionReceiver
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1337
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the end accept session receiver action.
  example: []
  syntax:
    content: protected abstract MessageSession OnEndAcceptSessionReceiver(IAsyncResult result)
    content.vb: Protected MustOverride Function OnEndAcceptSessionReceiver(result As IAsyncResult) As MessageSession
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "An \n<xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> object that stores state information and any user-defined data for this asynchronous operation."
    return:
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: The executed <xref href="Microsoft.ServiceBus.Messaging.MessageSession" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptSessionReceiver*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnBeginAcceptMessageSession(ReceiveMode, TimeSpan, TimeSpan, AsyncCallback, Object)
  nameWithType: MessagingFactory.OnBeginAcceptMessageSession(ReceiveMode, TimeSpan, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode, System.TimeSpan, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginAcceptMessageSession
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1346
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the begin accept message session action.
  example: []
  syntax:
    content: protected abstract IAsyncResult OnBeginAcceptMessageSession(ReceiveMode receiveMode, TimeSpan serverWaitTime, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected MustOverride Function OnBeginAcceptMessageSession(receiveMode As ReceiveMode, serverWaitTime As TimeSpan, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The receive mode.
    - id: serverWaitTime
      type: System.TimeSpan
      description: The server wait time.
    - id: timeout
      type: System.TimeSpan
      description: The operation timeout.
    - id: callback
      type: System.AsyncCallback
      description: The asynchronous callback.
    - id: state
      type: System.Object
      description: The session state.
    return:
      type: System.IAsyncResult
      description: The asynchronous result of the operation.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptMessageSession*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptMessageSession(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptMessageSession(System.IAsyncResult)
  id: OnEndAcceptMessageSession(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnEndAcceptMessageSession(IAsyncResult)
  nameWithType: MessagingFactory.OnEndAcceptMessageSession(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptMessageSession(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndAcceptMessageSession
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1356
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the end accept message session action.
  example: []
  syntax:
    content: protected abstract MessageSession OnEndAcceptMessageSession(IAsyncResult result)
    content.vb: Protected MustOverride Function OnEndAcceptMessageSession(result As IAsyncResult) As MessageSession
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The result of the operation.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: The executed <xref href="Microsoft.ServiceBus.Messaging.MessageSession" data-throw-if-not-resolved="false"></xref> action.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptMessageSession*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan)
  id: OnAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnAcceptMessageSession(ReceiveMode, TimeSpan, TimeSpan)
  nameWithType: MessagingFactory.OnAcceptMessageSession(ReceiveMode, TimeSpan, TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode, System.TimeSpan, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnAcceptMessageSession
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1363
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the accept message session.
  example: []
  syntax:
    content: protected virtual MessageSession OnAcceptMessageSession(ReceiveMode receiveMode, TimeSpan serverWaitTime, TimeSpan timeout)
    content.vb: Protected Overridable Function OnAcceptMessageSession(receiveMode As ReceiveMode, serverWaitTime As TimeSpan, timeout As TimeSpan) As MessageSession
    parameters:
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The message receive mode.
    - id: serverWaitTime
      type: System.TimeSpan
      description: The server wait time.
    - id: timeout
      type: System.TimeSpan
      description: The operation timeout.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: The executed message session.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptMessageSession*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)
  id: OnAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnAcceptSessionReceiver(String, String, ReceiveMode, TimeSpan)
  nameWithType: MessagingFactory.OnAcceptSessionReceiver(String, String, ReceiveMode, TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptSessionReceiver(System.String, System.String, Microsoft.ServiceBus.Messaging.ReceiveMode, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnAcceptSessionReceiver
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1375
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the accept session receiver action.
  example: []
  syntax:
    content: protected virtual MessageSession OnAcceptSessionReceiver(string entityName, string sessionId, ReceiveMode receiveMode, TimeSpan timeout)
    content.vb: Protected Overridable Function OnAcceptSessionReceiver(entityName As String, sessionId As String, receiveMode As ReceiveMode, timeout As TimeSpan) As MessageSession
    parameters:
    - id: entityName
      type: System.String
      description: The name of the entity.
    - id: sessionId
      type: System.String
      description: The session identifier.
    - id: receiveMode
      type: Microsoft.ServiceBus.Messaging.ReceiveMode
      description: The message receive mode.
    - id: timeout
      type: System.TimeSpan
      description: The wait time before the operation times out.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous accept session receiver action.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptSessionReceiver*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginCreateMessageSender(System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnBeginCreateMessageSender(String, TimeSpan, AsyncCallback, Object)
  nameWithType: MessagingFactory.OnBeginCreateMessageSender(String, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginCreateMessageSender
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1390
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the begin create message sender action.
  example: []
  syntax:
    content: protected virtual IAsyncResult OnBeginCreateMessageSender(string entityName, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected Overridable Function OnBeginCreateMessageSender(entityName As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: entityName
      type: System.String
      description: The name of the entity.
    - id: timeout
      type: System.TimeSpan
      description: The timeout.
    - id: callback
      type: System.AsyncCallback
      description: The callback.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous create message sender action.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginCreateMessageSender(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnBeginCreateMessageSender(String, String, TimeSpan, AsyncCallback, Object)
  nameWithType: MessagingFactory.OnBeginCreateMessageSender(String, String, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String, System.String, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginCreateMessageSender
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1403
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the begin create message sender action.
  example: []
  syntax:
    content: protected abstract IAsyncResult OnBeginCreateMessageSender(string transferDestinationEntityName, string viaEntityName, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected MustOverride Function OnBeginCreateMessageSender(transferDestinationEntityName As String, viaEntityName As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: transferDestinationEntityName
      type: System.String
      description: The name of the transfer destination entity.
    - id: viaEntityName
      type: System.String
      description: The via-entity name.
    - id: timeout
      type: System.TimeSpan
      description: The timeout.
    - id: callback
      type: System.AsyncCallback
      description: The callback message.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous create message sender action.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageSender(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageSender(System.IAsyncResult)
  id: OnEndCreateMessageSender(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnEndCreateMessageSender(IAsyncResult)
  nameWithType: MessagingFactory.OnEndCreateMessageSender(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageSender(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndCreateMessageSender
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1409
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the end create message sender action.
  example: []
  syntax:
    content: protected abstract MessageSender OnEndCreateMessageSender(IAsyncResult result)
    content.vb: Protected MustOverride Function OnEndCreateMessageSender(result As IAsyncResult) As MessageSender
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The result.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageSender
      description: The executed <xref href="Microsoft.ServiceBus.Messaging.MessageSender" data-throw-if-not-resolved="false"></xref> action.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageSender*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.TimeSpan)
  id: OnCreateMessageSender(System.String,System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnCreateMessageSender(String, TimeSpan)
  nameWithType: MessagingFactory.OnCreateMessageSender(String, TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnCreateMessageSender
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1415
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the create message sender action.
  example: []
  syntax:
    content: protected virtual MessageSender OnCreateMessageSender(string entityName, TimeSpan timeout)
    content.vb: Protected Overridable Function OnCreateMessageSender(entityName As String, timeout As TimeSpan) As MessageSender
    parameters:
    - id: entityName
      type: System.String
      description: The name of the entity.
    - id: timeout
      type: System.TimeSpan
      description: The timeout.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageSender
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous create message sender action.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.String,System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.String,System.TimeSpan)
  id: OnCreateMessageSender(System.String,System.String,System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnCreateMessageSender(String, String, TimeSpan)
  nameWithType: MessagingFactory.OnCreateMessageSender(String, String, TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String, System.String, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnCreateMessageSender
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1425
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the create message sender action.
  example: []
  syntax:
    content: protected virtual MessageSender OnCreateMessageSender(string transferDestinationEntityName, string viaEntityName, TimeSpan timeout)
    content.vb: Protected Overridable Function OnCreateMessageSender(transferDestinationEntityName As String, viaEntityName As String, timeout As TimeSpan) As MessageSender
    parameters:
    - id: transferDestinationEntityName
      type: System.String
      description: The name of the transfer destination entity.
    - id: viaEntityName
      type: System.String
      description: The via-entity name.
    - id: timeout
      type: System.TimeSpan
      description: The message timeout.
    return:
      type: Microsoft.ServiceBus.Messaging.MessageSender
      description: The executed <xref href="Microsoft.ServiceBus.Messaging.MessageSender" data-throw-if-not-resolved="false"></xref> action.
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAbort
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAbort
  id: OnAbort
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnAbort()
  nameWithType: MessagingFactory.OnAbort()
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAbort()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnAbort
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1431
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the abort action.
  example: []
  syntax:
    content: protected override void OnAbort()
    content.vb: Protected Overrides Sub OnAbort
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAbort*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnClose(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnClose(TimeSpan)
  nameWithType: MessagingFactory.OnClose(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnClose(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnClose
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1441
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the close action.
  example: []
  syntax:
    content: protected override void OnClose(TimeSpan timeout)
    content.vb: Protected Overrides Sub OnClose(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The timeout.
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnClose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: MessagingFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginClose
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1451
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the begin close action.
  example: []
  syntax:
    content: protected override IAsyncResult OnBeginClose(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected Overrides Function OnBeginClose(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The timeout.
    - id: callback
      type: System.AsyncCallback
      description: The callback.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous close action.
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginClose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndClose(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.MessagingFactory
  langs:
  - csharp
  - vb
  name: OnEndClose(IAsyncResult)
  nameWithType: MessagingFactory.OnEndClose(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndClose(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndClose
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingFactory.cs
    startLine: 1458
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the end close action.
  example: []
  syntax:
    content: protected override void OnEndClose(IAsyncResult result)
    content.vb: Protected Overrides Sub OnEndClose(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The result.
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  overload: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndClose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.ServiceBus.NamespaceManager
  commentId: T:Microsoft.ServiceBus.NamespaceManager
  parent: Microsoft.ServiceBus
  isExternal: false
  name: NamespaceManager
  nameWithType: NamespaceManager
  fullName: Microsoft.ServiceBus.NamespaceManager
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceBus.Messaging.ClientEntity
  commentId: T:Microsoft.ServiceBus.Messaging.ClientEntity
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: ClientEntity
  nameWithType: ClientEntity
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
  commentId: P:Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: RetryPolicy
  nameWithType: ClientEntity.RetryPolicy
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
  commentId: P:Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: IsClosed
  nameWithType: ClientEntity.IsClosed
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
  commentId: P:Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThisLock
  nameWithType: ClientEntity.ThisLock
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: Abort()
  nameWithType: ClientEntity.Abort()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Abort()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
    name: Abort
    nameWithType: ClientEntity.Abort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
    name: Abort
    nameWithType: ClientEntity.Abort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.Close
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.Close
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: Close()
  nameWithType: ClientEntity.Close()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Close()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Close
    name: Close
    nameWithType: ClientEntity.Close
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Close
    name: Close
    nameWithType: ClientEntity.Close
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: CloseAsync()
  nameWithType: ClientEntity.CloseAsync()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
    name: CloseAsync
    nameWithType: ClientEntity.CloseAsync
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
    name: CloseAsync
    nameWithType: ClientEntity.CloseAsync
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: Fault()
  nameWithType: ClientEntity.Fault()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Fault()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
    name: Fault
    nameWithType: ClientEntity.Fault
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
    name: Fault
    nameWithType: ClientEntity.Fault
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnOpen(TimeSpan)
  nameWithType: ClientEntity.OnOpen(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: ClientEntity.OnOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: ClientEntity.OnOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfClosed()
  nameWithType: ClientEntity.ThrowIfClosed()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
    name: ThrowIfClosed
    nameWithType: ClientEntity.ThrowIfClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
    name: ThrowIfClosed
    nameWithType: ClientEntity.ThrowIfClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: ClientEntity.ThrowIfDisposed()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: ClientEntity.ThrowIfDisposed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: ClientEntity.ThrowIfDisposed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfDisposedOrNotOpen()
  nameWithType: ClientEntity.ThrowIfDisposedOrNotOpen()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
    name: ThrowIfDisposedOrNotOpen
    nameWithType: ClientEntity.ThrowIfDisposedOrNotOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
    name: ThrowIfDisposedOrNotOpen
    nameWithType: ClientEntity.ThrowIfDisposedOrNotOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfFaulted()
  nameWithType: ClientEntity.ThrowIfFaulted()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
    name: ThrowIfFaulted
    nameWithType: ClientEntity.ThrowIfFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
    name: ThrowIfFaulted
    nameWithType: ClientEntity.ThrowIfFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfDisposedOrImmutable()
  nameWithType: ClientEntity.ThrowIfDisposedOrImmutable()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
    name: ThrowIfDisposedOrImmutable
    nameWithType: ClientEntity.ThrowIfDisposedOrImmutable
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
    name: ThrowIfDisposedOrImmutable
    nameWithType: ClientEntity.ThrowIfDisposedOrImmutable
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnOpened()
  nameWithType: ClientEntity.OnOpened()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
    name: OnOpened
    nameWithType: ClientEntity.OnOpened
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
    name: OnOpened
    nameWithType: ClientEntity.OnOpened
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnClosed()
  nameWithType: ClientEntity.OnClosed()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
    name: OnClosed
    nameWithType: ClientEntity.OnClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
    name: OnClosed
    nameWithType: ClientEntity.OnClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnFaulted()
  nameWithType: ClientEntity.OnFaulted()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
    name: OnFaulted
    nameWithType: ClientEntity.OnFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
    name: OnFaulted
    nameWithType: ClientEntity.OnFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ClientEntity.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: ClientEntity.OnBeginOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: ClientEntity.OnBeginOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnEndOpen(IAsyncResult)
  nameWithType: ClientEntity.OnEndOpen(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: ClientEntity.OnEndOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: ClientEntity.OnEndOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Address*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.Address
  isExternal: false
  name: Address
  nameWithType: MessagingFactory.Address
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Address
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.NamespaceEndpoints*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.NamespaceEndpoints
  isExternal: false
  name: NamespaceEndpoints
  nameWithType: MessagingFactory.NamespaceEndpoints
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.NamespaceEndpoints
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  commentId: T:System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  nameWithType.vb: IEnumerable(Of Uri)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Uri)
  name.vb: IEnumerable(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount
  isExternal: false
  name: PrefetchCount
  nameWithType: MessagingFactory.PrefetchCount
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory
  commentId: T:Microsoft.ServiceBus.Messaging.MessagingFactory
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.Create*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.Create
  isExternal: false
  name: Create
  nameWithType: MessagingFactory.Create
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.Create
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateFromConnectionString*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateFromConnectionString
  isExternal: false
  name: CreateFromConnectionString
  nameWithType: MessagingFactory.CreateFromConnectionString
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateFromConnectionString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.UriFormatException
  commentId: T:System.UriFormatException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.ServiceBus.TokenProvider
  commentId: T:Microsoft.ServiceBus.TokenProvider
  parent: Microsoft.ServiceBus
  isExternal: false
  name: TokenProvider
  nameWithType: TokenProvider
  fullName: Microsoft.ServiceBus.TokenProvider
- uid: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
  commentId: T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessagingFactorySettings
  nameWithType: MessagingFactorySettings
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactorySettings
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: MessagingFactory.CreateAsync
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync
- uid: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessagingFactory}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MessagingFactory>
  nameWithType: Task<MessagingFactory>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceBus.Messaging.MessagingFactory>
  nameWithType.vb: Task(Of MessagingFactory)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceBus.Messaging.MessagingFactory)
  name.vb: Task(Of MessagingFactory)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.MessagingFactory
    name: MessagingFactory
    nameWithType: MessagingFactory
    fullName: Microsoft.ServiceBus.Messaging.MessagingFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.MessagingFactory
    name: MessagingFactory
    nameWithType: MessagingFactory
    fullName: Microsoft.ServiceBus.Messaging.MessagingFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength
  commentId: F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength
- uid: Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout
  commentId: P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient
  isExternal: false
  name: CreateQueueClient
  nameWithType: MessagingFactory.CreateQueueClient
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.TimeoutException
  commentId: T:System.TimeoutException
- uid: Microsoft.ServiceBus.Messaging.MessagingException
  commentId: T:Microsoft.ServiceBus.Messaging.MessagingException
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessagingException
  nameWithType: MessagingException
  fullName: Microsoft.ServiceBus.Messaging.MessagingException
- uid: System.OperationCanceledException
  commentId: T:System.OperationCanceledException
- uid: Microsoft.ServiceBus.Messaging.QueueClient
  commentId: T:Microsoft.ServiceBus.Messaging.QueueClient
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: QueueClient
  nameWithType: QueueClient
  fullName: Microsoft.ServiceBus.Messaging.QueueClient
- uid: Microsoft.ServiceBus.Messaging.ReceiveMode
  commentId: T:Microsoft.ServiceBus.Messaging.ReceiveMode
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: ReceiveMode
  nameWithType: ReceiveMode
  fullName: Microsoft.ServiceBus.Messaging.ReceiveMode
- uid: Microsoft.ServiceBus.Messaging.EventHubClient
  commentId: T:Microsoft.ServiceBus.Messaging.EventHubClient
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EventHubClient
  nameWithType: EventHubClient
  fullName: Microsoft.ServiceBus.Messaging.EventHubClient
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateEventHubClient*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateEventHubClient
  isExternal: false
  name: CreateEventHubClient
  nameWithType: MessagingFactory.CreateEventHubClient
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateEventHubClient
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateTopicClient*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateTopicClient
  isExternal: false
  name: CreateTopicClient
  nameWithType: MessagingFactory.CreateTopicClient
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateTopicClient
- uid: Microsoft.ServiceBus.Messaging.TopicClient
  commentId: T:Microsoft.ServiceBus.Messaging.TopicClient
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: TopicClient
  nameWithType: TopicClient
  fullName: Microsoft.ServiceBus.Messaging.TopicClient
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient
  isExternal: false
  name: CreateSubscriptionClient
  nameWithType: MessagingFactory.CreateSubscriptionClient
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient
- uid: Microsoft.ServiceBus.Messaging.SubscriptionClient
  commentId: T:Microsoft.ServiceBus.Messaging.SubscriptionClient
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: SubscriptionClient
  nameWithType: SubscriptionClient
  fullName: Microsoft.ServiceBus.Messaging.SubscriptionClient
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.IncrementConnectionResetCount*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.IncrementConnectionResetCount
  isExternal: false
  name: IncrementConnectionResetCount
  nameWithType: MessagingFactory.IncrementConnectionResetCount
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.IncrementConnectionResetCount
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.GetSettings*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.GetSettings
  isExternal: false
  name: GetSettings
  nameWithType: MessagingFactory.GetSettings
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.GetSettings
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.PairNamespaceAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.PairNamespaceAsync
  isExternal: false
  name: PairNamespaceAsync
  nameWithType: MessagingFactory.PairNamespaceAsync
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.PairNamespaceAsync
- uid: Microsoft.ServiceBus.Messaging.PairedNamespaceOptions
  commentId: T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: PairedNamespaceOptions
  nameWithType: PairedNamespaceOptions
  fullName: Microsoft.ServiceBus.Messaging.PairedNamespaceOptions
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateQueueClient*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateQueueClient
  isExternal: false
  name: OnCreateQueueClient
  nameWithType: MessagingFactory.OnCreateQueueClient
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateQueueClient
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateTopicClient*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateTopicClient
  isExternal: false
  name: OnCreateTopicClient
  nameWithType: MessagingFactory.OnCreateTopicClient
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateTopicClient
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateEventHubClient*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateEventHubClient
  isExternal: false
  name: OnCreateEventHubClient
  nameWithType: MessagingFactory.OnCreateEventHubClient
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateEventHubClient
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient
  isExternal: false
  name: OnCreateSubscriptionClient
  nameWithType: MessagingFactory.OnCreateSubscriptionClient
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver
  isExternal: false
  name: CreateMessageReceiver
  nameWithType: MessagingFactory.CreateMessageReceiver
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver
- uid: Microsoft.ServiceBus.Messaging.MessageReceiver
  commentId: T:Microsoft.ServiceBus.Messaging.MessageReceiver
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessageReceiver
  nameWithType: MessageReceiver
  fullName: Microsoft.ServiceBus.Messaging.MessageReceiver
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.ResetConnection*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.ResetConnection
  isExternal: false
  name: ResetConnection
  nameWithType: MessagingFactory.ResetConnection
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.ResetConnection
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync
  isExternal: false
  name: CreateMessageReceiverAsync
  nameWithType: MessagingFactory.CreateMessageReceiverAsync
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync
- uid: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessageReceiver}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessageReceiver}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MessageReceiver>
  nameWithType: Task<MessageReceiver>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceBus.Messaging.MessageReceiver>
  nameWithType.vb: Task(Of MessageReceiver)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceBus.Messaging.MessageReceiver)
  name.vb: Task(Of MessageReceiver)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.MessageReceiver
    name: MessageReceiver
    nameWithType: MessageReceiver
    fullName: Microsoft.ServiceBus.Messaging.MessageReceiver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.MessageReceiver
    name: MessageReceiver
    nameWithType: MessageReceiver
    fullName: Microsoft.ServiceBus.Messaging.MessageReceiver
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.MessageSession
  commentId: T:Microsoft.ServiceBus.Messaging.MessageSession
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessageSession
  nameWithType: MessageSession
  fullName: Microsoft.ServiceBus.Messaging.MessageSession
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession
  isExternal: false
  name: AcceptMessageSession
  nameWithType: MessagingFactory.AcceptMessageSession
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync
  isExternal: false
  name: AcceptMessageSessionAsync
  nameWithType: MessagingFactory.AcceptMessageSessionAsync
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync
- uid: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessageSession}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessageSession}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MessageSession>
  nameWithType: Task<MessageSession>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceBus.Messaging.MessageSession>
  nameWithType.vb: Task(Of MessageSession)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceBus.Messaging.MessageSession)
  name.vb: Task(Of MessageSession)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.MessageSession
    name: MessageSession
    nameWithType: MessageSession
    fullName: Microsoft.ServiceBus.Messaging.MessageSession
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.MessageSession
    name: MessageSession
    nameWithType: MessageSession
    fullName: Microsoft.ServiceBus.Messaging.MessageSession
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender
  isExternal: false
  name: CreateMessageSender
  nameWithType: MessagingFactory.CreateMessageSender
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender
- uid: Microsoft.ServiceBus.Messaging.MessageSender
  commentId: T:Microsoft.ServiceBus.Messaging.MessageSender
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessageSender
  nameWithType: MessageSender
  fullName: Microsoft.ServiceBus.Messaging.MessageSender
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync
  isExternal: false
  name: CreateMessageSenderAsync
  nameWithType: MessagingFactory.CreateMessageSenderAsync
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync
- uid: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessageSender}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.MessageSender}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MessageSender>
  nameWithType: Task<MessageSender>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceBus.Messaging.MessageSender>
  nameWithType.vb: Task(Of MessageSender)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceBus.Messaging.MessageSender)
  name.vb: Task(Of MessageSender)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.MessageSender
    name: MessageSender
    nameWithType: MessageSender
    fullName: Microsoft.ServiceBus.Messaging.MessageSender
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.MessageSender
    name: MessageSender
    nameWithType: MessageSender
    fullName: Microsoft.ServiceBus.Messaging.MessageSender
  - name: )
    nameWithType: )
    fullName: )
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageReceiver*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageReceiver
  isExternal: false
  name: OnBeginCreateMessageReceiver
  nameWithType: MessagingFactory.OnBeginCreateMessageReceiver
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageReceiver
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageReceiver*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageReceiver
  isExternal: false
  name: OnEndCreateMessageReceiver
  nameWithType: MessagingFactory.OnEndCreateMessageReceiver
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageReceiver
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageReceiver*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageReceiver
  isExternal: false
  name: OnCreateMessageReceiver
  nameWithType: MessagingFactory.OnCreateMessageReceiver
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageReceiver
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptSessionReceiver*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptSessionReceiver
  isExternal: false
  name: OnBeginAcceptSessionReceiver
  nameWithType: MessagingFactory.OnBeginAcceptSessionReceiver
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptSessionReceiver
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptSessionReceiver*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptSessionReceiver
  isExternal: false
  name: OnEndAcceptSessionReceiver
  nameWithType: MessagingFactory.OnEndAcceptSessionReceiver
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptSessionReceiver
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptMessageSession*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptMessageSession
  isExternal: false
  name: OnBeginAcceptMessageSession
  nameWithType: MessagingFactory.OnBeginAcceptMessageSession
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptMessageSession
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptMessageSession*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptMessageSession
  isExternal: false
  name: OnEndAcceptMessageSession
  nameWithType: MessagingFactory.OnEndAcceptMessageSession
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptMessageSession
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptMessageSession*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptMessageSession
  isExternal: false
  name: OnAcceptMessageSession
  nameWithType: MessagingFactory.OnAcceptMessageSession
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptMessageSession
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptSessionReceiver*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptSessionReceiver
  isExternal: false
  name: OnAcceptSessionReceiver
  nameWithType: MessagingFactory.OnAcceptSessionReceiver
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptSessionReceiver
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender
  isExternal: false
  name: OnBeginCreateMessageSender
  nameWithType: MessagingFactory.OnBeginCreateMessageSender
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageSender*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageSender
  isExternal: false
  name: OnEndCreateMessageSender
  nameWithType: MessagingFactory.OnEndCreateMessageSender
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageSender
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender
  isExternal: false
  name: OnCreateMessageSender
  nameWithType: MessagingFactory.OnCreateMessageSender
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnAbort()
  nameWithType: ClientEntity.OnAbort()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
    name: OnAbort
    nameWithType: ClientEntity.OnAbort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
    name: OnAbort
    nameWithType: ClientEntity.OnAbort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAbort*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAbort
  isExternal: false
  name: OnAbort
  nameWithType: MessagingFactory.OnAbort
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnAbort
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnClose(TimeSpan)
  nameWithType: ClientEntity.OnClose(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: ClientEntity.OnClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: ClientEntity.OnClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnClose*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnClose
  isExternal: false
  name: OnClose
  nameWithType: MessagingFactory.OnClose
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnClose
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ClientEntity.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: ClientEntity.OnBeginClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: ClientEntity.OnBeginClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginClose*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginClose
  isExternal: false
  name: OnBeginClose
  nameWithType: MessagingFactory.OnBeginClose
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginClose
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnEndClose(IAsyncResult)
  nameWithType: ClientEntity.OnEndClose(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: ClientEntity.OnEndClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: ClientEntity.OnEndClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndClose*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndClose
  isExternal: false
  name: OnEndClose
  nameWithType: MessagingFactory.OnEndClose
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndClose
