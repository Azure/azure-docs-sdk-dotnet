### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions
  commentId: T:Microsoft.ServiceBus.Messaging.EventProcessorOptions
  id: EventProcessorOptions
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.EventProcessorOptions.#ctor
  - Microsoft.ServiceBus.Messaging.EventProcessorOptions.DefaultOptions
  - Microsoft.ServiceBus.Messaging.EventProcessorOptions.ExceptionReceived
  - Microsoft.ServiceBus.Messaging.EventProcessorOptions.InitialOffsetProvider
  - Microsoft.ServiceBus.Messaging.EventProcessorOptions.InvokeProcessorAfterReceiveTimeout
  - Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize
  - Microsoft.ServiceBus.Messaging.EventProcessorOptions.PrefetchCount
  - Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut
  langs:
  - csharp
  - vb
  name: EventProcessorOptions
  nameWithType: EventProcessorOptions
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EventProcessorOptions
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Defines the runtime options when registering an \n<xref href=\"Microsoft.ServiceBus.Messaging.IEventProcessor\" data-throw-if-not-resolved=\"false\"></xref> interface with an \n<xref href=\"Microsoft.ServiceBus.Messaging.EventHubConsumerGroup\" data-throw-if-not-resolved=\"false\"></xref>. This is also the mechanism for catching exceptions from an \n<xref href=\"Microsoft.ServiceBus.Messaging.IEventProcessor\" data-throw-if-not-resolved=\"false\"></xref> instance used by an \nEventProcessorHost object."
  example: []
  syntax:
    content: public class EventProcessorOptions
    content.vb: Public Class EventProcessorOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.#ctor
  commentId: M:Microsoft.ServiceBus.Messaging.EventProcessorOptions.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.Messaging.EventProcessorOptions
  langs:
  - csharp
  - vb
  name: EventProcessorOptions()
  nameWithType: EventProcessorOptions.EventProcessorOptions()
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.EventProcessorOptions()
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
    startLine: 21
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: ''
  example: []
  syntax:
    content: public EventProcessorOptions()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.Messaging.EventProcessorOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.ExceptionReceived
  commentId: E:Microsoft.ServiceBus.Messaging.EventProcessorOptions.ExceptionReceived
  id: ExceptionReceived
  parent: Microsoft.ServiceBus.Messaging.EventProcessorOptions
  langs:
  - csharp
  - vb
  name: ExceptionReceived
  nameWithType: EventProcessorOptions.ExceptionReceived
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.ExceptionReceived
  type: Event
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ExceptionReceived
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
    startLine: 35
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nThis event fires whenever an exception is encountered when processing\nevents. User can register an handler to this event for getting \nexception notification.\n"
  example: []
  syntax:
    content: public event EventHandler<ExceptionReceivedEventArgs> ExceptionReceived
    content.vb: Public Event ExceptionReceived As EventHandler(Of ExceptionReceivedEventArgs)
    return:
      type: System.EventHandler{Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize
  commentId: P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize
  id: MaxBatchSize
  parent: Microsoft.ServiceBus.Messaging.EventProcessorOptions
  langs:
  - csharp
  - vb
  name: MaxBatchSize
  nameWithType: EventProcessorOptions.MaxBatchSize
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MaxBatchSize
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
    startLine: 41
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Gets or sets the maximum event count that a user is willing to \naccept for processing per receive loop. This count is on a per-Event Hub partition level."
  remarks: This corresponds to the maxCount argument in <xref href="Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32%2cSystem.TimeSpan)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public int MaxBatchSize { get; set; }
    content.vb: Public Property MaxBatchSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut
  commentId: P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut
  id: ReceiveTimeOut
  parent: Microsoft.ServiceBus.Messaging.EventProcessorOptions
  langs:
  - csharp
  - vb
  name: ReceiveTimeOut
  nameWithType: EventProcessorOptions.ReceiveTimeOut
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ReceiveTimeOut
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
    startLine: 46
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the timespan in which the user is willing to wait when the event processor is performing a receive operation.
  remarks: This correspond to the waitTime argument in <xref href="Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32%2cSystem.TimeSpan)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public TimeSpan ReceiveTimeOut { get; set; }
    content.vb: Public Property ReceiveTimeOut As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: Returns <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.PrefetchCount
  commentId: P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.PrefetchCount
  id: PrefetchCount
  parent: Microsoft.ServiceBus.Messaging.EventProcessorOptions
  langs:
  - csharp
  - vb
  name: PrefetchCount
  nameWithType: EventProcessorOptions.PrefetchCount
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.PrefetchCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PrefetchCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Gets or sets the number of events that any receiver in the \ncurrently owned partition will actively cache. The default value for this property is 300."
  remarks: >-
    This property is use to set <xref href="Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount" data-throw-if-not-resolved="false"></xref> property on the underlying MessagingFactory

    created by host
  example: []
  syntax:
    content: public int PrefetchCount { get; set; }
    content.vb: Public Property PrefetchCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.EventProcessorOptions.PrefetchCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.InitialOffsetProvider
  commentId: P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.InitialOffsetProvider
  id: InitialOffsetProvider
  parent: Microsoft.ServiceBus.Messaging.EventProcessorOptions
  langs:
  - csharp
  - vb
  name: InitialOffsetProvider
  nameWithType: EventProcessorOptions.InitialOffsetProvider
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.InitialOffsetProvider
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: InitialOffsetProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
    startLine: 63
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nGets or sets a delegate which is used to get the initial offset for a given partition to create <xref href=\"Microsoft.ServiceBus.Messaging.EventHubReceiver\" data-throw-if-not-resolved=\"false\"></xref>.\nDelegate is invoked by passing in PartitionId and then user can return either the starting offset as string or starting UTC time\nfor receiving messages.\nThis is only used when <xref href=\"Microsoft.ServiceBus.Messaging.Lease.Offset\" data-throw-if-not-resolved=\"false\"></xref> is not provided and receiver is being created for the very first time.\n<remarks>This corresponds to either <xref href=\"Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String%2cSystem.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> depending on the type of return value from delegate.</remarks>\n"
  example: []
  syntax:
    content: public Func<string, object> InitialOffsetProvider { get; set; }
    content.vb: Public Property InitialOffsetProvider As Func(Of String, Object)
    parameters: []
    return:
      type: System.Func{System.String,System.Object}
  overload: Microsoft.ServiceBus.Messaging.EventProcessorOptions.InitialOffsetProvider*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.InvokeProcessorAfterReceiveTimeout
  commentId: P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.InvokeProcessorAfterReceiveTimeout
  id: InvokeProcessorAfterReceiveTimeout
  parent: Microsoft.ServiceBus.Messaging.EventProcessorOptions
  langs:
  - csharp
  - vb
  name: InvokeProcessorAfterReceiveTimeout
  nameWithType: EventProcessorOptions.InvokeProcessorAfterReceiveTimeout
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.InvokeProcessorAfterReceiveTimeout
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: InvokeProcessorAfterReceiveTimeout
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
    startLine: 70
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nEnabling this option will cause <xref href=\"Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.ServiceBus.Messaging.EventData%7d)\" data-throw-if-not-resolved=\"false\"></xref> to be invoked after every ReceiveTimeout when \nthere are no more messages in the stream for a partition.\n"
  remarks: By default this option is turned off.
  example: []
  syntax:
    content: public bool InvokeProcessorAfterReceiveTimeout { get; set; }
    content.vb: Public Property InvokeProcessorAfterReceiveTimeout As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Messaging.EventProcessorOptions.InvokeProcessorAfterReceiveTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.DefaultOptions
  commentId: P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.DefaultOptions
  id: DefaultOptions
  parent: Microsoft.ServiceBus.Messaging.EventProcessorOptions
  langs:
  - csharp
  - vb
  name: DefaultOptions
  nameWithType: EventProcessorOptions.DefaultOptions
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.DefaultOptions
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: DefaultOptions
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventProcessorOptions.cs
    startLine: 76
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Gets the default options, which is 10 for the \n<xref href=\"Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize\" data-throw-if-not-resolved=\"false\"></xref>, and 1 minute for the \n<xref href=\"Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut\" data-throw-if-not-resolved=\"false\"></xref> property."
  example: []
  syntax:
    content: public static EventProcessorOptions DefaultOptions { get; }
    content.vb: Public Shared ReadOnly Property DefaultOptions As EventProcessorOptions
    parameters: []
    return:
      type: Microsoft.ServiceBus.Messaging.EventProcessorOptions
      description: Returns <xref href="Microsoft.ServiceBus.Messaging.EventProcessorOptions" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.EventProcessorOptions.DefaultOptions*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor
  commentId: T:Microsoft.ServiceBus.Messaging.IEventProcessor
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: IEventProcessor
  nameWithType: IEventProcessor
  fullName: Microsoft.ServiceBus.Messaging.IEventProcessor
- uid: Microsoft.ServiceBus.Messaging.EventHubConsumerGroup
  commentId: T:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EventHubConsumerGroup
  nameWithType: EventHubConsumerGroup
  fullName: Microsoft.ServiceBus.Messaging.EventHubConsumerGroup
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventProcessorOptions.#ctor
  isExternal: false
  name: EventProcessorOptions
  nameWithType: EventProcessorOptions.EventProcessorOptions
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.EventProcessorOptions
- uid: System.EventHandler{Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs}
  commentId: T:System.EventHandler{Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ExceptionReceivedEventArgs>
  nameWithType: EventHandler<ExceptionReceivedEventArgs>
  fullName: System.EventHandler<Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs>
  nameWithType.vb: EventHandler(Of ExceptionReceivedEventArgs)
  fullname.vb: System.EventHandler(Of Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs)
  name.vb: EventHandler(Of ExceptionReceivedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs
    name: ExceptionReceivedEventArgs
    nameWithType: ExceptionReceivedEventArgs
    fullName: Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs
    name: ExceptionReceivedEventArgs
    nameWithType: ExceptionReceivedEventArgs
    fullName: Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32,System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubReceiver.Receive(System.Int32,System.TimeSpan)
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize
  isExternal: false
  name: MaxBatchSize
  nameWithType: EventProcessorOptions.MaxBatchSize
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut
  isExternal: false
  name: ReceiveTimeOut
  nameWithType: EventProcessorOptions.ReceiveTimeOut
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount
  commentId: P:Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.PrefetchCount*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventProcessorOptions.PrefetchCount
  isExternal: false
  name: PrefetchCount
  nameWithType: EventProcessorOptions.PrefetchCount
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.PrefetchCount
- uid: Microsoft.ServiceBus.Messaging.EventHubReceiver
  commentId: T:Microsoft.ServiceBus.Messaging.EventHubReceiver
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EventHubReceiver
  nameWithType: EventHubReceiver
  fullName: Microsoft.ServiceBus.Messaging.EventHubReceiver
- uid: Microsoft.ServiceBus.Messaging.Lease.Offset
  commentId: P:Microsoft.ServiceBus.Messaging.Lease.Offset
- uid: Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.String)
- uid: Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.DateTime)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.CreateReceiverAsync(System.String,System.DateTime)
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.InitialOffsetProvider*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventProcessorOptions.InitialOffsetProvider
  isExternal: false
  name: InitialOffsetProvider
  nameWithType: EventProcessorOptions.InitialOffsetProvider
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.InitialOffsetProvider
- uid: System.Func{System.String,System.Object}
  commentId: T:System.Func{System.String,System.Object}
  parent: System
  definition: System.Func`2
  name: Func<String, Object>
  nameWithType: Func<String, Object>
  fullName: System.Func<System.String, System.Object>
  nameWithType.vb: Func(Of String, Object)
  fullname.vb: System.Func(Of System.String, System.Object)
  name.vb: Func(Of String, Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  commentId: M:Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.InvokeProcessorAfterReceiveTimeout*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventProcessorOptions.InvokeProcessorAfterReceiveTimeout
  isExternal: false
  name: InvokeProcessorAfterReceiveTimeout
  nameWithType: EventProcessorOptions.InvokeProcessorAfterReceiveTimeout
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.InvokeProcessorAfterReceiveTimeout
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize
  commentId: P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.MaxBatchSize
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut
  commentId: P:Microsoft.ServiceBus.Messaging.EventProcessorOptions.ReceiveTimeOut
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions
  commentId: T:Microsoft.ServiceBus.Messaging.EventProcessorOptions
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EventProcessorOptions
  nameWithType: EventProcessorOptions
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions
- uid: Microsoft.ServiceBus.Messaging.EventProcessorOptions.DefaultOptions*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventProcessorOptions.DefaultOptions
  isExternal: false
  name: DefaultOptions
  nameWithType: EventProcessorOptions.DefaultOptions
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorOptions.DefaultOptions
