### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  commentId: T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  id: WSHttpRelayBindingBaseElement
  parent: Microsoft.ServiceBus.Configuration
  children:
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor(System.String)
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.IsDynamic
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxBufferPoolSize
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxReceivedMessageSize
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MessageEncoding
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.Properties
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ProxyAddress
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReaderQuotas
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReliableSession
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.TextEncoding
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.UseDefaultWebProxy
  langs:
  - csharp
  - vb
  name: WSHttpRelayBindingBaseElement
  nameWithType: WSHttpRelayBindingBaseElement
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: WSHttpRelayBindingBaseElement
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 18
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Provides a base class for the<xref href="Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement" data-throw-if-not-resolved="false"></xref> configuration element that specifies a binding that supports distributed transactions and secure, reliable sessions.
  example: []
  syntax:
    content: 'public abstract class WSHttpRelayBindingBaseElement : StandardBindingElement, IBindingConfigurationElement, IConfigurationContextProviderInternal'
    content.vb: >-
      Public MustInherit Class WSHttpRelayBindingBaseElement
          Inherits StandardBindingElement
          Implements IBindingConfigurationElement, IConfigurationContextProviderInternal
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.StandardBindingElement
  derivedClasses:
  - Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement
  implements:
  - System.ServiceModel.Configuration.IBindingConfigurationElement
  inheritedMembers:
  - System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.StandardBindingElement.BindingElementType
  - System.ServiceModel.Configuration.StandardBindingElement.Name
  - System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.SendTimeout
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,{T})
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor(System.String)
  commentId: M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: WSHttpRelayBindingBaseElement(String)
  nameWithType: WSHttpRelayBindingBaseElement.WSHttpRelayBindingBaseElement(String)
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.WSHttpRelayBindingBaseElement(System.String)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 25
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name."
  example: []
  syntax:
    content: protected WSHttpRelayBindingBaseElement(string name)
    content.vb: Protected Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: A name that uniquely identifies this configuration element.
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor
  commentId: M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: WSHttpRelayBindingBaseElement()
  nameWithType: WSHttpRelayBindingBaseElement.WSHttpRelayBindingBaseElement()
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.WSHttpRelayBindingBaseElement()
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 31
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected WSHttpRelayBindingBaseElement()
    content.vb: Protected Sub New
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxBufferPoolSize
  commentId: P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: MaxBufferPoolSize
  nameWithType: WSHttpRelayBindingBaseElement.MaxBufferPoolSize
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxBufferPoolSize
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MaxBufferPoolSize
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 40
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Gets or sets the maximum size of the buffer pool that stores messages processed by the \n<xref href=\"Microsoft.ServiceBus.WSHttpRelayBinding\" data-throw-if-not-resolved=\"false\"></xref> binding."
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("maxBufferPoolSize", DefaultValue = 524288L)]

      [LongValidator(MinValue = 0L)]

      public long MaxBufferPoolSize { get; set; }
    content.vb: >-
      <ConfigurationProperty("maxBufferPoolSize", DefaultValue:=524288L)>

      <LongValidator(MinValue:=0L)>

      Public Property MaxBufferPoolSize As Long
    parameters: []
    return:
      type: System.Int64
      description: "The maximum size of the buffer pool that stores messages processed by the \n<xref href=\"Microsoft.ServiceBus.WSHttpRelayBinding\" data-throw-if-not-resolved=\"false\"></xref> binding. The default is 524288 bytes."
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxBufferPoolSize*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxBufferPoolSize
    namedArguments:
    - name: DefaultValue
      type: System.Int64
      value: "524288"
  - type: System.Configuration.LongValidatorAttribute
    ctor: System.Configuration.LongValidatorAttribute.#ctor
    arguments: []
    namedArguments:
    - name: MinValue
      type: System.Int64
      value: "0"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxReceivedMessageSize
  commentId: P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: MaxReceivedMessageSize
  nameWithType: WSHttpRelayBindingBaseElement.MaxReceivedMessageSize
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxReceivedMessageSize
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MaxReceivedMessageSize
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 52
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Gets or sets the maximum size for messages received on a channel configured with the \n<xref href=\"Microsoft.ServiceBus.WSHttpRelayBinding\" data-throw-if-not-resolved=\"false\"></xref> binding."
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("maxReceivedMessageSize", DefaultValue = 65536L)]

      [LongValidator(MinValue = 1L)]

      public long MaxReceivedMessageSize { get; set; }
    content.vb: >-
      <ConfigurationProperty("maxReceivedMessageSize", DefaultValue:=65536L)>

      <LongValidator(MinValue:=1L)>

      Public Property MaxReceivedMessageSize As Long
    parameters: []
    return:
      type: System.Int64
      description: "The maximum size for messages received on a channel configured with the \n<xref href=\"Microsoft.ServiceBus.WSHttpRelayBinding\" data-throw-if-not-resolved=\"false\"></xref> binding. The default is 65536 bytes."
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxReceivedMessageSize*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxReceivedMessageSize
    namedArguments:
    - name: DefaultValue
      type: System.Int64
      value: "65536"
  - type: System.Configuration.LongValidatorAttribute
    ctor: System.Configuration.LongValidatorAttribute.#ctor
    arguments: []
    namedArguments:
    - name: MinValue
      type: System.Int64
      value: "1"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MessageEncoding
  commentId: P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MessageEncoding
  id: MessageEncoding
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: MessageEncoding
  nameWithType: WSHttpRelayBindingBaseElement.MessageEncoding
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MessageEncoding
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MessageEncoding
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 62
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("messageEncoding", DefaultValue = WSMessageEncoding.Text)]

      public WSMessageEncoding MessageEncoding { get; set; }
    content.vb: >-
      <ConfigurationProperty("messageEncoding", DefaultValue:=WSMessageEncoding.Text)>

      Public Property MessageEncoding As WSMessageEncoding
    parameters: []
    return:
      type: System.ServiceModel.WSMessageEncoding
      description: Indicates whether MTOM or Text/XML is used to encode SOAP messages. The default is Text/XML.
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MessageEncoding*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: messageEncoding
    namedArguments:
    - name: DefaultValue
      type: System.ServiceModel.WSMessageEncoding
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ProxyAddress
  commentId: P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ProxyAddress
  id: ProxyAddress
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: ProxyAddress
  nameWithType: WSHttpRelayBindingBaseElement.ProxyAddress
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ProxyAddress
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ProxyAddress
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 72
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Gets or sets the URI address of the HTTP proxy.
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("proxyAddress", DefaultValue = null)]

      public Uri ProxyAddress { get; set; }
    content.vb: >-
      <ConfigurationProperty("proxyAddress", DefaultValue:=Nothing)>

      Public Property ProxyAddress As Uri
    parameters: []
    return:
      type: System.Uri
      description: The URI address of the HTTP proxy. The default is null.
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ProxyAddress*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: proxyAddress
    namedArguments:
    - name: DefaultValue
      type: System.Object
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReaderQuotas
  commentId: P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReaderQuotas
  id: ReaderQuotas
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: ReaderQuotas
  nameWithType: WSHttpRelayBindingBaseElement.ReaderQuotas
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReaderQuotas
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ReaderQuotas
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 83
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Gets constraints on the complexity of SOAP messages that can be processed by endpoints configured with the \n<xref href=\"Microsoft.ServiceBus.WSHttpRelayBinding\" data-throw-if-not-resolved=\"false\"></xref> binding."
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("readerQuotas")]

      public XmlDictionaryReaderQuotasElement ReaderQuotas { get; }
    content.vb: >-
      <ConfigurationProperty("readerQuotas")>

      Public ReadOnly Property ReaderQuotas As XmlDictionaryReaderQuotasElement
    parameters: []
    return:
      type: Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement
      description: "Constraints on the complexity of SOAP messages that can be processed by endpoints configured with the \n<xref href=\"Microsoft.ServiceBus.WSHttpRelayBinding\" data-throw-if-not-resolved=\"false\"></xref> binding."
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReaderQuotas*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: readerQuotas
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReliableSession
  commentId: P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReliableSession
  id: ReliableSession
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: ReliableSession
  nameWithType: WSHttpRelayBindingBaseElement.ReliableSession
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReliableSession
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ReliableSession
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 95
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Gets a \n<xref href=\"System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement\" data-throw-if-not-resolved=\"false\"></xref> configuration element that represents an optional configuration setting for WS-Reliable messaging defined in the \n<xref href=\"Microsoft.ServiceBus.WSHttpRelayBinding\" data-throw-if-not-resolved=\"false\"></xref> binding."
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("reliableSession")]

      public StandardBindingOptionalReliableSessionElement ReliableSession { get; }
    content.vb: >-
      <ConfigurationProperty("reliableSession")>

      Public ReadOnly Property ReliableSession As StandardBindingOptionalReliableSessionElement
    parameters: []
    return:
      type: System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement
      description: "A \n<xref href=\"System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement\" data-throw-if-not-resolved=\"false\"></xref> configuration element that represents an optional configuration setting for WS-Reliable messaging defined in the \n<xref href=\"Microsoft.ServiceBus.WSHttpRelayBinding\" data-throw-if-not-resolved=\"false\"></xref> binding."
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReliableSession*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: reliableSession
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.TextEncoding
  commentId: P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.TextEncoding
  id: TextEncoding
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: TextEncoding
  nameWithType: WSHttpRelayBindingBaseElement.TextEncoding
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.TextEncoding
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: TextEncoding
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 103
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Gets or sets the character encoding that is used for the message text.
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("textEncoding", DefaultValue = "utf-8")]

      [TypeConverter(typeof (EncodingConverter))]

      public Encoding TextEncoding { get; set; }
    content.vb: >-
      <ConfigurationProperty("textEncoding", DefaultValue:="utf-8")>

      <TypeConverter(GetType(EncodingConverter))>

      Public Property TextEncoding As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
      description: The character encoding that is used for the message text.
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.TextEncoding*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: textEncoding
    namedArguments:
    - name: DefaultValue
      type: System.String
      value: utf-8
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.UseDefaultWebProxy
  commentId: P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: UseDefaultWebProxy
  nameWithType: WSHttpRelayBindingBaseElement.UseDefaultWebProxy
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.UseDefaultWebProxy
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: UseDefaultWebProxy
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 113
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("useDefaultWebProxy", DefaultValue = true)]

      public bool UseDefaultWebProxy { get; set; }
    content.vb: >-
      <ConfigurationProperty("useDefaultWebProxy", DefaultValue:=True)>

      Public Property UseDefaultWebProxy As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false.
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.UseDefaultWebProxy*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: useDefaultWebProxy
    namedArguments:
    - name: DefaultValue
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.IsDynamic
  commentId: P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.IsDynamic
  id: IsDynamic
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: IsDynamic
  nameWithType: WSHttpRelayBindingBaseElement.IsDynamic
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.IsDynamic
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IsDynamic
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 122
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Gets or sets whether the binding base element is dynamic.
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("isDynamic", DefaultValue = true)]

      public bool IsDynamic { get; set; }
    content.vb: >-
      <ConfigurationProperty("isDynamic", DefaultValue:=True)>

      Public Property IsDynamic As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the binding base element is dynamic; otherwise, false.
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.IsDynamic*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isDynamic
    namedArguments:
    - name: DefaultValue
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.Properties
  commentId: P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.Properties
  id: Properties
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: WSHttpRelayBindingBaseElement.Properties
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.Properties
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Properties
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 131
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Gets a collection of properties of this binding configuration element.
  example: []
  syntax:
    content: protected override ConfigurationPropertyCollection Properties { get; }
    content.vb: Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection
    parameters: []
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: A collection of properties of this binding configuration element.
  overridden: System.ServiceModel.Configuration.StandardBindingElement.Properties
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.Properties*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  commentId: M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  id: InitializeFrom(System.ServiceModel.Channels.Binding)
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: InitializeFrom(Binding)
  nameWithType: WSHttpRelayBindingBaseElement.InitializeFrom(Binding)
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: InitializeFrom
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 156
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Initializes this binding configuration element with the content of the specified binding.
  example: []
  syntax:
    content: protected override void InitializeFrom(Binding binding)
    content.vb: Protected Overrides Sub InitializeFrom(binding As Binding)
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: A binding.
  overridden: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.InitializeFrom*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  commentId: M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  id: OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  langs:
  - csharp
  - vb
  name: OnApplyConfiguration(Binding)
  nameWithType: WSHttpRelayBindingBaseElement.OnApplyConfiguration(Binding)
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnApplyConfiguration
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/WSHttpRelayBindingBaseElement.cs
    startLine: 177
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Applies the settings of this configuration element to the specified binding.
  example: []
  syntax:
    content: protected override void OnApplyConfiguration(Binding binding)
    content.vb: Protected Overrides Sub OnApplyConfiguration(binding As Binding)
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: The binding to update the settings of.
  overridden: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  overload: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.OnApplyConfiguration*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement
  commentId: T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement
  parent: Microsoft.ServiceBus.Configuration
  isExternal: false
  name: WSHttpRelayBindingElement
  nameWithType: WSHttpRelayBindingElement
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement
- uid: Microsoft.ServiceBus.Configuration
  commentId: N:Microsoft.ServiceBus.Configuration
  isExternal: false
  name: Microsoft.ServiceBus.Configuration
  nameWithType: Microsoft.ServiceBus.Configuration
  fullName: Microsoft.ServiceBus.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ConfigurationElement
  commentId: T:System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: true
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement
  commentId: T:System.ServiceModel.Configuration.ServiceModelConfigurationElement
  parent: System.ServiceModel.Configuration
  isExternal: true
  name: ServiceModelConfigurationElement
  nameWithType: ServiceModelConfigurationElement
  fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement
- uid: System.ServiceModel.Configuration.StandardBindingElement
  commentId: T:System.ServiceModel.Configuration.StandardBindingElement
  parent: System.ServiceModel.Configuration
  isExternal: true
  name: StandardBindingElement
  nameWithType: StandardBindingElement
  fullName: System.ServiceModel.Configuration.StandardBindingElement
- uid: System.ServiceModel.Configuration.IBindingConfigurationElement
  commentId: T:System.ServiceModel.Configuration.IBindingConfigurationElement
  parent: System.ServiceModel.Configuration
  isExternal: true
  name: IBindingConfigurationElement
  nameWithType: IBindingConfigurationElement
  fullName: System.ServiceModel.Configuration.IBindingConfigurationElement
- uid: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
  commentId: M:System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: ApplyConfiguration(Binding)
  nameWithType: StandardBindingElement.ApplyConfiguration(Binding)
  fullName: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
  spec.csharp:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
    name: ApplyConfiguration
    nameWithType: StandardBindingElement.ApplyConfiguration
    fullName: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
    name: ApplyConfiguration
    nameWithType: StandardBindingElement.ApplyConfiguration
    fullName: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
  commentId: M:System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: Reset(ConfigurationElement)
  nameWithType: StandardBindingElement.Reset(ConfigurationElement)
  fullName: System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
  spec.csharp:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
    name: Reset
    nameWithType: StandardBindingElement.Reset
    fullName: System.ServiceModel.Configuration.StandardBindingElement.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: System.Configuration.ConfigurationElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
    name: Reset
    nameWithType: StandardBindingElement.Reset
    fullName: System.ServiceModel.Configuration.StandardBindingElement.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: System.Configuration.ConfigurationElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Configuration.StandardBindingElement.BindingElementType
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.BindingElementType
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: BindingElementType
  nameWithType: StandardBindingElement.BindingElementType
  fullName: System.ServiceModel.Configuration.StandardBindingElement.BindingElementType
- uid: System.ServiceModel.Configuration.StandardBindingElement.Name
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.Name
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: Name
  nameWithType: StandardBindingElement.Name
  fullName: System.ServiceModel.Configuration.StandardBindingElement.Name
- uid: System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: CloseTimeout
  nameWithType: StandardBindingElement.CloseTimeout
  fullName: System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout
- uid: System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: OpenTimeout
  nameWithType: StandardBindingElement.OpenTimeout
  fullName: System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout
- uid: System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: ReceiveTimeout
  nameWithType: StandardBindingElement.ReceiveTimeout
  fullName: System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout
- uid: System.ServiceModel.Configuration.StandardBindingElement.SendTimeout
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.SendTimeout
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: SendTimeout
  nameWithType: StandardBindingElement.SendTimeout
  fullName: System.ServiceModel.Configuration.StandardBindingElement.SendTimeout
- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,{T})
  commentId: M:System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  parent: System.ServiceModel.Configuration.ServiceModelConfigurationElement
  definition: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  name: SetPropertyValueIfNotDefaultValue<T>(String, T)
  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)
  fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(System.String, T)
  nameWithType.vb: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  fullname.vb: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(System.String, T)
  name.vb: SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  spec.csharp:
  - uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue<T>
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue(Of T)
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.Init
  commentId: M:System.Configuration.ConfigurationElement.Init
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: Init()
  nameWithType: ConfigurationElement.Init()
  fullName: System.Configuration.ConfigurationElement.Init()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.Init
    name: Init
    nameWithType: ConfigurationElement.Init
    fullName: System.Configuration.ConfigurationElement.Init
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.Init
    name: Init
    nameWithType: ConfigurationElement.Init
    fullName: System.Configuration.ConfigurationElement.Init
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.IsModified
  commentId: M:System.Configuration.ConfigurationElement.IsModified
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: IsModified()
  nameWithType: ConfigurationElement.IsModified()
  fullName: System.Configuration.ConfigurationElement.IsModified()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.IsModified
    name: IsModified
    nameWithType: ConfigurationElement.IsModified
    fullName: System.Configuration.ConfigurationElement.IsModified
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.IsModified
    name: IsModified
    nameWithType: ConfigurationElement.IsModified
    fullName: System.Configuration.ConfigurationElement.IsModified
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.ResetModified
  commentId: M:System.Configuration.ConfigurationElement.ResetModified
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: ResetModified()
  nameWithType: ConfigurationElement.ResetModified()
  fullName: System.Configuration.ConfigurationElement.ResetModified()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.ResetModified
    name: ResetModified
    nameWithType: ConfigurationElement.ResetModified
    fullName: System.Configuration.ConfigurationElement.ResetModified
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.ResetModified
    name: ResetModified
    nameWithType: ConfigurationElement.ResetModified
    fullName: System.Configuration.ConfigurationElement.ResetModified
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.IsReadOnly
  commentId: M:System.Configuration.ConfigurationElement.IsReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: IsReadOnly()
  nameWithType: ConfigurationElement.IsReadOnly()
  fullName: System.Configuration.ConfigurationElement.IsReadOnly()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.IsReadOnly
    name: IsReadOnly
    nameWithType: ConfigurationElement.IsReadOnly
    fullName: System.Configuration.ConfigurationElement.IsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.IsReadOnly
    name: IsReadOnly
    nameWithType: ConfigurationElement.IsReadOnly
    fullName: System.Configuration.ConfigurationElement.IsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.SetReadOnly
  commentId: M:System.Configuration.ConfigurationElement.SetReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: SetReadOnly()
  nameWithType: ConfigurationElement.SetReadOnly()
  fullName: System.Configuration.ConfigurationElement.SetReadOnly()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.SetReadOnly
    name: SetReadOnly
    nameWithType: ConfigurationElement.SetReadOnly
    fullName: System.Configuration.ConfigurationElement.SetReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.SetReadOnly
    name: SetReadOnly
    nameWithType: ConfigurationElement.SetReadOnly
    fullName: System.Configuration.ConfigurationElement.SetReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  commentId: M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: ListErrors(IList)
  nameWithType: ConfigurationElement.ListErrors(IList)
  fullName: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
    name: ListErrors
    nameWithType: ConfigurationElement.ListErrors
    fullName: System.Configuration.ConfigurationElement.ListErrors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IList
    name: IList
    nameWithType: IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
    name: ListErrors
    nameWithType: ConfigurationElement.ListErrors
    fullName: System.Configuration.ConfigurationElement.ListErrors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IList
    name: IList
    nameWithType: IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.InitializeDefault
  commentId: M:System.Configuration.ConfigurationElement.InitializeDefault
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: InitializeDefault()
  nameWithType: ConfigurationElement.InitializeDefault()
  fullName: System.Configuration.ConfigurationElement.InitializeDefault()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.InitializeDefault
    name: InitializeDefault
    nameWithType: ConfigurationElement.InitializeDefault
    fullName: System.Configuration.ConfigurationElement.InitializeDefault
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.InitializeDefault
    name: InitializeDefault
    nameWithType: ConfigurationElement.InitializeDefault
    fullName: System.Configuration.ConfigurationElement.InitializeDefault
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.Equals(System.Object)
  commentId: M:System.Configuration.ConfigurationElement.Equals(System.Object)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: Equals(Object)
  nameWithType: ConfigurationElement.Equals(Object)
  fullName: System.Configuration.ConfigurationElement.Equals(System.Object)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.Equals(System.Object)
    name: Equals
    nameWithType: ConfigurationElement.Equals
    fullName: System.Configuration.ConfigurationElement.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.Equals(System.Object)
    name: Equals
    nameWithType: ConfigurationElement.Equals
    fullName: System.Configuration.ConfigurationElement.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.GetHashCode
  commentId: M:System.Configuration.ConfigurationElement.GetHashCode
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: GetHashCode()
  nameWithType: ConfigurationElement.GetHashCode()
  fullName: System.Configuration.ConfigurationElement.GetHashCode()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.GetHashCode
    name: GetHashCode
    nameWithType: ConfigurationElement.GetHashCode
    fullName: System.Configuration.ConfigurationElement.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.GetHashCode
    name: GetHashCode
    nameWithType: ConfigurationElement.GetHashCode
    fullName: System.Configuration.ConfigurationElement.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  commentId: M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)
  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)
  fullName: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty, System.Object, System.Boolean)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
    name: SetPropertyValue
    nameWithType: ConfigurationElement.SetPropertyValue
    fullName: System.Configuration.ConfigurationElement.SetPropertyValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationProperty
    name: ConfigurationProperty
    nameWithType: ConfigurationProperty
    fullName: System.Configuration.ConfigurationProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
    name: SetPropertyValue
    nameWithType: ConfigurationElement.SetPropertyValue
    fullName: System.Configuration.ConfigurationElement.SetPropertyValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationProperty
    name: ConfigurationProperty
    nameWithType: ConfigurationProperty
    fullName: System.Configuration.ConfigurationProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  commentId: M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)
  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement, System.Configuration.ConfigurationElement, System.Configuration.ConfigurationSaveMode)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
    name: Unmerge
    nameWithType: ConfigurationElement.Unmerge
    fullName: System.Configuration.ConfigurationElement.Unmerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: System.Configuration.ConfigurationElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: System.Configuration.ConfigurationElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Configuration.ConfigurationSaveMode
    name: ConfigurationSaveMode
    nameWithType: ConfigurationSaveMode
    fullName: System.Configuration.ConfigurationSaveMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
    name: Unmerge
    nameWithType: ConfigurationElement.Unmerge
    fullName: System.Configuration.ConfigurationElement.Unmerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: System.Configuration.ConfigurationElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: System.Configuration.ConfigurationElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Configuration.ConfigurationSaveMode
    name: ConfigurationSaveMode
    nameWithType: ConfigurationSaveMode
    fullName: System.Configuration.ConfigurationSaveMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  commentId: M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: SerializeToXmlElement(XmlWriter, String)
  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)
  fullName: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter, System.String)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
    name: SerializeToXmlElement
    nameWithType: ConfigurationElement.SerializeToXmlElement
    fullName: System.Configuration.ConfigurationElement.SerializeToXmlElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
    name: SerializeToXmlElement
    nameWithType: ConfigurationElement.SerializeToXmlElement
    fullName: System.Configuration.ConfigurationElement.SerializeToXmlElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  commentId: M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: SerializeElement(XmlWriter, Boolean)
  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)
  fullName: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter, System.Boolean)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
    name: SerializeElement
    nameWithType: ConfigurationElement.SerializeElement
    fullName: System.Configuration.ConfigurationElement.SerializeElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
    name: SerializeElement
    nameWithType: ConfigurationElement.SerializeElement
    fullName: System.Configuration.ConfigurationElement.SerializeElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  commentId: M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: DeserializeElement(XmlReader, Boolean)
  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)
  fullName: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader, System.Boolean)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
    name: DeserializeElement
    nameWithType: ConfigurationElement.DeserializeElement
    fullName: System.Configuration.ConfigurationElement.DeserializeElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
    name: DeserializeElement
    nameWithType: ConfigurationElement.DeserializeElement
    fullName: System.Configuration.ConfigurationElement.DeserializeElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  commentId: M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: OnRequiredPropertyNotFound(String)
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)
  fullName: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
    name: OnRequiredPropertyNotFound
    nameWithType: ConfigurationElement.OnRequiredPropertyNotFound
    fullName: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
    name: OnRequiredPropertyNotFound
    nameWithType: ConfigurationElement.OnRequiredPropertyNotFound
    fullName: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.PostDeserialize
  commentId: M:System.Configuration.ConfigurationElement.PostDeserialize
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: PostDeserialize()
  nameWithType: ConfigurationElement.PostDeserialize()
  fullName: System.Configuration.ConfigurationElement.PostDeserialize()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.PostDeserialize
    name: PostDeserialize
    nameWithType: ConfigurationElement.PostDeserialize
    fullName: System.Configuration.ConfigurationElement.PostDeserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.PostDeserialize
    name: PostDeserialize
    nameWithType: ConfigurationElement.PostDeserialize
    fullName: System.Configuration.ConfigurationElement.PostDeserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  commentId: M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: PreSerialize(XmlWriter)
  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)
  fullName: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
    name: PreSerialize
    nameWithType: ConfigurationElement.PreSerialize
    fullName: System.Configuration.ConfigurationElement.PreSerialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
    name: PreSerialize
    nameWithType: ConfigurationElement.PreSerialize
    fullName: System.Configuration.ConfigurationElement.PreSerialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  commentId: M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: OnDeserializeUnrecognizedAttribute(String, String)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String, System.String)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
    name: OnDeserializeUnrecognizedAttribute
    nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute
    fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
    name: OnDeserializeUnrecognizedAttribute
    nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute
    fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  commentId: M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: OnDeserializeUnrecognizedElement(String, XmlReader)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String, System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
    name: OnDeserializeUnrecognizedElement
    nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement
    fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
    name: OnDeserializeUnrecognizedElement
    nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement
    fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  commentId: M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: GetTransformedTypeString(String)
  nameWithType: ConfigurationElement.GetTransformedTypeString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
    name: GetTransformedTypeString
    nameWithType: ConfigurationElement.GetTransformedTypeString
    fullName: System.Configuration.ConfigurationElement.GetTransformedTypeString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
    name: GetTransformedTypeString
    nameWithType: ConfigurationElement.GetTransformedTypeString
    fullName: System.Configuration.ConfigurationElement.GetTransformedTypeString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  commentId: M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: GetTransformedAssemblyString(String)
  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
    name: GetTransformedAssemblyString
    nameWithType: ConfigurationElement.GetTransformedAssemblyString
    fullName: System.Configuration.ConfigurationElement.GetTransformedAssemblyString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
    name: GetTransformedAssemblyString
    nameWithType: ConfigurationElement.GetTransformedAssemblyString
    fullName: System.Configuration.ConfigurationElement.GetTransformedAssemblyString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.LockAttributes
  commentId: P:System.Configuration.ConfigurationElement.LockAttributes
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
  fullName: System.Configuration.ConfigurationElement.LockAttributes
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  commentId: P:System.Configuration.ConfigurationElement.LockAllAttributesExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
  fullName: System.Configuration.ConfigurationElement.LockAllAttributesExcept
- uid: System.Configuration.ConfigurationElement.LockElements
  commentId: P:System.Configuration.ConfigurationElement.LockElements
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
  fullName: System.Configuration.ConfigurationElement.LockElements
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept
  commentId: P:System.Configuration.ConfigurationElement.LockAllElementsExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
  fullName: System.Configuration.ConfigurationElement.LockAllElementsExcept
- uid: System.Configuration.ConfigurationElement.LockItem
  commentId: P:System.Configuration.ConfigurationElement.LockItem
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
  fullName: System.Configuration.ConfigurationElement.LockItem
- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  commentId: P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: Item[ConfigurationProperty]
  nameWithType: ConfigurationElement.Item[ConfigurationProperty]
  fullName: System.Configuration.ConfigurationElement.Item[System.Configuration.ConfigurationProperty]
  nameWithType.vb: ConfigurationElement.Item(ConfigurationProperty)
  fullname.vb: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  name.vb: Item(ConfigurationProperty)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
    name: Item
    nameWithType: ConfigurationElement.Item
    fullName: System.Configuration.ConfigurationElement.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Configuration.ConfigurationProperty
    name: ConfigurationProperty
    nameWithType: ConfigurationProperty
    fullName: System.Configuration.ConfigurationProperty
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
    name: Item
    nameWithType: ConfigurationElement.Item
    fullName: System.Configuration.ConfigurationElement.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationProperty
    name: ConfigurationProperty
    nameWithType: ConfigurationProperty
    fullName: System.Configuration.ConfigurationProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.Item(System.String)
  commentId: P:System.Configuration.ConfigurationElement.Item(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: Item[String]
  nameWithType: ConfigurationElement.Item[String]
  fullName: System.Configuration.ConfigurationElement.Item[System.String]
  nameWithType.vb: ConfigurationElement.Item(String)
  fullname.vb: System.Configuration.ConfigurationElement.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.Item(System.String)
    name: Item
    nameWithType: ConfigurationElement.Item
    fullName: System.Configuration.ConfigurationElement.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.Item(System.String)
    name: Item
    nameWithType: ConfigurationElement.Item
    fullName: System.Configuration.ConfigurationElement.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.ElementInformation
  commentId: P:System.Configuration.ConfigurationElement.ElementInformation
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
  fullName: System.Configuration.ConfigurationElement.ElementInformation
- uid: System.Configuration.ConfigurationElement.EvaluationContext
  commentId: P:System.Configuration.ConfigurationElement.EvaluationContext
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
  fullName: System.Configuration.ConfigurationElement.EvaluationContext
- uid: System.Configuration.ConfigurationElement.ElementProperty
  commentId: P:System.Configuration.ConfigurationElement.ElementProperty
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
  fullName: System.Configuration.ConfigurationElement.ElementProperty
- uid: System.Configuration.ConfigurationElement.HasContext
  commentId: P:System.Configuration.ConfigurationElement.HasContext
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
  fullName: System.Configuration.ConfigurationElement.HasContext
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration
  commentId: P:System.Configuration.ConfigurationElement.CurrentConfiguration
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
  fullName: System.Configuration.ConfigurationElement.CurrentConfiguration
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Configuration
  commentId: N:System.Configuration
  isExternal: false
  name: System.Configuration
  nameWithType: System.Configuration
  fullName: System.Configuration
- uid: System.ServiceModel.Configuration
  commentId: N:System.ServiceModel.Configuration
  isExternal: false
  name: System.ServiceModel.Configuration
  nameWithType: System.ServiceModel.Configuration
  fullName: System.ServiceModel.Configuration
- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  commentId: M:System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  isExternal: true
  name: SetPropertyValueIfNotDefaultValue<T>(String, T)
  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)
  fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(System.String, T)
  nameWithType.vb: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  fullname.vb: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(System.String, T)
  name.vb: SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  spec.csharp:
  - uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue<T>
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue(Of T)
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  commentId: T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
  parent: Microsoft.ServiceBus.Configuration
  isExternal: false
  name: WSHttpRelayBindingBaseElement
  nameWithType: WSHttpRelayBindingBaseElement
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor
  isExternal: false
  name: WSHttpRelayBindingBaseElement
  nameWithType: WSHttpRelayBindingBaseElement.WSHttpRelayBindingBaseElement
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.WSHttpRelayBindingBaseElement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.WSHttpRelayBinding
  commentId: T:Microsoft.ServiceBus.WSHttpRelayBinding
  parent: Microsoft.ServiceBus
  isExternal: false
  name: WSHttpRelayBinding
  nameWithType: WSHttpRelayBinding
  fullName: Microsoft.ServiceBus.WSHttpRelayBinding
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxBufferPoolSize*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxBufferPoolSize
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WSHttpRelayBindingBaseElement.MaxBufferPoolSize
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxBufferPoolSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxReceivedMessageSize*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxReceivedMessageSize
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WSHttpRelayBindingBaseElement.MaxReceivedMessageSize
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxReceivedMessageSize
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MessageEncoding*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MessageEncoding
  isExternal: false
  name: MessageEncoding
  nameWithType: WSHttpRelayBindingBaseElement.MessageEncoding
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MessageEncoding
- uid: System.ServiceModel.WSMessageEncoding
  commentId: T:System.ServiceModel.WSMessageEncoding
  parent: System.ServiceModel
  isExternal: true
  name: WSMessageEncoding
  nameWithType: WSMessageEncoding
  fullName: System.ServiceModel.WSMessageEncoding
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ProxyAddress*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ProxyAddress
  isExternal: false
  name: ProxyAddress
  nameWithType: WSHttpRelayBindingBaseElement.ProxyAddress
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ProxyAddress
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReaderQuotas*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReaderQuotas
  isExternal: false
  name: ReaderQuotas
  nameWithType: WSHttpRelayBindingBaseElement.ReaderQuotas
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReaderQuotas
- uid: Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement
  commentId: T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement
  parent: Microsoft.ServiceBus.Configuration
  isExternal: false
  name: XmlDictionaryReaderQuotasElement
  nameWithType: XmlDictionaryReaderQuotasElement
  fullName: Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement
- uid: System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement
  commentId: T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement
  parent: System.ServiceModel.Configuration
  isExternal: true
  name: StandardBindingOptionalReliableSessionElement
  nameWithType: StandardBindingOptionalReliableSessionElement
  fullName: System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReliableSession*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReliableSession
  isExternal: false
  name: ReliableSession
  nameWithType: WSHttpRelayBindingBaseElement.ReliableSession
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReliableSession
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.TextEncoding*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.TextEncoding
  isExternal: false
  name: TextEncoding
  nameWithType: WSHttpRelayBindingBaseElement.TextEncoding
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.TextEncoding
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.UseDefaultWebProxy*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.UseDefaultWebProxy
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WSHttpRelayBindingBaseElement.UseDefaultWebProxy
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.UseDefaultWebProxy
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.IsDynamic*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.IsDynamic
  isExternal: false
  name: IsDynamic
  nameWithType: WSHttpRelayBindingBaseElement.IsDynamic
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.IsDynamic
- uid: System.ServiceModel.Configuration.StandardBindingElement.Properties
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.Properties
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: Properties
  nameWithType: StandardBindingElement.Properties
  fullName: System.ServiceModel.Configuration.StandardBindingElement.Properties
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.Properties*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.Properties
  isExternal: false
  name: Properties
  nameWithType: WSHttpRelayBindingBaseElement.Properties
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  commentId: T:System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: true
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  commentId: M:System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: InitializeFrom(Binding)
  nameWithType: StandardBindingElement.InitializeFrom(Binding)
  fullName: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  spec.csharp:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
    name: InitializeFrom
    nameWithType: StandardBindingElement.InitializeFrom
    fullName: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
    name: InitializeFrom
    nameWithType: StandardBindingElement.InitializeFrom
    fullName: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.InitializeFrom*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.InitializeFrom
  isExternal: false
  name: InitializeFrom
  nameWithType: WSHttpRelayBindingBaseElement.InitializeFrom
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.InitializeFrom
- uid: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  commentId: M:System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: OnApplyConfiguration(Binding)
  nameWithType: StandardBindingElement.OnApplyConfiguration(Binding)
  fullName: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  spec.csharp:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
    name: OnApplyConfiguration
    nameWithType: StandardBindingElement.OnApplyConfiguration
    fullName: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
    name: OnApplyConfiguration
    nameWithType: StandardBindingElement.OnApplyConfiguration
    fullName: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.OnApplyConfiguration*
  commentId: Overload:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.OnApplyConfiguration
  isExternal: false
  name: OnApplyConfiguration
  nameWithType: WSHttpRelayBindingBaseElement.OnApplyConfiguration
  fullName: Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.OnApplyConfiguration
