### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.TokenProvider
  commentId: T:Microsoft.ServiceBus.TokenProvider
  id: TokenProvider
  parent: Microsoft.ServiceBus
  children:
  - Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean)
  - Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,System.Int32,Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.BeginGetToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.TokenProvider.BeginGetWebToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.TokenProvider.BuildKey(System.String,System.String)
  - Microsoft.ServiceBus.TokenProvider.CacheSize
  - Microsoft.ServiceBus.TokenProvider.CacheTokens
  - Microsoft.ServiceBus.TokenProvider.Clear
  - Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)
  - Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String)
  - Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri)
  - Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32)
  - Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32,Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  - Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  - Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan)
  - Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan,Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[])
  - Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri)
  - Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri,Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String)
  - Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri)
  - Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri,Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String)
  - Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri)
  - Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)
  - Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri})
  - Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)
  - Microsoft.ServiceBus.TokenProvider.EndGetToken(System.IAsyncResult)
  - Microsoft.ServiceBus.TokenProvider.EndGetWebToken(System.IAsyncResult)
  - Microsoft.ServiceBus.TokenProvider.GetTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)
  - Microsoft.ServiceBus.TokenProvider.GetWebTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)
  - Microsoft.ServiceBus.TokenProvider.IsWebTokenSupported
  - Microsoft.ServiceBus.TokenProvider.NormalizeAppliesTo(System.String)
  - Microsoft.ServiceBus.TokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.TokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.TokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)
  - Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)
  - Microsoft.ServiceBus.TokenProvider.StripQueryParameters
  - Microsoft.ServiceBus.TokenProvider.TokenScope
  langs:
  - csharp
  - vb
  name: TokenProvider
  nameWithType: TokenProvider
  fullName: Microsoft.ServiceBus.TokenProvider
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: TokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 18
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Represents a security token provider with built-in factory methods returning some well-known token providers.
  example: []
  syntax:
    content: public abstract class TokenProvider
    content.vb: Public MustInherit Class TokenProvider
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.ServiceBus.OAuthTokenProvider
  - Microsoft.ServiceBus.SamlTokenProvider
  - Microsoft.ServiceBus.SharedAccessSignatureTokenProvider
  - Microsoft.ServiceBus.SharedSecretTokenProvider
  - Microsoft.ServiceBus.SimpleWebTokenProvider
  - Microsoft.ServiceBus.WindowsTokenProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean)
  commentId: M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: TokenProvider(Boolean, Boolean)
  nameWithType: TokenProvider.TokenProvider(Boolean, Boolean)
  fullName: Microsoft.ServiceBus.TokenProvider.TokenProvider(System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected TokenProvider(bool cacheTokens, bool supportHttpAuthToken)
    content.vb: Protected Sub New(cacheTokens As Boolean, supportHttpAuthToken As Boolean)
    parameters:
    - id: cacheTokens
      type: System.Boolean
      description: true if new security tokens are being cached; otherwise, false.
    - id: supportHttpAuthToken
      type: System.Boolean
      description: true if web token is supported by this provider; otherwise, false.
  overload: Microsoft.ServiceBus.TokenProvider.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,Microsoft.ServiceBus.TokenScope)
  id: '#ctor(System.Boolean,System.Boolean,Microsoft.ServiceBus.TokenScope)'
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: TokenProvider(Boolean, Boolean, TokenScope)
  nameWithType: TokenProvider.TokenProvider(Boolean, Boolean, TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.TokenProvider(System.Boolean, System.Boolean, Microsoft.ServiceBus.TokenScope)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 45
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected TokenProvider(bool cacheTokens, bool supportHttpAuthToken, TokenScope tokenScope)
    content.vb: Protected Sub New(cacheTokens As Boolean, supportHttpAuthToken As Boolean, tokenScope As TokenScope)
    parameters:
    - id: cacheTokens
      type: System.Boolean
      description: true if new security tokens are being cached; otherwise, false.
    - id: supportHttpAuthToken
      type: System.Boolean
      description: true if web token is supported by this provider; otherwise, false.
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
  overload: Microsoft.ServiceBus.TokenProvider.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,System.Int32,Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,System.Int32,Microsoft.ServiceBus.TokenScope)
  id: '#ctor(System.Boolean,System.Boolean,System.Int32,Microsoft.ServiceBus.TokenScope)'
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: TokenProvider(Boolean, Boolean, Int32, TokenScope)
  nameWithType: TokenProvider.TokenProvider(Boolean, Boolean, Int32, TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.TokenProvider(System.Boolean, System.Boolean, System.Int32, Microsoft.ServiceBus.TokenScope)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 55
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected TokenProvider(bool cacheTokens, bool supportHttpAuthToken, int cacheSize, TokenScope tokenScope)
    content.vb: Protected Sub New(cacheTokens As Boolean, supportHttpAuthToken As Boolean, cacheSize As Integer, tokenScope As TokenScope)
    parameters:
    - id: cacheTokens
      type: System.Boolean
      description: true if new security tokens are being cached; otherwise, false.
    - id: supportHttpAuthToken
      type: System.Boolean
      description: true if web token is supported by this provider; otherwise, false.
    - id: cacheSize
      type: System.Int32
      description: The size of the cache.
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
  overload: Microsoft.ServiceBus.TokenProvider.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.TokenProvider.TokenScope
  commentId: P:Microsoft.ServiceBus.TokenProvider.TokenScope
  id: TokenScope
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: TokenScope
  nameWithType: TokenProvider.TokenScope
  fullName: Microsoft.ServiceBus.TokenProvider.TokenScope
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: TokenScope
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 76
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the token scope associated with the provider.
  example: []
  syntax:
    content: public TokenScope TokenScope { get; }
    content.vb: Public ReadOnly Property TokenScope As TokenScope
    parameters: []
    return:
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
  overload: Microsoft.ServiceBus.TokenProvider.TokenScope*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.TokenProvider.CacheTokens
  commentId: P:Microsoft.ServiceBus.TokenProvider.CacheTokens
  id: CacheTokens
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CacheTokens
  nameWithType: TokenProvider.CacheTokens
  fullName: Microsoft.ServiceBus.TokenProvider.CacheTokens
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CacheTokens
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 80
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets a value that indicates whether new security tokens are being cached.
  example: []
  syntax:
    content: public bool CacheTokens { get; set; }
    content.vb: Public Property CacheTokens As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if new security tokens are being cached; otherwise, false.
  overload: Microsoft.ServiceBus.TokenProvider.CacheTokens*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TokenProvider.CacheSize
  commentId: P:Microsoft.ServiceBus.TokenProvider.CacheSize
  id: CacheSize
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CacheSize
  nameWithType: TokenProvider.CacheSize
  fullName: Microsoft.ServiceBus.TokenProvider.CacheSize
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CacheSize
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 108
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the size of the cache.
  example: []
  syntax:
    content: public int CacheSize { get; set; }
    content.vb: Public Property CacheSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The size of the cache.
  overload: Microsoft.ServiceBus.TokenProvider.CacheSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TokenProvider.IsWebTokenSupported
  commentId: P:Microsoft.ServiceBus.TokenProvider.IsWebTokenSupported
  id: IsWebTokenSupported
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: IsWebTokenSupported
  nameWithType: TokenProvider.IsWebTokenSupported
  fullName: Microsoft.ServiceBus.TokenProvider.IsWebTokenSupported
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IsWebTokenSupported
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 137
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets a value that indicates whether web token is supported by this provider.
  example: []
  syntax:
    content: public bool IsWebTokenSupported { get; }
    content.vb: Public ReadOnly Property IsWebTokenSupported As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if web token is supported by this provider; otherwise, false.
  overload: Microsoft.ServiceBus.TokenProvider.IsWebTokenSupported*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.TokenProvider.StripQueryParameters
  commentId: P:Microsoft.ServiceBus.TokenProvider.StripQueryParameters
  id: StripQueryParameters
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: StripQueryParameters
  nameWithType: TokenProvider.StripQueryParameters
  fullName: Microsoft.ServiceBus.TokenProvider.StripQueryParameters
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: StripQueryParameters
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 156
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets whether the token provider strips query parameters.
  example: []
  syntax:
    content: protected virtual bool StripQueryParameters { get; }
    content.vb: Protected Overridable ReadOnly Property StripQueryParameters As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the token provider strips query parameters; otherwise, false.
  overload: Microsoft.ServiceBus.TokenProvider.StripQueryParameters*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.ServiceBus.TokenProvider.Clear
  commentId: M:Microsoft.ServiceBus.TokenProvider.Clear
  id: Clear
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: TokenProvider.Clear()
  fullName: Microsoft.ServiceBus.TokenProvider.Clear()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Clear
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 165
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Clears the token provider.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.ServiceBus.TokenProvider.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String)
  id: CreateSamlTokenProvider(System.String)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSamlTokenProvider(String)
  nameWithType: TokenProvider.CreateSamlTokenProvider(String)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSamlTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 182
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a SAML token provider with the specified SAML token.
  example: []
  syntax:
    content: public static TokenProvider CreateSamlTokenProvider(string samlToken)
    content.vb: Public Shared Function CreateSamlTokenProvider(samlToken As String) As TokenProvider
    parameters:
    - id: samlToken
      type: System.String
      description: The string that represents the SAML token.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning SAML token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri)
  id: CreateSamlTokenProvider(System.String,System.Uri)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSamlTokenProvider(String, Uri)
  nameWithType: TokenProvider.CreateSamlTokenProvider(String, Uri)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSamlTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 191
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a SAML token provider with the specified SAML token and URI of the Security Token Service (STS).
  example: []
  syntax:
    content: public static TokenProvider CreateSamlTokenProvider(string samlToken, Uri stsUri)
    content.vb: Public Shared Function CreateSamlTokenProvider(samlToken As String, stsUri As Uri) As TokenProvider
    parameters:
    - id: samlToken
      type: System.String
      description: The string that represents the SAML token.
    - id: stsUri
      type: System.Uri
      description: The URI of the Security Token Service (STS).
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning SAML token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32)
  id: CreateSamlTokenProvider(System.String,System.Uri,System.Int32)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSamlTokenProvider(String, Uri, Int32)
  nameWithType: TokenProvider.CreateSamlTokenProvider(String, Uri, Int32)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String, System.Uri, System.Int32)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSamlTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 201
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a SAML token provider with the specified SAML token, URI of the Security Token Service (STS) and cache size.
  example: []
  syntax:
    content: public static TokenProvider CreateSamlTokenProvider(string samlToken, Uri stsUri, int cacheSize)
    content.vb: Public Shared Function CreateSamlTokenProvider(samlToken As String, stsUri As Uri, cacheSize As Integer) As TokenProvider
    parameters:
    - id: samlToken
      type: System.String
      description: The string that represents the SAML token.
    - id: stsUri
      type: System.Uri
      description: The URI of the Security Token Service (STS).
    - id: cacheSize
      type: System.Int32
      description: The size of the cache.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning SAML token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)
  id: CreateSamlTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSamlTokenProvider(String, TokenScope)
  nameWithType: TokenProvider.CreateSamlTokenProvider(String, TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String, Microsoft.ServiceBus.TokenScope)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSamlTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 210
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a SAML token provider with the specified SAML token and scope.
  example: []
  syntax:
    content: public static TokenProvider CreateSamlTokenProvider(string samlToken, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSamlTokenProvider(samlToken As String, tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: samlToken
      type: System.String
      description: The string that represents the SAML token.
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning SAML token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)
  id: CreateSamlTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSamlTokenProvider(String, Uri, TokenScope)
  nameWithType: TokenProvider.CreateSamlTokenProvider(String, Uri, TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String, System.Uri, Microsoft.ServiceBus.TokenScope)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSamlTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 220
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a SAML token provider with the specified SAML token, URI of the Security Token Service (STS) and token scope.
  example: []
  syntax:
    content: public static TokenProvider CreateSamlTokenProvider(string samlToken, Uri stsUri, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSamlTokenProvider(samlToken As String, stsUri As Uri, tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: samlToken
      type: System.String
      description: The string that represents the SAML token.
    - id: stsUri
      type: System.Uri
      description: The URI of the Security Token Service (STS).
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning SAML token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32,Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32,Microsoft.ServiceBus.TokenScope)
  id: CreateSamlTokenProvider(System.String,System.Uri,System.Int32,Microsoft.ServiceBus.TokenScope)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSamlTokenProvider(String, Uri, Int32, TokenScope)
  nameWithType: TokenProvider.CreateSamlTokenProvider(String, Uri, Int32, TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String, System.Uri, System.Int32, Microsoft.ServiceBus.TokenScope)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSamlTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 232
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Creates a SAML token provider with the specified SAML token, \nURI of the Security Token Service (STS), cache size and token scope."
  example: []
  syntax:
    content: public static TokenProvider CreateSamlTokenProvider(string samlToken, Uri stsUri, int cacheSize, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSamlTokenProvider(samlToken As String, stsUri As Uri, cacheSize As Integer, tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: samlToken
      type: System.String
      description: The string that represents the SAML token.
    - id: stsUri
      type: System.Uri
      description: The URI of the Security Token Service (STS).
    - id: cacheSize
      type: System.Int32
      description: The size of the cache.
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning SAML token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  id: CreateSharedAccessSignatureTokenProvider(System.String)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedAccessSignatureTokenProvider(String)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedAccessSignatureTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 240
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a URL that grants access to the token provider with the specified shared access signature.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedAccessSignatureTokenProvider(string sharedAccessSignature)
    content.vb: Public Shared Function CreateSharedAccessSignatureTokenProvider(sharedAccessSignature As String) As TokenProvider
    parameters:
    - id: sharedAccessSignature
      type: System.String
      description: The shared access signature.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: Returns <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  id: CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedAccessSignatureTokenProvider(String, String)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedAccessSignatureTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 249
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a URL that grants access to the token provider with the specified key name and shared access key.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey)
    content.vb: Public Shared Function CreateSharedAccessSignatureTokenProvider(keyName As String, sharedAccessKey As String) As TokenProvider
    parameters:
    - id: keyName
      type: System.String
      description: The key name.
    - id: sharedAccessKey
      type: System.String
      description: The shared access key.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The created URL that grants access to token provider.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan)
  id: CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedAccessSignatureTokenProvider(String, String, TimeSpan)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String, TimeSpan)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedAccessSignatureTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 264
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a URL that grants access to the token provider with the specified key name, shared access key and token time to live.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey, TimeSpan tokenTimeToLive)
    content.vb: Public Shared Function CreateSharedAccessSignatureTokenProvider(keyName As String, sharedAccessKey As String, tokenTimeToLive As TimeSpan) As TokenProvider
    parameters:
    - id: keyName
      type: System.String
      description: The key name.
    - id: sharedAccessKey
      type: System.String
      description: The shared access key.
    - id: tokenTimeToLive
      type: System.TimeSpan
      description: The time for which the operation remains valid.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The created URL that grants access to token provider.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)
  id: CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedAccessSignatureTokenProvider(String, String, TokenScope)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String, TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String, Microsoft.ServiceBus.TokenScope)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedAccessSignatureTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 274
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a URL that grants access to the token provider with the specified key name, shared access key and token scope.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSharedAccessSignatureTokenProvider(keyName As String, sharedAccessKey As String, tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: keyName
      type: System.String
      description: The key name.
    - id: sharedAccessKey
      type: System.String
      description: The shared access key.
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The created URL that grants access to token provider.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan,Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan,Microsoft.ServiceBus.TokenScope)
  id: CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan,Microsoft.ServiceBus.TokenScope)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedAccessSignatureTokenProvider(String, String, TimeSpan, TokenScope)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String, TimeSpan, TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String, System.TimeSpan, Microsoft.ServiceBus.TokenScope)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedAccessSignatureTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 285
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a URL that grants access to the token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey, TimeSpan tokenTimeToLive, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSharedAccessSignatureTokenProvider(keyName As String, sharedAccessKey As String, tokenTimeToLive As TimeSpan, tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: keyName
      type: System.String
      description: The key name.
    - id: sharedAccessKey
      type: System.String
      description: The shared access key.
    - id: tokenTimeToLive
      type: System.TimeSpan
      description: The time for which the operation remains valid.
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The created URL that grants access to token provider.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String)
  id: CreateSharedSecretTokenProvider(System.String,System.String)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedSecretTokenProvider(String, String)
  nameWithType: TokenProvider.CreateSharedSecretTokenProvider(String, String)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedSecretTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 294
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a shared secret token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedSecretTokenProvider(string issuerName, string issuerSecret)
    content.vb: Public Shared Function CreateSharedSecretTokenProvider(issuerName As String, issuerSecret As String) As TokenProvider
    parameters:
    - id: issuerName
      type: System.String
      description: The issuer name.
    - id: issuerSecret
      type: System.String
      description: The issuer secret.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning shared secret token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri)
  id: CreateSharedSecretTokenProvider(System.String,System.String,System.Uri)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedSecretTokenProvider(String, String, Uri)
  nameWithType: TokenProvider.CreateSharedSecretTokenProvider(String, String, Uri)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String, System.String, System.Uri)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedSecretTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 304
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a shared secret token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedSecretTokenProvider(string issuerName, string issuerSecret, Uri stsUri)
    content.vb: Public Shared Function CreateSharedSecretTokenProvider(issuerName As String, issuerSecret As String, stsUri As Uri) As TokenProvider
    parameters:
    - id: issuerName
      type: System.String
      description: The issuer name.
    - id: issuerSecret
      type: System.String
      description: The issuer secret.
    - id: stsUri
      type: System.Uri
      description: The URI of the Security Token Service (STS).
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning shared secret token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[])
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[])
  id: CreateSharedSecretTokenProvider(System.String,System.Byte[])
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedSecretTokenProvider(String, Byte[])
  nameWithType: TokenProvider.CreateSharedSecretTokenProvider(String, Byte[])
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedSecretTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 313
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a shared secret token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedSecretTokenProvider(string issuerName, byte[] issuerSecret)
    content.vb: Public Shared Function CreateSharedSecretTokenProvider(issuerName As String, issuerSecret As Byte()) As TokenProvider
    parameters:
    - id: issuerName
      type: System.String
      description: The issuer name.
    - id: issuerSecret
      type: System.Byte[]
      description: The issuer secret.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning shared secret token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider*
  nameWithType.vb: TokenProvider.CreateSharedSecretTokenProvider(String, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String, System.Byte())
  name.vb: CreateSharedSecretTokenProvider(String, Byte())
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri)
  id: CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedSecretTokenProvider(String, Byte[], Uri)
  nameWithType: TokenProvider.CreateSharedSecretTokenProvider(String, Byte[], Uri)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String, System.Byte[], System.Uri)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedSecretTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 323
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a shared secret token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedSecretTokenProvider(string issuerName, byte[] issuerSecret, Uri stsUri)
    content.vb: Public Shared Function CreateSharedSecretTokenProvider(issuerName As String, issuerSecret As Byte(), stsUri As Uri) As TokenProvider
    parameters:
    - id: issuerName
      type: System.String
      description: The issuer name.
    - id: issuerSecret
      type: System.Byte[]
      description: The set of issuer secret.
    - id: stsUri
      type: System.Uri
      description: The URI of the Security Token Service (STS).
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning shared secret token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider*
  nameWithType.vb: TokenProvider.CreateSharedSecretTokenProvider(String, Byte(), Uri)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String, System.Byte(), System.Uri)
  name.vb: CreateSharedSecretTokenProvider(String, Byte(), Uri)
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)
  id: CreateSharedSecretTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedSecretTokenProvider(String, String, TokenScope)
  nameWithType: TokenProvider.CreateSharedSecretTokenProvider(String, String, TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String, System.String, Microsoft.ServiceBus.TokenScope)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedSecretTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 333
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a shared secret token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedSecretTokenProvider(string issuerName, string issuerSecret, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSharedSecretTokenProvider(issuerName As String, issuerSecret As String, tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: issuerName
      type: System.String
      description: The issuer name.
    - id: issuerSecret
      type: System.String
      description: The issuer secret.
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The created token provider.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri,Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri,Microsoft.ServiceBus.TokenScope)
  id: CreateSharedSecretTokenProvider(System.String,System.String,System.Uri,Microsoft.ServiceBus.TokenScope)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedSecretTokenProvider(String, String, Uri, TokenScope)
  nameWithType: TokenProvider.CreateSharedSecretTokenProvider(String, String, Uri, TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String, System.String, System.Uri, Microsoft.ServiceBus.TokenScope)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedSecretTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 344
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a shared secret token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedSecretTokenProvider(string issuerName, string issuerSecret, Uri stsUri, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSharedSecretTokenProvider(issuerName As String, issuerSecret As String, stsUri As Uri, tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: issuerName
      type: System.String
      description: The issuer name.
    - id: issuerSecret
      type: System.String
      description: The issuer secret.
    - id: stsUri
      type: System.Uri
      description: The URI of the Security Token Service (STS).
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The created token provider.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],Microsoft.ServiceBus.TokenScope)
  id: CreateSharedSecretTokenProvider(System.String,System.Byte[],Microsoft.ServiceBus.TokenScope)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedSecretTokenProvider(String, Byte[], TokenScope)
  nameWithType: TokenProvider.CreateSharedSecretTokenProvider(String, Byte[], TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String, System.Byte[], Microsoft.ServiceBus.TokenScope)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedSecretTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 354
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a shared secret token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedSecretTokenProvider(string issuerName, byte[] issuerSecret, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSharedSecretTokenProvider(issuerName As String, issuerSecret As Byte(), tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: issuerName
      type: System.String
      description: The name of the issuer.
    - id: issuerSecret
      type: System.Byte[]
      description: The set of issuer secret.
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The created token provider.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider*
  nameWithType.vb: TokenProvider.CreateSharedSecretTokenProvider(String, Byte(), TokenScope)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String, System.Byte(), Microsoft.ServiceBus.TokenScope)
  name.vb: CreateSharedSecretTokenProvider(String, Byte(), TokenScope)
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri,Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri,Microsoft.ServiceBus.TokenScope)
  id: CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri,Microsoft.ServiceBus.TokenScope)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedSecretTokenProvider(String, Byte[], Uri, TokenScope)
  nameWithType: TokenProvider.CreateSharedSecretTokenProvider(String, Byte[], Uri, TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String, System.Byte[], System.Uri, Microsoft.ServiceBus.TokenScope)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSharedSecretTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 365
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a shared secret token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSharedSecretTokenProvider(string issuerName, byte[] issuerSecret, Uri stsUri, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSharedSecretTokenProvider(issuerName As String, issuerSecret As Byte(), stsUri As Uri, tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: issuerName
      type: System.String
      description: The issuer name.
    - id: issuerSecret
      type: System.Byte[]
      description: The set of issuer secret.
    - id: stsUri
      type: System.Uri
      description: The Security Token Service's endpoint Uri.
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The created token provider.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider*
  nameWithType.vb: TokenProvider.CreateSharedSecretTokenProvider(String, Byte(), Uri, TokenScope)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String, System.Byte(), System.Uri, Microsoft.ServiceBus.TokenScope)
  name.vb: CreateSharedSecretTokenProvider(String, Byte(), Uri, TokenScope)
- uid: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String)
  id: CreateSimpleWebTokenProvider(System.String)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSimpleWebTokenProvider(String)
  nameWithType: TokenProvider.CreateSimpleWebTokenProvider(String)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSimpleWebTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 373
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a simple web token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSimpleWebTokenProvider(string token)
    content.vb: Public Shared Function CreateSimpleWebTokenProvider(token As String) As TokenProvider
    parameters:
    - id: token
      type: System.String
      description: The string that represents the simple web token.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning simple web token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri)
  id: CreateSimpleWebTokenProvider(System.String,System.Uri)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSimpleWebTokenProvider(String, Uri)
  nameWithType: TokenProvider.CreateSimpleWebTokenProvider(String, Uri)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSimpleWebTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 382
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a simple web token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSimpleWebTokenProvider(string token, Uri stsUri)
    content.vb: Public Shared Function CreateSimpleWebTokenProvider(token As String, stsUri As Uri) As TokenProvider
    parameters:
    - id: token
      type: System.String
      description: The string that represents the simple web token.
    - id: stsUri
      type: System.Uri
      description: The URI of the Security Token Service (STS).
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning simple web token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)
  id: CreateSimpleWebTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSimpleWebTokenProvider(String, TokenScope)
  nameWithType: TokenProvider.CreateSimpleWebTokenProvider(String, TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String, Microsoft.ServiceBus.TokenScope)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSimpleWebTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 391
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a simple web token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSimpleWebTokenProvider(string token, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSimpleWebTokenProvider(token As String, tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: token
      type: System.String
      description: The string that represents the simple web token.
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The created simple web token provider.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)
  id: CreateSimpleWebTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSimpleWebTokenProvider(String, Uri, TokenScope)
  nameWithType: TokenProvider.CreateSimpleWebTokenProvider(String, Uri, TokenScope)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String, System.Uri, Microsoft.ServiceBus.TokenScope)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateSimpleWebTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 401
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a simple web token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateSimpleWebTokenProvider(string token, Uri stsUri, TokenScope tokenScope)
    content.vb: Public Shared Function CreateSimpleWebTokenProvider(token As String, stsUri As Uri, tokenScope As TokenScope) As TokenProvider
    parameters:
    - id: token
      type: System.String
      description: The string that represents the simple web token.
    - id: stsUri
      type: System.Uri
      description: The URI of the Security Token Service (STS).
    - id: tokenScope
      type: Microsoft.ServiceBus.TokenScope
      description: The token scope associated with the provider.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The created simple web token provider.
  overload: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri})
  id: CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri})
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateWindowsTokenProvider(IEnumerable<Uri>)
  nameWithType: TokenProvider.CreateWindowsTokenProvider(IEnumerable<Uri>)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable<System.Uri>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateWindowsTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 409
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a windows token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateWindowsTokenProvider(IEnumerable<Uri> stsUris)
    content.vb: Public Shared Function CreateWindowsTokenProvider(stsUris As IEnumerable(Of Uri)) As TokenProvider
    parameters:
    - id: stsUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: The URIs of the Security Token Service (STS).
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning the windows token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider*
  nameWithType.vb: TokenProvider.CreateWindowsTokenProvider(IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: CreateWindowsTokenProvider(IEnumerable(Of Uri))
- uid: Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)
  id: CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateWindowsTokenProvider(IEnumerable<Uri>, NetworkCredential)
  nameWithType: TokenProvider.CreateWindowsTokenProvider(IEnumerable<Uri>, NetworkCredential)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable<System.Uri>, System.Net.NetworkCredential)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateWindowsTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 418
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates a windows token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateWindowsTokenProvider(IEnumerable<Uri> stsUris, NetworkCredential credential)
    content.vb: Public Shared Function CreateWindowsTokenProvider(stsUris As IEnumerable(Of Uri), credential As NetworkCredential) As TokenProvider
    parameters:
    - id: stsUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: The URIs of the Security Token Service (STS).
    - id: credential
      type: System.Net.NetworkCredential
      description: The user credential.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning the windows token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider*
  nameWithType.vb: TokenProvider.CreateWindowsTokenProvider(IEnumerable(Of Uri), NetworkCredential)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable(Of System.Uri), System.Net.NetworkCredential)
  name.vb: CreateWindowsTokenProvider(IEnumerable(Of Uri), NetworkCredential)
- uid: Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)
  commentId: M:Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)
  id: CreateOAuthTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateOAuthTokenProvider(IEnumerable<Uri>, NetworkCredential)
  nameWithType: TokenProvider.CreateOAuthTokenProvider(IEnumerable<Uri>, NetworkCredential)
  fullName: Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider(System.Collections.Generic.IEnumerable<System.Uri>, System.Net.NetworkCredential)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateOAuthTokenProvider
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 427
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Creates an OAuth (open standard for authorization) token provider.
  example: []
  syntax:
    content: public static TokenProvider CreateOAuthTokenProvider(IEnumerable<Uri> stsUris, NetworkCredential credential)
    content.vb: Public Shared Function CreateOAuthTokenProvider(stsUris As IEnumerable(Of Uri), credential As NetworkCredential) As TokenProvider
    parameters:
    - id: stsUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: The URIs of the Security Token Service (STS).
    - id: credential
      type: System.Net.NetworkCredential
      description: The user credential.
    return:
      type: Microsoft.ServiceBus.TokenProvider
      description: The <xref href="Microsoft.ServiceBus.TokenProvider" data-throw-if-not-resolved="false"></xref> for returning OAuth token.
  overload: Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider*
  nameWithType.vb: TokenProvider.CreateOAuthTokenProvider(IEnumerable(Of Uri), NetworkCredential)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider(System.Collections.Generic.IEnumerable(Of System.Uri), System.Net.NetworkCredential)
  name.vb: CreateOAuthTokenProvider(IEnumerable(Of Uri), NetworkCredential)
- uid: Microsoft.ServiceBus.TokenProvider.BeginGetToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.TokenProvider.BeginGetToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: BeginGetToken(String, String, Boolean, TimeSpan, AsyncCallback, Object)
  nameWithType: TokenProvider.BeginGetToken(String, String, Boolean, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.TokenProvider.BeginGetToken(System.String, System.String, System.Boolean, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: BeginGetToken
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 442
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Begins an asynchronous operation to get a security token.
  example: []
  syntax:
    content: public IAsyncResult BeginGetToken(string appliesTo, string action, bool bypassCache, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Public Function BeginGetToken(appliesTo As String, action As String, bypassCache As Boolean, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: appliesTo
      type: System.String
      description: The URI which the access token applies to.
    - id: action
      type: System.String
      description: The request action.
    - id: bypassCache
      type: System.Boolean
      description: true to ignore existing token information in the cache; false to use the token information in the cache.
    - id: timeout
      type: System.TimeSpan
      description: The time span that specifies the timeout value for the message that gets the security token.
    - id: callback
      type: System.AsyncCallback
      description: "An \n<xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that references the method to invoke when the operation is complete."
    - id: state
      type: System.Object
      description: 'A user-defined object that contains state information about the asynchronous operation. '
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous operation to get a token.
  overload: Microsoft.ServiceBus.TokenProvider.BeginGetToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TokenProvider.BeginGetWebToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.TokenProvider.BeginGetWebToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetWebToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: BeginGetWebToken(String, String, Boolean, TimeSpan, AsyncCallback, Object)
  nameWithType: TokenProvider.BeginGetWebToken(String, String, Boolean, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.TokenProvider.BeginGetWebToken(System.String, System.String, System.Boolean, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: BeginGetWebToken
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 482
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Begins an asynchronous operation to get a web token.
  example: []
  syntax:
    content: public IAsyncResult BeginGetWebToken(string appliesTo, string action, bool bypassCache, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Public Function BeginGetWebToken(appliesTo As String, action As String, bypassCache As Boolean, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: appliesTo
      type: System.String
      description: The URI which the token applies to.
    - id: action
      type: System.String
      description: The request action.
    - id: bypassCache
      type: System.Boolean
      description: true to ignore existing token information in the cache; false to use the token information in the cache.
    - id: timeout
      type: System.TimeSpan
      description: The time span that specifies the timeout value for the message that gets the security token.
    - id: callback
      type: System.AsyncCallback
      description: "An \n<xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that references the method to invoke when the operation is complete."
    - id: state
      type: System.Object
      description: 'A user-defined object that contains state information about the asynchronous operation. '
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous operation to get a web token.
  overload: Microsoft.ServiceBus.TokenProvider.BeginGetWebToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TokenProvider.EndGetToken(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.TokenProvider.EndGetToken(System.IAsyncResult)
  id: EndGetToken(System.IAsyncResult)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: EndGetToken(IAsyncResult)
  nameWithType: TokenProvider.EndGetToken(IAsyncResult)
  fullName: Microsoft.ServiceBus.TokenProvider.EndGetToken(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EndGetToken
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 520
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Completes an asynchronous operation to get a security token.
  example: []
  syntax:
    content: public SecurityToken EndGetToken(IAsyncResult result)
    content.vb: Public Function EndGetToken(result As IAsyncResult) As SecurityToken
    parameters:
    - id: result
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous operation to get a token.
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: The <xref href="System.IdentityModel.Tokens.SecurityToken" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.TokenProvider.EndGetToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TokenProvider.GetTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.TokenProvider.GetTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)
  id: GetTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: GetTokenAsync(String, String, Boolean, TimeSpan)
  nameWithType: TokenProvider.GetTokenAsync(String, String, Boolean, TimeSpan)
  fullName: Microsoft.ServiceBus.TokenProvider.GetTokenAsync(System.String, System.String, System.Boolean, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: GetTokenAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 531
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Asynchronously retrieves the token for the provider.
  example: []
  syntax:
    content: public Task<SecurityToken> GetTokenAsync(string appliesTo, string action, bool bypassCache, TimeSpan timeout)
    content.vb: Public Function GetTokenAsync(appliesTo As String, action As String, bypassCache As Boolean, timeout As TimeSpan) As Task(Of SecurityToken)
    parameters:
    - id: appliesTo
      type: System.String
      description: The URI which the access token applies to.
    - id: action
      type: System.String
      description: The request action.
    - id: bypassCache
      type: System.Boolean
      description: true to ignore existing token information in the cache; false to use the token information in the cache.
    - id: timeout
      type: System.TimeSpan
      description: The time span that specifies the timeout value for the message that gets the security token.
    return:
      type: System.Threading.Tasks.Task{System.IdentityModel.Tokens.SecurityToken}
      description: The result of the asynchronous operation.
  overload: Microsoft.ServiceBus.TokenProvider.GetTokenAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TokenProvider.GetWebTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.TokenProvider.GetWebTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)
  id: GetWebTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: GetWebTokenAsync(String, String, Boolean, TimeSpan)
  nameWithType: TokenProvider.GetWebTokenAsync(String, String, Boolean, TimeSpan)
  fullName: Microsoft.ServiceBus.TokenProvider.GetWebTokenAsync(System.String, System.String, System.Boolean, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: GetWebTokenAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 545
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Asynchronously retrieves the web token for the provider.
  example: []
  syntax:
    content: public Task<string> GetWebTokenAsync(string appliesTo, string action, bool bypassCache, TimeSpan timeout)
    content.vb: Public Function GetWebTokenAsync(appliesTo As String, action As String, bypassCache As Boolean, timeout As TimeSpan) As Task(Of String)
    parameters:
    - id: appliesTo
      type: System.String
      description: The URI which the access token applies to.
    - id: action
      type: System.String
      description: The request action.
    - id: bypassCache
      type: System.Boolean
      description: true to ignore existing token information in the cache; false to use the token information in the cache.
    - id: timeout
      type: System.TimeSpan
      description: The time span that specifies the timeout value for the message that gets the security token.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The result of the asynchronous operation.
  overload: Microsoft.ServiceBus.TokenProvider.GetWebTokenAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TokenProvider.EndGetWebToken(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.TokenProvider.EndGetWebToken(System.IAsyncResult)
  id: EndGetWebToken(System.IAsyncResult)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: EndGetWebToken(IAsyncResult)
  nameWithType: TokenProvider.EndGetWebToken(IAsyncResult)
  fullName: Microsoft.ServiceBus.TokenProvider.EndGetWebToken(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EndGetWebToken
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 556
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Completes an asynchronous operation to get a web token.
  example: []
  syntax:
    content: public string EndGetWebToken(IAsyncResult result)
    content.vb: Public Function EndGetWebToken(result As IAsyncResult) As String
    parameters:
    - id: result
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous operation to get a web token.
    return:
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the web token.
  overload: Microsoft.ServiceBus.TokenProvider.EndGetWebToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.TokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.TokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: OnBeginGetToken(String, String, TimeSpan, AsyncCallback, Object)
  nameWithType: TokenProvider.OnBeginGetToken(String, String, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.TokenProvider.OnBeginGetToken(System.String, System.String, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginGetToken
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 583
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Executes upon calling the BeginGetToken method.
  example: []
  syntax:
    content: protected abstract IAsyncResult OnBeginGetToken(string appliesTo, string action, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected MustOverride Function OnBeginGetToken(appliesTo As String, action As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: appliesTo
      type: System.String
      description: The URI which the access token applies to.
    - id: action
      type: System.String
      description: The request action.
    - id: timeout
      type: System.TimeSpan
      description: The time span that specifies the timeout value for the message that gets the security token.
    - id: callback
      type: System.AsyncCallback
      description: "An \n<xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that references the method to invoke when the operation is complete."
    - id: state
      type: System.Object
      description: 'A user-defined object that contains state information about the asynchronous operation. '
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous operation to get a token.
  overload: Microsoft.ServiceBus.TokenProvider.OnBeginGetToken*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.TokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.TokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: OnBeginGetWebToken(String, String, TimeSpan, AsyncCallback, Object)
  nameWithType: TokenProvider.OnBeginGetWebToken(String, String, TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.TokenProvider.OnBeginGetWebToken(System.String, System.String, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginGetWebToken
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 593
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Executes upon calling the BeginGetWebToken method.
  example: []
  syntax:
    content: protected abstract IAsyncResult OnBeginGetWebToken(string appliesTo, string action, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected MustOverride Function OnBeginGetWebToken(appliesTo As String, action As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: appliesTo
      type: System.String
      description: The URI which the access token applies to.
    - id: action
      type: System.String
      description: The request action.
    - id: timeout
      type: System.TimeSpan
      description: The time span that specifies the timeout value for the message that gets the security token.
    - id: callback
      type: System.AsyncCallback
      description: "An \n<xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that references the method to invoke when the operation is complete."
    - id: state
      type: System.Object
      description: 'A user-defined object that contains state information about the asynchronous operation. '
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous operation to get a web token.
  overload: Microsoft.ServiceBus.TokenProvider.OnBeginGetWebToken*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.TokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)
  commentId: M:Microsoft.ServiceBus.TokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)
  id: OnEndGetToken(System.IAsyncResult,System.DateTime@)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: OnEndGetToken(IAsyncResult, out DateTime)
  nameWithType: TokenProvider.OnEndGetToken(IAsyncResult, out DateTime)
  fullName: Microsoft.ServiceBus.TokenProvider.OnEndGetToken(System.IAsyncResult, out System.DateTime)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndGetToken
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 599
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Executes upon calling the EndGetToken method.
  example: []
  syntax:
    content: protected abstract SecurityToken OnEndGetToken(IAsyncResult result, out DateTime cacheUntil)
    content.vb: Protected MustOverride Function OnEndGetToken(result As IAsyncResult, ByRef cacheUntil As Date) As SecurityToken
    parameters:
    - id: result
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous operation to get a token.
    - id: cacheUntil
      type: System.DateTime
      description: When this method returns, contains the expiration date and time of the token information in the cache.
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: The <xref href="System.IdentityModel.Tokens.SecurityToken" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.TokenProvider.OnEndGetToken*
  nameWithType.vb: TokenProvider.OnEndGetToken(IAsyncResult, ByRef DateTime)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.ServiceBus.TokenProvider.OnEndGetToken(System.IAsyncResult, ByRef System.DateTime)
  name.vb: OnEndGetToken(IAsyncResult, ByRef DateTime)
- uid: Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)
  commentId: M:Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)
  id: OnEndGetWebToken(System.IAsyncResult,System.DateTime@)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: OnEndGetWebToken(IAsyncResult, out DateTime)
  nameWithType: TokenProvider.OnEndGetWebToken(IAsyncResult, out DateTime)
  fullName: Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken(System.IAsyncResult, out System.DateTime)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndGetWebToken
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 605
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Executes upon calling the EndGetWebToken method.
  example: []
  syntax:
    content: protected abstract string OnEndGetWebToken(IAsyncResult result, out DateTime cacheUntil)
    content.vb: Protected MustOverride Function OnEndGetWebToken(result As IAsyncResult, ByRef cacheUntil As Date) As String
    parameters:
    - id: result
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> object that references the asynchronous operation to get a web token.
    - id: cacheUntil
      type: System.DateTime
      description: When this method returns, contains the expiration date and time of the token information in the cache.
    return:
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the web token.
  overload: Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken*
  nameWithType.vb: TokenProvider.OnEndGetWebToken(IAsyncResult, ByRef DateTime)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken(System.IAsyncResult, ByRef System.DateTime)
  name.vb: OnEndGetWebToken(IAsyncResult, ByRef DateTime)
- uid: Microsoft.ServiceBus.TokenProvider.BuildKey(System.String,System.String)
  commentId: M:Microsoft.ServiceBus.TokenProvider.BuildKey(System.String,System.String)
  id: BuildKey(System.String,System.String)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: BuildKey(String, String)
  nameWithType: TokenProvider.BuildKey(String, String)
  fullName: Microsoft.ServiceBus.TokenProvider.BuildKey(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: BuildKey
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 611
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Generates a key for the token provider.
  example: []
  syntax:
    content: protected virtual TokenProvider.Key BuildKey(string appliesTo, string action)
    content.vb: Protected Overridable Function BuildKey(appliesTo As String, action As String) As TokenProvider.Key
    parameters:
    - id: appliesTo
      type: System.String
      description: The URI which the access token applies to.
    - id: action
      type: System.String
      description: The request action.
    return:
      type: Microsoft.ServiceBus.TokenProvider.Key
      description: A generated key for the token provider.
  overload: Microsoft.ServiceBus.TokenProvider.BuildKey*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.TokenProvider.NormalizeAppliesTo(System.String)
  commentId: M:Microsoft.ServiceBus.TokenProvider.NormalizeAppliesTo(System.String)
  id: NormalizeAppliesTo(System.String)
  parent: Microsoft.ServiceBus.TokenProvider
  langs:
  - csharp
  - vb
  name: NormalizeAppliesTo(String)
  nameWithType: TokenProvider.NormalizeAppliesTo(String)
  fullName: Microsoft.ServiceBus.TokenProvider.NormalizeAppliesTo(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: NormalizeAppliesTo
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/Security/TokenProvider.cs
    startLine: 619
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Returns an object whose value is the same as the token provider.
  example: []
  syntax:
    content: protected virtual string NormalizeAppliesTo(string appliesTo)
    content.vb: Protected Overridable Function NormalizeAppliesTo(appliesTo As String) As String
    parameters:
    - id: appliesTo
      type: System.String
      description: The URI which the access token applies to.
    return:
      type: System.String
      description: The returned object.
  overload: Microsoft.ServiceBus.TokenProvider.NormalizeAppliesTo*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.TokenProvider
  commentId: T:Microsoft.ServiceBus.TokenProvider
  parent: Microsoft.ServiceBus
  isExternal: false
  name: TokenProvider
  nameWithType: TokenProvider
  fullName: Microsoft.ServiceBus.TokenProvider
- uid: Microsoft.ServiceBus.TokenProvider.#ctor*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.#ctor
  isExternal: false
  name: TokenProvider
  nameWithType: TokenProvider.TokenProvider
  fullName: Microsoft.ServiceBus.TokenProvider.TokenProvider
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.TokenScope
  commentId: T:Microsoft.ServiceBus.TokenScope
  parent: Microsoft.ServiceBus
  isExternal: false
  name: TokenScope
  nameWithType: TokenScope
  fullName: Microsoft.ServiceBus.TokenScope
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.TokenProvider.TokenScope*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.TokenScope
  isExternal: false
  name: TokenScope
  nameWithType: TokenProvider.TokenScope
  fullName: Microsoft.ServiceBus.TokenProvider.TokenScope
- uid: Microsoft.ServiceBus.TokenProvider.CacheTokens*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.CacheTokens
  isExternal: false
  name: CacheTokens
  nameWithType: TokenProvider.CacheTokens
  fullName: Microsoft.ServiceBus.TokenProvider.CacheTokens
- uid: Microsoft.ServiceBus.TokenProvider.CacheSize*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.CacheSize
  isExternal: false
  name: CacheSize
  nameWithType: TokenProvider.CacheSize
  fullName: Microsoft.ServiceBus.TokenProvider.CacheSize
- uid: Microsoft.ServiceBus.TokenProvider.IsWebTokenSupported*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.IsWebTokenSupported
  isExternal: false
  name: IsWebTokenSupported
  nameWithType: TokenProvider.IsWebTokenSupported
  fullName: Microsoft.ServiceBus.TokenProvider.IsWebTokenSupported
- uid: Microsoft.ServiceBus.TokenProvider.StripQueryParameters*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.StripQueryParameters
  isExternal: false
  name: StripQueryParameters
  nameWithType: TokenProvider.StripQueryParameters
  fullName: Microsoft.ServiceBus.TokenProvider.StripQueryParameters
- uid: Microsoft.ServiceBus.TokenProvider.Clear*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.Clear
  isExternal: false
  name: Clear
  nameWithType: TokenProvider.Clear
  fullName: Microsoft.ServiceBus.TokenProvider.Clear
- uid: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider
  isExternal: false
  name: CreateSamlTokenProvider
  nameWithType: TokenProvider.CreateSamlTokenProvider
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider
  isExternal: false
  name: CreateSharedAccessSignatureTokenProvider
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider
  isExternal: false
  name: CreateSharedSecretTokenProvider
  nameWithType: TokenProvider.CreateSharedSecretTokenProvider
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider
  isExternal: false
  name: CreateSimpleWebTokenProvider
  nameWithType: TokenProvider.CreateSimpleWebTokenProvider
  fullName: Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider
- uid: Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider
  isExternal: false
  name: CreateWindowsTokenProvider
  nameWithType: TokenProvider.CreateWindowsTokenProvider
  fullName: Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  commentId: T:System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  nameWithType.vb: IEnumerable(Of Uri)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Uri)
  name.vb: IEnumerable(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Net.NetworkCredential
  commentId: T:System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider
  isExternal: false
  name: CreateOAuthTokenProvider
  nameWithType: TokenProvider.CreateOAuthTokenProvider
  fullName: Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: Microsoft.ServiceBus.TokenProvider.BeginGetToken*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.BeginGetToken
  isExternal: false
  name: BeginGetToken
  nameWithType: TokenProvider.BeginGetToken
  fullName: Microsoft.ServiceBus.TokenProvider.BeginGetToken
- uid: Microsoft.ServiceBus.TokenProvider.BeginGetWebToken*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.BeginGetWebToken
  isExternal: false
  name: BeginGetWebToken
  nameWithType: TokenProvider.BeginGetWebToken
  fullName: Microsoft.ServiceBus.TokenProvider.BeginGetWebToken
- uid: System.IdentityModel.Tokens.SecurityToken
  commentId: T:System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: Microsoft.ServiceBus.TokenProvider.EndGetToken*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.EndGetToken
  isExternal: false
  name: EndGetToken
  nameWithType: TokenProvider.EndGetToken
  fullName: Microsoft.ServiceBus.TokenProvider.EndGetToken
- uid: System.IdentityModel.Tokens
  commentId: N:System.IdentityModel.Tokens
  isExternal: false
  name: System.IdentityModel.Tokens
  nameWithType: System.IdentityModel.Tokens
  fullName: System.IdentityModel.Tokens
- uid: Microsoft.ServiceBus.TokenProvider.GetTokenAsync*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.GetTokenAsync
  isExternal: false
  name: GetTokenAsync
  nameWithType: TokenProvider.GetTokenAsync
  fullName: Microsoft.ServiceBus.TokenProvider.GetTokenAsync
- uid: System.Threading.Tasks.Task{System.IdentityModel.Tokens.SecurityToken}
  commentId: T:System.Threading.Tasks.Task{System.IdentityModel.Tokens.SecurityToken}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SecurityToken>
  nameWithType: Task<SecurityToken>
  fullName: System.Threading.Tasks.Task<System.IdentityModel.Tokens.SecurityToken>
  nameWithType.vb: Task(Of SecurityToken)
  fullname.vb: System.Threading.Tasks.Task(Of System.IdentityModel.Tokens.SecurityToken)
  name.vb: Task(Of SecurityToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceBus.TokenProvider.GetWebTokenAsync*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.GetWebTokenAsync
  isExternal: false
  name: GetWebTokenAsync
  nameWithType: TokenProvider.GetWebTokenAsync
  fullName: Microsoft.ServiceBus.TokenProvider.GetWebTokenAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.TokenProvider.EndGetWebToken*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.EndGetWebToken
  isExternal: false
  name: EndGetWebToken
  nameWithType: TokenProvider.EndGetWebToken
  fullName: Microsoft.ServiceBus.TokenProvider.EndGetWebToken
- uid: Microsoft.ServiceBus.TokenProvider.OnBeginGetToken*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.OnBeginGetToken
  isExternal: false
  name: OnBeginGetToken
  nameWithType: TokenProvider.OnBeginGetToken
  fullName: Microsoft.ServiceBus.TokenProvider.OnBeginGetToken
- uid: Microsoft.ServiceBus.TokenProvider.OnBeginGetWebToken*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.OnBeginGetWebToken
  isExternal: false
  name: OnBeginGetWebToken
  nameWithType: TokenProvider.OnBeginGetWebToken
  fullName: Microsoft.ServiceBus.TokenProvider.OnBeginGetWebToken
- uid: Microsoft.ServiceBus.TokenProvider.OnEndGetToken*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.OnEndGetToken
  isExternal: false
  name: OnEndGetToken
  nameWithType: TokenProvider.OnEndGetToken
  fullName: Microsoft.ServiceBus.TokenProvider.OnEndGetToken
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken
  isExternal: false
  name: OnEndGetWebToken
  nameWithType: TokenProvider.OnEndGetWebToken
  fullName: Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken
- uid: Microsoft.ServiceBus.TokenProvider.BuildKey*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.BuildKey
  isExternal: false
  name: BuildKey
  nameWithType: TokenProvider.BuildKey
  fullName: Microsoft.ServiceBus.TokenProvider.BuildKey
- uid: Microsoft.ServiceBus.TokenProvider.Key
  commentId: T:Microsoft.ServiceBus.TokenProvider.Key
  parent: Microsoft.ServiceBus
  isExternal: false
  name: TokenProvider.Key
  nameWithType: TokenProvider.Key
  fullName: Microsoft.ServiceBus.TokenProvider.Key
- uid: Microsoft.ServiceBus.TokenProvider.NormalizeAppliesTo*
  commentId: Overload:Microsoft.ServiceBus.TokenProvider.NormalizeAppliesTo
  isExternal: false
  name: NormalizeAppliesTo
  nameWithType: TokenProvider.NormalizeAppliesTo
  fullName: Microsoft.ServiceBus.TokenProvider.NormalizeAppliesTo
