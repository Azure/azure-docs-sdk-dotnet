### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.HybridConnectionStateChangedArgs
  commentId: T:Microsoft.ServiceBus.HybridConnectionStateChangedArgs
  id: HybridConnectionStateChangedArgs
  parent: Microsoft.ServiceBus
  children:
  - Microsoft.ServiceBus.HybridConnectionStateChangedArgs.#ctor(Microsoft.ServiceBus.HybridConnectionState)
  - Microsoft.ServiceBus.HybridConnectionStateChangedArgs.ConnectionState
  langs:
  - csharp
  - vb
  name: HybridConnectionStateChangedArgs
  nameWithType: HybridConnectionStateChangedArgs
  fullName: Microsoft.ServiceBus.HybridConnectionStateChangedArgs
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/HybridConnection/IHybridConnectionStatus.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: HybridConnectionStateChangedArgs
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/HybridConnection/IHybridConnectionStatus.cs
    startLine: 23
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Represents the arguments to the hybrid connection state change.
  example: []
  syntax:
    content: 'public class HybridConnectionStateChangedArgs : EventArgs'
    content.vb: >-
      Public Class HybridConnectionStateChangedArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.HybridConnectionStateChangedArgs.#ctor(Microsoft.ServiceBus.HybridConnectionState)
  commentId: M:Microsoft.ServiceBus.HybridConnectionStateChangedArgs.#ctor(Microsoft.ServiceBus.HybridConnectionState)
  id: '#ctor(Microsoft.ServiceBus.HybridConnectionState)'
  parent: Microsoft.ServiceBus.HybridConnectionStateChangedArgs
  langs:
  - csharp
  - vb
  name: HybridConnectionStateChangedArgs(HybridConnectionState)
  nameWithType: HybridConnectionStateChangedArgs.HybridConnectionStateChangedArgs(HybridConnectionState)
  fullName: Microsoft.ServiceBus.HybridConnectionStateChangedArgs.HybridConnectionStateChangedArgs(Microsoft.ServiceBus.HybridConnectionState)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/HybridConnection/IHybridConnectionStatus.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/HybridConnection/IHybridConnectionStatus.cs
    startLine: 29
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.HybridConnectionStateChangedArgs" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public HybridConnectionStateChangedArgs(HybridConnectionState state)
    content.vb: Public Sub New(state As HybridConnectionState)
    parameters:
    - id: state
      type: Microsoft.ServiceBus.HybridConnectionState
      description: The state of the hybrid connection.
  overload: Microsoft.ServiceBus.HybridConnectionStateChangedArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.HybridConnectionStateChangedArgs.ConnectionState
  commentId: P:Microsoft.ServiceBus.HybridConnectionStateChangedArgs.ConnectionState
  id: ConnectionState
  parent: Microsoft.ServiceBus.HybridConnectionStateChangedArgs
  langs:
  - csharp
  - vb
  name: ConnectionState
  nameWithType: HybridConnectionStateChangedArgs.ConnectionState
  fullName: Microsoft.ServiceBus.HybridConnectionStateChangedArgs.ConnectionState
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/HybridConnection/IHybridConnectionStatus.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ConnectionState
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/HybridConnection/IHybridConnectionStatus.cs
    startLine: 37
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets the current connection state of the hybrid connection.
  example: []
  syntax:
    content: public HybridConnectionState ConnectionState { get; }
    content.vb: Public ReadOnly Property ConnectionState As HybridConnectionState
    parameters: []
    return:
      type: Microsoft.ServiceBus.HybridConnectionState
      description: 'Returns <xref href="Microsoft.ServiceBus.HybridConnectionState" data-throw-if-not-resolved="false"></xref>.Contains the connection state. '
  overload: Microsoft.ServiceBus.HybridConnectionStateChangedArgs.ConnectionState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.HybridConnectionStateChangedArgs
  commentId: T:Microsoft.ServiceBus.HybridConnectionStateChangedArgs
  isExternal: false
  name: HybridConnectionStateChangedArgs
  nameWithType: HybridConnectionStateChangedArgs
  fullName: Microsoft.ServiceBus.HybridConnectionStateChangedArgs
- uid: Microsoft.ServiceBus.HybridConnectionStateChangedArgs.#ctor*
  commentId: Overload:Microsoft.ServiceBus.HybridConnectionStateChangedArgs.#ctor
  isExternal: false
  name: HybridConnectionStateChangedArgs
  nameWithType: HybridConnectionStateChangedArgs.HybridConnectionStateChangedArgs
  fullName: Microsoft.ServiceBus.HybridConnectionStateChangedArgs.HybridConnectionStateChangedArgs
- uid: Microsoft.ServiceBus.HybridConnectionState
  commentId: T:Microsoft.ServiceBus.HybridConnectionState
  parent: Microsoft.ServiceBus
  isExternal: false
  name: HybridConnectionState
  nameWithType: HybridConnectionState
  fullName: Microsoft.ServiceBus.HybridConnectionState
- uid: Microsoft.ServiceBus.HybridConnectionStateChangedArgs.ConnectionState*
  commentId: Overload:Microsoft.ServiceBus.HybridConnectionStateChangedArgs.ConnectionState
  isExternal: false
  name: ConnectionState
  nameWithType: HybridConnectionStateChangedArgs.ConnectionState
  fullName: Microsoft.ServiceBus.HybridConnectionStateChangedArgs.ConnectionState
