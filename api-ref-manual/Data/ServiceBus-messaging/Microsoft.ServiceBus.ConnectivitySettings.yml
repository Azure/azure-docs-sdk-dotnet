### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.ConnectivitySettings
  commentId: T:Microsoft.ServiceBus.ConnectivitySettings
  id: ConnectivitySettings
  parent: Microsoft.ServiceBus
  children:
  - Microsoft.ServiceBus.ConnectivitySettings.#ctor
  - Microsoft.ServiceBus.ConnectivitySettings.connectivityMode
  - Microsoft.ServiceBus.ConnectivitySettings.IsReadOnly
  - Microsoft.ServiceBus.ConnectivitySettings.Mode
  langs:
  - csharp
  - vb
  name: ConnectivitySettings
  nameWithType: ConnectivitySettings
  fullName: Microsoft.ServiceBus.ConnectivitySettings
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Description/ConnectivitySettings.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ConnectivitySettings
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Description/ConnectivitySettings.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Holds the connectivity settings effective for all Azure Service \nBus-based endpoints that are active in the current application domain. "
  example: []
  syntax:
    content: public class ConnectivitySettings
    content.vb: Public Class ConnectivitySettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.ConnectivitySettings.connectivityMode
  commentId: F:Microsoft.ServiceBus.ConnectivitySettings.connectivityMode
  id: connectivityMode
  parent: Microsoft.ServiceBus.ConnectivitySettings
  langs:
  - csharp
  - vb
  name: connectivityMode
  nameWithType: ConnectivitySettings.connectivityMode
  fullName: Microsoft.ServiceBus.ConnectivitySettings.connectivityMode
  type: Field
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Description/ConnectivitySettings.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: connectivityMode
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Description/ConnectivitySettings.cs
    startLine: 31
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Contains the<xref href="Microsoft.ServiceBus.ConnectivityMode" data-throw-if-not-resolved="false"></xref> for the current instance. '
  example: []
  syntax:
    content: protected ConnectivityMode connectivityMode
    content.vb: Protected connectivityMode As ConnectivityMode
    return:
      type: Microsoft.ServiceBus.ConnectivityMode
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceBus.ConnectivitySettings.#ctor
  commentId: M:Microsoft.ServiceBus.ConnectivitySettings.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.ConnectivitySettings
  langs:
  - csharp
  - vb
  name: ConnectivitySettings()
  nameWithType: ConnectivitySettings.ConnectivitySettings()
  fullName: Microsoft.ServiceBus.ConnectivitySettings.ConnectivitySettings()
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Description/ConnectivitySettings.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Description/ConnectivitySettings.cs
    startLine: 34
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Initializes a new instance of the <xref href="Microsoft.ServiceBus.ConnectivitySettings" data-throw-if-not-resolved="false"></xref> class. '
  example: []
  syntax:
    content: public ConnectivitySettings()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.ConnectivitySettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.ConnectivitySettings.Mode
  commentId: P:Microsoft.ServiceBus.ConnectivitySettings.Mode
  id: Mode
  parent: Microsoft.ServiceBus.ConnectivitySettings
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: ConnectivitySettings.Mode
  fullName: Microsoft.ServiceBus.ConnectivitySettings.Mode
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Description/ConnectivitySettings.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Mode
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Description/ConnectivitySettings.cs
    startLine: 40
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Gets or sets the connectivity mode for the current application domain. '
  example: []
  syntax:
    content: public ConnectivityMode Mode { get; set; }
    content.vb: Public Property Mode As ConnectivityMode
    parameters: []
    return:
      type: Microsoft.ServiceBus.ConnectivityMode
      description: 'Returns <xref href="Microsoft.ServiceBus.ConnectivityMode" data-throw-if-not-resolved="false"></xref>.Contains the connectivity mode. '
  overload: Microsoft.ServiceBus.ConnectivitySettings.Mode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.ConnectivitySettings.IsReadOnly
  commentId: P:Microsoft.ServiceBus.ConnectivitySettings.IsReadOnly
  id: IsReadOnly
  parent: Microsoft.ServiceBus.ConnectivitySettings
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ConnectivitySettings.IsReadOnly
  fullName: Microsoft.ServiceBus.ConnectivitySettings.IsReadOnly
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Description/ConnectivitySettings.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IsReadOnly
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Description/ConnectivitySettings.cs
    startLine: 60
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Gets a value that determines if the connectivity settings are read-only. '
  example: []
  syntax:
    content: protected virtual bool IsReadOnly { get; }
    content.vb: Protected Overridable ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the connectivity settings are read-only; otherwise, false.
  overload: Microsoft.ServiceBus.ConnectivitySettings.IsReadOnly*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.ConnectivityMode
  commentId: T:Microsoft.ServiceBus.ConnectivityMode
  parent: Microsoft.ServiceBus
  isExternal: false
  name: ConnectivityMode
  nameWithType: ConnectivityMode
  fullName: Microsoft.ServiceBus.ConnectivityMode
- uid: Microsoft.ServiceBus.ConnectivitySettings
  commentId: T:Microsoft.ServiceBus.ConnectivitySettings
  parent: Microsoft.ServiceBus
  isExternal: false
  name: ConnectivitySettings
  nameWithType: ConnectivitySettings
  fullName: Microsoft.ServiceBus.ConnectivitySettings
- uid: Microsoft.ServiceBus.ConnectivitySettings.#ctor*
  commentId: Overload:Microsoft.ServiceBus.ConnectivitySettings.#ctor
  isExternal: false
  name: ConnectivitySettings
  nameWithType: ConnectivitySettings.ConnectivitySettings
  fullName: Microsoft.ServiceBus.ConnectivitySettings.ConnectivitySettings
- uid: Microsoft.ServiceBus.ConnectivitySettings.Mode*
  commentId: Overload:Microsoft.ServiceBus.ConnectivitySettings.Mode
  isExternal: false
  name: Mode
  nameWithType: ConnectivitySettings.Mode
  fullName: Microsoft.ServiceBus.ConnectivitySettings.Mode
- uid: Microsoft.ServiceBus.ConnectivitySettings.IsReadOnly*
  commentId: Overload:Microsoft.ServiceBus.ConnectivitySettings.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: ConnectivitySettings.IsReadOnly
  fullName: Microsoft.ServiceBus.ConnectivitySettings.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
