### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  commentId: T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  id: NetTcpRelayBindingElement
  parent: Microsoft.ServiceBus.Configuration
  children:
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor(System.String)
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.BindingElementType
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ConnectionMode
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.IsDynamic
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ListenBacklog
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferPoolSize
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferSize
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxConnections
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxReceivedMessageSize
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Properties
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReaderQuotas
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReliableSession
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Security
  - Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode
  langs:
  - csharp
  - vb
  name: NetTcpRelayBindingElement
  nameWithType: NetTcpRelayBindingElement
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: NetTcpRelayBindingElement
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "A configuration element that describes a secure, reliable binding \nsuitable for cross-machine communication through the Azure Service Bus relay."
  example: []
  syntax:
    content: 'public class NetTcpRelayBindingElement : StandardBindingElement, IBindingConfigurationElement, IConfigurationContextProviderInternal'
    content.vb: >-
      Public Class NetTcpRelayBindingElement
          Inherits StandardBindingElement
          Implements IBindingConfigurationElement, IConfigurationContextProviderInternal
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.StandardBindingElement
  implements:
  - System.ServiceModel.Configuration.IBindingConfigurationElement
  inheritedMembers:
  - System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.StandardBindingElement.Name
  - System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.SendTimeout
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,{T})
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor(System.String)
  commentId: M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: NetTcpRelayBindingElement(String)
  nameWithType: NetTcpRelayBindingElement.NetTcpRelayBindingElement(String)
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.NetTcpRelayBindingElement(System.String)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 22
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement\" data-throw-if-not-resolved=\"false\"></xref> class with a specified configuration name."
  example: []
  syntax:
    content: public NetTcpRelayBindingElement(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: The binding configuration name.
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor
  commentId: M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: NetTcpRelayBindingElement()
  nameWithType: NetTcpRelayBindingElement.NetTcpRelayBindingElement()
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.NetTcpRelayBindingElement()
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public NetTcpRelayBindingElement()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.BindingElementType
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.BindingElementType
  id: BindingElementType
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: BindingElementType
  nameWithType: NetTcpRelayBindingElement.BindingElementType
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.BindingElementType
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: BindingElementType
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 35
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Gets the type of this configuration element. (Overrides StandardBindingElement.BindingElementType.)
  example: []
  syntax:
    content: protected override Type BindingElementType { get; }
    content.vb: Protected Overrides ReadOnly Property BindingElementType As Type
    parameters: []
    return:
      type: System.Type
      description: Returns a <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that contains the configuration element type.
  overridden: System.ServiceModel.Configuration.StandardBindingElement.BindingElementType
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.BindingElementType*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ConnectionMode
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ConnectionMode
  id: ConnectionMode
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: ConnectionMode
  nameWithType: NetTcpRelayBindingElement.ConnectionMode
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ConnectionMode
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ConnectionMode
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 42
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Gets or sets the connection mode stored in the App.config file for this configuration.
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("connectionMode", DefaultValue = TcpRelayConnectionMode.Relayed)]

      public TcpRelayConnectionMode ConnectionMode { get; set; }
    content.vb: >-
      <ConfigurationProperty("connectionMode", DefaultValue:=TcpRelayConnectionMode.Relayed)>

      Public Property ConnectionMode As TcpRelayConnectionMode
    parameters: []
    return:
      type: Microsoft.ServiceBus.TcpRelayConnectionMode
      description: Returns a <xref href="Microsoft.ServiceBus.TcpRelayConnectionMode" data-throw-if-not-resolved="false"></xref> that contains the connection mode The default is Relayed.
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ConnectionMode*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: connectionMode
    namedArguments:
    - name: DefaultValue
      type: Microsoft.ServiceBus.TcpRelayConnectionMode
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode
  id: TransferMode
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: TransferMode
  nameWithType: NetTcpRelayBindingElement.TransferMode
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: TransferMode
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 54
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Gets or sets a value from the App.config file that \nspecifies whether messages are buffered or streamed or a request or response."
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("transferMode", DefaultValue = TransferMode.Buffered)]

      public TransferMode TransferMode { get; set; }
    content.vb: >-
      <ConfigurationProperty("transferMode", DefaultValue:=TransferMode.Buffered)>

      Public Property TransferMode As TransferMode
    parameters: []
    return:
      type: System.ServiceModel.TransferMode
      description: "Returns a \n<xref href=\"System.ServiceModel.TransferMode\" data-throw-if-not-resolved=\"false\"></xref> that contains indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. The possible values are as follows: BufferedStreamedStreamedRequestStreamedResponseThe default value is Buffered.Specifying \n<xref href=\"Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode\" data-throw-if-not-resolved=\"false\"></xref> to Streamed implies both StreamedRequest and StreamedResponse."
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: transferMode
    namedArguments:
    - name: DefaultValue
      type: System.ServiceModel.TransferMode
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ListenBacklog
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ListenBacklog
  id: ListenBacklog
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: ListenBacklog
  nameWithType: NetTcpRelayBindingElement.ListenBacklog
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ListenBacklog
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ListenBacklog
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 65
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Gets or sets a value in the App.config file that specifies the \nmaximum number of channels that can wait to be accepted on the listener."
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("listenBacklog", DefaultValue = 10)]

      [IntegerValidator(MinValue = 1)]

      public int ListenBacklog { get; set; }
    content.vb: >-
      <ConfigurationProperty("listenBacklog", DefaultValue:=10)>

      <IntegerValidator(MinValue:=1)>

      Public Property ListenBacklog As Integer
    parameters: []
    return:
      type: System.Int32
      description: Returns the maximum number of queued connection requests that can be pending. The default is 10.
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ListenBacklog*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: listenBacklog
    namedArguments:
    - name: DefaultValue
      type: System.Int32
      value: 10
  - type: System.Configuration.IntegerValidatorAttribute
    ctor: System.Configuration.IntegerValidatorAttribute.#ctor
    arguments: []
    namedArguments:
    - name: MinValue
      type: System.Int32
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferPoolSize
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: MaxBufferPoolSize
  nameWithType: NetTcpRelayBindingElement.MaxBufferPoolSize
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferPoolSize
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MaxBufferPoolSize
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 77
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Gets or sets a value from the App.config file that contains the \nmaximum size for a buffer pool that stores TCP messages processed by the binding."
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("maxBufferPoolSize", DefaultValue = 524288L)]

      [LongValidator(MinValue = 0L)]

      public long MaxBufferPoolSize { get; set; }
    content.vb: >-
      <ConfigurationProperty("maxBufferPoolSize", DefaultValue:=524288L)>

      <LongValidator(MinValue:=0L)>

      Public Property MaxBufferPoolSize As Long
    parameters: []
    return:
      type: System.Int64
      description: "Returns the maximum size allowed for a buffer pool that \nstores messages processed by the binding. The default value is 65,536 bytes."
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferPoolSize*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxBufferPoolSize
    namedArguments:
    - name: DefaultValue
      type: System.Int64
      value: "524288"
  - type: System.Configuration.LongValidatorAttribute
    ctor: System.Configuration.LongValidatorAttribute.#ctor
    arguments: []
    namedArguments:
    - name: MinValue
      type: System.Int64
      value: "0"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferSize
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferSize
  id: MaxBufferSize
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: MaxBufferSize
  nameWithType: NetTcpRelayBindingElement.MaxBufferSize
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferSize
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MaxBufferSize
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 88
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Gets or sets a value from the App.config file that specifies the \nmaximum size, in bytes, of the buffer used to store messages in memory."
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("maxBufferSize", DefaultValue = 65536)]

      [IntegerValidator(MinValue = 1)]

      public int MaxBufferSize { get; set; }
    content.vb: >-
      <ConfigurationProperty("maxBufferSize", DefaultValue:=65536)>

      <IntegerValidator(MinValue:=1)>

      Public Property MaxBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The maximum size, in bytes, of the buffer used to store messages in memory.
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferSize*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxBufferSize
    namedArguments:
    - name: DefaultValue
      type: System.Int32
      value: 65536
  - type: System.Configuration.IntegerValidatorAttribute
    ctor: System.Configuration.IntegerValidatorAttribute.#ctor
    arguments: []
    namedArguments:
    - name: MinValue
      type: System.Int32
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxConnections
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxConnections
  id: MaxConnections
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: MaxConnections
  nameWithType: NetTcpRelayBindingElement.MaxConnections
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxConnections
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MaxConnections
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 100
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Gets or sets a value from the App.config file that specifies the \nmaximum number of outbound and inbound connections the service creates and accepts respectively."
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("maxConnections", DefaultValue = 10)]

      [IntegerValidator(MinValue = 1)]

      public int MaxConnections { get; set; }
    content.vb: >-
      <ConfigurationProperty("maxConnections", DefaultValue:=10)>

      <IntegerValidator(MinValue:=1)>

      Public Property MaxConnections As Integer
    parameters: []
    return:
      type: System.Int32
      description: "On the client, returns the maximum number of connections to be pooled for subsequent \nreuse; on the server, returns the maximum number of connections allowed to be pending dispatch."
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxConnections*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxConnections
    namedArguments:
    - name: DefaultValue
      type: System.Int32
      value: 10
  - type: System.Configuration.IntegerValidatorAttribute
    ctor: System.Configuration.IntegerValidatorAttribute.#ctor
    arguments: []
    namedArguments:
    - name: MinValue
      type: System.Int32
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxReceivedMessageSize
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: MaxReceivedMessageSize
  nameWithType: NetTcpRelayBindingElement.MaxReceivedMessageSize
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxReceivedMessageSize
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MaxReceivedMessageSize
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 111
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Gets or sets a value from the App.config file that contains the maximum \nsize of a message that can be received on a channel configured with this binding."
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("maxReceivedMessageSize", DefaultValue = 65536L)]

      [LongValidator(MinValue = 1L)]

      public long MaxReceivedMessageSize { get; set; }
    content.vb: >-
      <ConfigurationProperty("maxReceivedMessageSize", DefaultValue:=65536L)>

      <LongValidator(MinValue:=1L)>

      Public Property MaxReceivedMessageSize As Long
    parameters: []
    return:
      type: System.Int64
      description: Returns maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxReceivedMessageSize*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxReceivedMessageSize
    namedArguments:
    - name: DefaultValue
      type: System.Int64
      value: "65536"
  - type: System.Configuration.LongValidatorAttribute
    ctor: System.Configuration.LongValidatorAttribute.#ctor
    arguments: []
    namedArguments:
    - name: MinValue
      type: System.Int64
      value: "1"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReaderQuotas
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReaderQuotas
  id: ReaderQuotas
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: ReaderQuotas
  nameWithType: NetTcpRelayBindingElement.ReaderQuotas
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReaderQuotas
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ReaderQuotas
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 123
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Gets a value from the App.config file that puts constraints on the \ncomplexity of SOAP messages that can be processed by endpoints configured with this binding."
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("readerQuotas")]

      public XmlDictionaryReaderQuotasElement ReaderQuotas { get; }
    content.vb: >-
      <ConfigurationProperty("readerQuotas")>

      Public ReadOnly Property ReaderQuotas As XmlDictionaryReaderQuotasElement
    parameters: []
    return:
      type: Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement
      description: "Returns a \n<xref href=\"Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement\" data-throw-if-not-resolved=\"false\"></xref> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section."
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReaderQuotas*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: readerQuotas
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReliableSession
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReliableSession
  id: ReliableSession
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: ReliableSession
  nameWithType: NetTcpRelayBindingElement.ReliableSession
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReliableSession
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ReliableSession
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 132
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Gets a configuration element that specifies whether reliable sessions are established between channel endpoints.
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("reliableSession")]

      public StandardBindingOptionalReliableSessionElement ReliableSession { get; }
    content.vb: >-
      <ConfigurationProperty("reliableSession")>

      Public ReadOnly Property ReliableSession As StandardBindingOptionalReliableSessionElement
    parameters: []
    return:
      type: System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement
      description: "Returns a \n<xref href=\"System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement\" data-throw-if-not-resolved=\"false\"></xref> that indicates whether a WS-RM reliable session is established between channel endpoints. The default value is false."
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReliableSession*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: reliableSession
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Security
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Security
  id: Security
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: Security
  nameWithType: NetTcpRelayBindingElement.Security
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Security
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Security
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 142
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Gets a value from the App.config file that determines the type of security to be used with this binding.
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("security")]

      public NetTcpRelaySecurityElement Security { get; }
    content.vb: >-
      <ConfigurationProperty("security")>

      Public ReadOnly Property Security As NetTcpRelaySecurityElement
    parameters: []
    return:
      type: Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement
      description: "Returns a \n<xref href=\"Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement\" data-throw-if-not-resolved=\"false\"></xref> that contains the security settings for the associated binding. The default value is none.The \n<xref href=\"Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement\" data-throw-if-not-resolved=\"false\"></xref> you retrieve from the associated binding is created indirectly with a NetTcpRelayBinding. As such, after the binding is created, you cannot replace this object with a new object unless you also create a new binding. However, many members of WebHttpRelaySecurity can be set through security property. For more information on binding security, see the Security and Protection section. Along with the type of transport and encoding, the Security settings represent one of the three main properties that define this binding."
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Security*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: security
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.IsDynamic
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.IsDynamic
  id: IsDynamic
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: IsDynamic
  nameWithType: NetTcpRelayBindingElement.IsDynamic
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.IsDynamic
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IsDynamic
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 150
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Gets or sets whether the relay binding is dynamic.
  example: []
  syntax:
    content: >-
      [ConfigurationProperty("isDynamic", DefaultValue = true)]

      public bool IsDynamic { get; set; }
    content.vb: >-
      <ConfigurationProperty("isDynamic", DefaultValue:=True)>

      Public Property IsDynamic As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the relay binding is dynamic; otherwise, false.
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.IsDynamic*
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
    ctor: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isDynamic
    namedArguments:
    - name: DefaultValue
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  commentId: M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  id: InitializeFrom(System.ServiceModel.Channels.Binding)
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: InitializeFrom(Binding)
  nameWithType: NetTcpRelayBindingElement.InitializeFrom(Binding)
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: InitializeFrom
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 159
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Initializes the contents of this binding configuration element from the property values of a specified binding.
  example: []
  syntax:
    content: protected override void InitializeFrom(Binding binding)
    content.vb: Protected Overrides Sub InitializeFrom(binding As Binding)
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: The binding to initialize from.
  overridden: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.InitializeFrom*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  commentId: M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  id: OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: OnApplyConfiguration(Binding)
  nameWithType: NetTcpRelayBindingElement.OnApplyConfiguration(Binding)
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnApplyConfiguration
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 179
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: Applies the settings of this configuration element to the specified binding element.
  example: []
  syntax:
    content: protected override void OnApplyConfiguration(Binding binding)
    content.vb: Protected Overrides Sub OnApplyConfiguration(binding As Binding)
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: The binding to update the settings of.
  overridden: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.OnApplyConfiguration*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Properties
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Properties
  id: Properties
  parent: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: NetTcpRelayBindingElement.Properties
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Properties
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Properties
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Configuration/NetTcpRelayBindingElement.cs
    startLine: 204
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Configuration
  summary: "Gets a ConfigurationPropertyCollection instance that contains a collection of ConfigurationProperty objects \nthat can be attributes or ConfigurationElement objects of this configuration element. (Overrides StandardBindingElement.Properties.)"
  example: []
  syntax:
    content: protected override ConfigurationPropertyCollection Properties { get; }
    content.vb: Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection
    parameters: []
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A collection of ConfigurationProperty objects that can \nbe attributes or ConfigurationElement objects of this configuration element."
  overridden: System.ServiceModel.Configuration.StandardBindingElement.Properties
  overload: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Properties*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
references:
- uid: Microsoft.ServiceBus.Configuration
  commentId: N:Microsoft.ServiceBus.Configuration
  isExternal: false
  name: Microsoft.ServiceBus.Configuration
  nameWithType: Microsoft.ServiceBus.Configuration
  fullName: Microsoft.ServiceBus.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ConfigurationElement
  commentId: T:System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: true
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement
  commentId: T:System.ServiceModel.Configuration.ServiceModelConfigurationElement
  parent: System.ServiceModel.Configuration
  isExternal: true
  name: ServiceModelConfigurationElement
  nameWithType: ServiceModelConfigurationElement
  fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement
- uid: System.ServiceModel.Configuration.StandardBindingElement
  commentId: T:System.ServiceModel.Configuration.StandardBindingElement
  parent: System.ServiceModel.Configuration
  isExternal: true
  name: StandardBindingElement
  nameWithType: StandardBindingElement
  fullName: System.ServiceModel.Configuration.StandardBindingElement
- uid: System.ServiceModel.Configuration.IBindingConfigurationElement
  commentId: T:System.ServiceModel.Configuration.IBindingConfigurationElement
  parent: System.ServiceModel.Configuration
  isExternal: true
  name: IBindingConfigurationElement
  nameWithType: IBindingConfigurationElement
  fullName: System.ServiceModel.Configuration.IBindingConfigurationElement
- uid: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
  commentId: M:System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: ApplyConfiguration(Binding)
  nameWithType: StandardBindingElement.ApplyConfiguration(Binding)
  fullName: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
  spec.csharp:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
    name: ApplyConfiguration
    nameWithType: StandardBindingElement.ApplyConfiguration
    fullName: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
    name: ApplyConfiguration
    nameWithType: StandardBindingElement.ApplyConfiguration
    fullName: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
  commentId: M:System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: Reset(ConfigurationElement)
  nameWithType: StandardBindingElement.Reset(ConfigurationElement)
  fullName: System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
  spec.csharp:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
    name: Reset
    nameWithType: StandardBindingElement.Reset
    fullName: System.ServiceModel.Configuration.StandardBindingElement.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: System.Configuration.ConfigurationElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
    name: Reset
    nameWithType: StandardBindingElement.Reset
    fullName: System.ServiceModel.Configuration.StandardBindingElement.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: System.Configuration.ConfigurationElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Configuration.StandardBindingElement.Name
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.Name
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: Name
  nameWithType: StandardBindingElement.Name
  fullName: System.ServiceModel.Configuration.StandardBindingElement.Name
- uid: System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: CloseTimeout
  nameWithType: StandardBindingElement.CloseTimeout
  fullName: System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout
- uid: System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: OpenTimeout
  nameWithType: StandardBindingElement.OpenTimeout
  fullName: System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout
- uid: System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: ReceiveTimeout
  nameWithType: StandardBindingElement.ReceiveTimeout
  fullName: System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout
- uid: System.ServiceModel.Configuration.StandardBindingElement.SendTimeout
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.SendTimeout
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: SendTimeout
  nameWithType: StandardBindingElement.SendTimeout
  fullName: System.ServiceModel.Configuration.StandardBindingElement.SendTimeout
- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,{T})
  commentId: M:System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  parent: System.ServiceModel.Configuration.ServiceModelConfigurationElement
  definition: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  name: SetPropertyValueIfNotDefaultValue<T>(String, T)
  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)
  fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(System.String, T)
  nameWithType.vb: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  fullname.vb: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(System.String, T)
  name.vb: SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  spec.csharp:
  - uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue<T>
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue(Of T)
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.Init
  commentId: M:System.Configuration.ConfigurationElement.Init
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: Init()
  nameWithType: ConfigurationElement.Init()
  fullName: System.Configuration.ConfigurationElement.Init()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.Init
    name: Init
    nameWithType: ConfigurationElement.Init
    fullName: System.Configuration.ConfigurationElement.Init
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.Init
    name: Init
    nameWithType: ConfigurationElement.Init
    fullName: System.Configuration.ConfigurationElement.Init
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.IsModified
  commentId: M:System.Configuration.ConfigurationElement.IsModified
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: IsModified()
  nameWithType: ConfigurationElement.IsModified()
  fullName: System.Configuration.ConfigurationElement.IsModified()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.IsModified
    name: IsModified
    nameWithType: ConfigurationElement.IsModified
    fullName: System.Configuration.ConfigurationElement.IsModified
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.IsModified
    name: IsModified
    nameWithType: ConfigurationElement.IsModified
    fullName: System.Configuration.ConfigurationElement.IsModified
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.ResetModified
  commentId: M:System.Configuration.ConfigurationElement.ResetModified
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: ResetModified()
  nameWithType: ConfigurationElement.ResetModified()
  fullName: System.Configuration.ConfigurationElement.ResetModified()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.ResetModified
    name: ResetModified
    nameWithType: ConfigurationElement.ResetModified
    fullName: System.Configuration.ConfigurationElement.ResetModified
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.ResetModified
    name: ResetModified
    nameWithType: ConfigurationElement.ResetModified
    fullName: System.Configuration.ConfigurationElement.ResetModified
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.IsReadOnly
  commentId: M:System.Configuration.ConfigurationElement.IsReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: IsReadOnly()
  nameWithType: ConfigurationElement.IsReadOnly()
  fullName: System.Configuration.ConfigurationElement.IsReadOnly()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.IsReadOnly
    name: IsReadOnly
    nameWithType: ConfigurationElement.IsReadOnly
    fullName: System.Configuration.ConfigurationElement.IsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.IsReadOnly
    name: IsReadOnly
    nameWithType: ConfigurationElement.IsReadOnly
    fullName: System.Configuration.ConfigurationElement.IsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.SetReadOnly
  commentId: M:System.Configuration.ConfigurationElement.SetReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: SetReadOnly()
  nameWithType: ConfigurationElement.SetReadOnly()
  fullName: System.Configuration.ConfigurationElement.SetReadOnly()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.SetReadOnly
    name: SetReadOnly
    nameWithType: ConfigurationElement.SetReadOnly
    fullName: System.Configuration.ConfigurationElement.SetReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.SetReadOnly
    name: SetReadOnly
    nameWithType: ConfigurationElement.SetReadOnly
    fullName: System.Configuration.ConfigurationElement.SetReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  commentId: M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: ListErrors(IList)
  nameWithType: ConfigurationElement.ListErrors(IList)
  fullName: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
    name: ListErrors
    nameWithType: ConfigurationElement.ListErrors
    fullName: System.Configuration.ConfigurationElement.ListErrors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IList
    name: IList
    nameWithType: IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
    name: ListErrors
    nameWithType: ConfigurationElement.ListErrors
    fullName: System.Configuration.ConfigurationElement.ListErrors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IList
    name: IList
    nameWithType: IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.InitializeDefault
  commentId: M:System.Configuration.ConfigurationElement.InitializeDefault
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: InitializeDefault()
  nameWithType: ConfigurationElement.InitializeDefault()
  fullName: System.Configuration.ConfigurationElement.InitializeDefault()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.InitializeDefault
    name: InitializeDefault
    nameWithType: ConfigurationElement.InitializeDefault
    fullName: System.Configuration.ConfigurationElement.InitializeDefault
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.InitializeDefault
    name: InitializeDefault
    nameWithType: ConfigurationElement.InitializeDefault
    fullName: System.Configuration.ConfigurationElement.InitializeDefault
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.Equals(System.Object)
  commentId: M:System.Configuration.ConfigurationElement.Equals(System.Object)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: Equals(Object)
  nameWithType: ConfigurationElement.Equals(Object)
  fullName: System.Configuration.ConfigurationElement.Equals(System.Object)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.Equals(System.Object)
    name: Equals
    nameWithType: ConfigurationElement.Equals
    fullName: System.Configuration.ConfigurationElement.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.Equals(System.Object)
    name: Equals
    nameWithType: ConfigurationElement.Equals
    fullName: System.Configuration.ConfigurationElement.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.GetHashCode
  commentId: M:System.Configuration.ConfigurationElement.GetHashCode
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: GetHashCode()
  nameWithType: ConfigurationElement.GetHashCode()
  fullName: System.Configuration.ConfigurationElement.GetHashCode()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.GetHashCode
    name: GetHashCode
    nameWithType: ConfigurationElement.GetHashCode
    fullName: System.Configuration.ConfigurationElement.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.GetHashCode
    name: GetHashCode
    nameWithType: ConfigurationElement.GetHashCode
    fullName: System.Configuration.ConfigurationElement.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  commentId: M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)
  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)
  fullName: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty, System.Object, System.Boolean)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
    name: SetPropertyValue
    nameWithType: ConfigurationElement.SetPropertyValue
    fullName: System.Configuration.ConfigurationElement.SetPropertyValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationProperty
    name: ConfigurationProperty
    nameWithType: ConfigurationProperty
    fullName: System.Configuration.ConfigurationProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
    name: SetPropertyValue
    nameWithType: ConfigurationElement.SetPropertyValue
    fullName: System.Configuration.ConfigurationElement.SetPropertyValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationProperty
    name: ConfigurationProperty
    nameWithType: ConfigurationProperty
    fullName: System.Configuration.ConfigurationProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  commentId: M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)
  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement, System.Configuration.ConfigurationElement, System.Configuration.ConfigurationSaveMode)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
    name: Unmerge
    nameWithType: ConfigurationElement.Unmerge
    fullName: System.Configuration.ConfigurationElement.Unmerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: System.Configuration.ConfigurationElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: System.Configuration.ConfigurationElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Configuration.ConfigurationSaveMode
    name: ConfigurationSaveMode
    nameWithType: ConfigurationSaveMode
    fullName: System.Configuration.ConfigurationSaveMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
    name: Unmerge
    nameWithType: ConfigurationElement.Unmerge
    fullName: System.Configuration.ConfigurationElement.Unmerge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: System.Configuration.ConfigurationElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: System.Configuration.ConfigurationElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Configuration.ConfigurationSaveMode
    name: ConfigurationSaveMode
    nameWithType: ConfigurationSaveMode
    fullName: System.Configuration.ConfigurationSaveMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  commentId: M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: SerializeToXmlElement(XmlWriter, String)
  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)
  fullName: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter, System.String)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
    name: SerializeToXmlElement
    nameWithType: ConfigurationElement.SerializeToXmlElement
    fullName: System.Configuration.ConfigurationElement.SerializeToXmlElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
    name: SerializeToXmlElement
    nameWithType: ConfigurationElement.SerializeToXmlElement
    fullName: System.Configuration.ConfigurationElement.SerializeToXmlElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  commentId: M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: SerializeElement(XmlWriter, Boolean)
  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)
  fullName: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter, System.Boolean)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
    name: SerializeElement
    nameWithType: ConfigurationElement.SerializeElement
    fullName: System.Configuration.ConfigurationElement.SerializeElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
    name: SerializeElement
    nameWithType: ConfigurationElement.SerializeElement
    fullName: System.Configuration.ConfigurationElement.SerializeElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  commentId: M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: DeserializeElement(XmlReader, Boolean)
  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)
  fullName: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader, System.Boolean)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
    name: DeserializeElement
    nameWithType: ConfigurationElement.DeserializeElement
    fullName: System.Configuration.ConfigurationElement.DeserializeElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
    name: DeserializeElement
    nameWithType: ConfigurationElement.DeserializeElement
    fullName: System.Configuration.ConfigurationElement.DeserializeElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  commentId: M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: OnRequiredPropertyNotFound(String)
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)
  fullName: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
    name: OnRequiredPropertyNotFound
    nameWithType: ConfigurationElement.OnRequiredPropertyNotFound
    fullName: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
    name: OnRequiredPropertyNotFound
    nameWithType: ConfigurationElement.OnRequiredPropertyNotFound
    fullName: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.PostDeserialize
  commentId: M:System.Configuration.ConfigurationElement.PostDeserialize
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: PostDeserialize()
  nameWithType: ConfigurationElement.PostDeserialize()
  fullName: System.Configuration.ConfigurationElement.PostDeserialize()
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.PostDeserialize
    name: PostDeserialize
    nameWithType: ConfigurationElement.PostDeserialize
    fullName: System.Configuration.ConfigurationElement.PostDeserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.PostDeserialize
    name: PostDeserialize
    nameWithType: ConfigurationElement.PostDeserialize
    fullName: System.Configuration.ConfigurationElement.PostDeserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  commentId: M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: PreSerialize(XmlWriter)
  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)
  fullName: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
    name: PreSerialize
    nameWithType: ConfigurationElement.PreSerialize
    fullName: System.Configuration.ConfigurationElement.PreSerialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
    name: PreSerialize
    nameWithType: ConfigurationElement.PreSerialize
    fullName: System.Configuration.ConfigurationElement.PreSerialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  commentId: M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: OnDeserializeUnrecognizedAttribute(String, String)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String, System.String)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
    name: OnDeserializeUnrecognizedAttribute
    nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute
    fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
    name: OnDeserializeUnrecognizedAttribute
    nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute
    fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  commentId: M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: OnDeserializeUnrecognizedElement(String, XmlReader)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String, System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
    name: OnDeserializeUnrecognizedElement
    nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement
    fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
    name: OnDeserializeUnrecognizedElement
    nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement
    fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  commentId: M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: GetTransformedTypeString(String)
  nameWithType: ConfigurationElement.GetTransformedTypeString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
    name: GetTransformedTypeString
    nameWithType: ConfigurationElement.GetTransformedTypeString
    fullName: System.Configuration.ConfigurationElement.GetTransformedTypeString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
    name: GetTransformedTypeString
    nameWithType: ConfigurationElement.GetTransformedTypeString
    fullName: System.Configuration.ConfigurationElement.GetTransformedTypeString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  commentId: M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: GetTransformedAssemblyString(String)
  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
    name: GetTransformedAssemblyString
    nameWithType: ConfigurationElement.GetTransformedAssemblyString
    fullName: System.Configuration.ConfigurationElement.GetTransformedAssemblyString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
    name: GetTransformedAssemblyString
    nameWithType: ConfigurationElement.GetTransformedAssemblyString
    fullName: System.Configuration.ConfigurationElement.GetTransformedAssemblyString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.LockAttributes
  commentId: P:System.Configuration.ConfigurationElement.LockAttributes
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
  fullName: System.Configuration.ConfigurationElement.LockAttributes
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  commentId: P:System.Configuration.ConfigurationElement.LockAllAttributesExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
  fullName: System.Configuration.ConfigurationElement.LockAllAttributesExcept
- uid: System.Configuration.ConfigurationElement.LockElements
  commentId: P:System.Configuration.ConfigurationElement.LockElements
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
  fullName: System.Configuration.ConfigurationElement.LockElements
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept
  commentId: P:System.Configuration.ConfigurationElement.LockAllElementsExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
  fullName: System.Configuration.ConfigurationElement.LockAllElementsExcept
- uid: System.Configuration.ConfigurationElement.LockItem
  commentId: P:System.Configuration.ConfigurationElement.LockItem
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
  fullName: System.Configuration.ConfigurationElement.LockItem
- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  commentId: P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: Item[ConfigurationProperty]
  nameWithType: ConfigurationElement.Item[ConfigurationProperty]
  fullName: System.Configuration.ConfigurationElement.Item[System.Configuration.ConfigurationProperty]
  nameWithType.vb: ConfigurationElement.Item(ConfigurationProperty)
  fullname.vb: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  name.vb: Item(ConfigurationProperty)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
    name: Item
    nameWithType: ConfigurationElement.Item
    fullName: System.Configuration.ConfigurationElement.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Configuration.ConfigurationProperty
    name: ConfigurationProperty
    nameWithType: ConfigurationProperty
    fullName: System.Configuration.ConfigurationProperty
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
    name: Item
    nameWithType: ConfigurationElement.Item
    fullName: System.Configuration.ConfigurationElement.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Configuration.ConfigurationProperty
    name: ConfigurationProperty
    nameWithType: ConfigurationProperty
    fullName: System.Configuration.ConfigurationProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.Item(System.String)
  commentId: P:System.Configuration.ConfigurationElement.Item(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: Item[String]
  nameWithType: ConfigurationElement.Item[String]
  fullName: System.Configuration.ConfigurationElement.Item[System.String]
  nameWithType.vb: ConfigurationElement.Item(String)
  fullname.vb: System.Configuration.ConfigurationElement.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement.Item(System.String)
    name: Item
    nameWithType: ConfigurationElement.Item
    fullName: System.Configuration.ConfigurationElement.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Configuration.ConfigurationElement.Item(System.String)
    name: Item
    nameWithType: ConfigurationElement.Item
    fullName: System.Configuration.ConfigurationElement.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Configuration.ConfigurationElement.ElementInformation
  commentId: P:System.Configuration.ConfigurationElement.ElementInformation
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
  fullName: System.Configuration.ConfigurationElement.ElementInformation
- uid: System.Configuration.ConfigurationElement.EvaluationContext
  commentId: P:System.Configuration.ConfigurationElement.EvaluationContext
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
  fullName: System.Configuration.ConfigurationElement.EvaluationContext
- uid: System.Configuration.ConfigurationElement.ElementProperty
  commentId: P:System.Configuration.ConfigurationElement.ElementProperty
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
  fullName: System.Configuration.ConfigurationElement.ElementProperty
- uid: System.Configuration.ConfigurationElement.HasContext
  commentId: P:System.Configuration.ConfigurationElement.HasContext
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
  fullName: System.Configuration.ConfigurationElement.HasContext
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration
  commentId: P:System.Configuration.ConfigurationElement.CurrentConfiguration
  parent: System.Configuration.ConfigurationElement
  isExternal: true
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
  fullName: System.Configuration.ConfigurationElement.CurrentConfiguration
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Configuration
  commentId: N:System.Configuration
  isExternal: false
  name: System.Configuration
  nameWithType: System.Configuration
  fullName: System.Configuration
- uid: System.ServiceModel.Configuration
  commentId: N:System.ServiceModel.Configuration
  isExternal: false
  name: System.ServiceModel.Configuration
  nameWithType: System.ServiceModel.Configuration
  fullName: System.ServiceModel.Configuration
- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  commentId: M:System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  isExternal: true
  name: SetPropertyValueIfNotDefaultValue<T>(String, T)
  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)
  fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(System.String, T)
  nameWithType.vb: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  fullname.vb: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)(System.String, T)
  name.vb: SetPropertyValueIfNotDefaultValue(Of T)(String, T)
  spec.csharp:
  - uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue<T>
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
    name: SetPropertyValueIfNotDefaultValue(Of T)
    nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  commentId: T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
  isExternal: false
  name: NetTcpRelayBindingElement
  nameWithType: NetTcpRelayBindingElement
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor
  isExternal: false
  name: NetTcpRelayBindingElement
  nameWithType: NetTcpRelayBindingElement.NetTcpRelayBindingElement
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.NetTcpRelayBindingElement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.StandardBindingElement.BindingElementType
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.BindingElementType
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: BindingElementType
  nameWithType: StandardBindingElement.BindingElementType
  fullName: System.ServiceModel.Configuration.StandardBindingElement.BindingElementType
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.BindingElementType*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.BindingElementType
  isExternal: false
  name: BindingElementType
  nameWithType: NetTcpRelayBindingElement.BindingElementType
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.BindingElementType
- uid: Microsoft.ServiceBus.TcpRelayConnectionMode
  commentId: T:Microsoft.ServiceBus.TcpRelayConnectionMode
  parent: Microsoft.ServiceBus
  isExternal: false
  name: TcpRelayConnectionMode
  nameWithType: TcpRelayConnectionMode
  fullName: Microsoft.ServiceBus.TcpRelayConnectionMode
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ConnectionMode*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ConnectionMode
  isExternal: false
  name: ConnectionMode
  nameWithType: NetTcpRelayBindingElement.ConnectionMode
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ConnectionMode
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System.ServiceModel.TransferMode
  commentId: T:System.ServiceModel.TransferMode
  parent: System.ServiceModel
  isExternal: true
  name: TransferMode
  nameWithType: TransferMode
  fullName: System.ServiceModel.TransferMode
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode
  commentId: P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode
  isExternal: false
  name: TransferMode
  nameWithType: NetTcpRelayBindingElement.TransferMode
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ListenBacklog*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ListenBacklog
  isExternal: false
  name: ListenBacklog
  nameWithType: NetTcpRelayBindingElement.ListenBacklog
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ListenBacklog
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferPoolSize*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferPoolSize
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: NetTcpRelayBindingElement.MaxBufferPoolSize
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferPoolSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferSize*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferSize
  isExternal: false
  name: MaxBufferSize
  nameWithType: NetTcpRelayBindingElement.MaxBufferSize
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferSize
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxConnections*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxConnections
  isExternal: false
  name: MaxConnections
  nameWithType: NetTcpRelayBindingElement.MaxConnections
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxConnections
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxReceivedMessageSize*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxReceivedMessageSize
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: NetTcpRelayBindingElement.MaxReceivedMessageSize
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxReceivedMessageSize
- uid: Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement
  commentId: T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement
  parent: Microsoft.ServiceBus.Configuration
  isExternal: false
  name: XmlDictionaryReaderQuotasElement
  nameWithType: XmlDictionaryReaderQuotasElement
  fullName: Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReaderQuotas*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReaderQuotas
  isExternal: false
  name: ReaderQuotas
  nameWithType: NetTcpRelayBindingElement.ReaderQuotas
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReaderQuotas
- uid: System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement
  commentId: T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement
  parent: System.ServiceModel.Configuration
  isExternal: true
  name: StandardBindingOptionalReliableSessionElement
  nameWithType: StandardBindingOptionalReliableSessionElement
  fullName: System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReliableSession*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReliableSession
  isExternal: false
  name: ReliableSession
  nameWithType: NetTcpRelayBindingElement.ReliableSession
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReliableSession
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement
  commentId: T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement
  parent: Microsoft.ServiceBus.Configuration
  isExternal: false
  name: NetTcpRelaySecurityElement
  nameWithType: NetTcpRelaySecurityElement
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Security*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Security
  isExternal: false
  name: Security
  nameWithType: NetTcpRelayBindingElement.Security
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Security
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.IsDynamic*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.IsDynamic
  isExternal: false
  name: IsDynamic
  nameWithType: NetTcpRelayBindingElement.IsDynamic
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.IsDynamic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  commentId: M:System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: InitializeFrom(Binding)
  nameWithType: StandardBindingElement.InitializeFrom(Binding)
  fullName: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  spec.csharp:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
    name: InitializeFrom
    nameWithType: StandardBindingElement.InitializeFrom
    fullName: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
    name: InitializeFrom
    nameWithType: StandardBindingElement.InitializeFrom
    fullName: System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.InitializeFrom*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.InitializeFrom
  isExternal: false
  name: InitializeFrom
  nameWithType: NetTcpRelayBindingElement.InitializeFrom
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.InitializeFrom
- uid: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  commentId: M:System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: OnApplyConfiguration(Binding)
  nameWithType: StandardBindingElement.OnApplyConfiguration(Binding)
  fullName: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  spec.csharp:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
    name: OnApplyConfiguration
    nameWithType: StandardBindingElement.OnApplyConfiguration
    fullName: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
    name: OnApplyConfiguration
    nameWithType: StandardBindingElement.OnApplyConfiguration
    fullName: System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.OnApplyConfiguration*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.OnApplyConfiguration
  isExternal: false
  name: OnApplyConfiguration
  nameWithType: NetTcpRelayBindingElement.OnApplyConfiguration
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.OnApplyConfiguration
- uid: System.ServiceModel.Configuration.StandardBindingElement.Properties
  commentId: P:System.ServiceModel.Configuration.StandardBindingElement.Properties
  parent: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: true
  name: Properties
  nameWithType: StandardBindingElement.Properties
  fullName: System.ServiceModel.Configuration.StandardBindingElement.Properties
- uid: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Properties*
  commentId: Overload:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Properties
  isExternal: false
  name: Properties
  nameWithType: NetTcpRelayBindingElement.Properties
  fullName: Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  commentId: T:System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: true
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
