### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory
  commentId: T:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory
  id: IMessageSessionHandlerFactory
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  - Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionHandler)
  langs:
  - csharp
  - vb
  name: IMessageSessionHandlerFactory
  nameWithType: IMessageSessionHandlerFactory
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory
  type: Interface
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionHandlerFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IMessageSessionHandlerFactory
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionHandlerFactory.cs
    startLine: 9
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Represents an interface for the handler factory associated with the message session.
  example: []
  syntax:
    content: public interface IMessageSessionHandlerFactory
    content.vb: Public Interface IMessageSessionHandlerFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  commentId: M:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  id: CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  parent: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory
  langs:
  - csharp
  - vb
  name: CreateInstance(MessageSession, BrokeredMessage)
  nameWithType: IMessageSessionHandlerFactory.CreateInstance(MessageSession, BrokeredMessage)
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession, Microsoft.ServiceBus.Messaging.BrokeredMessage)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionHandlerFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateInstance
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionHandlerFactory.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates an instance of the handler factory.
  example: []
  syntax:
    content: IMessageSessionHandler CreateInstance(MessageSession session, BrokeredMessage message)
    content.vb: Function CreateInstance(session As MessageSession, message As BrokeredMessage) As IMessageSessionHandler
    parameters:
    - id: session
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: The message session.
    - id: message
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: The message.
    return:
      type: Microsoft.ServiceBus.Messaging.IMessageSessionHandler
      description: The created instance.
  overload: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.CreateInstance*
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionHandler)
  commentId: M:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionHandler)
  id: DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionHandler)
  parent: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory
  langs:
  - csharp
  - vb
  name: DisposeInstance(IMessageSessionHandler)
  nameWithType: IMessageSessionHandlerFactory.DisposeInstance(IMessageSessionHandler)
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionHandler)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionHandlerFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: DisposeInstance
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionHandlerFactory.cs
    startLine: 19
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Releases the resources associated with the handler factory instance.
  example: []
  syntax:
    content: void DisposeInstance(IMessageSessionHandler handler)
    content.vb: Sub DisposeInstance(handler As IMessageSessionHandler)
    parameters:
    - id: handler
      type: Microsoft.ServiceBus.Messaging.IMessageSessionHandler
      description: The handler instance.
  overload: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.DisposeInstance*
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.CreateInstance*
  commentId: Overload:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.CreateInstance
  isExternal: false
  name: CreateInstance
  nameWithType: IMessageSessionHandlerFactory.CreateInstance
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.CreateInstance
- uid: Microsoft.ServiceBus.Messaging.MessageSession
  commentId: T:Microsoft.ServiceBus.Messaging.MessageSession
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessageSession
  nameWithType: MessageSession
  fullName: Microsoft.ServiceBus.Messaging.MessageSession
- uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
  commentId: T:Microsoft.ServiceBus.Messaging.BrokeredMessage
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: BrokeredMessage
  nameWithType: BrokeredMessage
  fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionHandler
  commentId: T:Microsoft.ServiceBus.Messaging.IMessageSessionHandler
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: IMessageSessionHandler
  nameWithType: IMessageSessionHandler
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionHandler
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.DisposeInstance*
  commentId: Overload:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.DisposeInstance
  isExternal: false
  name: DisposeInstance
  nameWithType: IMessageSessionHandlerFactory.DisposeInstance
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.DisposeInstance
