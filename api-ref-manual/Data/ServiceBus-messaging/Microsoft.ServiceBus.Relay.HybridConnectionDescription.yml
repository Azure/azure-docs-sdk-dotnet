### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  commentId: T:Microsoft.ServiceBus.Relay.HybridConnectionDescription
  id: HybridConnectionDescription
  parent: Microsoft.ServiceBus.Relay
  children:
  - Microsoft.ServiceBus.Relay.HybridConnectionDescription.#ctor(System.String)
  - Microsoft.ServiceBus.Relay.HybridConnectionDescription.Authorization
  - Microsoft.ServiceBus.Relay.HybridConnectionDescription.CollectionName
  - Microsoft.ServiceBus.Relay.HybridConnectionDescription.CreatedAt
  - Microsoft.ServiceBus.Relay.HybridConnectionDescription.ListenerCount
  - Microsoft.ServiceBus.Relay.HybridConnectionDescription.Path
  - Microsoft.ServiceBus.Relay.HybridConnectionDescription.RequiresClientAuthorization
  - Microsoft.ServiceBus.Relay.HybridConnectionDescription.UpdatedAt
  - Microsoft.ServiceBus.Relay.HybridConnectionDescription.UserMetadata
  langs:
  - csharp
  - vb
  name: HybridConnectionDescription
  nameWithType: HybridConnectionDescription
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: HybridConnectionDescription
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
    startLine: 17
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Relay
  summary: Represents a HybridConnection description.
  example: []
  syntax:
    content: >-
      [DataContract(Name = "HybridConnectionDescription", Namespace = "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")]

      public class HybridConnectionDescription : EntityDescription, IExtensibleDataObject, IResourceDescription
    content.vb: >-
      <DataContract(Name:="HybridConnectionDescription", Namespace:="http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")>

      Public Class HybridConnectionDescription
          Inherits EntityDescription
          Implements IExtensibleDataObject, IResourceDescription
  inheritance:
  - System.Object
  - Microsoft.ServiceBus.Messaging.EntityDescription
  implements:
  - System.Runtime.Serialization.IExtensibleDataObject
  inheritedMembers:
  - Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  - Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  - Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: HybridConnectionDescription
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/netservices/2010/10/servicebus/connect
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.#ctor(System.String)
  commentId: M:Microsoft.ServiceBus.Relay.HybridConnectionDescription.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  langs:
  - csharp
  - vb
  name: HybridConnectionDescription(String)
  nameWithType: HybridConnectionDescription.HybridConnectionDescription(String)
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.HybridConnectionDescription(System.String)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
    startLine: 29
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Relay
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.Relay.HybridConnectionDescription" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public HybridConnectionDescription(string path)
    content.vb: Public Sub New(path As String)
    parameters:
    - id: path
      type: System.String
      description: The relative path of the HybridConnection.
  overload: Microsoft.ServiceBus.Relay.HybridConnectionDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.Path
  commentId: P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.Path
  id: Path
  parent: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: HybridConnectionDescription.Path
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.Path
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Path
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Relay
  summary: Gets or sets the relative path of the HybridConnection.
  example: []
  syntax:
    content: public string Path { get; set; }
    content.vb: Public Property Path As String
    parameters: []
    return:
      type: System.String
      description: The relative path of the HybridConnection.
  overload: Microsoft.ServiceBus.Relay.HybridConnectionDescription.Path*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.CreatedAt
  commentId: P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.CreatedAt
  id: CreatedAt
  parent: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: HybridConnectionDescription.CreatedAt
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.CreatedAt
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreatedAt
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
    startLine: 55
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Relay
  summary: Gets or sets the exact time the HybridConnection was created.
  example: []
  syntax:
    content: public DateTime CreatedAt { get; }
    content.vb: Public ReadOnly Property CreatedAt As Date
    parameters: []
    return:
      type: System.DateTime
      description: The exact time the HybridConnection was created.
  overload: Microsoft.ServiceBus.Relay.HybridConnectionDescription.CreatedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.UpdatedAt
  commentId: P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.UpdatedAt
  id: UpdatedAt
  parent: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  langs:
  - csharp
  - vb
  name: UpdatedAt
  nameWithType: HybridConnectionDescription.UpdatedAt
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.UpdatedAt
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: UpdatedAt
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
    startLine: 69
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Relay
  summary: Gets or sets the date when the HybridConnection was updated.
  example: []
  syntax:
    content: public DateTime UpdatedAt { get; }
    content.vb: Public ReadOnly Property UpdatedAt As Date
    parameters: []
    return:
      type: System.DateTime
      description: The date when the HybridConnection was updated.
  overload: Microsoft.ServiceBus.Relay.HybridConnectionDescription.UpdatedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.ListenerCount
  commentId: P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.ListenerCount
  id: ListenerCount
  parent: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  langs:
  - csharp
  - vb
  name: ListenerCount
  nameWithType: HybridConnectionDescription.ListenerCount
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.ListenerCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ListenerCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
    startLine: 83
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Relay
  summary: Gets or sets the number of listeners for this HybridConnection.
  example: []
  syntax:
    content: public int ListenerCount { get; }
    content.vb: Public ReadOnly Property ListenerCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of listeners for this HybridConnection.
  overload: Microsoft.ServiceBus.Relay.HybridConnectionDescription.ListenerCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.RequiresClientAuthorization
  commentId: P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.RequiresClientAuthorization
  id: RequiresClientAuthorization
  parent: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  langs:
  - csharp
  - vb
  name: RequiresClientAuthorization
  nameWithType: HybridConnectionDescription.RequiresClientAuthorization
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.RequiresClientAuthorization
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: RequiresClientAuthorization
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
    startLine: 97
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Relay
  summary: Gets or sets whether client authorization is needed for this HybridConnection.
  example: []
  syntax:
    content: public bool RequiresClientAuthorization { get; set; }
    content.vb: Public Property RequiresClientAuthorization As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if client authorization is needed for this HybridConnection; otherwise, false.
  overload: Microsoft.ServiceBus.Relay.HybridConnectionDescription.RequiresClientAuthorization*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.Authorization
  commentId: P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.Authorization
  id: Authorization
  parent: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  langs:
  - csharp
  - vb
  name: Authorization
  nameWithType: HybridConnectionDescription.Authorization
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.Authorization
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Authorization
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
    startLine: 111
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Relay
  summary: Gets the <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRules" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AuthorizationRules Authorization { get; }
    content.vb: Public ReadOnly Property Authorization As AuthorizationRules
    parameters: []
    return:
      type: Microsoft.ServiceBus.Messaging.AuthorizationRules
      description: The <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRules" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Relay.HybridConnectionDescription.Authorization*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.UserMetadata
  commentId: P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.UserMetadata
  id: UserMetadata
  parent: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  langs:
  - csharp
  - vb
  name: UserMetadata
  nameWithType: HybridConnectionDescription.UserMetadata
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.UserMetadata
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: UserMetadata
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
    startLine: 126
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Relay
  summary: Gets or sets the user metadata associated with this instance.
  example: []
  syntax:
    content: public string UserMetadata { get; set; }
    content.vb: Public Property UserMetadata As String
    parameters: []
    return:
      type: System.String
      description: The user metadata associated with this instance.
  overload: Microsoft.ServiceBus.Relay.HybridConnectionDescription.UserMetadata*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if the length of value is greater than 1024 characters.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.CollectionName
  commentId: P:Microsoft.ServiceBus.Relay.HybridConnectionDescription.CollectionName
  id: CollectionName
  parent: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  langs:
  - csharp
  - vb
  name: CollectionName
  nameWithType: HybridConnectionDescription.CollectionName
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.CollectionName
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CollectionName
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Relay/HybridConnectionDescription.cs
    startLine: 158
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Relay
  summary: Gets or sets the name of the collection associated with the HybridConnection.
  example: []
  syntax:
    content: public string CollectionName { get; }
    content.vb: Public ReadOnly Property CollectionName As String
    parameters: []
    return:
      type: System.String
      description: The name of the collection associated with the HybridConnection.
  overload: Microsoft.ServiceBus.Relay.HybridConnectionDescription.CollectionName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceBus.Relay
  commentId: N:Microsoft.ServiceBus.Relay
  isExternal: false
  name: Microsoft.ServiceBus.Relay
  nameWithType: Microsoft.ServiceBus.Relay
  fullName: Microsoft.ServiceBus.Relay
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceBus.Messaging.EntityDescription
  commentId: T:Microsoft.ServiceBus.Messaging.EntityDescription
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EntityDescription
  nameWithType: EntityDescription
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription
- uid: System.Runtime.Serialization.IExtensibleDataObject
  commentId: T:System.Runtime.Serialization.IExtensibleDataObject
  parent: System.Runtime.Serialization
  isExternal: true
  name: IExtensibleDataObject
  nameWithType: IExtensibleDataObject
  fullName: System.Runtime.Serialization.IExtensibleDataObject
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  commentId: P:Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  parent: Microsoft.ServiceBus.Messaging.EntityDescription
  isExternal: false
  name: IsReadOnly
  nameWithType: EntityDescription.IsReadOnly
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  commentId: P:Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  parent: Microsoft.ServiceBus.Messaging.EntityDescription
  isExternal: false
  name: ExtensionData
  nameWithType: EntityDescription.ExtensionData
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  commentId: M:Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  parent: Microsoft.ServiceBus.Messaging.EntityDescription
  isExternal: false
  name: ThrowIfReadOnly()
  nameWithType: EntityDescription.ThrowIfReadOnly()
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
    name: ThrowIfReadOnly
    nameWithType: EntityDescription.ThrowIfReadOnly
    fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
    name: ThrowIfReadOnly
    nameWithType: EntityDescription.ThrowIfReadOnly
    fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  commentId: T:Microsoft.ServiceBus.Relay.HybridConnectionDescription
  parent: Microsoft.ServiceBus.Relay
  isExternal: false
  name: HybridConnectionDescription
  nameWithType: HybridConnectionDescription
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Relay.HybridConnectionDescription.#ctor
  isExternal: false
  name: HybridConnectionDescription
  nameWithType: HybridConnectionDescription.HybridConnectionDescription
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.HybridConnectionDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.Path*
  commentId: Overload:Microsoft.ServiceBus.Relay.HybridConnectionDescription.Path
  isExternal: false
  name: Path
  nameWithType: HybridConnectionDescription.Path
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.Path
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.CreatedAt*
  commentId: Overload:Microsoft.ServiceBus.Relay.HybridConnectionDescription.CreatedAt
  isExternal: false
  name: CreatedAt
  nameWithType: HybridConnectionDescription.CreatedAt
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.CreatedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.UpdatedAt*
  commentId: Overload:Microsoft.ServiceBus.Relay.HybridConnectionDescription.UpdatedAt
  isExternal: false
  name: UpdatedAt
  nameWithType: HybridConnectionDescription.UpdatedAt
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.UpdatedAt
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.ListenerCount*
  commentId: Overload:Microsoft.ServiceBus.Relay.HybridConnectionDescription.ListenerCount
  isExternal: false
  name: ListenerCount
  nameWithType: HybridConnectionDescription.ListenerCount
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.ListenerCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.RequiresClientAuthorization*
  commentId: Overload:Microsoft.ServiceBus.Relay.HybridConnectionDescription.RequiresClientAuthorization
  isExternal: false
  name: RequiresClientAuthorization
  nameWithType: HybridConnectionDescription.RequiresClientAuthorization
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.RequiresClientAuthorization
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules
  commentId: T:Microsoft.ServiceBus.Messaging.AuthorizationRules
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: AuthorizationRules
  nameWithType: AuthorizationRules
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.Authorization*
  commentId: Overload:Microsoft.ServiceBus.Relay.HybridConnectionDescription.Authorization
  isExternal: false
  name: Authorization
  nameWithType: HybridConnectionDescription.Authorization
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.Authorization
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.UserMetadata*
  commentId: Overload:Microsoft.ServiceBus.Relay.HybridConnectionDescription.UserMetadata
  isExternal: false
  name: UserMetadata
  nameWithType: HybridConnectionDescription.UserMetadata
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.UserMetadata
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: Microsoft.ServiceBus.Relay.HybridConnectionDescription.CollectionName*
  commentId: Overload:Microsoft.ServiceBus.Relay.HybridConnectionDescription.CollectionName
  isExternal: false
  name: CollectionName
  nameWithType: HybridConnectionDescription.CollectionName
  fullName: Microsoft.ServiceBus.Relay.HybridConnectionDescription.CollectionName
