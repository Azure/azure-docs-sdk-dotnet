### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation
  commentId: T:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation
  id: EventHubRuntimeInformation
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.CreatedAt
  - Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionCount
  - Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionIds
  - Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.Path
  langs:
  - csharp
  - vb
  name: EventHubRuntimeInformation
  nameWithType: EventHubRuntimeInformation
  fullName: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubRuntimeInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EventHubRuntimeInformation
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubRuntimeInfo.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Returns Event Hubs runtime information, which is required for creating \n<xref href=\"Microsoft.ServiceBus.Messaging.EventHubSender\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.ServiceBus.Messaging.EventHubReceiver\" data-throw-if-not-resolved=\"false\"></xref> objects."
  example: []
  syntax:
    content: public class EventHubRuntimeInformation
    content.vb: Public Class EventHubRuntimeInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.Path
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.Path
  id: Path
  parent: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: EventHubRuntimeInformation.Path
  fullName: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.Path
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubRuntimeInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Path
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubRuntimeInfo.cs
    startLine: 18
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the path to the Event Hub.
  example: []
  syntax:
    content: public string Path { get; set; }
    content.vb: Public Property Path As String
    parameters: []
    return:
      type: System.String
      description: Returns <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.Path*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.CreatedAt
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.CreatedAt
  id: CreatedAt
  parent: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: EventHubRuntimeInformation.CreatedAt
  fullName: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.CreatedAt
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubRuntimeInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreatedAt
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubRuntimeInfo.cs
    startLine: 26
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the time at which the Event Hub was created.
  example: []
  syntax:
    content: public DateTime CreatedAt { get; set; }
    content.vb: Public Property CreatedAt As Date
    parameters: []
    return:
      type: System.DateTime
      description: Returns <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.CreatedAt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionCount
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionCount
  id: PartitionCount
  parent: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation
  langs:
  - csharp
  - vb
  name: PartitionCount
  nameWithType: EventHubRuntimeInformation.PartitionCount
  fullName: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubRuntimeInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PartitionCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubRuntimeInfo.cs
    startLine: 31
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the number of partitions in an Event Hub.
  example: []
  syntax:
    content: public int PartitionCount { get; set; }
    content.vb: Public Property PartitionCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionIds
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionIds
  id: PartitionIds
  parent: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation
  langs:
  - csharp
  - vb
  name: PartitionIds
  nameWithType: EventHubRuntimeInformation.PartitionIds
  fullName: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionIds
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubRuntimeInfo.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PartitionIds
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubRuntimeInfo.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the partition ID for an Event Hub.
  example: []
  syntax:
    content: public string[] PartitionIds { get; set; }
    content.vb: Public Property PartitionIds As String()
    parameters: []
    return:
      type: System.String[]
      description: Returns <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionIds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceBus.Messaging.EventHubSender
  commentId: T:Microsoft.ServiceBus.Messaging.EventHubSender
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EventHubSender
  nameWithType: EventHubSender
  fullName: Microsoft.ServiceBus.Messaging.EventHubSender
- uid: Microsoft.ServiceBus.Messaging.EventHubReceiver
  commentId: T:Microsoft.ServiceBus.Messaging.EventHubReceiver
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EventHubReceiver
  nameWithType: EventHubReceiver
  fullName: Microsoft.ServiceBus.Messaging.EventHubReceiver
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.Path*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.Path
  isExternal: false
  name: Path
  nameWithType: EventHubRuntimeInformation.Path
  fullName: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.Path
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.CreatedAt*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.CreatedAt
  isExternal: false
  name: CreatedAt
  nameWithType: EventHubRuntimeInformation.CreatedAt
  fullName: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.CreatedAt
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionCount*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionCount
  isExternal: false
  name: PartitionCount
  nameWithType: EventHubRuntimeInformation.PartitionCount
  fullName: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionCount
- uid: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionIds*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionIds
  isExternal: false
  name: PartitionIds
  nameWithType: EventHubRuntimeInformation.PartitionIds
  fullName: Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation.PartitionIds
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
