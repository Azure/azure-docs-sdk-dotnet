### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.TopicClient
  commentId: T:Microsoft.ServiceBus.Messaging.TopicClient
  id: TopicClient
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.TopicClient.CancelScheduledMessageAsync(System.Int64)
  - Microsoft.ServiceBus.Messaging.TopicClient.Create(System.String)
  - Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String)
  - Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String,System.String)
  - Microsoft.ServiceBus.Messaging.TopicClient.FormatTransferDeadLetterPath(System.String)
  - Microsoft.ServiceBus.Messaging.TopicClient.IsSubQueue
  - Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory
  - Microsoft.ServiceBus.Messaging.TopicClient.OnAbort
  - Microsoft.ServiceBus.Messaging.TopicClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateSender(System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.TopicClient.OnClose(System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.TopicClient.OnEndClose(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateSender(System.IAsyncResult)
  - Microsoft.ServiceBus.Messaging.TopicClient.Path
  - Microsoft.ServiceBus.Messaging.TopicClient.Peek
  - Microsoft.ServiceBus.Messaging.TopicClient.Peek(System.Int64)
  - Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync
  - Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync(System.Int64)
  - Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch(System.Int32)
  - Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch(System.Int64,System.Int32)
  - Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync(System.Int32)
  - Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync(System.Int64,System.Int32)
  - Microsoft.ServiceBus.Messaging.TopicClient.ScheduleMessageAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.DateTimeOffset)
  - Microsoft.ServiceBus.Messaging.TopicClient.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  - Microsoft.ServiceBus.Messaging.TopicClient.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  - Microsoft.ServiceBus.Messaging.TopicClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  - Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  langs:
  - csharp
  - vb
  name: TopicClient
  nameWithType: TopicClient
  fullName: Microsoft.ServiceBus.Messaging.TopicClient
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: TopicClient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 46
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: An anchor class used to access a <xref href="Microsoft.ServiceBus.Messaging.TopicDescription" data-throw-if-not-resolved="false"></xref> to perform run-time operations.
  example:
  - "\n<pre><code>// Create settings for the MessagingFactory (for rutime operations)\nMessagingFactorySettings factorySettings = new MessagingFactorySettings()\n{\n   NetMessagingTransportSettings = new NetMessagingTransportSettings(),\n   Credential = TransportClientCredentialBase.CreateSharedSecretCredential(IssuerName, IssuerKey),\n};\n\n// Create the MessagingFactory\nMessagingFactory factory = \nMessagingFactory.Create(myServiceBusNamespace, factorySettings);\n\n//********************************************************************************\n//                          Sending messages to a Topic\n//********************************************************************************\n\n// Create topic client\nTopicClient myTopicClient = factory.CreateTopicClient(myTopic);\n\n// Create a sender\n//MessageSender myMessageSender = myTopicClient.CreateSender(SendMode.Default);\n\n// Send messages\nList &lt;object&gt; Issues = new List &lt;object&gt;();\nforeach (var issue in Issues)\n{\n   myMessageSender.Send(new BrokeredMessage(issue));\n}</code></pre>\n"
  syntax:
    content: 'public abstract class TopicClient : ClientEntity, IMessageClientEntity, ICloseable, IMessageSender, IMessageBrowser'
    content.vb: >-
      Public MustInherit Class TopicClient
          Inherits ClientEntity
          Implements IMessageClientEntity, ICloseable, IMessageSender, IMessageBrowser
  seealso:
  - linkId: Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory
    commentId: P:Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory
  inheritance:
  - System.Object
  - Microsoft.ServiceBus.Messaging.ClientEntity
  inheritedMembers:
  - Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
  - Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
  - Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  - Microsoft.ServiceBus.Messaging.ClientEntity.Close
  - Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  - Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  - Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceBus.Messaging.TopicClient.Path
  commentId: P:Microsoft.ServiceBus.Messaging.TopicClient.Path
  id: Path
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: TopicClient.Path
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.Path
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Path
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 69
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the full pathname of the file.
  example: []
  syntax:
    content: public string Path { get; }
    content.vb: Public ReadOnly Property Path As String
    parameters: []
    return:
      type: System.String
      description: The full pathname of the file.
  overload: Microsoft.ServiceBus.Messaging.TopicClient.Path*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory
  commentId: P:Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory
  id: MessagingFactory
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: MessagingFactory
  nameWithType: TopicClient.MessagingFactory
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MessagingFactory
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 74
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Gets or sets the messaging factory that was used in creating this \n<xref href=\"Microsoft.ServiceBus.Messaging.TopicClient\" data-throw-if-not-resolved=\"false\"></xref> object."
  example: []
  syntax:
    content: public MessagingFactory MessagingFactory { get; }
    content.vb: Public ReadOnly Property MessagingFactory As MessagingFactory
    parameters: []
    return:
      type: Microsoft.ServiceBus.Messaging.MessagingFactory
      description: The messaging factory that was used in creating this <xref href="Microsoft.ServiceBus.Messaging.TopicClient" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.TopicClient.IsSubQueue
  commentId: P:Microsoft.ServiceBus.Messaging.TopicClient.IsSubQueue
  id: IsSubQueue
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: IsSubQueue
  nameWithType: TopicClient.IsSubQueue
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.IsSubQueue
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IsSubQueue
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 91
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets a value that indicates whether the message receiver is created from a subqueue.
  example: []
  syntax:
    content: protected bool IsSubQueue { get; }
    content.vb: Protected ReadOnly Property IsSubQueue As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the message receiver is created from a subqueue; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.TopicClient.IsSubQueue*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.TopicClient.Create(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.Create(System.String)
  id: Create(System.String)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: TopicClient.Create(String)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.Create(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Create
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 114
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new instance of <xref href="Microsoft.ServiceBus.Messaging.TopicClient" data-throw-if-not-resolved="false"></xref>.
  remarks: "This method will attempt to retrieve the connection string information\nfrom either app.config, or web.config files. User must supply the connection \nstring using the \"AppSettings\" section of the configuration. The format of the section\nis as follows:\n\n<pre><code><appSettings>\n<!-- Service Bus specific app setings for messaging connections -->\n<add key=\"Microsoft.ServiceBus.ConnectionString\" value=\"Endpoint=sb://[your namespace].servicebus.windows.net;SharedSecretIssuer=owner;SharedSecretValue=[your secret]\"></add>\n</appSettings></code></pre>\n"
  example: []
  syntax:
    content: public static TopicClient Create(string path)
    content.vb: Public Shared Function Create(path As String) As TopicClient
    parameters:
    - id: path
      type: System.String
      description: The path.
    return:
      type: Microsoft.ServiceBus.Messaging.TopicClient
      description: The created <xref href="Microsoft.ServiceBus.Messaging.TopicClient" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.TopicClient.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String,System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String,System.String)
  id: CreateFromConnectionString(System.String,System.String)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String, String)
  nameWithType: TopicClient.CreateFromConnectionString(String, String)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateFromConnectionString
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 129
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Creates a new instance of \n<xref href=\"Microsoft.ServiceBus.Messaging.TopicClient\" data-throw-if-not-resolved=\"false\"></xref> using the specified connection string and path to the topic. Use this overload only when the connection string does not use the \n<xref href=\"Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.EntityPath\" data-throw-if-not-resolved=\"false\"></xref> property."
  remarks: "This method should only be used with a connection string that has namespace level authentication because \nthe connection string supplied should not have entity level information associated with it."
  example: []
  syntax:
    content: public static TopicClient CreateFromConnectionString(string connectionString, string path)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String, path As String) As TopicClient
    parameters:
    - id: connectionString
      type: System.String
      description: The connection string to use.
    - id: path
      type: System.String
      description: The path.
    return:
      type: Microsoft.ServiceBus.Messaging.TopicClient
      description: The created <xref href="Microsoft.ServiceBus.Messaging.TopicClient" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when the format of the parameters is incorrect.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String)
  id: CreateFromConnectionString(System.String)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String)
  nameWithType: TopicClient.CreateFromConnectionString(String)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateFromConnectionString
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 155
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates a new instance of <xref href="Microsoft.ServiceBus.Messaging.TopicClient" data-throw-if-not-resolved="false"></xref> using the specified connection string.
  remarks: "This method expects the connection string supplied has entity level information such as the entity path and \nauthentication information supplied."
  example: []
  syntax:
    content: public static TopicClient CreateFromConnectionString(string connectionString)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String) As TopicClient
    parameters:
    - id: connectionString
      type: System.String
      description: The connection string to use.
    return:
      type: Microsoft.ServiceBus.Messaging.TopicClient
      description: Returns <xref href="Microsoft.ServiceBus.Messaging.TopicClient" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.TopicClient.FormatTransferDeadLetterPath(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.FormatTransferDeadLetterPath(System.String)
  id: FormatTransferDeadLetterPath(System.String)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: FormatTransferDeadLetterPath(String)
  nameWithType: TopicClient.FormatTransferDeadLetterPath(String)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.FormatTransferDeadLetterPath(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: FormatTransferDeadLetterPath
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 176
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "A utility method that, given the topic path and subscription name, forms a \nfull path that points to the dead letter queue of the topic's transfer topic."
  example: []
  syntax:
    content: public static string FormatTransferDeadLetterPath(string topicPath)
    content.vb: Public Shared Function FormatTransferDeadLetterPath(topicPath As String) As String
    parameters:
    - id: topicPath
      type: System.String
      description: The topic path.
    return:
      type: System.String
      description: "Returns a \n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representing a full path that points to the dead letter queue of the transfer topic of the specified topic. This path can be used in receiver creation or in URI formation (such as a REST URI)."
  overload: Microsoft.ServiceBus.Messaging.TopicClient.FormatTransferDeadLetterPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateSender(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateSender(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginCreateSender(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: OnBeginCreateSender(TimeSpan, AsyncCallback, Object)
  nameWithType: TopicClient.OnBeginCreateSender(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateSender(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginCreateSender
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 235
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the begin create sender action.
  example: []
  syntax:
    content: protected abstract IAsyncResult OnBeginCreateSender(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected MustOverride Function OnBeginCreateSender(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The wait time before the operation times out.
    - id: callback
      type: System.AsyncCallback
      description: "An \n<xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that references the method to invoke when the operation is complete."
    - id: state
      type: System.Object
      description: "A user-defined object that contains information about the receive operation. This object is passed to the \n<xref href=\"Microsoft.ServiceBus.Messaging.TopicClient.EndCreateSender(System.IAsyncResult)\" data-throw-if-not-resolved=\"false\"></xref> when the operation is complete."
    return:
      type: System.IAsyncResult
      description: "An \n<xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous parent method."
  overload: Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateSender*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateSender(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateSender(System.IAsyncResult)
  id: OnEndCreateSender(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: OnEndCreateSender(IAsyncResult)
  nameWithType: TopicClient.OnEndCreateSender(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateSender(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndCreateSender
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 241
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the end create sender action.
  example: []
  syntax:
    content: protected abstract MessageSender OnEndCreateSender(IAsyncResult result)
    content.vb: Protected MustOverride Function OnEndCreateSender(result As IAsyncResult) As MessageSender
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "An \n<xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous parent method."
    return:
      type: Microsoft.ServiceBus.Messaging.MessageSender
      description: The newly created <xref href="Microsoft.ServiceBus.Messaging.MessageSender" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateSender*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.TopicClient.OnAbort
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.OnAbort
  id: OnAbort
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: OnAbort()
  nameWithType: TopicClient.OnAbort()
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.OnAbort()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnAbort
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 244
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the abort action.
  example: []
  syntax:
    content: protected override void OnAbort()
    content.vb: Protected Overrides Sub OnAbort
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  overload: Microsoft.ServiceBus.Messaging.TopicClient.OnAbort*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.TopicClient.OnClose(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: OnClose(TimeSpan)
  nameWithType: TopicClient.OnClose(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.OnClose(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnClose
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 251
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the close action.
  example: []
  syntax:
    content: protected override void OnClose(TimeSpan timeout)
    content.vb: Protected Overrides Sub OnClose(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The wait time before the operation times out.
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  overload: Microsoft.ServiceBus.Messaging.TopicClient.OnClose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.TopicClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: TopicClient.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnBeginClose
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 263
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the begin close action.
  example: []
  syntax:
    content: protected override IAsyncResult OnBeginClose(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected Overrides Function OnBeginClose(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The wait time before the operation times out.
    - id: callback
      type: System.AsyncCallback
      description: "An \n<xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that references the method to invoke when the operation is complete."
    - id: state
      type: System.Object
      description: "A user-defined object that contains information about the receive operation. \nThis object is passed to the EndClose delegate when the operation is complete."
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous Close operation.
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  overload: Microsoft.ServiceBus.Messaging.TopicClient.OnBeginClose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.TopicClient.OnEndClose(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: OnEndClose(IAsyncResult)
  nameWithType: TopicClient.OnEndClose(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.OnEndClose(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnEndClose
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 270
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Executes the end close action.
  example: []
  syntax:
    content: protected override void OnEndClose(IAsyncResult result)
    content.vb: Protected Overrides Sub OnEndClose(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous Close operation.
  overridden: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  overload: Microsoft.ServiceBus.Messaging.TopicClient.OnEndClose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceBus.Messaging.TopicClient.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  id: Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: Send(BrokeredMessage)
  nameWithType: TopicClient.Send(BrokeredMessage)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Send
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 295
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Sends a message using the <xref href="Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Send(BrokeredMessage message)
    content.vb: Public Sub Send(message As BrokeredMessage)
    parameters:
    - id: message
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: The message to send.
  overload: Microsoft.ServiceBus.Messaging.TopicClient.Send*
  exceptions:
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Thrown when operation times out. Timeout period is initialized through the \n<xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref> to avoid this exception if timeout value is relatively low."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when the <xref href="Microsoft.ServiceBus.Messaging.BrokeredMessage" data-throw-if-not-resolved="false"></xref> is null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Thrown if the <span class=\"paramref\">message</span> has already been sent by a \n<xref href=\"Microsoft.ServiceBus.Messaging.TopicClient\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.ServiceBus.Messaging.MessageSender\" data-throw-if-not-resolved=\"false\"></xref> once already."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: Thrown if the client entity has been closed or aborted.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: Thrown if there is an I/O or security error.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Thrown when an \nerror occurs during serialization or deserialization."
  - type: Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException
    commentId: T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException
    description: Thrown if the topic does not exist.
  - type: Microsoft.ServiceBus.Messaging.MessagingException
    commentId: T:Microsoft.ServiceBus.Messaging.MessagingException
    description: Thrown if there is a messaging error.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicClient.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  id: SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: SendAsync(BrokeredMessage)
  nameWithType: TopicClient.SendAsync(BrokeredMessage)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SendAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 304
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously sends a message using the <xref href="Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task SendAsync(BrokeredMessage message)
    content.vb: Public Function SendAsync(message As BrokeredMessage) As Task
    parameters:
    - id: message
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: The message to send.
    return:
      type: System.Threading.Tasks.Task
      description: The asynchronous result of the operation.
  overload: Microsoft.ServiceBus.Messaging.TopicClient.SendAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  id: SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: SendBatch(IEnumerable<BrokeredMessage>)
  nameWithType: TopicClient.SendBatch(IEnumerable<BrokeredMessage>)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.SendBatch(System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.BrokeredMessage>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SendBatch
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 312
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Sends a set of brokered messages (for batch processing).
  example: []
  syntax:
    content: public void SendBatch(IEnumerable<BrokeredMessage> messages)
    content.vb: Public Sub SendBatch(messages As IEnumerable(Of BrokeredMessage))
    parameters:
    - id: messages
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
      description: The messages to send.
  overload: Microsoft.ServiceBus.Messaging.TopicClient.SendBatch*
  nameWithType.vb: TopicClient.SendBatch(IEnumerable(Of BrokeredMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.TopicClient.SendBatch(System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.BrokeredMessage))
  name.vb: SendBatch(IEnumerable(Of BrokeredMessage))
- uid: Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  id: SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: SendBatchAsync(IEnumerable<BrokeredMessage>)
  nameWithType: TopicClient.SendBatchAsync(IEnumerable<BrokeredMessage>)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync(System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.BrokeredMessage>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SendBatchAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 321
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Asynchronously sends a set of brokered messages (for batch processing).
  example: []
  syntax:
    content: public Task SendBatchAsync(IEnumerable<BrokeredMessage> messages)
    content.vb: Public Function SendBatchAsync(messages As IEnumerable(Of BrokeredMessage)) As Task
    parameters:
    - id: messages
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
      description: The messages to send.
    return:
      type: System.Threading.Tasks.Task
      description: The asynchronous result of the operation.
  overload: Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync*
  nameWithType.vb: TopicClient.SendBatchAsync(IEnumerable(Of BrokeredMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync(System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.BrokeredMessage))
  name.vb: SendBatchAsync(IEnumerable(Of BrokeredMessage))
- uid: Microsoft.ServiceBus.Messaging.TopicClient.Peek
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.Peek
  id: Peek
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: TopicClient.Peek()
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.Peek()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Peek
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 382
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: 'Peeks a BrokeredMessage from current queue/topic. '
  remarks: "A Null can be return by this API if operation exceeded the timeout specified, \nor the operations succeeded but there are no more messages to be received."
  example: []
  syntax:
    content: public BrokeredMessage Peek()
    content.vb: Public Function Peek As BrokeredMessage
    return:
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: "return the peeked BrokeredMessage. A null is return if peek \noperation cannot obtain the message within <xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref>."
  overload: Microsoft.ServiceBus.Messaging.TopicClient.Peek*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicClient.Peek(System.Int64)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.Peek(System.Int64)
  id: Peek(System.Int64)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: Peek(Int64)
  nameWithType: TopicClient.Peek(Int64)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.Peek(System.Int64)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Peek
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 394
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: 'Peeks a BrokeredMessage from current queue/topic. '
  remarks: "A Null can be return by this API if operation exceeded the timeout specified, \nor the operations succeeded but there are no more messages to be received."
  example: []
  syntax:
    content: public BrokeredMessage Peek(long fromSequenceNumber)
    content.vb: Public Function Peek(fromSequenceNumber As Long) As BrokeredMessage
    parameters:
    - id: fromSequenceNumber
      type: System.Int64
      description: 'The sequence number of message to start peeking from. '
    return:
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: "return the peeked BrokeredMessage. A null is return if peek \noperation cannot obtain the message within <xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref>."
  overload: Microsoft.ServiceBus.Messaging.TopicClient.Peek*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync
  id: PeekAsync
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: PeekAsync()
  nameWithType: TopicClient.PeekAsync()
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PeekAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 401
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: ''
  example: []
  syntax:
    content: public Task<BrokeredMessage> PeekAsync()
    content.vb: Public Function PeekAsync As Task(Of BrokeredMessage)
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.BrokeredMessage}
  overload: Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync(System.Int64)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync(System.Int64)
  id: PeekAsync(System.Int64)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: PeekAsync(Int64)
  nameWithType: TopicClient.PeekAsync(Int64)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync(System.Int64)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PeekAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 409
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: ''
  example: []
  syntax:
    content: public Task<BrokeredMessage> PeekAsync(long fromSequenceNumber)
    content.vb: Public Function PeekAsync(fromSequenceNumber As Long) As Task(Of BrokeredMessage)
    parameters:
    - id: fromSequenceNumber
      type: System.Int64
      description: ''
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.BrokeredMessage}
  overload: Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch(System.Int32)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch(System.Int32)
  id: PeekBatch(System.Int32)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: PeekBatch(Int32)
  nameWithType: TopicClient.PeekBatch(Int32)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch(System.Int32)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PeekBatch
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 421
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: 'Peeks a BrokeredMessage from current queue/topic. '
  remarks: "A Null can be return by this API if operation exceeded the timeout specified, \nor the operations succeeded but there are no more messages to be received."
  example: []
  syntax:
    content: public IEnumerable<BrokeredMessage> PeekBatch(int messageCount)
    content.vb: Public Function PeekBatch(messageCount As Integer) As IEnumerable(Of BrokeredMessage)
    parameters:
    - id: messageCount
      type: System.Int32
      description: 'The maximum number of messages to peek. '
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
      description: "return a list of peeked BrokeredMessages. An empty list is returned if peek \noperation cannot obtain the message within <xref href=\"Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref>."
  overload: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch(System.Int64,System.Int32)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch(System.Int64,System.Int32)
  id: PeekBatch(System.Int64,System.Int32)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: PeekBatch(Int64, Int32)
  nameWithType: TopicClient.PeekBatch(Int64, Int32)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch(System.Int64, System.Int32)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PeekBatch
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 430
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: ''
  example: []
  syntax:
    content: public IEnumerable<BrokeredMessage> PeekBatch(long fromSequenceNumber, int messageCount)
    content.vb: Public Function PeekBatch(fromSequenceNumber As Long, messageCount As Integer) As IEnumerable(Of BrokeredMessage)
    parameters:
    - id: fromSequenceNumber
      type: System.Int64
      description: ''
    - id: messageCount
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
  overload: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync(System.Int32)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync(System.Int32)
  id: PeekBatchAsync(System.Int32)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: PeekBatchAsync(Int32)
  nameWithType: TopicClient.PeekBatchAsync(Int32)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync(System.Int32)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PeekBatchAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 438
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: ''
  example: []
  syntax:
    content: public Task<IEnumerable<BrokeredMessage>> PeekBatchAsync(int messageCount)
    content.vb: Public Function PeekBatchAsync(messageCount As Integer) As Task(Of IEnumerable(Of BrokeredMessage))
    parameters:
    - id: messageCount
      type: System.Int32
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}}
  overload: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync(System.Int64,System.Int32)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync(System.Int64,System.Int32)
  id: PeekBatchAsync(System.Int64,System.Int32)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: PeekBatchAsync(Int64, Int32)
  nameWithType: TopicClient.PeekBatchAsync(Int64, Int32)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync(System.Int64, System.Int32)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PeekBatchAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 447
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: ''
  example: []
  syntax:
    content: public Task<IEnumerable<BrokeredMessage>> PeekBatchAsync(long fromSequenceNumber, int messageCount)
    content.vb: Public Function PeekBatchAsync(fromSequenceNumber As Long, messageCount As Integer) As Task(Of IEnumerable(Of BrokeredMessage))
    parameters:
    - id: fromSequenceNumber
      type: System.Int64
      description: ''
    - id: messageCount
      type: System.Int32
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}}
  overload: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicClient.ScheduleMessageAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.DateTimeOffset)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.ScheduleMessageAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.DateTimeOffset)
  id: ScheduleMessageAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.DateTimeOffset)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: ScheduleMessageAsync(BrokeredMessage, DateTimeOffset)
  nameWithType: TopicClient.ScheduleMessageAsync(BrokeredMessage, DateTimeOffset)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.ScheduleMessageAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage, System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ScheduleMessageAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 521
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nSends a scheduled message\n"
  example: []
  syntax:
    content: public Task<long> ScheduleMessageAsync(BrokeredMessage message, DateTimeOffset scheduleEnqueueTimeUtc)
    content.vb: Public Function ScheduleMessageAsync(message As BrokeredMessage, scheduleEnqueueTimeUtc As DateTimeOffset) As Task(Of Long)
    parameters:
    - id: message
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: Message to be scheduled
    - id: scheduleEnqueueTimeUtc
      type: System.DateTimeOffset
      description: Time of enqueue
    return:
      type: System.Threading.Tasks.Task{System.Int64}
      description: Sequence number that is needed for cancelling.
  overload: Microsoft.ServiceBus.Messaging.TopicClient.ScheduleMessageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicClient.CancelScheduledMessageAsync(System.Int64)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.CancelScheduledMessageAsync(System.Int64)
  id: CancelScheduledMessageAsync(System.Int64)
  parent: Microsoft.ServiceBus.Messaging.TopicClient
  langs:
  - csharp
  - vb
  name: CancelScheduledMessageAsync(Int64)
  nameWithType: TopicClient.CancelScheduledMessageAsync(Int64)
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.CancelScheduledMessageAsync(System.Int64)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CancelScheduledMessageAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicClient.cs
    startLine: 532
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nCancels a scheduled message\n"
  example: []
  syntax:
    content: public Task CancelScheduledMessageAsync(long sequenceNumber)
    content.vb: Public Function CancelScheduledMessageAsync(sequenceNumber As Long) As Task
    parameters:
    - id: sequenceNumber
      type: System.Int64
      description: Returned on scheduling a message.
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overload: Microsoft.ServiceBus.Messaging.TopicClient.CancelScheduledMessageAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceBus.Messaging.TopicDescription
  commentId: T:Microsoft.ServiceBus.Messaging.TopicDescription
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: TopicDescription
  nameWithType: TopicDescription
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription
- uid: Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory
  commentId: P:Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceBus.Messaging.ClientEntity
  commentId: T:Microsoft.ServiceBus.Messaging.ClientEntity
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: ClientEntity
  nameWithType: ClientEntity
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
  commentId: P:Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: RetryPolicy
  nameWithType: ClientEntity.RetryPolicy
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.RetryPolicy
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
  commentId: P:Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: IsClosed
  nameWithType: ClientEntity.IsClosed
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.IsClosed
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
  commentId: P:Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThisLock
  nameWithType: ClientEntity.ThisLock
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThisLock
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: Abort()
  nameWithType: ClientEntity.Abort()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Abort()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
    name: Abort
    nameWithType: ClientEntity.Abort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
    name: Abort
    nameWithType: ClientEntity.Abort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.Close
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.Close
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: Close()
  nameWithType: ClientEntity.Close()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Close()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Close
    name: Close
    nameWithType: ClientEntity.Close
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Close
    name: Close
    nameWithType: ClientEntity.Close
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: CloseAsync()
  nameWithType: ClientEntity.CloseAsync()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
    name: CloseAsync
    nameWithType: ClientEntity.CloseAsync
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
    name: CloseAsync
    nameWithType: ClientEntity.CloseAsync
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: Fault()
  nameWithType: ClientEntity.Fault()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Fault()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
    name: Fault
    nameWithType: ClientEntity.Fault
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
    name: Fault
    nameWithType: ClientEntity.Fault
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.Fault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnOpen(TimeSpan)
  nameWithType: ClientEntity.OnOpen(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: ClientEntity.OnOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: ClientEntity.OnOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfClosed()
  nameWithType: ClientEntity.ThrowIfClosed()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
    name: ThrowIfClosed
    nameWithType: ClientEntity.ThrowIfClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
    name: ThrowIfClosed
    nameWithType: ClientEntity.ThrowIfClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: ClientEntity.ThrowIfDisposed()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: ClientEntity.ThrowIfDisposed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: ClientEntity.ThrowIfDisposed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfDisposedOrNotOpen()
  nameWithType: ClientEntity.ThrowIfDisposedOrNotOpen()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
    name: ThrowIfDisposedOrNotOpen
    nameWithType: ClientEntity.ThrowIfDisposedOrNotOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
    name: ThrowIfDisposedOrNotOpen
    nameWithType: ClientEntity.ThrowIfDisposedOrNotOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrNotOpen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfFaulted()
  nameWithType: ClientEntity.ThrowIfFaulted()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
    name: ThrowIfFaulted
    nameWithType: ClientEntity.ThrowIfFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
    name: ThrowIfFaulted
    nameWithType: ClientEntity.ThrowIfFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: ThrowIfDisposedOrImmutable()
  nameWithType: ClientEntity.ThrowIfDisposedOrImmutable()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
    name: ThrowIfDisposedOrImmutable
    nameWithType: ClientEntity.ThrowIfDisposedOrImmutable
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
    name: ThrowIfDisposedOrImmutable
    nameWithType: ClientEntity.ThrowIfDisposedOrImmutable
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.ThrowIfDisposedOrImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnOpened()
  nameWithType: ClientEntity.OnOpened()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
    name: OnOpened
    nameWithType: ClientEntity.OnOpened
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
    name: OnOpened
    nameWithType: ClientEntity.OnOpened
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnOpened
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnClosed()
  nameWithType: ClientEntity.OnClosed()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
    name: OnClosed
    nameWithType: ClientEntity.OnClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
    name: OnClosed
    nameWithType: ClientEntity.OnClosed
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnFaulted()
  nameWithType: ClientEntity.OnFaulted()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
    name: OnFaulted
    nameWithType: ClientEntity.OnFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
    name: OnFaulted
    nameWithType: ClientEntity.OnFaulted
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ClientEntity.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: ClientEntity.OnBeginOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: ClientEntity.OnBeginOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnEndOpen(IAsyncResult)
  nameWithType: ClientEntity.OnEndOpen(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: ClientEntity.OnEndOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: ClientEntity.OnEndOpen
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.TopicClient.Path*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.Path
  isExternal: false
  name: Path
  nameWithType: TopicClient.Path
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Messaging.TopicClient
  commentId: T:Microsoft.ServiceBus.Messaging.TopicClient
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: TopicClient
  nameWithType: TopicClient
  fullName: Microsoft.ServiceBus.Messaging.TopicClient
- uid: Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory
  isExternal: false
  name: MessagingFactory
  nameWithType: TopicClient.MessagingFactory
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory
- uid: Microsoft.ServiceBus.Messaging.MessagingFactory
  commentId: T:Microsoft.ServiceBus.Messaging.MessagingFactory
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: Microsoft.ServiceBus.Messaging.MessagingFactory
- uid: Microsoft.ServiceBus.Messaging.TopicClient.IsSubQueue*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.IsSubQueue
  isExternal: false
  name: IsSubQueue
  nameWithType: TopicClient.IsSubQueue
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.IsSubQueue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Messaging.TopicClient.Create*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.Create
  isExternal: false
  name: Create
  nameWithType: TopicClient.Create
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.Create
- uid: Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.EntityPath
  commentId: P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.EntityPath
- uid: Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString
  isExternal: false
  name: CreateFromConnectionString
  nameWithType: TopicClient.CreateFromConnectionString
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.ServiceBus.Messaging.TopicClient.FormatTransferDeadLetterPath*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.FormatTransferDeadLetterPath
  isExternal: false
  name: FormatTransferDeadLetterPath
  nameWithType: TopicClient.FormatTransferDeadLetterPath
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.FormatTransferDeadLetterPath
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: Microsoft.ServiceBus.Messaging.TopicClient.EndCreateSender(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicClient.EndCreateSender(System.IAsyncResult)
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateSender*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateSender
  isExternal: false
  name: OnBeginCreateSender
  nameWithType: TopicClient.OnBeginCreateSender
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateSender
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceBus.Messaging.MessageSender
  commentId: T:Microsoft.ServiceBus.Messaging.MessageSender
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessageSender
  nameWithType: MessageSender
  fullName: Microsoft.ServiceBus.Messaging.MessageSender
- uid: Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateSender*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateSender
  isExternal: false
  name: OnEndCreateSender
  nameWithType: TopicClient.OnEndCreateSender
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateSender
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: false
  name: OnAbort()
  nameWithType: ClientEntity.OnAbort()
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
    name: OnAbort
    nameWithType: ClientEntity.OnAbort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
    name: OnAbort
    nameWithType: ClientEntity.OnAbort
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.TopicClient.OnAbort*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.OnAbort
  isExternal: false
  name: OnAbort
  nameWithType: TopicClient.OnAbort
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.OnAbort
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnClose(TimeSpan)
  nameWithType: ClientEntity.OnClose(TimeSpan)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: ClientEntity.OnClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: ClientEntity.OnClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.TopicClient.OnClose*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.OnClose
  isExternal: false
  name: OnClose
  nameWithType: TopicClient.OnClose
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.OnClose
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ClientEntity.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: ClientEntity.OnBeginClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: ClientEntity.OnBeginClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnBeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.TopicClient.OnBeginClose*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginClose
  isExternal: false
  name: OnBeginClose
  nameWithType: TopicClient.OnBeginClose
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.OnBeginClose
- uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  commentId: M:Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  parent: Microsoft.ServiceBus.Messaging.ClientEntity
  isExternal: true
  name: OnEndClose(IAsyncResult)
  nameWithType: ClientEntity.OnEndClose(IAsyncResult)
  fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: ClientEntity.OnEndClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: ClientEntity.OnEndClose
    fullName: Microsoft.ServiceBus.Messaging.ClientEntity.OnEndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.TopicClient.OnEndClose*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.OnEndClose
  isExternal: false
  name: OnEndClose
  nameWithType: TopicClient.OnEndClose
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.OnEndClose
- uid: Microsoft.ServiceBus.Messaging.QueueClient.InternalSender
  commentId: P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender
- uid: Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout
  commentId: P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout
- uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
  commentId: T:Microsoft.ServiceBus.Messaging.BrokeredMessage
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: BrokeredMessage
  nameWithType: BrokeredMessage
  fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
- uid: Microsoft.ServiceBus.Messaging.TopicClient.Send*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.Send
  isExternal: false
  name: Send
  nameWithType: TopicClient.Send
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.Send
- uid: System.TimeoutException
  commentId: T:System.TimeoutException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.OperationCanceledException
  commentId: T:System.OperationCanceledException
- uid: System.UnauthorizedAccessException
  commentId: T:System.UnauthorizedAccessException
- uid: System.Runtime.Serialization.SerializationException
  commentId: T:System.Runtime.Serialization.SerializationException
- uid: Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException
  commentId: T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException
  isExternal: false
  name: MessagingEntityNotFoundException
  nameWithType: MessagingEntityNotFoundException
  fullName: Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException
- uid: Microsoft.ServiceBus.Messaging.MessagingException
  commentId: T:Microsoft.ServiceBus.Messaging.MessagingException
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessagingException
  nameWithType: MessagingException
  fullName: Microsoft.ServiceBus.Messaging.MessagingException
- uid: Microsoft.ServiceBus.Messaging.TopicClient.SendAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.SendAsync
  isExternal: false
  name: SendAsync
  nameWithType: TopicClient.SendAsync
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.SendAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceBus.Messaging.TopicClient.SendBatch*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.SendBatch
  isExternal: false
  name: SendBatch
  nameWithType: TopicClient.SendBatch
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.SendBatch
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BrokeredMessage>
  nameWithType: IEnumerable<BrokeredMessage>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.BrokeredMessage>
  nameWithType.vb: IEnumerable(Of BrokeredMessage)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.BrokeredMessage)
  name.vb: IEnumerable(Of BrokeredMessage)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync
  isExternal: false
  name: SendBatchAsync
  nameWithType: TopicClient.SendBatchAsync
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync
- uid: Microsoft.ServiceBus.Messaging.TopicClient.Peek*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.Peek
  isExternal: false
  name: Peek
  nameWithType: TopicClient.Peek
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.Peek
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync
  isExternal: false
  name: PeekAsync
  nameWithType: TopicClient.PeekAsync
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.PeekAsync
- uid: System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.BrokeredMessage}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceBus.Messaging.BrokeredMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BrokeredMessage>
  nameWithType: Task<BrokeredMessage>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceBus.Messaging.BrokeredMessage>
  nameWithType.vb: Task(Of BrokeredMessage)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceBus.Messaging.BrokeredMessage)
  name.vb: Task(Of BrokeredMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch
  isExternal: false
  name: PeekBatch
  nameWithType: TopicClient.PeekBatch
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatch
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync
  isExternal: false
  name: PeekBatchAsync
  nameWithType: TopicClient.PeekBatchAsync
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.PeekBatchAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<BrokeredMessage>>
  nameWithType: Task<IEnumerable<BrokeredMessage>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.BrokeredMessage>>
  nameWithType.vb: Task(Of IEnumerable(Of BrokeredMessage))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.BrokeredMessage))
  name.vb: Task(Of IEnumerable(Of BrokeredMessage))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.TopicClient.ScheduleMessageAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.ScheduleMessageAsync
  isExternal: false
  name: ScheduleMessageAsync
  nameWithType: TopicClient.ScheduleMessageAsync
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.ScheduleMessageAsync
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Threading.Tasks.Task{System.Int64}
  commentId: T:System.Threading.Tasks.Task{System.Int64}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int64>
  nameWithType: Task<Int64>
  fullName: System.Threading.Tasks.Task<System.Int64>
  nameWithType.vb: Task(Of Int64)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int64)
  name.vb: Task(Of Int64)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.TopicClient.CancelScheduledMessageAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicClient.CancelScheduledMessageAsync
  isExternal: false
  name: CancelScheduledMessageAsync
  nameWithType: TopicClient.CancelScheduledMessageAsync
  fullName: Microsoft.ServiceBus.Messaging.TopicClient.CancelScheduledMessageAsync
