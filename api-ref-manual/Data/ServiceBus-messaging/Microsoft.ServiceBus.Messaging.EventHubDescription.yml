### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription
  commentId: T:Microsoft.ServiceBus.Messaging.EventHubDescription
  id: EventHubDescription
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.EventHubDescription.#ctor(System.String)
  - Microsoft.ServiceBus.Messaging.EventHubDescription.Authorization
  - Microsoft.ServiceBus.Messaging.EventHubDescription.CreatedAt
  - Microsoft.ServiceBus.Messaging.EventHubDescription.MessageRetentionInDays
  - Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount
  - Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionIds
  - Microsoft.ServiceBus.Messaging.EventHubDescription.Path
  - Microsoft.ServiceBus.Messaging.EventHubDescription.Status
  - Microsoft.ServiceBus.Messaging.EventHubDescription.UpdatedAt
  - Microsoft.ServiceBus.Messaging.EventHubDescription.UserMetadata
  langs:
  - csharp
  - vb
  name: EventHubDescription
  nameWithType: EventHubDescription
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EventHubDescription
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Represents the metadata description of an Event Hub.
  example: []
  syntax:
    content: >-
      [DataContract(Name = "EventHubDescription", Namespace = "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")]

      public sealed class EventHubDescription : EntityDescription, IExtensibleDataObject, IResourceDescription
    content.vb: >-
      <DataContract(Name:="EventHubDescription", Namespace:="http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")>

      Public NotInheritable Class EventHubDescription
          Inherits EntityDescription
          Implements IExtensibleDataObject, IResourceDescription
  inheritance:
  - System.Object
  - Microsoft.ServiceBus.Messaging.EntityDescription
  implements:
  - System.Runtime.Serialization.IExtensibleDataObject
  inheritedMembers:
  - Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  - Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  - Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: EventHubDescription
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/netservices/2010/10/servicebus/connect
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.#ctor(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubDescription.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.ServiceBus.Messaging.EventHubDescription
  langs:
  - csharp
  - vb
  name: EventHubDescription(String)
  nameWithType: EventHubDescription.EventHubDescription(String)
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.EventHubDescription(System.String)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
    startLine: 20
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.Messaging.EventHubDescription" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public EventHubDescription(string path)
    content.vb: Public Sub New(path As String)
    parameters:
    - id: path
      type: System.String
      description: The path of the event hub relative to the service namespace base address.
  overload: Microsoft.ServiceBus.Messaging.EventHubDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.Path
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubDescription.Path
  id: Path
  parent: Microsoft.ServiceBus.Messaging.EventHubDescription
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: EventHubDescription.Path
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.Path
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Path
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the full path of the Event Hub.
  remarks: "\nThis is a relative path to the <xref href=\"Microsoft.ServiceBus.NamespaceManager.Address\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string Path { get; set; }
    content.vb: Public Property Path As String
    parameters: []
    return:
      type: System.String
      description: The path of the Event Hub.
  overload: Microsoft.ServiceBus.Messaging.EventHubDescription.Path*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Thrown if an attempt is made to set the \nvalue of this property when the instance is marked as readonly."
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.MessageRetentionInDays
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubDescription.MessageRetentionInDays
  id: MessageRetentionInDays
  parent: Microsoft.ServiceBus.Messaging.EventHubDescription
  langs:
  - csharp
  - vb
  name: MessageRetentionInDays
  nameWithType: EventHubDescription.MessageRetentionInDays
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.MessageRetentionInDays
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MessageRetentionInDays
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
    startLine: 57
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the number of days to retain the events for this Event Hub.
  example: []
  syntax:
    content: public long MessageRetentionInDays { get; set; }
    content.vb: Public Property MessageRetentionInDays As Long
    parameters: []
    return:
      type: System.Int64
      description: The retention time of the event data, in days.
  overload: Microsoft.ServiceBus.Messaging.EventHubDescription.MessageRetentionInDays*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.Authorization
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubDescription.Authorization
  id: Authorization
  parent: Microsoft.ServiceBus.Messaging.EventHubDescription
  langs:
  - csharp
  - vb
  name: Authorization
  nameWithType: EventHubDescription.Authorization
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.Authorization
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Authorization
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
    startLine: 85
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRules" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AuthorizationRules Authorization { get; }
    content.vb: Public ReadOnly Property Authorization As AuthorizationRules
    parameters: []
    return:
      type: Microsoft.ServiceBus.Messaging.AuthorizationRules
      description: The <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRules" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.EventHubDescription.Authorization*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.Status
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubDescription.Status
  id: Status
  parent: Microsoft.ServiceBus.Messaging.EventHubDescription
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: EventHubDescription.Status
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.Status
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Status
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
    startLine: 118
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the current status of the Event Hub (enabled or disabled).
  remarks: "This status does not get updated real time.\nTo get up-to-date status, refresh the description with the \n<xref href=\"Microsoft.ServiceBus.NamespaceManager.GetEventHub(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method"
  example: []
  syntax:
    content: public EntityStatus Status { get; set; }
    content.vb: Public Property Status As EntityStatus
    parameters: []
    return:
      type: Microsoft.ServiceBus.Messaging.EntityStatus
      description: The current status of the event hub.
  overload: Microsoft.ServiceBus.Messaging.EventHubDescription.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.CreatedAt
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubDescription.CreatedAt
  id: CreatedAt
  parent: Microsoft.ServiceBus.Messaging.EventHubDescription
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: EventHubDescription.CreatedAt
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.CreatedAt
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreatedAt
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
    startLine: 133
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the exact time the message was created.
  example: []
  syntax:
    content: public DateTime CreatedAt { get; }
    content.vb: Public ReadOnly Property CreatedAt As Date
    parameters: []
    return:
      type: System.DateTime
      description: The exact time the message was created.
  overload: Microsoft.ServiceBus.Messaging.EventHubDescription.CreatedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.UpdatedAt
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubDescription.UpdatedAt
  id: UpdatedAt
  parent: Microsoft.ServiceBus.Messaging.EventHubDescription
  langs:
  - csharp
  - vb
  name: UpdatedAt
  nameWithType: EventHubDescription.UpdatedAt
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.UpdatedAt
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: UpdatedAt
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
    startLine: 143
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the exact time the message has been updated.
  example: []
  syntax:
    content: public DateTime UpdatedAt { get; }
    content.vb: Public ReadOnly Property UpdatedAt As Date
    parameters: []
    return:
      type: System.DateTime
      description: The time the message has been updated.
  overload: Microsoft.ServiceBus.Messaging.EventHubDescription.UpdatedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.UserMetadata
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubDescription.UserMetadata
  id: UserMetadata
  parent: Microsoft.ServiceBus.Messaging.EventHubDescription
  langs:
  - csharp
  - vb
  name: UserMetadata
  nameWithType: EventHubDescription.UserMetadata
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.UserMetadata
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: UserMetadata
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
    startLine: 153
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the user metadata.
  example: []
  syntax:
    content: public string UserMetadata { get; set; }
    content.vb: Public Property UserMetadata As String
    parameters: []
    return:
      type: System.String
      description: The user metadata.
  overload: Microsoft.ServiceBus.Messaging.EventHubDescription.UserMetadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount
  id: PartitionCount
  parent: Microsoft.ServiceBus.Messaging.EventHubDescription
  langs:
  - csharp
  - vb
  name: PartitionCount
  nameWithType: EventHubDescription.PartitionCount
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PartitionCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
    startLine: 182
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the current number of shards on the Event Hub.
  example: []
  syntax:
    content: public int PartitionCount { get; set; }
    content.vb: Public Property PartitionCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: Returns the number of subscriptions on the Event Hub.
  overload: Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if the partition count value is negative.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionIds
  commentId: P:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionIds
  id: PartitionIds
  parent: Microsoft.ServiceBus.Messaging.EventHubDescription
  langs:
  - csharp
  - vb
  name: PartitionIds
  nameWithType: EventHubDescription.PartitionIds
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionIds
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PartitionIds
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EventHubDescription.cs
    startLine: 203
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets identifiers for partitions created for Event Hubs.
  example: []
  syntax:
    content: public string[] PartitionIds { get; }
    content.vb: Public ReadOnly Property PartitionIds As String()
    parameters: []
    return:
      type: System.String[]
      description: Returns <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionIds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceBus.Messaging.EntityDescription
  commentId: T:Microsoft.ServiceBus.Messaging.EntityDescription
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EntityDescription
  nameWithType: EntityDescription
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription
- uid: System.Runtime.Serialization.IExtensibleDataObject
  commentId: T:System.Runtime.Serialization.IExtensibleDataObject
  parent: System.Runtime.Serialization
  isExternal: true
  name: IExtensibleDataObject
  nameWithType: IExtensibleDataObject
  fullName: System.Runtime.Serialization.IExtensibleDataObject
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  commentId: P:Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  parent: Microsoft.ServiceBus.Messaging.EntityDescription
  isExternal: false
  name: IsReadOnly
  nameWithType: EntityDescription.IsReadOnly
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  commentId: P:Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  parent: Microsoft.ServiceBus.Messaging.EntityDescription
  isExternal: false
  name: ExtensionData
  nameWithType: EntityDescription.ExtensionData
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  commentId: M:Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  parent: Microsoft.ServiceBus.Messaging.EntityDescription
  isExternal: false
  name: ThrowIfReadOnly()
  nameWithType: EntityDescription.ThrowIfReadOnly()
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
    name: ThrowIfReadOnly
    nameWithType: EntityDescription.ThrowIfReadOnly
    fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
    name: ThrowIfReadOnly
    nameWithType: EntityDescription.ThrowIfReadOnly
    fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription
  commentId: T:Microsoft.ServiceBus.Messaging.EventHubDescription
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EventHubDescription
  nameWithType: EventHubDescription
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubDescription.#ctor
  isExternal: false
  name: EventHubDescription
  nameWithType: EventHubDescription.EventHubDescription
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.EventHubDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.NamespaceManager.Address
  commentId: P:Microsoft.ServiceBus.NamespaceManager.Address
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.Path*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubDescription.Path
  isExternal: false
  name: Path
  nameWithType: EventHubDescription.Path
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.Path
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.MessageRetentionInDays*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubDescription.MessageRetentionInDays
  isExternal: false
  name: MessageRetentionInDays
  nameWithType: EventHubDescription.MessageRetentionInDays
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.MessageRetentionInDays
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules
  commentId: T:Microsoft.ServiceBus.Messaging.AuthorizationRules
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: AuthorizationRules
  nameWithType: AuthorizationRules
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.Authorization*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubDescription.Authorization
  isExternal: false
  name: Authorization
  nameWithType: EventHubDescription.Authorization
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.Authorization
- uid: Microsoft.ServiceBus.NamespaceManager.GetEventHub(System.String)
  commentId: M:Microsoft.ServiceBus.NamespaceManager.GetEventHub(System.String)
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.Status*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubDescription.Status
  isExternal: false
  name: Status
  nameWithType: EventHubDescription.Status
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.Status
- uid: Microsoft.ServiceBus.Messaging.EntityStatus
  commentId: T:Microsoft.ServiceBus.Messaging.EntityStatus
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EntityStatus
  nameWithType: EntityStatus
  fullName: Microsoft.ServiceBus.Messaging.EntityStatus
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.CreatedAt*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubDescription.CreatedAt
  isExternal: false
  name: CreatedAt
  nameWithType: EventHubDescription.CreatedAt
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.CreatedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.UpdatedAt*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubDescription.UpdatedAt
  isExternal: false
  name: UpdatedAt
  nameWithType: EventHubDescription.UpdatedAt
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.UpdatedAt
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.UserMetadata*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubDescription.UserMetadata
  isExternal: false
  name: UserMetadata
  nameWithType: EventHubDescription.UserMetadata
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.UserMetadata
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount
  isExternal: false
  name: PartitionCount
  nameWithType: EventHubDescription.PartitionCount
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionCount
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionIds*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionIds
  isExternal: false
  name: PartitionIds
  nameWithType: EventHubDescription.PartitionIds
  fullName: Microsoft.ServiceBus.Messaging.EventHubDescription.PartitionIds
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
