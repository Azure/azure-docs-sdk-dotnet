### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.EntityDescription
  commentId: T:Microsoft.ServiceBus.Messaging.EntityDescription
  id: EntityDescription
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  - Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  - Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  langs:
  - csharp
  - vb
  name: EntityDescription
  nameWithType: EntityDescription
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EntityDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EntityDescription
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EntityDescription.cs
    startLine: 14
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Represents the description of an entity.
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")]

      [KnownType(typeof (QueueDescription))]

      [KnownType(typeof (TopicDescription))]

      [KnownType(typeof (SubscriptionDescription))]

      [KnownType(typeof (RuleDescription))]

      [KnownType(typeof (EventHubDescription))]

      [KnownType(typeof (ConsumerGroupDescription))]

      [KnownType(typeof (PartitionDescription))]

      [KnownType(typeof (RevokedPublisherDescription))]

      [KnownType(typeof (RelayDescription))]

      [KnownType(typeof (HybridConnectionDescription))]

      public abstract class EntityDescription : IExtensibleDataObject
    content.vb: >-
      <DataContract(Namespace:="http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")>

      <KnownType(GetType(QueueDescription))>

      <KnownType(GetType(TopicDescription))>

      <KnownType(GetType(SubscriptionDescription))>

      <KnownType(GetType(RuleDescription))>

      <KnownType(GetType(EventHubDescription))>

      <KnownType(GetType(ConsumerGroupDescription))>

      <KnownType(GetType(PartitionDescription))>

      <KnownType(GetType(RevokedPublisherDescription))>

      <KnownType(GetType(RelayDescription))>

      <KnownType(GetType(HybridConnectionDescription))>

      Public MustInherit Class EntityDescription
          Implements IExtensibleDataObject
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.ServiceBus.Messaging.ConsumerGroupDescription
  - Microsoft.ServiceBus.Messaging.EventHubDescription
  - Microsoft.ServiceBus.Messaging.PartitionDescription
  - Microsoft.ServiceBus.Messaging.QueueDescription
  - Microsoft.ServiceBus.Messaging.RelayDescription
  - Microsoft.ServiceBus.Messaging.RevokedPublisherDescription
  - Microsoft.ServiceBus.Messaging.RuleDescription
  - Microsoft.ServiceBus.Messaging.SubscriptionDescription
  - Microsoft.ServiceBus.Messaging.TopicDescription
  - Microsoft.ServiceBus.Relay.HybridConnectionDescription
  implements:
  - System.Runtime.Serialization.IExtensibleDataObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/netservices/2010/10/servicebus/connect
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.ServiceBus.Messaging.QueueDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.ServiceBus.Messaging.TopicDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.ServiceBus.Messaging.SubscriptionDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.ServiceBus.Messaging.RuleDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.ServiceBus.Messaging.EventHubDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.ServiceBus.Messaging.ConsumerGroupDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.ServiceBus.Messaging.PartitionDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.ServiceBus.Messaging.RevokedPublisherDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.ServiceBus.Messaging.RelayDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.ServiceBus.Relay.HybridConnectionDescription
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  commentId: P:Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  id: IsReadOnly
  parent: Microsoft.ServiceBus.Messaging.EntityDescription
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: EntityDescription.IsReadOnly
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EntityDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IsReadOnly
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EntityDescription.cs
    startLine: 37
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets a value that indicates whether the entity description is read-only.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the entity description is read-only; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  commentId: P:Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  id: ExtensionData
  parent: Microsoft.ServiceBus.Messaging.EntityDescription
  langs:
  - csharp
  - vb
  name: ExtensionData
  nameWithType: EntityDescription.ExtensionData
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EntityDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ExtensionData
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EntityDescription.cs
    startLine: 42
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the structure that contains extra data.
  example: []
  syntax:
    content: public ExtensionDataObject ExtensionData { get; set; }
    content.vb: Public Property ExtensionData As ExtensionDataObject
    parameters: []
    return:
      type: System.Runtime.Serialization.ExtensionDataObject
      description: "An \n<xref href=\"System.Runtime.Serialization.ExtensionDataObject\" data-throw-if-not-resolved=\"false\"></xref> that contains data that is not recognized as belonging to the data contract."
  overload: Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData*
  implements:
  - System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  commentId: M:Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  id: ThrowIfReadOnly
  parent: Microsoft.ServiceBus.Messaging.EntityDescription
  langs:
  - csharp
  - vb
  name: ThrowIfReadOnly()
  nameWithType: EntityDescription.ThrowIfReadOnly()
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EntityDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ThrowIfReadOnly
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/EntityDescription.cs
    startLine: 108
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Throws an exception if the entity description is read-only.
  example: []
  syntax:
    content: protected void ThrowIfReadOnly()
    content.vb: Protected Sub ThrowIfReadOnly
  overload: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.IExtensibleDataObject
  commentId: T:System.Runtime.Serialization.IExtensibleDataObject
  parent: System.Runtime.Serialization
  isExternal: true
  name: IExtensibleDataObject
  nameWithType: IExtensibleDataObject
  fullName: System.Runtime.Serialization.IExtensibleDataObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: EntityDescription.IsReadOnly
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Serialization.ExtensionDataObject
  commentId: T:System.Runtime.Serialization.ExtensionDataObject
  parent: System.Runtime.Serialization
  isExternal: true
  name: ExtensionDataObject
  nameWithType: ExtensionDataObject
  fullName: System.Runtime.Serialization.ExtensionDataObject
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  isExternal: false
  name: ExtensionData
  nameWithType: EntityDescription.ExtensionData
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
- uid: System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  commentId: P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
  parent: System.Runtime.Serialization.IExtensibleDataObject
  isExternal: true
  name: ExtensionData
  nameWithType: IExtensibleDataObject.ExtensionData
  fullName: System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly*
  commentId: Overload:Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  isExternal: false
  name: ThrowIfReadOnly
  nameWithType: EntityDescription.ThrowIfReadOnly
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
