### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  commentId: T:Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  id: PartitionManagerOptions
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.PartitionManagerOptions.#ctor
  - Microsoft.ServiceBus.Messaging.PartitionManagerOptions.AcquireInterval
  - Microsoft.ServiceBus.Messaging.PartitionManagerOptions.DefaultOptions
  - Microsoft.ServiceBus.Messaging.PartitionManagerOptions.LeaseInterval
  - Microsoft.ServiceBus.Messaging.PartitionManagerOptions.MaxReceiveClients
  - Microsoft.ServiceBus.Messaging.PartitionManagerOptions.RenewInterval
  - Microsoft.ServiceBus.Messaging.PartitionManagerOptions.SkipBlobContainerCreation
  langs:
  - csharp
  - vb
  name: PartitionManagerOptions
  nameWithType: PartitionManagerOptions
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PartitionManagerOptions
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
    startLine: 11
  assemblies:
  - Microsoft.ServiceBus.Messaging.EventProcessorHost
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nOptions to control various aspects of partition distribution happening within <xref href=\"Microsoft.ServiceBus.Messaging.EventProcessorHost\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public class PartitionManagerOptions
    content.vb: Public Class PartitionManagerOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.#ctor
  commentId: M:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  langs:
  - csharp
  - vb
  name: PartitionManagerOptions()
  nameWithType: PartitionManagerOptions.PartitionManagerOptions()
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.PartitionManagerOptions()
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
    startLine: 19
  assemblies:
  - Microsoft.ServiceBus.Messaging.EventProcessorHost
  namespace: Microsoft.ServiceBus.Messaging
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.Messaging.PartitionManagerOptions" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public PartitionManagerOptions()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.RenewInterval
  commentId: P:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.RenewInterval
  id: RenewInterval
  parent: Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  langs:
  - csharp
  - vb
  name: RenewInterval
  nameWithType: PartitionManagerOptions.RenewInterval
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.RenewInterval
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: RenewInterval
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
    startLine: 30
  assemblies:
  - Microsoft.ServiceBus.Messaging.EventProcessorHost
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nRenew interval for all leases for partitions currently held by <xref href=\"Microsoft.ServiceBus.Messaging.EventProcessorHost\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public TimeSpan RenewInterval { get; set; }
    content.vb: Public Property RenewInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  overload: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.RenewInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.AcquireInterval
  commentId: P:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.AcquireInterval
  id: AcquireInterval
  parent: Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  langs:
  - csharp
  - vb
  name: AcquireInterval
  nameWithType: PartitionManagerOptions.AcquireInterval
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.AcquireInterval
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AcquireInterval
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceBus.Messaging.EventProcessorHost
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nInterval when <xref href=\"Microsoft.ServiceBus.Messaging.EventProcessorHost\" data-throw-if-not-resolved=\"false\"></xref> instance kicks off a task to compute if partitions are distributed evenly\namong known host instances. \n"
  example: []
  syntax:
    content: public TimeSpan AcquireInterval { get; set; }
    content.vb: Public Property AcquireInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  overload: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.AcquireInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.LeaseInterval
  commentId: P:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.LeaseInterval
  id: LeaseInterval
  parent: Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  langs:
  - csharp
  - vb
  name: LeaseInterval
  nameWithType: PartitionManagerOptions.LeaseInterval
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.LeaseInterval
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: LeaseInterval
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
    startLine: 42
  assemblies:
  - Microsoft.ServiceBus.Messaging.EventProcessorHost
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nInterval for which the lease is taken on Azure Blob representing an EventHub partition.  If the lease is not renewed within this \ninterval, it will cause it to expire and ownership of the partition will move to another <xref href=\"Microsoft.ServiceBus.Messaging.EventProcessorHost\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public TimeSpan LeaseInterval { get; set; }
    content.vb: Public Property LeaseInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  overload: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.LeaseInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.MaxReceiveClients
  commentId: P:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.MaxReceiveClients
  id: MaxReceiveClients
  parent: Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  langs:
  - csharp
  - vb
  name: MaxReceiveClients
  nameWithType: PartitionManagerOptions.MaxReceiveClients
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.MaxReceiveClients
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MaxReceiveClients
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
    startLine: 48
  assemblies:
  - Microsoft.ServiceBus.Messaging.EventProcessorHost
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nMaximum number of receiver clients created for each host instance. Once the max is reached host will start rebalancing partitions \namong receiver clients already created.\n"
  example: []
  syntax:
    content: public int MaxReceiveClients { get; set; }
    content.vb: Public Property MaxReceiveClients As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.MaxReceiveClients*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.SkipBlobContainerCreation
  commentId: P:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.SkipBlobContainerCreation
  id: SkipBlobContainerCreation
  parent: Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  langs:
  - csharp
  - vb
  name: SkipBlobContainerCreation
  nameWithType: PartitionManagerOptions.SkipBlobContainerCreation
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.SkipBlobContainerCreation
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SkipBlobContainerCreation
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
    startLine: 55
  assemblies:
  - Microsoft.ServiceBus.Messaging.EventProcessorHost
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nUse this option if you want creation of Blob container for partition leases to happen outside of EventProcessorHost.  This is \nuseful in scenarios where you want to pass in a CloudBlobClient to EventProcessorHost which does not have permissions to create\nstorage container.  Default value for this options is 'false'.\n"
  example: []
  syntax:
    content: public bool SkipBlobContainerCreation { get; set; }
    content.vb: Public Property SkipBlobContainerCreation As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.SkipBlobContainerCreation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.DefaultOptions
  commentId: P:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.DefaultOptions
  id: DefaultOptions
  parent: Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  langs:
  - csharp
  - vb
  name: DefaultOptions
  nameWithType: PartitionManagerOptions.DefaultOptions
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.DefaultOptions
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: DefaultOptions
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging.EventProcessorHost/PartitionManagerOptions.cs
    startLine: 64
  assemblies:
  - Microsoft.ServiceBus.Messaging.EventProcessorHost
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nCreates an instance of <xref href=\"Microsoft.ServiceBus.Messaging.PartitionManagerOptions\" data-throw-if-not-resolved=\"false\"></xref> with following default values:\na) RenewInterval = 10 seconds\nb) AcquireInterval = 10 seconds\nc) DefaultLeaseInterval = 30 seconds\nd) MaxReceiveClients = 16,\n"
  example: []
  syntax:
    content: public static PartitionManagerOptions DefaultOptions { get; }
    content.vb: Public Shared ReadOnly Property DefaultOptions As PartitionManagerOptions
    parameters: []
    return:
      type: Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  overload: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.DefaultOptions*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.ServiceBus.Messaging.EventProcessorHost
  commentId: T:Microsoft.ServiceBus.Messaging.EventProcessorHost
  isExternal: false
  name: EventProcessorHost
  nameWithType: EventProcessorHost
  fullName: Microsoft.ServiceBus.Messaging.EventProcessorHost
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  commentId: T:Microsoft.ServiceBus.Messaging.PartitionManagerOptions
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: PartitionManagerOptions
  nameWithType: PartitionManagerOptions
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.#ctor
  isExternal: false
  name: PartitionManagerOptions
  nameWithType: PartitionManagerOptions.PartitionManagerOptions
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.PartitionManagerOptions
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.RenewInterval*
  commentId: Overload:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.RenewInterval
  isExternal: false
  name: RenewInterval
  nameWithType: PartitionManagerOptions.RenewInterval
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.RenewInterval
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.AcquireInterval*
  commentId: Overload:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.AcquireInterval
  isExternal: false
  name: AcquireInterval
  nameWithType: PartitionManagerOptions.AcquireInterval
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.AcquireInterval
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.LeaseInterval*
  commentId: Overload:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.LeaseInterval
  isExternal: false
  name: LeaseInterval
  nameWithType: PartitionManagerOptions.LeaseInterval
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.LeaseInterval
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.MaxReceiveClients*
  commentId: Overload:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.MaxReceiveClients
  isExternal: false
  name: MaxReceiveClients
  nameWithType: PartitionManagerOptions.MaxReceiveClients
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.MaxReceiveClients
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.SkipBlobContainerCreation*
  commentId: Overload:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.SkipBlobContainerCreation
  isExternal: false
  name: SkipBlobContainerCreation
  nameWithType: PartitionManagerOptions.SkipBlobContainerCreation
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.SkipBlobContainerCreation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.DefaultOptions*
  commentId: Overload:Microsoft.ServiceBus.Messaging.PartitionManagerOptions.DefaultOptions
  isExternal: false
  name: DefaultOptions
  nameWithType: PartitionManagerOptions.DefaultOptions
  fullName: Microsoft.ServiceBus.Messaging.PartitionManagerOptions.DefaultOptions
