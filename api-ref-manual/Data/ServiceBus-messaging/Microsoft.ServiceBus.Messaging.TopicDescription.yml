### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.TopicDescription
  commentId: T:Microsoft.ServiceBus.Messaging.TopicDescription
  id: TopicDescription
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.TopicDescription.#ctor(System.String)
  - Microsoft.ServiceBus.Messaging.TopicDescription.AccessedAt
  - Microsoft.ServiceBus.Messaging.TopicDescription.Authorization
  - Microsoft.ServiceBus.Messaging.TopicDescription.AutoDeleteOnIdle
  - Microsoft.ServiceBus.Messaging.TopicDescription.AvailabilityStatus
  - Microsoft.ServiceBus.Messaging.TopicDescription.CreatedAt
  - Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive
  - Microsoft.ServiceBus.Messaging.TopicDescription.DuplicateDetectionHistoryTimeWindow
  - Microsoft.ServiceBus.Messaging.TopicDescription.EnableBatchedOperations
  - Microsoft.ServiceBus.Messaging.TopicDescription.EnableExpress
  - Microsoft.ServiceBus.Messaging.TopicDescription.EnableFilteringMessagesBeforePublishing
  - Microsoft.ServiceBus.Messaging.TopicDescription.EnablePartitioning
  - Microsoft.ServiceBus.Messaging.TopicDescription.IsAnonymousAccessible
  - Microsoft.ServiceBus.Messaging.TopicDescription.MaxSizeInMegabytes
  - Microsoft.ServiceBus.Messaging.TopicDescription.MessageCountDetails
  - Microsoft.ServiceBus.Messaging.TopicDescription.MessageTimeToLiveDefaultValue
  - Microsoft.ServiceBus.Messaging.TopicDescription.Path
  - Microsoft.ServiceBus.Messaging.TopicDescription.RequiresDuplicateDetection
  - Microsoft.ServiceBus.Messaging.TopicDescription.SizeInBytes
  - Microsoft.ServiceBus.Messaging.TopicDescription.Status
  - Microsoft.ServiceBus.Messaging.TopicDescription.SubscriptionCount
  - Microsoft.ServiceBus.Messaging.TopicDescription.SupportOrdering
  - Microsoft.ServiceBus.Messaging.TopicDescription.UpdatedAt
  - Microsoft.ServiceBus.Messaging.TopicDescription.UserMetadata
  langs:
  - csharp
  - vb
  name: TopicDescription
  nameWithType: TopicDescription
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: TopicDescription
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 11
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Represents a description of the topic.
  example: []
  syntax:
    content: >-
      [DataContract(Name = "TopicDescription", Namespace = "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")]

      public sealed class TopicDescription : EntityDescription, IExtensibleDataObject, IResourceDescription
    content.vb: >-
      <DataContract(Name:="TopicDescription", Namespace:="http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")>

      Public NotInheritable Class TopicDescription
          Inherits EntityDescription
          Implements IExtensibleDataObject, IResourceDescription
  inheritance:
  - System.Object
  - Microsoft.ServiceBus.Messaging.EntityDescription
  implements:
  - System.Runtime.Serialization.IExtensibleDataObject
  inheritedMembers:
  - Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  - Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  - Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: TopicDescription
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/netservices/2010/10/servicebus/connect
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.MessageTimeToLiveDefaultValue
  commentId: F:Microsoft.ServiceBus.Messaging.TopicDescription.MessageTimeToLiveDefaultValue
  id: MessageTimeToLiveDefaultValue
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: MessageTimeToLiveDefaultValue
  nameWithType: TopicDescription.MessageTimeToLiveDefaultValue
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.MessageTimeToLiveDefaultValue
  type: Field
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MessageTimeToLiveDefaultValue
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 17
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nThe message time to live default value\n"
  example: []
  syntax:
    content: public static readonly TimeSpan MessageTimeToLiveDefaultValue
    content.vb: Public Shared ReadOnly MessageTimeToLiveDefaultValue As TimeSpan
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.#ctor(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.TopicDescription.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: TopicDescription(String)
  nameWithType: TopicDescription.TopicDescription(String)
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.TopicDescription(System.String)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 27
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.Messaging.TopicDescription\" data-throw-if-not-resolved=\"false\"></xref> class with the specified relative path."
  example: []
  syntax:
    content: public TopicDescription(string path)
    content.vb: Public Sub New(path As String)
    parameters:
    - id: path
      type: System.String
      description: The path of the topic relative to the service namespace base address.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive
  id: DefaultMessageTimeToLive
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: DefaultMessageTimeToLive
  nameWithType: TopicDescription.DefaultMessageTimeToLive
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: DefaultMessageTimeToLive
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 35
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Gets or sets the default message time to live value for a topic. This is the duration after which the message expires, starting from when the message is sent to the Service Bus. This is the default value used when \n<xref href=\"Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive\" data-throw-if-not-resolved=\"false\"></xref> is not set on a message itself.Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages."
  example: []
  syntax:
    content: public TimeSpan DefaultMessageTimeToLive { get; set; }
    content.vb: Public Property DefaultMessageTimeToLive As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: The default message time to live for a topic.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.AutoDeleteOnIdle
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.AutoDeleteOnIdle
  id: AutoDeleteOnIdle
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: AutoDeleteOnIdle
  nameWithType: TopicDescription.AutoDeleteOnIdle
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.AutoDeleteOnIdle
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AutoDeleteOnIdle
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 61
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Gets or sets the \n<xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
  example: []
  syntax:
    content: public TimeSpan AutoDeleteOnIdle { get; set; }
    content.vb: Public Property AutoDeleteOnIdle As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: The auto delete on idle time span for the topic.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.AutoDeleteOnIdle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.MaxSizeInMegabytes
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.MaxSizeInMegabytes
  id: MaxSizeInMegabytes
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: MaxSizeInMegabytes
  nameWithType: TopicDescription.MaxSizeInMegabytes
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.MaxSizeInMegabytes
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MaxSizeInMegabytes
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 77
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the maximum size of the topic in megabytes, which is the size of memory allocated for the topic.
  example: []
  syntax:
    content: public long MaxSizeInMegabytes { get; set; }
    content.vb: Public Property MaxSizeInMegabytes As Long
    parameters: []
    return:
      type: System.Int64
      description: The maximum size in megabytes.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.MaxSizeInMegabytes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.RequiresDuplicateDetection
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.RequiresDuplicateDetection
  id: RequiresDuplicateDetection
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: RequiresDuplicateDetection
  nameWithType: TopicDescription.RequiresDuplicateDetection
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.RequiresDuplicateDetection
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: RequiresDuplicateDetection
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 100
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the value that indicates whether a topic requires duplication detection.
  example: []
  syntax:
    content: public bool RequiresDuplicateDetection { get; set; }
    content.vb: Public Property RequiresDuplicateDetection As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if a topic requires duplication detection; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.RequiresDuplicateDetection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.DuplicateDetectionHistoryTimeWindow
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.DuplicateDetectionHistoryTimeWindow
  id: DuplicateDetectionHistoryTimeWindow
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: DuplicateDetectionHistoryTimeWindow
  nameWithType: TopicDescription.DuplicateDetectionHistoryTimeWindow
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.DuplicateDetectionHistoryTimeWindow
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: DuplicateDetectionHistoryTimeWindow
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 116
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> structure that defines the duration of the duplicate detection history.
  example: []
  syntax:
    content: public TimeSpan DuplicateDetectionHistoryTimeWindow { get; set; }
    content.vb: Public Property DuplicateDetectionHistoryTimeWindow As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> structure that defines the duration of the duplicate detection history.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.DuplicateDetectionHistoryTimeWindow*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.SizeInBytes
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.SizeInBytes
  id: SizeInBytes
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: SizeInBytes
  nameWithType: TopicDescription.SizeInBytes
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.SizeInBytes
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SizeInBytes
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 149
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the size of the topic in bytes.
  example: []
  syntax:
    content: public long SizeInBytes { get; }
    content.vb: Public ReadOnly Property SizeInBytes As Long
    parameters: []
    return:
      type: System.Int64
      description: The size of the topic in bytes.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.SizeInBytes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.Path
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.Path
  id: Path
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: TopicDescription.Path
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.Path
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Path
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 162
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the path of the topic.
  remarks: "\nThis is a relative path to the <xref href=\"Microsoft.ServiceBus.NamespaceManager.Address\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string Path { get; set; }
    content.vb: Public Property Path As String
    parameters: []
    return:
      type: System.String
      description: The path of the topic.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.Path*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.EnableBatchedOperations
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableBatchedOperations
  id: EnableBatchedOperations
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: EnableBatchedOperations
  nameWithType: TopicDescription.EnableBatchedOperations
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.EnableBatchedOperations
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EnableBatchedOperations
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 183
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets a value that indicates whether server-side batched operations are enabled.
  example: []
  syntax:
    content: public bool EnableBatchedOperations { get; set; }
    content.vb: Public Property EnableBatchedOperations As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the batched operations are enabled; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.EnableBatchedOperations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.SupportOrdering
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.SupportOrdering
  id: SupportOrdering
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: SupportOrdering
  nameWithType: TopicDescription.SupportOrdering
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.SupportOrdering
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SupportOrdering
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 199
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the support ordering method.
  example: []
  syntax:
    content: public bool SupportOrdering { get; set; }
    content.vb: Public Property SupportOrdering As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: The support ordering method.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.SupportOrdering*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.EnableFilteringMessagesBeforePublishing
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableFilteringMessagesBeforePublishing
  id: EnableFilteringMessagesBeforePublishing
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: EnableFilteringMessagesBeforePublishing
  nameWithType: TopicDescription.EnableFilteringMessagesBeforePublishing
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.EnableFilteringMessagesBeforePublishing
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EnableFilteringMessagesBeforePublishing
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 220
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets whether messages should be filtered before publishing.
  remarks: "This feature is recommended to be used only for development and testing purposes.  \nFor example, when  new Rules or Filters are being added to the topic, this feature can \nbe used to verify that the new filter expression is working as expected. Once tested \nand working fine, the feature should be turned off in production. "
  example: []
  syntax:
    content: public bool EnableFilteringMessagesBeforePublishing { get; set; }
    content.vb: Public Property EnableFilteringMessagesBeforePublishing As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if message filtering is enabled before publishing; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.EnableFilteringMessagesBeforePublishing*
  exceptions:
  - type: Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException
    commentId: T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException
    description: Thrown if the subscriptions do not match.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.IsAnonymousAccessible
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.IsAnonymousAccessible
  id: IsAnonymousAccessible
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: IsAnonymousAccessible
  nameWithType: TopicDescription.IsAnonymousAccessible
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.IsAnonymousAccessible
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IsAnonymousAccessible
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 233
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets whether anonymous access is allowed.
  example: []
  syntax:
    content: public bool IsAnonymousAccessible { get; set; }
    content.vb: Public Property IsAnonymousAccessible As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if anonymous access is allowed; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.IsAnonymousAccessible*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.Authorization
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.Authorization
  id: Authorization
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: Authorization
  nameWithType: TopicDescription.Authorization
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.Authorization
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Authorization
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 261
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the authorization rules for the description.
  example: []
  syntax:
    content: public AuthorizationRules Authorization { get; }
    content.vb: Public ReadOnly Property Authorization As AuthorizationRules
    parameters: []
    return:
      type: Microsoft.ServiceBus.Messaging.AuthorizationRules
      description: The authorization rules for the description.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.Authorization*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.Status
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.Status
  id: Status
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: TopicDescription.Status
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.Status
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Status
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 276
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Gets or sets the current status of the topic (enabled or \ndisabled). When an entity is disabled, that entity cannot send or receive messages."
  example: []
  syntax:
    content: public EntityStatus Status { get; set; }
    content.vb: Public Property Status As EntityStatus
    parameters: []
    return:
      type: Microsoft.ServiceBus.Messaging.EntityStatus
      description: The status of the topic.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.AvailabilityStatus
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.AvailabilityStatus
  id: AvailabilityStatus
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: AvailabilityStatus
  nameWithType: TopicDescription.AvailabilityStatus
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.AvailabilityStatus
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AvailabilityStatus
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 290
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the status of the availability of this instance.
  example: []
  syntax:
    content: public EntityAvailabilityStatus AvailabilityStatus { get; }
    content.vb: Public ReadOnly Property AvailabilityStatus As EntityAvailabilityStatus
    parameters: []
    return:
      type: Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus
      description: The status of the availability of this instance.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.AvailabilityStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.CreatedAt
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.CreatedAt
  id: CreatedAt
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: TopicDescription.CreatedAt
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.CreatedAt
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreatedAt
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 300
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the time and date when the topic was created.
  example: []
  syntax:
    content: public DateTime CreatedAt { get; }
    content.vb: Public ReadOnly Property CreatedAt As Date
    parameters: []
    return:
      type: System.DateTime
      description: The time and date when the topic was created.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.CreatedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.UpdatedAt
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.UpdatedAt
  id: UpdatedAt
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: UpdatedAt
  nameWithType: TopicDescription.UpdatedAt
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.UpdatedAt
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: UpdatedAt
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 310
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the time and date when the topic was updated.
  example: []
  syntax:
    content: public DateTime UpdatedAt { get; }
    content.vb: Public ReadOnly Property UpdatedAt As Date
    parameters: []
    return:
      type: System.DateTime
      description: The time and date when the topic was updated.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.UpdatedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.AccessedAt
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.AccessedAt
  id: AccessedAt
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: AccessedAt
  nameWithType: TopicDescription.AccessedAt
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.AccessedAt
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AccessedAt
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 320
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the time and date at which a message was last sent to the topic.
  example: []
  syntax:
    content: public DateTime AccessedAt { get; }
    content.vb: Public ReadOnly Property AccessedAt As Date
    parameters: []
    return:
      type: System.DateTime
      description: The time and date at which a message was last sent to the topic.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.AccessedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.MessageCountDetails
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.MessageCountDetails
  id: MessageCountDetails
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: MessageCountDetails
  nameWithType: TopicDescription.MessageCountDetails
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.MessageCountDetails
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MessageCountDetails
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 331
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets message details about the topic.
  example: []
  syntax:
    content: public MessageCountDetails MessageCountDetails { get; }
    content.vb: Public ReadOnly Property MessageCountDetails As MessageCountDetails
    parameters: []
    return:
      type: Microsoft.ServiceBus.Messaging.MessageCountDetails
      description: "The \n<xref href=\"Microsoft.ServiceBus.Messaging.MessageCountDetails\" data-throw-if-not-resolved=\"false\"></xref> that contains the number of active messages, dead letters, scheduled messages, messages transferred to other queues, subscriptions, or topics, and the number of messages transferred to the dead letter queue."
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.MessageCountDetails*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.UserMetadata
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.UserMetadata
  id: UserMetadata
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: UserMetadata
  nameWithType: TopicDescription.UserMetadata
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.UserMetadata
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: UserMetadata
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 345
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the user metadata associated with the description.
  example: []
  syntax:
    content: public string UserMetadata { get; set; }
    content.vb: Public Property UserMetadata As String
    parameters: []
    return:
      type: System.String
      description: The user metadata associated with the description.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.UserMetadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.SubscriptionCount
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.SubscriptionCount
  id: SubscriptionCount
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: SubscriptionCount
  nameWithType: TopicDescription.SubscriptionCount
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.SubscriptionCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SubscriptionCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 372
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets then number of subscriptions.
  example: []
  syntax:
    content: public int SubscriptionCount { get; }
    content.vb: Public ReadOnly Property SubscriptionCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that represents the number of subscriptions.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.SubscriptionCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.EnablePartitioning
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.EnablePartitioning
  id: EnablePartitioning
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: EnablePartitioning
  nameWithType: TopicDescription.EnablePartitioning
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.EnablePartitioning
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EnablePartitioning
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 380
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Gets or sets whether to enable the topic to be partitioned across multiple message \nbrokers. An express topic holds a message in memory temporarily before writing it to persistent storage."
  example: []
  syntax:
    content: public bool EnablePartitioning { get; set; }
    content.vb: Public Property EnablePartitioning As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true to enable the topic to be partitioned across multiple message brokers; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.EnablePartitioning*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.EnableExpress
  commentId: P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableExpress
  id: EnableExpress
  parent: Microsoft.ServiceBus.Messaging.TopicDescription
  langs:
  - csharp
  - vb
  name: EnableExpress
  nameWithType: TopicDescription.EnableExpress
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.EnableExpress
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EnableExpress
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/TopicDescription.cs
    startLine: 426
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Gets or sets a value that indicates whether Express Entities are enabled. An \nexpress topic holds a message in memory temporarily before writing it to persistent storage."
  example: []
  syntax:
    content: public bool EnableExpress { get; set; }
    content.vb: Public Property EnableExpress As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the Express Entities are enabled; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.TopicDescription.EnableExpress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceBus.Messaging.EntityDescription
  commentId: T:Microsoft.ServiceBus.Messaging.EntityDescription
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EntityDescription
  nameWithType: EntityDescription
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription
- uid: System.Runtime.Serialization.IExtensibleDataObject
  commentId: T:System.Runtime.Serialization.IExtensibleDataObject
  parent: System.Runtime.Serialization
  isExternal: true
  name: IExtensibleDataObject
  nameWithType: IExtensibleDataObject
  fullName: System.Runtime.Serialization.IExtensibleDataObject
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  commentId: P:Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
  parent: Microsoft.ServiceBus.Messaging.EntityDescription
  isExternal: false
  name: IsReadOnly
  nameWithType: EntityDescription.IsReadOnly
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  commentId: P:Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
  parent: Microsoft.ServiceBus.Messaging.EntityDescription
  isExternal: false
  name: ExtensionData
  nameWithType: EntityDescription.ExtensionData
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData
- uid: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  commentId: M:Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  parent: Microsoft.ServiceBus.Messaging.EntityDescription
  isExternal: false
  name: ThrowIfReadOnly()
  nameWithType: EntityDescription.ThrowIfReadOnly()
  fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
    name: ThrowIfReadOnly
    nameWithType: EntityDescription.ThrowIfReadOnly
    fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
    name: ThrowIfReadOnly
    nameWithType: EntityDescription.ThrowIfReadOnly
    fullName: Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceBus.Messaging.TopicDescription
  commentId: T:Microsoft.ServiceBus.Messaging.TopicDescription
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: TopicDescription
  nameWithType: TopicDescription
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.#ctor
  isExternal: false
  name: TopicDescription
  nameWithType: TopicDescription.TopicDescription
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.TopicDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive
  commentId: P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive
  isExternal: false
  name: DefaultMessageTimeToLive
  nameWithType: TopicDescription.DefaultMessageTimeToLive
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.AutoDeleteOnIdle*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.AutoDeleteOnIdle
  isExternal: false
  name: AutoDeleteOnIdle
  nameWithType: TopicDescription.AutoDeleteOnIdle
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.AutoDeleteOnIdle
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.MaxSizeInMegabytes*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.MaxSizeInMegabytes
  isExternal: false
  name: MaxSizeInMegabytes
  nameWithType: TopicDescription.MaxSizeInMegabytes
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.MaxSizeInMegabytes
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.RequiresDuplicateDetection*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.RequiresDuplicateDetection
  isExternal: false
  name: RequiresDuplicateDetection
  nameWithType: TopicDescription.RequiresDuplicateDetection
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.RequiresDuplicateDetection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.DuplicateDetectionHistoryTimeWindow*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.DuplicateDetectionHistoryTimeWindow
  isExternal: false
  name: DuplicateDetectionHistoryTimeWindow
  nameWithType: TopicDescription.DuplicateDetectionHistoryTimeWindow
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.DuplicateDetectionHistoryTimeWindow
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.SizeInBytes*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.SizeInBytes
  isExternal: false
  name: SizeInBytes
  nameWithType: TopicDescription.SizeInBytes
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.SizeInBytes
- uid: Microsoft.ServiceBus.NamespaceManager.Address
  commentId: P:Microsoft.ServiceBus.NamespaceManager.Address
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.Path*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.Path
  isExternal: false
  name: Path
  nameWithType: TopicDescription.Path
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.Path
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.EnableBatchedOperations*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.EnableBatchedOperations
  isExternal: false
  name: EnableBatchedOperations
  nameWithType: TopicDescription.EnableBatchedOperations
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.EnableBatchedOperations
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.SupportOrdering*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.SupportOrdering
  isExternal: false
  name: SupportOrdering
  nameWithType: TopicDescription.SupportOrdering
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.SupportOrdering
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.EnableFilteringMessagesBeforePublishing*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.EnableFilteringMessagesBeforePublishing
  isExternal: false
  name: EnableFilteringMessagesBeforePublishing
  nameWithType: TopicDescription.EnableFilteringMessagesBeforePublishing
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.EnableFilteringMessagesBeforePublishing
- uid: Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException
  commentId: T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException
  isExternal: false
  name: NoMatchingSubscriptionException
  nameWithType: NoMatchingSubscriptionException
  fullName: Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.IsAnonymousAccessible*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.IsAnonymousAccessible
  isExternal: false
  name: IsAnonymousAccessible
  nameWithType: TopicDescription.IsAnonymousAccessible
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.IsAnonymousAccessible
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.Authorization*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.Authorization
  isExternal: false
  name: Authorization
  nameWithType: TopicDescription.Authorization
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.Authorization
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules
  commentId: T:Microsoft.ServiceBus.Messaging.AuthorizationRules
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: AuthorizationRules
  nameWithType: AuthorizationRules
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.Status*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.Status
  isExternal: false
  name: Status
  nameWithType: TopicDescription.Status
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.Status
- uid: Microsoft.ServiceBus.Messaging.EntityStatus
  commentId: T:Microsoft.ServiceBus.Messaging.EntityStatus
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EntityStatus
  nameWithType: EntityStatus
  fullName: Microsoft.ServiceBus.Messaging.EntityStatus
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.AvailabilityStatus*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.AvailabilityStatus
  isExternal: false
  name: AvailabilityStatus
  nameWithType: TopicDescription.AvailabilityStatus
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.AvailabilityStatus
- uid: Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus
  commentId: T:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EntityAvailabilityStatus
  nameWithType: EntityAvailabilityStatus
  fullName: Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.CreatedAt*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.CreatedAt
  isExternal: false
  name: CreatedAt
  nameWithType: TopicDescription.CreatedAt
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.CreatedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.UpdatedAt*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.UpdatedAt
  isExternal: false
  name: UpdatedAt
  nameWithType: TopicDescription.UpdatedAt
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.UpdatedAt
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.AccessedAt*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.AccessedAt
  isExternal: false
  name: AccessedAt
  nameWithType: TopicDescription.AccessedAt
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.AccessedAt
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails
  commentId: T:Microsoft.ServiceBus.Messaging.MessageCountDetails
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessageCountDetails
  nameWithType: MessageCountDetails
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.MessageCountDetails*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.MessageCountDetails
  isExternal: false
  name: MessageCountDetails
  nameWithType: TopicDescription.MessageCountDetails
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.MessageCountDetails
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.UserMetadata*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.UserMetadata
  isExternal: false
  name: UserMetadata
  nameWithType: TopicDescription.UserMetadata
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.UserMetadata
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.SubscriptionCount*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.SubscriptionCount
  isExternal: false
  name: SubscriptionCount
  nameWithType: TopicDescription.SubscriptionCount
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.SubscriptionCount
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.EnablePartitioning*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.EnablePartitioning
  isExternal: false
  name: EnablePartitioning
  nameWithType: TopicDescription.EnablePartitioning
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.EnablePartitioning
- uid: Microsoft.ServiceBus.Messaging.TopicDescription.EnableExpress*
  commentId: Overload:Microsoft.ServiceBus.Messaging.TopicDescription.EnableExpress
  isExternal: false
  name: EnableExpress
  nameWithType: TopicDescription.EnableExpress
  fullName: Microsoft.ServiceBus.Messaging.TopicDescription.EnableExpress
