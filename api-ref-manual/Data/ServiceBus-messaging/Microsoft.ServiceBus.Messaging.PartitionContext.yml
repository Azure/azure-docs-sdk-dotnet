### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.PartitionContext
  commentId: T:Microsoft.ServiceBus.Messaging.PartitionContext
  id: PartitionContext
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.PartitionContext.#ctor
  - Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync
  - Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)
  - Microsoft.ServiceBus.Messaging.PartitionContext.ConsumerGroupName
  - Microsoft.ServiceBus.Messaging.PartitionContext.EventHubPath
  - Microsoft.ServiceBus.Messaging.PartitionContext.Lease
  langs:
  - csharp
  - vb
  name: PartitionContext
  nameWithType: PartitionContext
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: PartitionContext
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Encapsulates information related to an Event Hubs partition used by \n<xref href=\"Microsoft.ServiceBus.Messaging.IEventProcessor\" data-throw-if-not-resolved=\"false\"></xref>."
  example: []
  syntax:
    content: 'public class PartitionContext : ICheckpointer'
    content.vb: >-
      Public Class PartitionContext
          Implements ICheckpointer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.#ctor
  commentId: M:Microsoft.ServiceBus.Messaging.PartitionContext.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.Messaging.PartitionContext
  langs:
  - csharp
  - vb
  name: PartitionContext()
  nameWithType: PartitionContext.PartitionContext()
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext.PartitionContext()
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
    startLine: 23
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nThis is mainly created for unit testing IEventProcessor logic so various mocking frameworks can be used to \npass in a mock for PartitionContext.\n"
  example: []
  syntax:
    content: public PartitionContext()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.Messaging.PartitionContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.EventHubPath
  commentId: P:Microsoft.ServiceBus.Messaging.PartitionContext.EventHubPath
  id: EventHubPath
  parent: Microsoft.ServiceBus.Messaging.PartitionContext
  langs:
  - csharp
  - vb
  name: EventHubPath
  nameWithType: PartitionContext.EventHubPath
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext.EventHubPath
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: EventHubPath
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the path of the event hub.
  example: []
  syntax:
    content: public string EventHubPath { get; set; }
    content.vb: Public Property EventHubPath As String
    parameters: []
    return:
      type: System.String
      description: The path of the event hub.
  overload: Microsoft.ServiceBus.Messaging.PartitionContext.EventHubPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.ConsumerGroupName
  commentId: P:Microsoft.ServiceBus.Messaging.PartitionContext.ConsumerGroupName
  id: ConsumerGroupName
  parent: Microsoft.ServiceBus.Messaging.PartitionContext
  langs:
  - csharp
  - vb
  name: ConsumerGroupName
  nameWithType: PartitionContext.ConsumerGroupName
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext.ConsumerGroupName
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ConsumerGroupName
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
    startLine: 40
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the name of the consumer group.
  example: []
  syntax:
    content: public string ConsumerGroupName { get; set; }
    content.vb: Public Property ConsumerGroupName As String
    parameters: []
    return:
      type: System.String
      description: The name of the consumer group.
  overload: Microsoft.ServiceBus.Messaging.PartitionContext.ConsumerGroupName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.Lease
  commentId: P:Microsoft.ServiceBus.Messaging.PartitionContext.Lease
  id: Lease
  parent: Microsoft.ServiceBus.Messaging.PartitionContext
  langs:
  - csharp
  - vb
  name: Lease
  nameWithType: PartitionContext.Lease
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext.Lease
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Lease
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
    startLine: 44
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the messaging lease.
  example: []
  syntax:
    content: public Lease Lease { get; set; }
    content.vb: Public Property Lease As Lease
    parameters: []
    return:
      type: Microsoft.ServiceBus.Messaging.Lease
      description: The messaging lease.
  overload: Microsoft.ServiceBus.Messaging.PartitionContext.Lease*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync
  commentId: M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync
  id: CheckpointAsync
  parent: Microsoft.ServiceBus.Messaging.PartitionContext
  langs:
  - csharp
  - vb
  name: CheckpointAsync()
  nameWithType: PartitionContext.CheckpointAsync()
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CheckpointAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Checkpoints progress of an Event Hubs message stream. Make sure to \ncall this method once all the messages in a batch are processed."
  example: []
  syntax:
    content: public Task CheckpointAsync()
    content.vb: Public Function CheckpointAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: The task representing the asynchronous operation.
  overload: Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)
  commentId: M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)
  id: CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)
  parent: Microsoft.ServiceBus.Messaging.PartitionContext
  langs:
  - csharp
  - vb
  name: CheckpointAsync(EventData)
  nameWithType: PartitionContext.CheckpointAsync(EventData)
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CheckpointAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/PartitionContext.cs
    startLine: 61
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Checkpoints progress of an Event Hubs message stream with the specified offset.
  example: []
  syntax:
    content: public Task CheckpointAsync(EventData data)
    content.vb: Public Function CheckpointAsync(data As EventData) As Task
    parameters:
    - id: data
      type: Microsoft.ServiceBus.Messaging.EventData
      description: An <xref href="Microsoft.ServiceBus.Messaging.EventData" data-throw-if-not-resolved="false"></xref> object to use for checkpointing the state of the stream.
    return:
      type: System.Threading.Tasks.Task
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor
  commentId: T:Microsoft.ServiceBus.Messaging.IEventProcessor
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: IEventProcessor
  nameWithType: IEventProcessor
  fullName: Microsoft.ServiceBus.Messaging.IEventProcessor
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Messaging.PartitionContext.#ctor
  isExternal: false
  name: PartitionContext
  nameWithType: PartitionContext.PartitionContext
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext.PartitionContext
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.EventHubPath*
  commentId: Overload:Microsoft.ServiceBus.Messaging.PartitionContext.EventHubPath
  isExternal: false
  name: EventHubPath
  nameWithType: PartitionContext.EventHubPath
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext.EventHubPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.ConsumerGroupName*
  commentId: Overload:Microsoft.ServiceBus.Messaging.PartitionContext.ConsumerGroupName
  isExternal: false
  name: ConsumerGroupName
  nameWithType: PartitionContext.ConsumerGroupName
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext.ConsumerGroupName
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.Lease*
  commentId: Overload:Microsoft.ServiceBus.Messaging.PartitionContext.Lease
  isExternal: false
  name: Lease
  nameWithType: PartitionContext.Lease
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext.Lease
- uid: Microsoft.ServiceBus.Messaging.Lease
  commentId: T:Microsoft.ServiceBus.Messaging.Lease
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Lease
  nameWithType: Lease
  fullName: Microsoft.ServiceBus.Messaging.Lease
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync
  isExternal: false
  name: CheckpointAsync
  nameWithType: PartitionContext.CheckpointAsync
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceBus.Messaging.EventData
  commentId: T:Microsoft.ServiceBus.Messaging.EventData
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: EventData
  nameWithType: EventData
  fullName: Microsoft.ServiceBus.Messaging.EventData
