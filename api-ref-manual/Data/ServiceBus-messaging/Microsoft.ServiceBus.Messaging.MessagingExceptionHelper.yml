### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper
  commentId: T:Microsoft.ServiceBus.Messaging.MessagingExceptionHelper
  id: MessagingExceptionHelper
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertStatusCodeFromDetail(System.String)
  - Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException(Microsoft.ServiceBus.Messaging.MessagingException)
  - Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException(Microsoft.ServiceBus.Messaging.MessagingException,System.Boolean@)
  - Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.IsWrappedExceptionTransient(System.Exception)
  - Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap(System.ServiceModel.CommunicationException)
  - Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap(System.ServiceModel.CommunicationException,System.Boolean)
  langs:
  - csharp
  - vb
  name: MessagingExceptionHelper
  nameWithType: MessagingExceptionHelper
  fullName: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MessagingExceptionHelper
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
    startLine: 12
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: public static class MessagingExceptionHelper
    content.vb: Public Module MessagingExceptionHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException(Microsoft.ServiceBus.Messaging.MessagingException)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException(Microsoft.ServiceBus.Messaging.MessagingException)
  id: ConvertToCommunicationException(Microsoft.ServiceBus.Messaging.MessagingException)
  parent: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper
  langs:
  - csharp
  - vb
  name: ConvertToCommunicationException(MessagingException)
  nameWithType: MessagingExceptionHelper.ConvertToCommunicationException(MessagingException)
  fullName: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException(Microsoft.ServiceBus.Messaging.MessagingException)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ConvertToCommunicationException
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
    startLine: 85
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: public static CommunicationException ConvertToCommunicationException(MessagingException exception)
    content.vb: Public Shared Function ConvertToCommunicationException(exception As MessagingException) As CommunicationException
    parameters:
    - id: exception
      type: Microsoft.ServiceBus.Messaging.MessagingException
    return:
      type: System.ServiceModel.CommunicationException
  overload: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException(Microsoft.ServiceBus.Messaging.MessagingException,System.Boolean@)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException(Microsoft.ServiceBus.Messaging.MessagingException,System.Boolean@)
  id: ConvertToCommunicationException(Microsoft.ServiceBus.Messaging.MessagingException,System.Boolean@)
  parent: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper
  langs:
  - csharp
  - vb
  name: ConvertToCommunicationException(MessagingException, out Boolean)
  nameWithType: MessagingExceptionHelper.ConvertToCommunicationException(MessagingException, out Boolean)
  fullName: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException(Microsoft.ServiceBus.Messaging.MessagingException, out System.Boolean)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ConvertToCommunicationException
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
    startLine: 91
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: public static CommunicationException ConvertToCommunicationException(MessagingException exception, out bool shouldFault)
    content.vb: Public Shared Function ConvertToCommunicationException(exception As MessagingException, ByRef shouldFault As Boolean) As CommunicationException
    parameters:
    - id: exception
      type: Microsoft.ServiceBus.Messaging.MessagingException
    - id: shouldFault
      type: System.Boolean
    return:
      type: System.ServiceModel.CommunicationException
  overload: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException*
  nameWithType.vb: MessagingExceptionHelper.ConvertToCommunicationException(MessagingException, ByRef Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException(Microsoft.ServiceBus.Messaging.MessagingException, ByRef System.Boolean)
  name.vb: ConvertToCommunicationException(MessagingException, ByRef Boolean)
- uid: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap(System.ServiceModel.CommunicationException,System.Boolean)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap(System.ServiceModel.CommunicationException,System.Boolean)
  id: Unwrap(System.ServiceModel.CommunicationException,System.Boolean)
  parent: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper
  langs:
  - csharp
  - vb
  name: Unwrap(CommunicationException, Boolean)
  nameWithType: MessagingExceptionHelper.Unwrap(CommunicationException, Boolean)
  fullName: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap(System.ServiceModel.CommunicationException, System.Boolean)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Unwrap
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
    startLine: 119
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: public static Exception Unwrap(CommunicationException exception, bool isCancelling)
    content.vb: Public Shared Function Unwrap(exception As CommunicationException, isCancelling As Boolean) As Exception
    parameters:
    - id: exception
      type: System.ServiceModel.CommunicationException
    - id: isCancelling
      type: System.Boolean
    return:
      type: System.Exception
  overload: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertStatusCodeFromDetail(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertStatusCodeFromDetail(System.String)
  id: ConvertStatusCodeFromDetail(System.String)
  parent: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper
  langs:
  - csharp
  - vb
  name: ConvertStatusCodeFromDetail(String)
  nameWithType: MessagingExceptionHelper.ConvertStatusCodeFromDetail(String)
  fullName: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertStatusCodeFromDetail(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ConvertStatusCodeFromDetail
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
    startLine: 139
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "\nThis method assumes type != null.\n"
  example: []
  syntax:
    content: public static HttpStatusCode ConvertStatusCodeFromDetail(string type)
    content.vb: Public Shared Function ConvertStatusCodeFromDetail(type As String) As HttpStatusCode
    parameters:
    - id: type
      type: System.String
      description: ''
    return:
      type: System.Net.HttpStatusCode
      description: ''
  overload: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertStatusCodeFromDetail*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap(System.ServiceModel.CommunicationException)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap(System.ServiceModel.CommunicationException)
  id: Unwrap(System.ServiceModel.CommunicationException)
  parent: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper
  langs:
  - csharp
  - vb
  name: Unwrap(CommunicationException)
  nameWithType: MessagingExceptionHelper.Unwrap(CommunicationException)
  fullName: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap(System.ServiceModel.CommunicationException)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Unwrap
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
    startLine: 151
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: public static Exception Unwrap(CommunicationException exception)
    content.vb: Public Shared Function Unwrap(exception As CommunicationException) As Exception
    parameters:
    - id: exception
      type: System.ServiceModel.CommunicationException
    return:
      type: System.Exception
  overload: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.IsWrappedExceptionTransient(System.Exception)
  commentId: M:Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.IsWrappedExceptionTransient(System.Exception)
  id: IsWrappedExceptionTransient(System.Exception)
  isExtensionMethod: true
  parent: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper
  langs:
  - csharp
  - vb
  name: IsWrappedExceptionTransient(Exception)
  nameWithType: MessagingExceptionHelper.IsWrappedExceptionTransient(Exception)
  fullName: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.IsWrappedExceptionTransient(System.Exception)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IsWrappedExceptionTransient
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessagingExceptionHelper.cs
    startLine: 183
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  syntax:
    content: public static bool IsWrappedExceptionTransient(this Exception exception)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsWrappedExceptionTransient(exception As Exception) As Boolean
    parameters:
    - id: exception
      type: System.Exception
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.IsWrappedExceptionTransient*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException
  isExternal: false
  name: ConvertToCommunicationException
  nameWithType: MessagingExceptionHelper.ConvertToCommunicationException
  fullName: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertToCommunicationException
- uid: Microsoft.ServiceBus.Messaging.MessagingException
  commentId: T:Microsoft.ServiceBus.Messaging.MessagingException
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessagingException
  nameWithType: MessagingException
  fullName: Microsoft.ServiceBus.Messaging.MessagingException
- uid: System.ServiceModel.CommunicationException
  commentId: T:System.ServiceModel.CommunicationException
  parent: System.ServiceModel
  isExternal: true
  name: CommunicationException
  nameWithType: CommunicationException
  fullName: System.ServiceModel.CommunicationException
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap
  isExternal: false
  name: Unwrap
  nameWithType: MessagingExceptionHelper.Unwrap
  fullName: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.Unwrap
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertStatusCodeFromDetail*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertStatusCodeFromDetail
  isExternal: false
  name: ConvertStatusCodeFromDetail
  nameWithType: MessagingExceptionHelper.ConvertStatusCodeFromDetail
  fullName: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.ConvertStatusCodeFromDetail
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.IsWrappedExceptionTransient*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.IsWrappedExceptionTransient
  isExternal: false
  name: IsWrappedExceptionTransient
  nameWithType: MessagingExceptionHelper.IsWrappedExceptionTransient
  fullName: Microsoft.ServiceBus.Messaging.MessagingExceptionHelper.IsWrappedExceptionTransient
