### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails
  commentId: T:Microsoft.ServiceBus.Messaging.MessageCountDetails
  id: MessageCountDetails
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor
  - Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)
  - Microsoft.ServiceBus.Messaging.MessageCountDetails.ActiveMessageCount
  - Microsoft.ServiceBus.Messaging.MessageCountDetails.DeadLetterMessageCount
  - Microsoft.ServiceBus.Messaging.MessageCountDetails.ScheduledMessageCount
  - Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferDeadLetterMessageCount
  - Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferMessageCount
  langs:
  - csharp
  - vb
  name: MessageCountDetails
  nameWithType: MessageCountDetails
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MessageCountDetails
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
    startLine: 12
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "This class contains properties that enable you to retrieve details \nof messages from sub-queues of primary messaging entities (queues, topics, subscriptions)."
  example: []
  syntax:
    content: >-
      [DataContract(Name = "MessageCountDetails", Namespace = "http://schemas.microsoft.com/netservices/2011/06/servicebus")]

      public sealed class MessageCountDetails
    content.vb: >-
      <DataContract(Name:="MessageCountDetails", Namespace:="http://schemas.microsoft.com/netservices/2011/06/servicebus")>

      Public NotInheritable Class MessageCountDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: MessageCountDetails
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/netservices/2011/06/servicebus
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor
  commentId: M:Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.Messaging.MessageCountDetails
  langs:
  - csharp
  - vb
  name: MessageCountDetails()
  nameWithType: MessageCountDetails.MessageCountDetails()
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.MessageCountDetails()
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
    startLine: 22
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.Messaging.MessageCountDetails" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public MessageCountDetails()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)
  id: '#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)'
  parent: Microsoft.ServiceBus.Messaging.MessageCountDetails
  langs:
  - csharp
  - vb
  name: MessageCountDetails(Int64, Int64, Int64, Int64, Int64)
  nameWithType: MessageCountDetails.MessageCountDetails(Int64, Int64, Int64, Int64, Int64)
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.MessageCountDetails(System.Int64, System.Int64, System.Int64, System.Int64, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
    startLine: 34
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.Messaging.MessageCountDetails\" data-throw-if-not-resolved=\"false\"></xref> class with the number of active messages, dead letters, scheduled messages, messages transferred to other queues, subscriptions, or topics, and the number of messages transferred to the dead letter queue."
  example: []
  syntax:
    content: public MessageCountDetails(long activeMessageCount, long deadletterMessageCount, long scheduledMessageCount, long transferMessageCount, long transferDlqMessageCount)
    content.vb: Public Sub New(activeMessageCount As Long, deadletterMessageCount As Long, scheduledMessageCount As Long, transferMessageCount As Long, transferDlqMessageCount As Long)
    parameters:
    - id: activeMessageCount
      type: System.Int64
      description: The number of active messages.
    - id: deadletterMessageCount
      type: System.Int64
      description: The number of dead letters.
    - id: scheduledMessageCount
      type: System.Int64
      description: The number of scheduled messages.
    - id: transferMessageCount
      type: System.Int64
      description: The number of messages transferred to other queues, subscriptions, or topics.
    - id: transferDlqMessageCount
      type: System.Int64
      description: The number of messages transferred to the dead letter queue.
  overload: Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.ActiveMessageCount
  commentId: P:Microsoft.ServiceBus.Messaging.MessageCountDetails.ActiveMessageCount
  id: ActiveMessageCount
  parent: Microsoft.ServiceBus.Messaging.MessageCountDetails
  langs:
  - csharp
  - vb
  name: ActiveMessageCount
  nameWithType: MessageCountDetails.ActiveMessageCount
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.ActiveMessageCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ActiveMessageCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
    startLine: 45
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the number of active messages in the queue, topic, or subscription.
  example: []
  syntax:
    content: >-
      [DataMember(Order = 65537)]

      public long ActiveMessageCount { get; }
    content.vb: >-
      <DataMember(Order:=65537)>

      Public ReadOnly Property ActiveMessageCount As Long
    parameters: []
    return:
      type: System.Int64
      description: Returns <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> that specifies the number of active messages.
  overload: Microsoft.ServiceBus.Messaging.MessageCountDetails.ActiveMessageCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 65537
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.DeadLetterMessageCount
  commentId: P:Microsoft.ServiceBus.Messaging.MessageCountDetails.DeadLetterMessageCount
  id: DeadLetterMessageCount
  parent: Microsoft.ServiceBus.Messaging.MessageCountDetails
  langs:
  - csharp
  - vb
  name: DeadLetterMessageCount
  nameWithType: MessageCountDetails.DeadLetterMessageCount
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.DeadLetterMessageCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: DeadLetterMessageCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
    startLine: 54
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the number of messages that are dead letters.
  example: []
  syntax:
    content: >-
      [DataMember(Order = 65538)]

      public long DeadLetterMessageCount { get; }
    content.vb: >-
      <DataMember(Order:=65538)>

      Public ReadOnly Property DeadLetterMessageCount As Long
    parameters: []
    return:
      type: System.Int64
      description: Returns <xref href="System.Int64" data-throw-if-not-resolved="false"></xref>that specifies the number of messages that are dead letters.
  overload: Microsoft.ServiceBus.Messaging.MessageCountDetails.DeadLetterMessageCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 65538
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.ScheduledMessageCount
  commentId: P:Microsoft.ServiceBus.Messaging.MessageCountDetails.ScheduledMessageCount
  id: ScheduledMessageCount
  parent: Microsoft.ServiceBus.Messaging.MessageCountDetails
  langs:
  - csharp
  - vb
  name: ScheduledMessageCount
  nameWithType: MessageCountDetails.ScheduledMessageCount
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.ScheduledMessageCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ScheduledMessageCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
    startLine: 63
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the number scheduled messages.
  example: []
  syntax:
    content: >-
      [DataMember(Order = 65539)]

      public long ScheduledMessageCount { get; }
    content.vb: >-
      <DataMember(Order:=65539)>

      Public ReadOnly Property ScheduledMessageCount As Long
    parameters: []
    return:
      type: System.Int64
      description: Returns <xref href="System.Int64" data-throw-if-not-resolved="false"></xref>the number of scheduled messages.
  overload: Microsoft.ServiceBus.Messaging.MessageCountDetails.ScheduledMessageCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 65539
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferMessageCount
  commentId: P:Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferMessageCount
  id: TransferMessageCount
  parent: Microsoft.ServiceBus.Messaging.MessageCountDetails
  langs:
  - csharp
  - vb
  name: TransferMessageCount
  nameWithType: MessageCountDetails.TransferMessageCount
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferMessageCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: TransferMessageCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
    startLine: 72
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the number of messages transferred to another queue, topic, or subscription.
  example: []
  syntax:
    content: >-
      [DataMember(Order = 65540)]

      public long TransferMessageCount { get; }
    content.vb: >-
      <DataMember(Order:=65540)>

      Public ReadOnly Property TransferMessageCount As Long
    parameters: []
    return:
      type: System.Int64
      description: Returns <xref href="System.Int64" data-throw-if-not-resolved="false"></xref>that specifies the number of messages transferred to another queue, topic, or subscription
  overload: Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferMessageCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 65540
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferDeadLetterMessageCount
  commentId: P:Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferDeadLetterMessageCount
  id: TransferDeadLetterMessageCount
  parent: Microsoft.ServiceBus.Messaging.MessageCountDetails
  langs:
  - csharp
  - vb
  name: TransferDeadLetterMessageCount
  nameWithType: MessageCountDetails.TransferDeadLetterMessageCount
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferDeadLetterMessageCount
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: TransferDeadLetterMessageCount
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageCountDetails.cs
    startLine: 81
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the number messages transferred into dead letters.
  example: []
  syntax:
    content: >-
      [DataMember(Order = 65541)]

      public long TransferDeadLetterMessageCount { get; }
    content.vb: >-
      <DataMember(Order:=65541)>

      Public ReadOnly Property TransferDeadLetterMessageCount As Long
    parameters: []
    return:
      type: System.Int64
      description: Returns <xref href="System.Int64" data-throw-if-not-resolved="false"></xref>that specifies the number messages transferred into dead letters.
  overload: Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferDeadLetterMessageCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 65541
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails
  commentId: T:Microsoft.ServiceBus.Messaging.MessageCountDetails
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessageCountDetails
  nameWithType: MessageCountDetails
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor
  isExternal: false
  name: MessageCountDetails
  nameWithType: MessageCountDetails.MessageCountDetails
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.MessageCountDetails
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.ActiveMessageCount*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageCountDetails.ActiveMessageCount
  isExternal: false
  name: ActiveMessageCount
  nameWithType: MessageCountDetails.ActiveMessageCount
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.ActiveMessageCount
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.DeadLetterMessageCount*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageCountDetails.DeadLetterMessageCount
  isExternal: false
  name: DeadLetterMessageCount
  nameWithType: MessageCountDetails.DeadLetterMessageCount
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.DeadLetterMessageCount
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.ScheduledMessageCount*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageCountDetails.ScheduledMessageCount
  isExternal: false
  name: ScheduledMessageCount
  nameWithType: MessageCountDetails.ScheduledMessageCount
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.ScheduledMessageCount
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferMessageCount*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferMessageCount
  isExternal: false
  name: TransferMessageCount
  nameWithType: MessageCountDetails.TransferMessageCount
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferMessageCount
- uid: Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferDeadLetterMessageCount*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferDeadLetterMessageCount
  isExternal: false
  name: TransferDeadLetterMessageCount
  nameWithType: MessageCountDetails.TransferDeadLetterMessageCount
  fullName: Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferDeadLetterMessageCount
