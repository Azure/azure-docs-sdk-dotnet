### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.ICheckpointManager
  commentId: T:Microsoft.ServiceBus.Messaging.ICheckpointManager
  id: ICheckpointManager
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.ICheckpointManager.CheckpointAsync(Microsoft.ServiceBus.Messaging.Lease,System.String,System.Int64)
  langs:
  - csharp
  - vb
  name: ICheckpointManager
  nameWithType: ICheckpointManager
  fullName: Microsoft.ServiceBus.Messaging.ICheckpointManager
  type: Interface
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/ICheckpointManager.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ICheckpointManager
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/ICheckpointManager.cs
    startLine: 12
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Provides methods for running checkpoint asynchronously. Extensibility is provided to specify host-specific storage for storing the offset. This is provided when \n<xref href=\"Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorAsync%60%601(Microsoft.ServiceBus.Messaging.Lease%2cMicrosoft.ServiceBus.Messaging.ICheckpointManager)\" data-throw-if-not-resolved=\"false\"></xref> is called, \nto checkpoint the offset position using \n<xref href=\"Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)\" data-throw-if-not-resolved=\"false\"></xref>."
  example: []
  syntax:
    content: public interface ICheckpointManager
    content.vb: Public Interface ICheckpointManager
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ServiceBus.Messaging.ICheckpointManager.CheckpointAsync(Microsoft.ServiceBus.Messaging.Lease,System.String,System.Int64)
  commentId: M:Microsoft.ServiceBus.Messaging.ICheckpointManager.CheckpointAsync(Microsoft.ServiceBus.Messaging.Lease,System.String,System.Int64)
  id: CheckpointAsync(Microsoft.ServiceBus.Messaging.Lease,System.String,System.Int64)
  parent: Microsoft.ServiceBus.Messaging.ICheckpointManager
  langs:
  - csharp
  - vb
  name: CheckpointAsync(Lease, String, Int64)
  nameWithType: ICheckpointManager.CheckpointAsync(Lease, String, Int64)
  fullName: Microsoft.ServiceBus.Messaging.ICheckpointManager.CheckpointAsync(Microsoft.ServiceBus.Messaging.Lease, System.String, System.Int64)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/ICheckpointManager.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CheckpointAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/ICheckpointManager.cs
    startLine: 19
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Stores the offset of a particular partition in the host-specific store.
  example: []
  syntax:
    content: Task CheckpointAsync(Lease lease, string offset, long sequenceNumber)
    content.vb: Function CheckpointAsync(lease As Lease, offset As String, sequenceNumber As Long) As Task
    parameters:
    - id: lease
      type: Microsoft.ServiceBus.Messaging.Lease
      description: Partition information against which to perform a checkpoint.
    - id: offset
      type: System.String
      description: Current position in the stream.
    - id: sequenceNumber
      type: System.Int64
      description: The sequence number of the partition.
    return:
      type: System.Threading.Tasks.Task
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.ICheckpointManager.CheckpointAsync*
references:
- uid: Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorAsync``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessorAsync``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)
  commentId: M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync(Microsoft.ServiceBus.Messaging.EventData)
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceBus.Messaging.ICheckpointManager.CheckpointAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.ICheckpointManager.CheckpointAsync
  isExternal: false
  name: CheckpointAsync
  nameWithType: ICheckpointManager.CheckpointAsync
  fullName: Microsoft.ServiceBus.Messaging.ICheckpointManager.CheckpointAsync
- uid: Microsoft.ServiceBus.Messaging.Lease
  commentId: T:Microsoft.ServiceBus.Messaging.Lease
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Lease
  nameWithType: Lease
  fullName: Microsoft.ServiceBus.Messaging.Lease
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
