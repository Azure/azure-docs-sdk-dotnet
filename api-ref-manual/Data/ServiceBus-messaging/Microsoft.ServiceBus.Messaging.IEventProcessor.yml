### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor
  commentId: T:Microsoft.ServiceBus.Messaging.IEventProcessor
  id: IEventProcessor
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)
  - Microsoft.ServiceBus.Messaging.IEventProcessor.OpenAsync(Microsoft.ServiceBus.Messaging.PartitionContext)
  - Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  langs:
  - csharp
  - vb
  name: IEventProcessor
  nameWithType: IEventProcessor
  fullName: Microsoft.ServiceBus.Messaging.IEventProcessor
  type: Interface
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IEventProcessor.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IEventProcessor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IEventProcessor.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Provides methods for event processors. Applications must implement this interface, \nwhich enables the handling of events from Event Hubs. This interface is the main extensibility point for the \nEventProcessorHost and \n<xref href=\"Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor%60%601(Microsoft.ServiceBus.Messaging.Lease%2cMicrosoft.ServiceBus.Messaging.ICheckpointManager)\" data-throw-if-not-resolved=\"false\"></xref>."
  example: []
  syntax:
    content: public interface IEventProcessor
    content.vb: Public Interface IEventProcessor
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor.OpenAsync(Microsoft.ServiceBus.Messaging.PartitionContext)
  commentId: M:Microsoft.ServiceBus.Messaging.IEventProcessor.OpenAsync(Microsoft.ServiceBus.Messaging.PartitionContext)
  id: OpenAsync(Microsoft.ServiceBus.Messaging.PartitionContext)
  parent: Microsoft.ServiceBus.Messaging.IEventProcessor
  langs:
  - csharp
  - vb
  name: OpenAsync(PartitionContext)
  nameWithType: IEventProcessor.OpenAsync(PartitionContext)
  fullName: Microsoft.ServiceBus.Messaging.IEventProcessor.OpenAsync(Microsoft.ServiceBus.Messaging.PartitionContext)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IEventProcessor.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OpenAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IEventProcessor.cs
    startLine: 19
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Initializes the Event Hub processor instance. This method is called before any event data is passed to this processor instance.
  example: []
  syntax:
    content: Task OpenAsync(PartitionContext context)
    content.vb: Function OpenAsync(context As PartitionContext) As Task
    parameters:
    - id: context
      type: Microsoft.ServiceBus.Messaging.PartitionContext
      description: "Ownership information for the partition on which this processor instance works. Any attempt to call \n<xref href=\"Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync\" data-throw-if-not-resolved=\"false\"></xref> will fail during the Open operation."
    return:
      type: System.Threading.Tasks.Task
      description: The task that indicates that the Open operation is complete.
  overload: Microsoft.ServiceBus.Messaging.IEventProcessor.OpenAsync*
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  commentId: M:Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  id: ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  parent: Microsoft.ServiceBus.Messaging.IEventProcessor
  langs:
  - csharp
  - vb
  name: ProcessEventsAsync(PartitionContext, IEnumerable<EventData>)
  nameWithType: IEventProcessor.ProcessEventsAsync(PartitionContext, IEnumerable<EventData>)
  fullName: Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext, System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.EventData>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IEventProcessor.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ProcessEventsAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IEventProcessor.cs
    startLine: 27
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Asynchronously processes the specified context and messages. This method is called when there are new messages in the \nEvent Hubs stream. Make sure to checkpoint only when you are finished processing all the events in each batch."
  example: []
  syntax:
    content: Task ProcessEventsAsync(PartitionContext context, IEnumerable<EventData> messages)
    content.vb: Function ProcessEventsAsync(context As PartitionContext, messages As IEnumerable(Of EventData)) As Task
    parameters:
    - id: context
      type: Microsoft.ServiceBus.Messaging.PartitionContext
      description: Ownership information for the partition on which this processor instance works.
    - id: messages
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData}
      description: A batch of Event Hubs events.
    return:
      type: System.Threading.Tasks.Task
      description: "The task that indicates that \n<xref href=\"Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.ServiceBus.Messaging.EventData%7d)\" data-throw-if-not-resolved=\"false\"></xref> is complete."
  overload: Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync*
  nameWithType.vb: IEventProcessor.ProcessEventsAsync(PartitionContext, IEnumerable(Of EventData))
  fullName.vb: Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext, System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.EventData))
  name.vb: ProcessEventsAsync(PartitionContext, IEnumerable(Of EventData))
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)
  commentId: M:Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)
  id: CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)
  parent: Microsoft.ServiceBus.Messaging.IEventProcessor
  langs:
  - csharp
  - vb
  name: CloseAsync(PartitionContext, CloseReason)
  nameWithType: IEventProcessor.CloseAsync(PartitionContext, CloseReason)
  fullName: Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext, Microsoft.ServiceBus.Messaging.CloseReason)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IEventProcessor.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CloseAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IEventProcessor.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Called when the ownership of partition moves to a different node for load-balancing purpose, or when the host is shutting down. Called in response to \n<xref href=\"Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessorAsync(Microsoft.ServiceBus.Messaging.Lease%2cMicrosoft.ServiceBus.Messaging.CloseReason)\" data-throw-if-not-resolved=\"false\"></xref>."
  example: []
  syntax:
    content: Task CloseAsync(PartitionContext context, CloseReason reason)
    content.vb: Function CloseAsync(context As PartitionContext, reason As CloseReason) As Task
    parameters:
    - id: context
      type: Microsoft.ServiceBus.Messaging.PartitionContext
      description: "Partition ownership information for the partition on which this processor instance works. You can call \n<xref href=\"Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync\" data-throw-if-not-resolved=\"false\"></xref> to checkpoint progress in the processing of messages from Event Hub streams."
    - id: reason
      type: Microsoft.ServiceBus.Messaging.CloseReason
      description: "The reason for calling \n<xref href=\"Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext%2cMicrosoft.ServiceBus.Messaging.CloseReason)\" data-throw-if-not-resolved=\"false\"></xref>."
    return:
      type: System.Threading.Tasks.Task
      description: A task indicating that the Close operation is complete.
  overload: Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync*
references:
- uid: Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.RegisterProcessor``1(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager)
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync
  commentId: M:Microsoft.ServiceBus.Messaging.PartitionContext.CheckpointAsync
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor.OpenAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.IEventProcessor.OpenAsync
  isExternal: false
  name: OpenAsync
  nameWithType: IEventProcessor.OpenAsync
  fullName: Microsoft.ServiceBus.Messaging.IEventProcessor.OpenAsync
- uid: Microsoft.ServiceBus.Messaging.PartitionContext
  commentId: T:Microsoft.ServiceBus.Messaging.PartitionContext
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: PartitionContext
  nameWithType: PartitionContext
  fullName: Microsoft.ServiceBus.Messaging.PartitionContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
  commentId: M:Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync
  isExternal: false
  name: ProcessEventsAsync
  nameWithType: IEventProcessor.ProcessEventsAsync
  fullName: Microsoft.ServiceBus.Messaging.IEventProcessor.ProcessEventsAsync
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EventData>
  nameWithType: IEnumerable<EventData>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.EventData>
  nameWithType.vb: IEnumerable(Of EventData)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.EventData)
  name.vb: IEnumerable(Of EventData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.EventData
    name: EventData
    nameWithType: EventData
    fullName: Microsoft.ServiceBus.Messaging.EventData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.EventData
    name: EventData
    nameWithType: EventData
    fullName: Microsoft.ServiceBus.Messaging.EventData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessorAsync(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)
  commentId: M:Microsoft.ServiceBus.Messaging.EventHubConsumerGroup.UnregisterProcessorAsync(Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.CloseReason)
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)
  commentId: M:Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)
- uid: Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync
  isExternal: false
  name: CloseAsync
  nameWithType: IEventProcessor.CloseAsync
  fullName: Microsoft.ServiceBus.Messaging.IEventProcessor.CloseAsync
- uid: Microsoft.ServiceBus.Messaging.CloseReason
  commentId: T:Microsoft.ServiceBus.Messaging.CloseReason
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: CloseReason
  nameWithType: CloseReason
  fullName: Microsoft.ServiceBus.Messaging.CloseReason
