### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory
  commentId: T:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory
  id: IMessageSessionAsyncHandlerFactory
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  - Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler)
  langs:
  - csharp
  - vb
  name: IMessageSessionAsyncHandlerFactory
  nameWithType: IMessageSessionAsyncHandlerFactory
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory
  type: Interface
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandlerFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IMessageSessionAsyncHandlerFactory
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandlerFactory.cs
    startLine: 9
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Represents an interface for the handler factory associated with the message session.
  example: []
  syntax:
    content: public interface IMessageSessionAsyncHandlerFactory
    content.vb: Public Interface IMessageSessionAsyncHandlerFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  commentId: M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  id: CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  parent: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory
  langs:
  - csharp
  - vb
  name: CreateInstance(MessageSession, BrokeredMessage)
  nameWithType: IMessageSessionAsyncHandlerFactory.CreateInstance(MessageSession, BrokeredMessage)
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession, Microsoft.ServiceBus.Messaging.BrokeredMessage)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandlerFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CreateInstance
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandlerFactory.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Creates an instance of the handler factory.
  example: []
  syntax:
    content: IMessageSessionAsyncHandler CreateInstance(MessageSession session, BrokeredMessage message)
    content.vb: Function CreateInstance(session As MessageSession, message As BrokeredMessage) As IMessageSessionAsyncHandler
    parameters:
    - id: session
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: The message session.
    - id: message
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: The message.
    return:
      type: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
      description: The created instance.
  overload: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.CreateInstance*
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler)
  commentId: M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler)
  id: DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler)
  parent: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory
  langs:
  - csharp
  - vb
  name: DisposeInstance(IMessageSessionAsyncHandler)
  nameWithType: IMessageSessionAsyncHandlerFactory.DisposeInstance(IMessageSessionAsyncHandler)
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandlerFactory.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: DisposeInstance
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/IMessageSessionAsyncHandlerFactory.cs
    startLine: 19
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Releases the resources associated with the handler factory instance.
  example: []
  syntax:
    content: void DisposeInstance(IMessageSessionAsyncHandler handler)
    content.vb: Sub DisposeInstance(handler As IMessageSessionAsyncHandler)
    parameters:
    - id: handler
      type: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
      description: The handler instance.
  overload: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.DisposeInstance*
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.CreateInstance*
  commentId: Overload:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.CreateInstance
  isExternal: false
  name: CreateInstance
  nameWithType: IMessageSessionAsyncHandlerFactory.CreateInstance
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.CreateInstance
- uid: Microsoft.ServiceBus.Messaging.MessageSession
  commentId: T:Microsoft.ServiceBus.Messaging.MessageSession
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessageSession
  nameWithType: MessageSession
  fullName: Microsoft.ServiceBus.Messaging.MessageSession
- uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
  commentId: T:Microsoft.ServiceBus.Messaging.BrokeredMessage
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: BrokeredMessage
  nameWithType: BrokeredMessage
  fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  commentId: T:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: IMessageSessionAsyncHandler
  nameWithType: IMessageSessionAsyncHandler
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.DisposeInstance*
  commentId: Overload:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.DisposeInstance
  isExternal: false
  name: DisposeInstance
  nameWithType: IMessageSessionAsyncHandlerFactory.DisposeInstance
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.DisposeInstance
