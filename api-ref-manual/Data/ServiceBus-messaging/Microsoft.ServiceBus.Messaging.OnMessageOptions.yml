### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.OnMessageOptions
  commentId: T:Microsoft.ServiceBus.Messaging.OnMessageOptions
  id: OnMessageOptions
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.OnMessageOptions.#ctor
  - Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoComplete
  - Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoRenewTimeout
  - Microsoft.ServiceBus.Messaging.OnMessageOptions.ExceptionReceived
  - Microsoft.ServiceBus.Messaging.OnMessageOptions.MaxConcurrentCalls
  langs:
  - csharp
  - vb
  name: OnMessageOptions
  nameWithType: OnMessageOptions
  fullName: Microsoft.ServiceBus.Messaging.OnMessageOptions
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/OnMessageOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnMessageOptions
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/OnMessageOptions.cs
    startLine: 12
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Provides options associated with message pump processing using \n<xref href=\"Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action%7bMicrosoft.ServiceBus.Messaging.BrokeredMessage%7d)\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action%7bMicrosoft.ServiceBus.Messaging.BrokeredMessage%7d)\" data-throw-if-not-resolved=\"false\"></xref>."
  example: []
  syntax:
    content: public sealed class OnMessageOptions
    content.vb: Public NotInheritable Class OnMessageOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceBus.Messaging.OnMessageOptions.#ctor
  commentId: M:Microsoft.ServiceBus.Messaging.OnMessageOptions.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.Messaging.OnMessageOptions
  langs:
  - csharp
  - vb
  name: OnMessageOptions()
  nameWithType: OnMessageOptions.OnMessageOptions()
  fullName: Microsoft.ServiceBus.Messaging.OnMessageOptions.OnMessageOptions()
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/OnMessageOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/OnMessageOptions.cs
    startLine: 18
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.Messaging.OnMessageOptions" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public OnMessageOptions()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.Messaging.OnMessageOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.OnMessageOptions.MaxConcurrentCalls
  commentId: P:Microsoft.ServiceBus.Messaging.OnMessageOptions.MaxConcurrentCalls
  id: MaxConcurrentCalls
  parent: Microsoft.ServiceBus.Messaging.OnMessageOptions
  langs:
  - csharp
  - vb
  name: MaxConcurrentCalls
  nameWithType: OnMessageOptions.MaxConcurrentCalls
  fullName: Microsoft.ServiceBus.Messaging.OnMessageOptions.MaxConcurrentCalls
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/OnMessageOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MaxConcurrentCalls
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/OnMessageOptions.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the maximum number of concurrent calls to the callback the message pump should initiate.
  example: []
  syntax:
    content: public int MaxConcurrentCalls { get; set; }
    content.vb: Public Property MaxConcurrentCalls As Integer
    parameters: []
    return:
      type: System.Int32
      description: The maximum number of concurrent calls to the callback.
  overload: Microsoft.ServiceBus.Messaging.OnMessageOptions.MaxConcurrentCalls*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoComplete
  commentId: P:Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoComplete
  id: AutoComplete
  parent: Microsoft.ServiceBus.Messaging.OnMessageOptions
  langs:
  - csharp
  - vb
  name: AutoComplete
  nameWithType: OnMessageOptions.AutoComplete
  fullName: Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoComplete
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/OnMessageOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AutoComplete
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/OnMessageOptions.cs
    startLine: 47
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Gets or sets a value that indicates whether the message-pump should call \n<xref href=\"Microsoft.ServiceBus.Messaging.QueueClient.Complete(System.Guid)\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.ServiceBus.Messaging.SubscriptionClient.Complete(System.Guid)\" data-throw-if-not-resolved=\"false\"></xref> on messages after the callback has completed processing."
  example: []
  syntax:
    content: public bool AutoComplete { get; set; }
    content.vb: Public Property AutoComplete As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true to complete the message processing automatically on successful execution of the operation; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoComplete*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoRenewTimeout
  commentId: P:Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoRenewTimeout
  id: AutoRenewTimeout
  parent: Microsoft.ServiceBus.Messaging.OnMessageOptions
  langs:
  - csharp
  - vb
  name: AutoRenewTimeout
  nameWithType: OnMessageOptions.AutoRenewTimeout
  fullName: Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoRenewTimeout
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/OnMessageOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AutoRenewTimeout
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/OnMessageOptions.cs
    startLine: 57
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Gets or sets the maximum duration within which the lock will be renewed automatically. This \nvalue should be greater than the longest message lock duration; for example, the LockDuration Property. "
  example: []
  syntax:
    content: public TimeSpan AutoRenewTimeout { get; set; }
    content.vb: Public Property AutoRenewTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: The maximum duration during which locks are automatically renewed.
  overload: Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoRenewTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.OnMessageOptions.ExceptionReceived
  commentId: E:Microsoft.ServiceBus.Messaging.OnMessageOptions.ExceptionReceived
  id: ExceptionReceived
  parent: Microsoft.ServiceBus.Messaging.OnMessageOptions
  langs:
  - csharp
  - vb
  name: ExceptionReceived
  nameWithType: OnMessageOptions.ExceptionReceived
  fullName: Microsoft.ServiceBus.Messaging.OnMessageOptions.ExceptionReceived
  type: Event
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/OnMessageOptions.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ExceptionReceived
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/OnMessageOptions.cs
    startLine: 73
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Occurs when an exception is received. Enables you to be notified of any errors encountered by the message pump.\nWhen errors are received calls will automatically be retried, so this is informational. "
  example: []
  syntax:
    content: public event EventHandler<ExceptionReceivedEventArgs> ExceptionReceived
    content.vb: Public Event ExceptionReceived As EventHandler(Of ExceptionReceivedEventArgs)
    return:
      type: System.EventHandler{Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  commentId: M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})
- uid: Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})
  commentId: M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.OnMessageOptions
  commentId: T:Microsoft.ServiceBus.Messaging.OnMessageOptions
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: OnMessageOptions
  nameWithType: OnMessageOptions
  fullName: Microsoft.ServiceBus.Messaging.OnMessageOptions
- uid: Microsoft.ServiceBus.Messaging.OnMessageOptions.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Messaging.OnMessageOptions.#ctor
  isExternal: false
  name: OnMessageOptions
  nameWithType: OnMessageOptions.OnMessageOptions
  fullName: Microsoft.ServiceBus.Messaging.OnMessageOptions.OnMessageOptions
- uid: Microsoft.ServiceBus.Messaging.OnMessageOptions.MaxConcurrentCalls*
  commentId: Overload:Microsoft.ServiceBus.Messaging.OnMessageOptions.MaxConcurrentCalls
  isExternal: false
  name: MaxConcurrentCalls
  nameWithType: OnMessageOptions.MaxConcurrentCalls
  fullName: Microsoft.ServiceBus.Messaging.OnMessageOptions.MaxConcurrentCalls
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceBus.Messaging.QueueClient.Complete(System.Guid)
  commentId: M:Microsoft.ServiceBus.Messaging.QueueClient.Complete(System.Guid)
- uid: Microsoft.ServiceBus.Messaging.SubscriptionClient.Complete(System.Guid)
  commentId: M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Complete(System.Guid)
- uid: Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoComplete*
  commentId: Overload:Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoComplete
  isExternal: false
  name: AutoComplete
  nameWithType: OnMessageOptions.AutoComplete
  fullName: Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoComplete
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoRenewTimeout*
  commentId: Overload:Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoRenewTimeout
  isExternal: false
  name: AutoRenewTimeout
  nameWithType: OnMessageOptions.AutoRenewTimeout
  fullName: Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoRenewTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.EventHandler{Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs}
  commentId: T:System.EventHandler{Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ExceptionReceivedEventArgs>
  nameWithType: EventHandler<ExceptionReceivedEventArgs>
  fullName: System.EventHandler<Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs>
  nameWithType.vb: EventHandler(Of ExceptionReceivedEventArgs)
  fullname.vb: System.EventHandler(Of Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs)
  name.vb: EventHandler(Of ExceptionReceivedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs
    name: ExceptionReceivedEventArgs
    nameWithType: ExceptionReceivedEventArgs
    fullName: Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs
    name: ExceptionReceivedEventArgs
    nameWithType: ExceptionReceivedEventArgs
    fullName: Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
