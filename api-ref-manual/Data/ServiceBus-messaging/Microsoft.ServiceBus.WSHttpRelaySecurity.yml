### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.WSHttpRelaySecurity
  commentId: T:Microsoft.ServiceBus.WSHttpRelaySecurity
  id: WSHttpRelaySecurity
  parent: Microsoft.ServiceBus
  children:
  - Microsoft.ServiceBus.WSHttpRelaySecurity.Message
  - Microsoft.ServiceBus.WSHttpRelaySecurity.Mode
  - Microsoft.ServiceBus.WSHttpRelaySecurity.RelayClientAuthenticationType
  - Microsoft.ServiceBus.WSHttpRelaySecurity.Transport
  langs:
  - csharp
  - vb
  name: WSHttpRelaySecurity
  nameWithType: WSHttpRelaySecurity
  fullName: Microsoft.ServiceBus.WSHttpRelaySecurity
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelaySecurity.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: WSHttpRelaySecurity
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelaySecurity.cs
    startLine: 14
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: >
    Represents the security settings for the <xref href="Microsoft.ServiceBus.WSHttpRelayBinding" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public sealed class WSHttpRelaySecurity
    content.vb: Public NotInheritable Class WSHttpRelaySecurity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceBus.WSHttpRelaySecurity.Mode
  commentId: P:Microsoft.ServiceBus.WSHttpRelaySecurity.Mode
  id: Mode
  parent: Microsoft.ServiceBus.WSHttpRelaySecurity
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: WSHttpRelaySecurity.Mode
  fullName: Microsoft.ServiceBus.WSHttpRelaySecurity.Mode
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelaySecurity.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Mode
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelaySecurity.cs
    startLine: 39
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Specifies the message security mode for this Azure Service Bus binding. '
  example: []
  syntax:
    content: public EndToEndSecurityMode Mode { get; set; }
    content.vb: Public Property Mode As EndToEndSecurityMode
    parameters: []
    return:
      type: Microsoft.ServiceBus.EndToEndSecurityMode
      description: "Returns \n<xref href=\"Microsoft.ServiceBus.EndToEndSecurityMode\" data-throw-if-not-resolved=\"false\"></xref>.Contains the security mode for this Azure Service Bus binding. The default is Transport."
  overload: Microsoft.ServiceBus.WSHttpRelaySecurity.Mode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.WSHttpRelaySecurity.RelayClientAuthenticationType
  commentId: P:Microsoft.ServiceBus.WSHttpRelaySecurity.RelayClientAuthenticationType
  id: RelayClientAuthenticationType
  parent: Microsoft.ServiceBus.WSHttpRelaySecurity
  langs:
  - csharp
  - vb
  name: RelayClientAuthenticationType
  nameWithType: WSHttpRelaySecurity.RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.WSHttpRelaySecurity.RelayClientAuthenticationType
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelaySecurity.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: RelayClientAuthenticationType
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelaySecurity.cs
    startLine: 56
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Gets or sets the authentication type required for the service \napplication or client application to provide to the Azure Service Bus."
  example: []
  syntax:
    content: public RelayClientAuthenticationType RelayClientAuthenticationType { get; set; }
    content.vb: Public Property RelayClientAuthenticationType As RelayClientAuthenticationType
    parameters: []
    return:
      type: Microsoft.ServiceBus.RelayClientAuthenticationType
      description: "The authentication type required for the service application or client application to provide to the Azure Service Bus. The default is \n<xref href=\"Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken\" data-throw-if-not-resolved=\"false\"></xref>."
  overload: Microsoft.ServiceBus.WSHttpRelaySecurity.RelayClientAuthenticationType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.WSHttpRelaySecurity.Transport
  commentId: P:Microsoft.ServiceBus.WSHttpRelaySecurity.Transport
  id: Transport
  parent: Microsoft.ServiceBus.WSHttpRelaySecurity
  langs:
  - csharp
  - vb
  name: Transport
  nameWithType: WSHttpRelaySecurity.Transport
  fullName: Microsoft.ServiceBus.WSHttpRelaySecurity.Transport
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelaySecurity.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Transport
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelaySecurity.cs
    startLine: 77
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: 'Gets an object that contains the transport-level security settings for this Azure Service Bus binding. '
  example: []
  syntax:
    content: public HttpRelayTransportSecurity Transport { get; }
    content.vb: Public ReadOnly Property Transport As HttpRelayTransportSecurity
    parameters: []
    return:
      type: Microsoft.ServiceBus.HttpRelayTransportSecurity
      description: "Returns \n<xref href=\"Microsoft.ServiceBus.HttpRelayTransportSecurity\" data-throw-if-not-resolved=\"false\"></xref>.Contains the transport security for this item. The default value includes a ClientCredentialType of None and a ProxyCredentialType of None."
  overload: Microsoft.ServiceBus.WSHttpRelaySecurity.Transport*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.WSHttpRelaySecurity.Message
  commentId: P:Microsoft.ServiceBus.WSHttpRelaySecurity.Message
  id: Message
  parent: Microsoft.ServiceBus.WSHttpRelaySecurity
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: WSHttpRelaySecurity.Message
  fullName: Microsoft.ServiceBus.WSHttpRelaySecurity.Message
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelaySecurity.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Message
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/WSHttpRelaySecurity.cs
    startLine: 85
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets the message-level security settings for this Azure Service Bus binding.
  example: []
  syntax:
    content: public NonDualMessageSecurityOverRelayHttp Message { get; }
    content.vb: Public ReadOnly Property Message As NonDualMessageSecurityOverRelayHttp
    parameters: []
    return:
      type: Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp
      description: "Returns \n<xref href=\"Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp\" data-throw-if-not-resolved=\"false\"></xref>.Contains the security settings. The default value includes: EstablishSecurityContext with default set to true, ClientCredentialType is Windows, AlgorithmSuite is Basic256, and NegotiateServiceCredential is true."
  overload: Microsoft.ServiceBus.WSHttpRelaySecurity.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceBus.WSHttpRelayBinding
  commentId: T:Microsoft.ServiceBus.WSHttpRelayBinding
  parent: Microsoft.ServiceBus
  isExternal: false
  name: WSHttpRelayBinding
  nameWithType: WSHttpRelayBinding
  fullName: Microsoft.ServiceBus.WSHttpRelayBinding
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.EndToEndSecurityMode
  commentId: T:Microsoft.ServiceBus.EndToEndSecurityMode
  parent: Microsoft.ServiceBus
  isExternal: false
  name: EndToEndSecurityMode
  nameWithType: EndToEndSecurityMode
  fullName: Microsoft.ServiceBus.EndToEndSecurityMode
- uid: Microsoft.ServiceBus.WSHttpRelaySecurity.Mode*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelaySecurity.Mode
  isExternal: false
  name: Mode
  nameWithType: WSHttpRelaySecurity.Mode
  fullName: Microsoft.ServiceBus.WSHttpRelaySecurity.Mode
- uid: Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken
  commentId: F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken
- uid: Microsoft.ServiceBus.WSHttpRelaySecurity.RelayClientAuthenticationType*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelaySecurity.RelayClientAuthenticationType
  isExternal: false
  name: RelayClientAuthenticationType
  nameWithType: WSHttpRelaySecurity.RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.WSHttpRelaySecurity.RelayClientAuthenticationType
- uid: Microsoft.ServiceBus.RelayClientAuthenticationType
  commentId: T:Microsoft.ServiceBus.RelayClientAuthenticationType
  parent: Microsoft.ServiceBus
  isExternal: false
  name: RelayClientAuthenticationType
  nameWithType: RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.RelayClientAuthenticationType
- uid: Microsoft.ServiceBus.HttpRelayTransportSecurity
  commentId: T:Microsoft.ServiceBus.HttpRelayTransportSecurity
  parent: Microsoft.ServiceBus
  isExternal: false
  name: HttpRelayTransportSecurity
  nameWithType: HttpRelayTransportSecurity
  fullName: Microsoft.ServiceBus.HttpRelayTransportSecurity
- uid: Microsoft.ServiceBus.WSHttpRelaySecurity.Transport*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelaySecurity.Transport
  isExternal: false
  name: Transport
  nameWithType: WSHttpRelaySecurity.Transport
  fullName: Microsoft.ServiceBus.WSHttpRelaySecurity.Transport
- uid: Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp
  commentId: T:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp
  parent: Microsoft.ServiceBus
  isExternal: false
  name: NonDualMessageSecurityOverRelayHttp
  nameWithType: NonDualMessageSecurityOverRelayHttp
  fullName: Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp
- uid: Microsoft.ServiceBus.WSHttpRelaySecurity.Message*
  commentId: Overload:Microsoft.ServiceBus.WSHttpRelaySecurity.Message
  isExternal: false
  name: Message
  nameWithType: WSHttpRelaySecurity.Message
  fullName: Microsoft.ServiceBus.WSHttpRelaySecurity.Message
