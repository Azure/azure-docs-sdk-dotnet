### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules
  commentId: T:Microsoft.ServiceBus.Messaging.AuthorizationRules
  id: AuthorizationRules
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule})
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.Clear
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[],System.Int32)
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.Count
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.GetEnumerator
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.Predicate{Microsoft.ServiceBus.Messaging.AuthorizationRule})
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.String)
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.HasEqualRuntimeBehavior(Microsoft.ServiceBus.Messaging.AuthorizationRules)
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.innerCollection
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.IsReadOnly
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.RequiresEncryption
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.Serializer
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule(System.String,Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule@)
  langs:
  - csharp
  - vb
  name: AuthorizationRules
  nameWithType: AuthorizationRules
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AuthorizationRules
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 22
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Represents a collection of <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRule" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [CollectionDataContract(Name = "AuthorizationRules", ItemName = "AuthorizationRule", Namespace = "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")]

      [KnownType(typeof (AuthorizationRule))]

      public class AuthorizationRules : ICollection<AuthorizationRule>, IEnumerable<AuthorizationRule>, IEnumerable
    content.vb: >-
      <CollectionDataContract(Name:="AuthorizationRules", ItemName:="AuthorizationRule", Namespace:="http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")>

      <KnownType(GetType(AuthorizationRule))>

      Public Class AuthorizationRules
          Implements ICollection(Of AuthorizationRule), IEnumerable(Of AuthorizationRule), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  - System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.CollectionDataContractAttribute
    ctor: System.Runtime.Serialization.CollectionDataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: AuthorizationRules
    - name: ItemName
      type: System.String
      value: AuthorizationRule
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/netservices/2010/10/servicebus/connect
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.ServiceBus.Messaging.AuthorizationRule
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.Serializer
  commentId: F:Microsoft.ServiceBus.Messaging.AuthorizationRules.Serializer
  id: Serializer
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: Serializer
  nameWithType: AuthorizationRules.Serializer
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.Serializer
  type: Field
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Serializer
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 31
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Specifies the serializer for serializing and deserializing the object.
  example: []
  syntax:
    content: public static readonly DataContractSerializer Serializer
    content.vb: Public Shared ReadOnly Serializer As DataContractSerializer
    return:
      type: System.Runtime.Serialization.DataContractSerializer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.innerCollection
  commentId: F:Microsoft.ServiceBus.Messaging.AuthorizationRules.innerCollection
  id: innerCollection
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: innerCollection
  nameWithType: AuthorizationRules.innerCollection
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.innerCollection
  type: Field
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: innerCollection
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 34
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Specifies the inner collection.
  example: []
  syntax:
    content: public readonly ICollection<AuthorizationRule> innerCollection
    content.vb: Public ReadOnly innerCollection As ICollection(Of AuthorizationRule)
    return:
      type: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: AuthorizationRules()
  nameWithType: AuthorizationRules.AuthorizationRules()
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.AuthorizationRules()
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 45
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Initializes a new instance of the <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRules" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public AuthorizationRules()
    content.vb: Public Sub New
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule})
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule})
  id: '#ctor(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule})'
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: AuthorizationRules(IEnumerable<AuthorizationRule>)
  nameWithType: AuthorizationRules.AuthorizationRules(IEnumerable<AuthorizationRule>)
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.AuthorizationRules(System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.AuthorizationRule>)
  type: Constructor
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: .ctor
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 55
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Initializes a new instance of the \n<xref href=\"Microsoft.ServiceBus.Messaging.AuthorizationRules\" data-throw-if-not-resolved=\"false\"></xref> class with a list of \n<xref href=\"Microsoft.ServiceBus.Messaging.AuthorizationRule\" data-throw-if-not-resolved=\"false\"></xref>."
  example: []
  syntax:
    content: public AuthorizationRules(IEnumerable<AuthorizationRule> enumerable)
    content.vb: Public Sub New(enumerable As IEnumerable(Of AuthorizationRule))
    parameters:
    - id: enumerable
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule}
      description: The list of <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRule" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor*
  nameWithType.vb: AuthorizationRules.AuthorizationRules(IEnumerable(Of AuthorizationRule))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.AuthorizationRules.AuthorizationRules(System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.AuthorizationRule))
  name.vb: AuthorizationRules(IEnumerable(Of AuthorizationRule))
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetEnumerator
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: AuthorizationRules.GetEnumerator()
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: GetEnumerator
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 73
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<AuthorizationRule> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of AuthorizationRule)
    return:
      type: System.Collections.Generic.IEnumerator{Microsoft.ServiceBus.Messaging.AuthorizationRule}
      description: The enumerator that can be used to iterate through the collection.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: AuthorizationRules.IEnumerable.GetEnumerator()
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 80
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the enumerator that iterates through the collection.
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: The enumerator that can be used to iterate through the collection.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: AuthorizationRules.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  id: Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: Add(AuthorizationRule)
  nameWithType: AuthorizationRules.Add(AuthorizationRule)
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Add
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 87
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Adds the specified <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRule" data-throw-if-not-resolved="false"></xref> into the collection.
  example: []
  syntax:
    content: public void Add(AuthorizationRule item)
    content.vb: Public Sub Add(item As AuthorizationRule)
    parameters:
    - id: item
      type: Microsoft.ServiceBus.Messaging.AuthorizationRule
      description: The <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRule" data-throw-if-not-resolved="false"></xref> to be added.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.Add*
  implements:
  - System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.Clear
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Clear
  id: Clear
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: AuthorizationRules.Clear()
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.Clear()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Clear
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 110
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Clears all elements in the collection.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.Clear*
  implements:
  - System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  id: Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: Contains(AuthorizationRule)
  nameWithType: AuthorizationRules.Contains(AuthorizationRule)
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Contains
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 119
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Determines whether the specified item exists in the collection.
  example: []
  syntax:
    content: public bool Contains(AuthorizationRule item)
    content.vb: Public Function Contains(item As AuthorizationRule) As Boolean
    parameters:
    - id: item
      type: Microsoft.ServiceBus.Messaging.AuthorizationRule
      description: The item to search in the collection.
    return:
      type: System.Boolean
      description: true if the specified item is found; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.Contains*
  implements:
  - System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[],System.Int32)
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[],System.Int32)
  id: CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[],System.Int32)
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: CopyTo(AuthorizationRule[], Int32)
  nameWithType: AuthorizationRules.CopyTo(AuthorizationRule[], Int32)
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[], System.Int32)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CopyTo
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 127
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Copies the elements into an array starting at the specified array index.
  example: []
  syntax:
    content: public void CopyTo(AuthorizationRule[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As AuthorizationRule(), arrayIndex As Integer)
    parameters:
    - id: array
      type: Microsoft.ServiceBus.Messaging.AuthorizationRule[]
      description: The array to hold the copied elements.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index at which copying starts.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[],System.Int32)
  nameWithType.vb: AuthorizationRules.CopyTo(AuthorizationRule(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule(), System.Int32)
  name.vb: CopyTo(AuthorizationRule(), Int32)
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  id: Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: Remove(AuthorizationRule)
  nameWithType: AuthorizationRules.Remove(AuthorizationRule)
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Remove
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 135
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Removes the specified <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRule" data-throw-if-not-resolved="false"></xref> from the collection.
  example: []
  syntax:
    content: public bool Remove(AuthorizationRule item)
    content.vb: Public Function Remove(item As AuthorizationRule) As Boolean
    parameters:
    - id: item
      type: Microsoft.ServiceBus.Messaging.AuthorizationRule
      description: The item to remove.
    return:
      type: System.Boolean
      description: true if the operation succeeded; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.Remove*
  implements:
  - System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.Count
  commentId: P:Microsoft.ServiceBus.Messaging.AuthorizationRules.Count
  id: Count
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: AuthorizationRules.Count
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.Count
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Count
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 142
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets the number of <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRule" data-throw-if-not-resolved="false"></xref> contained in the collection.
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRule" data-throw-if-not-resolved="false"></xref> contained in the collection.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.Count*
  implements:
  - System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.Predicate{Microsoft.ServiceBus.Messaging.AuthorizationRule})
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.Predicate{Microsoft.ServiceBus.Messaging.AuthorizationRule})
  id: GetRules(System.Predicate{Microsoft.ServiceBus.Messaging.AuthorizationRule})
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: GetRules(Predicate<AuthorizationRule>)
  nameWithType: AuthorizationRules.GetRules(Predicate<AuthorizationRule>)
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.Predicate<Microsoft.ServiceBus.Messaging.AuthorizationRule>)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: GetRules
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 150
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the sets of <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRule" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public List<AuthorizationRule> GetRules(Predicate<AuthorizationRule> match)
    content.vb: Public Function GetRules(match As Predicate(Of AuthorizationRule)) As List(Of AuthorizationRule)
    parameters:
    - id: match
      type: System.Predicate{Microsoft.ServiceBus.Messaging.AuthorizationRule}
      description: The authorization rule to match the specified value.
    return:
      type: System.Collections.Generic.List{Microsoft.ServiceBus.Messaging.AuthorizationRule}
      description: The sets of <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRule" data-throw-if-not-resolved="false"></xref> that match the specified value.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules*
  nameWithType.vb: AuthorizationRules.GetRules(Predicate(Of AuthorizationRule))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.Predicate(Of Microsoft.ServiceBus.Messaging.AuthorizationRule))
  name.vb: GetRules(Predicate(Of AuthorizationRule))
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule(System.String,Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule@)
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule(System.String,Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule@)
  id: TryGetSharedAccessAuthorizationRule(System.String,Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule@)
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: TryGetSharedAccessAuthorizationRule(String, out SharedAccessAuthorizationRule)
  nameWithType: AuthorizationRules.TryGetSharedAccessAuthorizationRule(String, out SharedAccessAuthorizationRule)
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule(System.String, out Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: TryGetSharedAccessAuthorizationRule
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 160
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the rule associated with the specified key.
  example: []
  syntax:
    content: public bool TryGetSharedAccessAuthorizationRule(string keyName, out SharedAccessAuthorizationRule rule)
    content.vb: Public Function TryGetSharedAccessAuthorizationRule(keyName As String, ByRef rule As SharedAccessAuthorizationRule) As Boolean
    parameters:
    - id: keyName
      type: System.String
      description: The name of the key.
    - id: rule
      type: Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule
      description: The rule associated with the specified key.
    return:
      type: System.Boolean
      description: "true if the \n<xref href=\"Microsoft.ServiceBus.Messaging.AuthorizationRules\" data-throw-if-not-resolved=\"false\"></xref> contains an element with the specified key; otherwise, false."
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule*
  nameWithType.vb: AuthorizationRules.TryGetSharedAccessAuthorizationRule(String, ByRef SharedAccessAuthorizationRule)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule(System.String, ByRef Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule)
  name.vb: TryGetSharedAccessAuthorizationRule(String, ByRef SharedAccessAuthorizationRule)
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.String)
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.String)
  id: GetRules(System.String)
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: GetRules(String)
  nameWithType: AuthorizationRules.GetRules(String)
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.String)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: GetRules
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 168
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets the set of <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRule" data-throw-if-not-resolved="false"></xref> that matches the specified value.
  example: []
  syntax:
    content: public List<AuthorizationRule> GetRules(string claimValue)
    content.vb: Public Function GetRules(claimValue As String) As List(Of AuthorizationRule)
    parameters:
    - id: claimValue
      type: System.String
      description: The value to search for.
    return:
      type: System.Collections.Generic.List{Microsoft.ServiceBus.Messaging.AuthorizationRule}
      description: The sets of <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRule" data-throw-if-not-resolved="false"></xref> that match the specified value.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.IsReadOnly
  commentId: P:Microsoft.ServiceBus.Messaging.AuthorizationRules.IsReadOnly
  id: IsReadOnly
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: AuthorizationRules.IsReadOnly
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.IsReadOnly
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: IsReadOnly
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 175
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets or sets whether the <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRules" data-throw-if-not-resolved="false"></xref> is read only.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRules" data-throw-if-not-resolved="false"></xref> is read only; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.HasEqualRuntimeBehavior(Microsoft.ServiceBus.Messaging.AuthorizationRules)
  commentId: M:Microsoft.ServiceBus.Messaging.AuthorizationRules.HasEqualRuntimeBehavior(Microsoft.ServiceBus.Messaging.AuthorizationRules)
  id: HasEqualRuntimeBehavior(Microsoft.ServiceBus.Messaging.AuthorizationRules)
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: HasEqualRuntimeBehavior(AuthorizationRules)
  nameWithType: AuthorizationRules.HasEqualRuntimeBehavior(AuthorizationRules)
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.HasEqualRuntimeBehavior(Microsoft.ServiceBus.Messaging.AuthorizationRules)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: HasEqualRuntimeBehavior
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 184
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: "Determines whether the specified \n<xref href=\"Microsoft.ServiceBus.Messaging.AuthorizationRules\" data-throw-if-not-resolved=\"false\"></xref> has equal runtime behavior as this current object."
  example: []
  syntax:
    content: public bool HasEqualRuntimeBehavior(AuthorizationRules comparand)
    content.vb: Public Function HasEqualRuntimeBehavior(comparand As AuthorizationRules) As Boolean
    parameters:
    - id: comparand
      type: Microsoft.ServiceBus.Messaging.AuthorizationRules
      description: The <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRules" data-throw-if-not-resolved="false"></xref> to compare to the current object.
    return:
      type: System.Boolean
      description: true if the they are the equal runtime behavior; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.HasEqualRuntimeBehavior*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.RequiresEncryption
  commentId: P:Microsoft.ServiceBus.Messaging.AuthorizationRules.RequiresEncryption
  id: RequiresEncryption
  parent: Microsoft.ServiceBus.Messaging.AuthorizationRules
  langs:
  - csharp
  - vb
  name: RequiresEncryption
  nameWithType: AuthorizationRules.RequiresEncryption
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.RequiresEncryption
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: RequiresEncryption
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/AuthorizationRules.cs
    startLine: 213
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Gets a value that indicates whether the <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRules" data-throw-if-not-resolved="false"></xref> requires encryption.
  example: []
  syntax:
    content: public bool RequiresEncryption { get; }
    content.vb: Public ReadOnly Property RequiresEncryption As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="Microsoft.ServiceBus.Messaging.AuthorizationRules" data-throw-if-not-resolved="false"></xref> requires encryption; otherwise, false.
  overload: Microsoft.ServiceBus.Messaging.AuthorizationRules.RequiresEncryption*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
  commentId: T:Microsoft.ServiceBus.Messaging.AuthorizationRule
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: AuthorizationRule
  nameWithType: AuthorizationRule
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<AuthorizationRule>
  nameWithType: ICollection<AuthorizationRule>
  fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>
  nameWithType.vb: ICollection(Of AuthorizationRule)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule)
  name.vb: ICollection(Of AuthorizationRule)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AuthorizationRule>
  nameWithType: IEnumerable<AuthorizationRule>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.AuthorizationRule>
  nameWithType.vb: IEnumerable(Of AuthorizationRule)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.AuthorizationRule)
  name.vb: IEnumerable(Of AuthorizationRule)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Runtime.Serialization.DataContractSerializer
  commentId: T:System.Runtime.Serialization.DataContractSerializer
  parent: System.Runtime.Serialization
  isExternal: true
  name: DataContractSerializer
  nameWithType: DataContractSerializer
  fullName: System.Runtime.Serialization.DataContractSerializer
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules
  commentId: T:Microsoft.ServiceBus.Messaging.AuthorizationRules
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: AuthorizationRules
  nameWithType: AuthorizationRules
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor
  isExternal: false
  name: AuthorizationRules
  nameWithType: AuthorizationRules.AuthorizationRules
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.AuthorizationRules
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetEnumerator*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: AuthorizationRules.GetEnumerator
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<AuthorizationRule>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.AuthorizationRule>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of AuthorizationRule).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<AuthorizationRule>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.AuthorizationRule>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of AuthorizationRule).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  commentId: T:System.Collections.Generic.IEnumerator{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<AuthorizationRule>
  nameWithType: IEnumerator<AuthorizationRule>
  fullName: System.Collections.Generic.IEnumerator<Microsoft.ServiceBus.Messaging.AuthorizationRule>
  nameWithType.vb: IEnumerator(Of AuthorizationRule)
  fullname.vb: System.Collections.Generic.IEnumerator(Of Microsoft.ServiceBus.Messaging.AuthorizationRule)
  name.vb: IEnumerator(Of AuthorizationRule)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: AuthorizationRules.IEnumerable.GetEnumerator
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: AuthorizationRules.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.Add*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.Add
  isExternal: false
  name: Add
  nameWithType: AuthorizationRules.Add
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.Add
- uid: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  commentId: M:System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  parent: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(AuthorizationRule)
  nameWithType: ICollection<AuthorizationRule>.Add(AuthorizationRule)
  fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>.Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  nameWithType.vb: ICollection(Of AuthorizationRule).Add(AuthorizationRule)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<AuthorizationRule>.Add
    fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of AuthorizationRule).Add
    fullName: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.Clear*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.Clear
  isExternal: false
  name: Clear
  nameWithType: AuthorizationRules.Clear
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.Clear
- uid: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Clear
  commentId: M:System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Clear
  parent: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<AuthorizationRule>.Clear()
  fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>.Clear()
  nameWithType.vb: ICollection(Of AuthorizationRule).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<AuthorizationRule>.Clear
    fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of AuthorizationRule).Clear
    fullName: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.Contains*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.Contains
  isExternal: false
  name: Contains
  nameWithType: AuthorizationRules.Contains
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.Contains
- uid: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  commentId: M:System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  parent: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(AuthorizationRule)
  nameWithType: ICollection<AuthorizationRule>.Contains(AuthorizationRule)
  fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>.Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  nameWithType.vb: ICollection(Of AuthorizationRule).Contains(AuthorizationRule)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<AuthorizationRule>.Contains
    fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of AuthorizationRule).Contains
    fullName: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo
  isExternal: false
  name: CopyTo
  nameWithType: AuthorizationRules.CopyTo
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo
- uid: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[],System.Int32)
  parent: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(AuthorizationRule[], Int32)
  nameWithType: ICollection<AuthorizationRule>.CopyTo(AuthorizationRule[], Int32)
  fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[], System.Int32)
  nameWithType.vb: ICollection(Of AuthorizationRule).CopyTo(AuthorizationRule(), Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule(), System.Int32)
  name.vb: CopyTo(AuthorizationRule(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<AuthorizationRule>.CopyTo
    fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of AuthorizationRule).CopyTo
    fullName: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRule[]
  name: AuthorizationRule[]
  nameWithType: AuthorizationRule[]
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule[]
  nameWithType.vb: AuthorizationRule()
  fullname.vb: Microsoft.ServiceBus.Messaging.AuthorizationRule()
  name.vb: AuthorizationRule()
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.Remove*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.Remove
  isExternal: false
  name: Remove
  nameWithType: AuthorizationRules.Remove
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.Remove
- uid: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  commentId: M:System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  parent: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(AuthorizationRule)
  nameWithType: ICollection<AuthorizationRule>.Remove(AuthorizationRule)
  fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>.Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  nameWithType.vb: ICollection(Of AuthorizationRule).Remove(AuthorizationRule)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<AuthorizationRule>.Remove
    fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of AuthorizationRule).Remove
    fullName: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.Count*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.Count
  isExternal: false
  name: Count
  nameWithType: AuthorizationRules.Count
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.Count
- uid: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Count
  commentId: P:System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.Count
  parent: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<AuthorizationRule>.Count
  fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>.Count
  nameWithType.vb: ICollection(Of AuthorizationRule).Count
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules
  isExternal: false
  name: GetRules
  nameWithType: AuthorizationRules.GetRules
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules
- uid: System.Predicate{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  commentId: T:System.Predicate{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  parent: System
  definition: System.Predicate`1
  name: Predicate<AuthorizationRule>
  nameWithType: Predicate<AuthorizationRule>
  fullName: System.Predicate<Microsoft.ServiceBus.Messaging.AuthorizationRule>
  nameWithType.vb: Predicate(Of AuthorizationRule)
  fullname.vb: System.Predicate(Of Microsoft.ServiceBus.Messaging.AuthorizationRule)
  name.vb: Predicate(Of AuthorizationRule)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  commentId: T:System.Collections.Generic.List{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AuthorizationRule>
  nameWithType: List<AuthorizationRule>
  fullName: System.Collections.Generic.List<Microsoft.ServiceBus.Messaging.AuthorizationRule>
  nameWithType.vb: List(Of AuthorizationRule)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.ServiceBus.Messaging.AuthorizationRule)
  name.vb: List(Of AuthorizationRule)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.AuthorizationRule
    name: AuthorizationRule
    nameWithType: AuthorizationRule
    fullName: Microsoft.ServiceBus.Messaging.AuthorizationRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullname.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule
  isExternal: false
  name: TryGetSharedAccessAuthorizationRule
  nameWithType: AuthorizationRules.TryGetSharedAccessAuthorizationRule
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule
  commentId: T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: SharedAccessAuthorizationRule
  nameWithType: SharedAccessAuthorizationRule
  fullName: Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.IsReadOnly*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: AuthorizationRules.IsReadOnly
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.IsReadOnly
- uid: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}.IsReadOnly
  parent: System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<AuthorizationRule>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<Microsoft.ServiceBus.Messaging.AuthorizationRule>.IsReadOnly
  nameWithType.vb: ICollection(Of AuthorizationRule).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.ServiceBus.Messaging.AuthorizationRule).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.HasEqualRuntimeBehavior*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.HasEqualRuntimeBehavior
  isExternal: false
  name: HasEqualRuntimeBehavior
  nameWithType: AuthorizationRules.HasEqualRuntimeBehavior
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.HasEqualRuntimeBehavior
- uid: Microsoft.ServiceBus.Messaging.AuthorizationRules.RequiresEncryption*
  commentId: Overload:Microsoft.ServiceBus.Messaging.AuthorizationRules.RequiresEncryption
  isExternal: false
  name: RequiresEncryption
  nameWithType: AuthorizationRules.RequiresEncryption
  fullName: Microsoft.ServiceBus.Messaging.AuthorizationRules.RequiresEncryption
