### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.BasicHttpRelaySecurity
  commentId: T:Microsoft.ServiceBus.BasicHttpRelaySecurity
  id: BasicHttpRelaySecurity
  parent: Microsoft.ServiceBus
  children:
  - Microsoft.ServiceBus.BasicHttpRelaySecurity.Message
  - Microsoft.ServiceBus.BasicHttpRelaySecurity.Mode
  - Microsoft.ServiceBus.BasicHttpRelaySecurity.RelayClientAuthenticationType
  - Microsoft.ServiceBus.BasicHttpRelaySecurity.Transport
  langs:
  - csharp
  - vb
  name: BasicHttpRelaySecurity
  nameWithType: BasicHttpRelaySecurity
  fullName: Microsoft.ServiceBus.BasicHttpRelaySecurity
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/BasicHttpRelaySecurity.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: BasicHttpRelaySecurity
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/BasicHttpRelaySecurity.cs
    startLine: 14
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: "Provides properties used to configure the security settings of a \n<xref href=\"Microsoft.ServiceBus.BasicHttpRelayBinding\" data-throw-if-not-resolved=\"false\"></xref> binding."
  example: []
  syntax:
    content: public sealed class BasicHttpRelaySecurity
    content.vb: Public NotInheritable Class BasicHttpRelaySecurity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceBus.BasicHttpRelaySecurity.Mode
  commentId: P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Mode
  id: Mode
  parent: Microsoft.ServiceBus.BasicHttpRelaySecurity
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: BasicHttpRelaySecurity.Mode
  fullName: Microsoft.ServiceBus.BasicHttpRelaySecurity.Mode
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/BasicHttpRelaySecurity.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Mode
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/BasicHttpRelaySecurity.cs
    startLine: 41
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the security mode for a <xref href="Microsoft.ServiceBus.BasicHttpRelayBinding" data-throw-if-not-resolved="false"></xref> binding.
  example: []
  syntax:
    content: public EndToEndBasicHttpSecurityMode Mode { get; set; }
    content.vb: Public Property Mode As EndToEndBasicHttpSecurityMode
    parameters: []
    return:
      type: Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode
      description: One of the values of <xref href="Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" data-throw-if-not-resolved="false"></xref> enumeration. The default value is None.
  overload: Microsoft.ServiceBus.BasicHttpRelaySecurity.Mode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value is not a legal value for \n<xref href=\"Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.BasicHttpRelaySecurity.RelayClientAuthenticationType
  commentId: P:Microsoft.ServiceBus.BasicHttpRelaySecurity.RelayClientAuthenticationType
  id: RelayClientAuthenticationType
  parent: Microsoft.ServiceBus.BasicHttpRelaySecurity
  langs:
  - csharp
  - vb
  name: RelayClientAuthenticationType
  nameWithType: BasicHttpRelaySecurity.RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.BasicHttpRelaySecurity.RelayClientAuthenticationType
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/BasicHttpRelaySecurity.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: RelayClientAuthenticationType
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/BasicHttpRelaySecurity.cs
    startLine: 62
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets or sets the type of authentication used by the Azure Service Bus service.
  example: []
  syntax:
    content: public RelayClientAuthenticationType RelayClientAuthenticationType { get; set; }
    content.vb: Public Property RelayClientAuthenticationType As RelayClientAuthenticationType
    parameters: []
    return:
      type: Microsoft.ServiceBus.RelayClientAuthenticationType
      description: "Returns a \n<xref href=\"Microsoft.ServiceBus.RelayClientAuthenticationType\" data-throw-if-not-resolved=\"false\"></xref> that contains the type of authentication used by the service."
  overload: Microsoft.ServiceBus.BasicHttpRelaySecurity.RelayClientAuthenticationType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.BasicHttpRelaySecurity.Transport
  commentId: P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Transport
  id: Transport
  parent: Microsoft.ServiceBus.BasicHttpRelaySecurity
  langs:
  - csharp
  - vb
  name: Transport
  nameWithType: BasicHttpRelaySecurity.Transport
  fullName: Microsoft.ServiceBus.BasicHttpRelaySecurity.Transport
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/BasicHttpRelaySecurity.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Transport
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/BasicHttpRelaySecurity.cs
    startLine: 82
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets the transport-level security settings for a <xref href="Microsoft.ServiceBus.BasicHttpRelayBinding" data-throw-if-not-resolved="false"></xref> binding.
  example: []
  syntax:
    content: public HttpRelayTransportSecurity Transport { get; }
    content.vb: Public ReadOnly Property Transport As HttpRelayTransportSecurity
    parameters: []
    return:
      type: Microsoft.ServiceBus.HttpRelayTransportSecurity
      description: Returns a <xref href="Microsoft.ServiceBus.HttpRelayTransportSecurity" data-throw-if-not-resolved="false"></xref> that contains the security settings.
  overload: Microsoft.ServiceBus.BasicHttpRelaySecurity.Transport*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceBus.BasicHttpRelaySecurity.Message
  commentId: P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Message
  id: Message
  parent: Microsoft.ServiceBus.BasicHttpRelaySecurity
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: BasicHttpRelaySecurity.Message
  fullName: Microsoft.ServiceBus.BasicHttpRelaySecurity.Message
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/BasicHttpRelaySecurity.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Message
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Connectivity/BasicHttpRelaySecurity.cs
    startLine: 90
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus
  summary: Gets the message-level security settings for a <xref href="Microsoft.ServiceBus.BasicHttpRelayBinding" data-throw-if-not-resolved="false"></xref> binding.
  example: []
  syntax:
    content: public BasicHttpRelayMessageSecurity Message { get; }
    content.vb: Public ReadOnly Property Message As BasicHttpRelayMessageSecurity
    parameters: []
    return:
      type: Microsoft.ServiceBus.BasicHttpRelayMessageSecurity
      description: "Returns a \n<xref href=\"Microsoft.ServiceBus.BasicHttpRelayMessageSecurity\" data-throw-if-not-resolved=\"false\"></xref>, which represents the message-level security settings for this binding."
  overload: Microsoft.ServiceBus.BasicHttpRelaySecurity.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceBus.BasicHttpRelayBinding
  commentId: T:Microsoft.ServiceBus.BasicHttpRelayBinding
  isExternal: false
  name: BasicHttpRelayBinding
  nameWithType: BasicHttpRelayBinding
  fullName: Microsoft.ServiceBus.BasicHttpRelayBinding
- uid: Microsoft.ServiceBus
  commentId: N:Microsoft.ServiceBus
  isExternal: false
  name: Microsoft.ServiceBus
  nameWithType: Microsoft.ServiceBus
  fullName: Microsoft.ServiceBus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode
  commentId: T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode
  parent: Microsoft.ServiceBus
  isExternal: false
  name: EndToEndBasicHttpSecurityMode
  nameWithType: EndToEndBasicHttpSecurityMode
  fullName: Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode
- uid: Microsoft.ServiceBus.BasicHttpRelaySecurity.Mode*
  commentId: Overload:Microsoft.ServiceBus.BasicHttpRelaySecurity.Mode
  isExternal: false
  name: Mode
  nameWithType: BasicHttpRelaySecurity.Mode
  fullName: Microsoft.ServiceBus.BasicHttpRelaySecurity.Mode
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: Microsoft.ServiceBus.RelayClientAuthenticationType
  commentId: T:Microsoft.ServiceBus.RelayClientAuthenticationType
  parent: Microsoft.ServiceBus
  isExternal: false
  name: RelayClientAuthenticationType
  nameWithType: RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.RelayClientAuthenticationType
- uid: Microsoft.ServiceBus.BasicHttpRelaySecurity.RelayClientAuthenticationType*
  commentId: Overload:Microsoft.ServiceBus.BasicHttpRelaySecurity.RelayClientAuthenticationType
  isExternal: false
  name: RelayClientAuthenticationType
  nameWithType: BasicHttpRelaySecurity.RelayClientAuthenticationType
  fullName: Microsoft.ServiceBus.BasicHttpRelaySecurity.RelayClientAuthenticationType
- uid: Microsoft.ServiceBus.HttpRelayTransportSecurity
  commentId: T:Microsoft.ServiceBus.HttpRelayTransportSecurity
  parent: Microsoft.ServiceBus
  isExternal: false
  name: HttpRelayTransportSecurity
  nameWithType: HttpRelayTransportSecurity
  fullName: Microsoft.ServiceBus.HttpRelayTransportSecurity
- uid: Microsoft.ServiceBus.BasicHttpRelaySecurity.Transport*
  commentId: Overload:Microsoft.ServiceBus.BasicHttpRelaySecurity.Transport
  isExternal: false
  name: Transport
  nameWithType: BasicHttpRelaySecurity.Transport
  fullName: Microsoft.ServiceBus.BasicHttpRelaySecurity.Transport
- uid: Microsoft.ServiceBus.BasicHttpRelayMessageSecurity
  commentId: T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity
  parent: Microsoft.ServiceBus
  isExternal: false
  name: BasicHttpRelayMessageSecurity
  nameWithType: BasicHttpRelayMessageSecurity
  fullName: Microsoft.ServiceBus.BasicHttpRelayMessageSecurity
- uid: Microsoft.ServiceBus.BasicHttpRelaySecurity.Message*
  commentId: Overload:Microsoft.ServiceBus.BasicHttpRelaySecurity.Message
  isExternal: false
  name: Message
  nameWithType: BasicHttpRelaySecurity.Message
  fullName: Microsoft.ServiceBus.BasicHttpRelaySecurity.Message
