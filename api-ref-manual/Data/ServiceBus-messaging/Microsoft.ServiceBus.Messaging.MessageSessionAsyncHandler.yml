### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler
  commentId: T:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler
  id: MessageSessionAsyncHandler
  parent: Microsoft.ServiceBus.Messaging
  children:
  - Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  - Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  - Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnSessionLostAsync(System.Exception)
  - Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  - Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  - Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  langs:
  - csharp
  - vb
  name: MessageSessionAsyncHandler
  nameWithType: MessageSessionAsyncHandler
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: MessageSessionAsyncHandler
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
    startLine: 10
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Represents the asynchronous handler associated with the message session.
  example: []
  syntax:
    content: 'public abstract class MessageSessionAsyncHandler : IMessageSessionAsyncHandler'
    content.vb: >-
      Public MustInherit Class MessageSessionAsyncHandler
          Implements IMessageSessionAsyncHandler
  inheritance:
  - System.Object
  implements:
  - Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  id: Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  isEii: true
  parent: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler
  langs:
  - csharp
  - vb
  name: IMessageSessionAsyncHandler.OnMessageAsync(MessageSession, BrokeredMessage)
  nameWithType: MessageSessionAsyncHandler.IMessageSessionAsyncHandler.OnMessageAsync(MessageSession, BrokeredMessage)
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession, Microsoft.ServiceBus.Messaging.BrokeredMessage)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
    startLine: 16
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Represents an event that occurs when the session has a brokered message.
  example: []
  syntax:
    content: Task IMessageSessionAsyncHandler.OnMessageAsync(MessageSession session, BrokeredMessage message)
    content.vb: Function Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(session As MessageSession, message As BrokeredMessage) As Task Implements IMessageSessionAsyncHandler.OnMessageAsync
    parameters:
    - id: session
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: The message session.
    - id: message
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: The brokered message.
    return:
      type: System.Threading.Tasks.Task
      description: The task object representing the asynchronous operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnMessageAsync*
  implements:
  - Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  nameWithType.vb: MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(MessageSession, BrokeredMessage)
  name.vb: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(MessageSession, BrokeredMessage)
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  id: Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  isEii: true
  parent: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler
  langs:
  - csharp
  - vb
  name: IMessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession)
  nameWithType: MessageSessionAsyncHandler.IMessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession)
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
    startLine: 24
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Raises an event that occurs when the session has been asynchronously closed.
  example: []
  syntax:
    content: Task IMessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession session)
    content.vb: Function Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(session As MessageSession) As Task Implements IMessageSessionAsyncHandler.OnCloseSessionAsync
    parameters:
    - id: session
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: The closed session.
    return:
      type: System.Threading.Tasks.Task
      description: The task object representing the asynchronous operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnCloseSessionAsync*
  implements:
  - Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  nameWithType.vb: MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession)
  name.vb: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession)
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnSessionLostAsync(System.Exception)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnSessionLostAsync(System.Exception)
  id: Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnSessionLostAsync(System.Exception)
  isEii: true
  parent: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler
  langs:
  - csharp
  - vb
  name: IMessageSessionAsyncHandler.OnSessionLostAsync(Exception)
  nameWithType: MessageSessionAsyncHandler.IMessageSessionAsyncHandler.OnSessionLostAsync(Exception)
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
    startLine: 32
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Raises an event that occurs when the session has been lost.
  example: []
  syntax:
    content: Task IMessageSessionAsyncHandler.OnSessionLostAsync(Exception exception)
    content.vb: Function Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(exception As Exception) As Task Implements IMessageSessionAsyncHandler.OnSessionLostAsync
    parameters:
    - id: exception
      type: System.Exception
      description: The exception occurred that caused the lost session.
    return:
      type: System.Threading.Tasks.Task
      description: The task object representing the asynchronous operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnSessionLostAsync*
  implements:
  - Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  nameWithType.vb: MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(Exception)
  name.vb: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(Exception)
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  id: OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  parent: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler
  langs:
  - csharp
  - vb
  name: OnMessageAsync(MessageSession, BrokeredMessage)
  nameWithType: MessageSessionAsyncHandler.OnMessageAsync(MessageSession, BrokeredMessage)
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession, Microsoft.ServiceBus.Messaging.BrokeredMessage)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnMessageAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
    startLine: 41
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Represents an event that occurs when the session has a brokered message.
  example: []
  syntax:
    content: protected abstract Task OnMessageAsync(MessageSession session, BrokeredMessage message)
    content.vb: Protected MustOverride Function OnMessageAsync(session As MessageSession, message As BrokeredMessage) As Task
    parameters:
    - id: session
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: The message session.
    - id: message
      type: Microsoft.ServiceBus.Messaging.BrokeredMessage
      description: The brokered message.
    return:
      type: System.Threading.Tasks.Task
      description: The task object representing the asynchronous operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnMessageAsync*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  id: OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  parent: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler
  langs:
  - csharp
  - vb
  name: OnCloseSessionAsync(MessageSession)
  nameWithType: MessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession)
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnCloseSessionAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
    startLine: 46
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Raises an event that occurs when the session has been asynchronously closed.
  example: []
  syntax:
    content: protected virtual Task OnCloseSessionAsync(MessageSession session)
    content.vb: Protected Overridable Function OnCloseSessionAsync(session As MessageSession) As Task
    parameters:
    - id: session
      type: Microsoft.ServiceBus.Messaging.MessageSession
      description: The closed session.
    return:
      type: System.Threading.Tasks.Task
      description: The task object representing the asynchronous operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnCloseSessionAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  commentId: M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  id: OnSessionLostAsync(System.Exception)
  parent: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler
  langs:
  - csharp
  - vb
  name: OnSessionLostAsync(Exception)
  nameWithType: MessageSessionAsyncHandler.OnSessionLostAsync(Exception)
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: OnSessionLostAsync
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Messaging/MessageSessionAsyncHandler.cs
    startLine: 54
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Messaging
  summary: Raises an event that occurs when the session has been lost.
  example: []
  syntax:
    content: protected virtual Task OnSessionLostAsync(Exception exception)
    content.vb: Protected Overridable Function OnSessionLostAsync(exception As Exception) As Task
    parameters:
    - id: exception
      type: System.Exception
      description: The exception occurred that caused the lost session.
    return:
      type: System.Threading.Tasks.Task
      description: The task object representing the asynchronous operation.
  overload: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnSessionLostAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.ServiceBus.Messaging
  commentId: N:Microsoft.ServiceBus.Messaging
  isExternal: false
  name: Microsoft.ServiceBus.Messaging
  nameWithType: Microsoft.ServiceBus.Messaging
  fullName: Microsoft.ServiceBus.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  commentId: T:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: IMessageSessionAsyncHandler
  nameWithType: IMessageSessionAsyncHandler
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnMessageAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnMessageAsync
  isExternal: false
  name: IMessageSessionAsyncHandler.OnMessageAsync
  nameWithType: MessageSessionAsyncHandler.IMessageSessionAsyncHandler.OnMessageAsync
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync
  nameWithType.vb: MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync
  name.vb: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  commentId: M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
  parent: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  isExternal: false
  name: OnMessageAsync(MessageSession, BrokeredMessage)
  nameWithType: IMessageSessionAsyncHandler.OnMessageAsync(MessageSession, BrokeredMessage)
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession, Microsoft.ServiceBus.Messaging.BrokeredMessage)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
    name: OnMessageAsync
    nameWithType: IMessageSessionAsyncHandler.OnMessageAsync
    fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.MessageSession
    name: MessageSession
    nameWithType: MessageSession
    fullName: Microsoft.ServiceBus.Messaging.MessageSession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)
    name: OnMessageAsync
    nameWithType: IMessageSessionAsyncHandler.OnMessageAsync
    fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.MessageSession
    name: MessageSession
    nameWithType: MessageSession
    fullName: Microsoft.ServiceBus.Messaging.MessageSession
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
    name: BrokeredMessage
    nameWithType: BrokeredMessage
    fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.MessageSession
  commentId: T:Microsoft.ServiceBus.Messaging.MessageSession
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: MessageSession
  nameWithType: MessageSession
  fullName: Microsoft.ServiceBus.Messaging.MessageSession
- uid: Microsoft.ServiceBus.Messaging.BrokeredMessage
  commentId: T:Microsoft.ServiceBus.Messaging.BrokeredMessage
  parent: Microsoft.ServiceBus.Messaging
  isExternal: false
  name: BrokeredMessage
  nameWithType: BrokeredMessage
  fullName: Microsoft.ServiceBus.Messaging.BrokeredMessage
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnCloseSessionAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnCloseSessionAsync
  isExternal: false
  name: IMessageSessionAsyncHandler.OnCloseSessionAsync
  nameWithType: MessageSessionAsyncHandler.IMessageSessionAsyncHandler.OnCloseSessionAsync
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync
  nameWithType.vb: MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync
  name.vb: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  commentId: M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  parent: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  isExternal: false
  name: OnCloseSessionAsync(MessageSession)
  nameWithType: IMessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession)
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
    name: OnCloseSessionAsync
    nameWithType: IMessageSessionAsyncHandler.OnCloseSessionAsync
    fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.MessageSession
    name: MessageSession
    nameWithType: MessageSession
    fullName: Microsoft.ServiceBus.Messaging.MessageSession
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)
    name: OnCloseSessionAsync
    nameWithType: IMessageSessionAsyncHandler.OnCloseSessionAsync
    fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceBus.Messaging.MessageSession
    name: MessageSession
    nameWithType: MessageSession
    fullName: Microsoft.ServiceBus.Messaging.MessageSession
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnSessionLostAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnSessionLostAsync
  isExternal: false
  name: IMessageSessionAsyncHandler.OnSessionLostAsync
  nameWithType: MessageSessionAsyncHandler.IMessageSessionAsyncHandler.OnSessionLostAsync
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync
  nameWithType.vb: MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync
  name.vb: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync
- uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  commentId: M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  parent: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler
  isExternal: true
  name: OnSessionLostAsync(Exception)
  nameWithType: IMessageSessionAsyncHandler.OnSessionLostAsync(Exception)
  fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
  spec.csharp:
  - uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
    name: OnSessionLostAsync
    nameWithType: IMessageSessionAsyncHandler.OnSessionLostAsync
    fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)
    name: OnSessionLostAsync
    nameWithType: IMessageSessionAsyncHandler.OnSessionLostAsync
    fullName: Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnMessageAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnMessageAsync
  isExternal: false
  name: OnMessageAsync
  nameWithType: MessageSessionAsyncHandler.OnMessageAsync
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnMessageAsync
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnCloseSessionAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnCloseSessionAsync
  isExternal: false
  name: OnCloseSessionAsync
  nameWithType: MessageSessionAsyncHandler.OnCloseSessionAsync
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnCloseSessionAsync
- uid: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnSessionLostAsync*
  commentId: Overload:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnSessionLostAsync
  isExternal: false
  name: OnSessionLostAsync
  nameWithType: MessageSessionAsyncHandler.OnSessionLostAsync
  fullName: Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnSessionLostAsync
