### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  commentId: T:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  id: ReadOnlyDictionary45`2.ValueCollection
  parent: Microsoft.ServiceBus.Common
  children:
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.Count
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#IsSynchronized
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#SyncRoot
  - Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: ReadOnlyDictionary45<TKey, TValue>.ValueCollection
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ValueCollection
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 542
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: >-
      [Serializable]

      public sealed class ValueCollection : ICollection<TValue>, IEnumerable<TValue>, ICollection, IEnumerable
    content.vb: >-
      <Serializable>

      Public NotInheritable Class ValueCollection
          Implements ICollection(Of TValue), IEnumerable(Of TValue), ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection{{TValue}}
  - System.Collections.Generic.IEnumerable{{TValue}}
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection
  name.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)
  id: System#Collections#Generic#ICollection{TValue}#Add(`1)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection<TValue>.Add(TValue)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.ICollection<TValue>.Add(TValue)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.Generic.ICollection<TValue>.Add(TValue)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.ICollection<TValue>.Add
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 563
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: void ICollection<TValue>.Add(TValue item)
    content.vb: Sub System.Collections.Generic.ICollection<TValue>.Add(item As TValue) Implements ICollection(Of TValue).Add
    parameters:
    - id: item
      type: '{TValue}'
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Add({TValue})
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.Add(TValue)
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.Add(TValue)
  name.vb: System.Collections.Generic.ICollection<TValue>.Add(TValue)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear
  id: System#Collections#Generic#ICollection{TValue}#Clear
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection<TValue>.Clear()
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.ICollection<TValue>.Clear()
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.Generic.ICollection<TValue>.Clear()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.ICollection<TValue>.Clear
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 573
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: void ICollection<TValue>.Clear()
    content.vb: Sub System.Collections.Generic.ICollection<TValue>.Clear Implements ICollection(Of TValue).Clear
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Clear
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.Clear()
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.Clear()
  name.vb: System.Collections.Generic.ICollection<TValue>.Clear()
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)
  id: System#Collections#Generic#ICollection{TValue}#Contains(`1)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection<TValue>.Contains(TValue)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.ICollection<TValue>.Contains(TValue)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.Generic.ICollection<TValue>.Contains(TValue)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.ICollection<TValue>.Contains
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 583
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: bool ICollection<TValue>.Contains(TValue item)
    content.vb: Function System.Collections.Generic.ICollection<TValue>.Contains(item As TValue) As Boolean Implements ICollection(Of TValue).Contains
    parameters:
    - id: item
      type: '{TValue}'
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Contains({TValue})
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.Contains(TValue)
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.Contains(TValue)
  name.vb: System.Collections.Generic.ICollection<TValue>.Contains(TValue)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)
  id: CopyTo(`1[],System.Int32)
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: CopyTo(TValue[], Int32)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.CopyTo(TValue[], Int32)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.CopyTo(TValue[], System.Int32)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: CopyTo
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 591
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: public void CopyTo(TValue[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As TValue(), arrayIndex As Integer)
    parameters:
    - id: array
      type: '{TValue}[]'
      description: ''
    - id: arrayIndex
      type: System.Int32
      description: ''
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.CopyTo({TValue}[],System.Int32)
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.CopyTo(TValue(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.CopyTo(TValue(), System.Int32)
  name.vb: CopyTo(TValue(), Int32)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.Count
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.Count
  id: Count
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.Count
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.Count
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Count
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 597
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.Count*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Count
  - System.Collections.ICollection.Count
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.Count
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly
  id: System#Collections#Generic#ICollection{TValue}#IsReadOnly
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection<TValue>.IsReadOnly
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.ICollection<TValue>.IsReadOnly
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.Generic.ICollection<TValue>.IsReadOnly
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.ICollection<TValue>.IsReadOnly
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 601
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: bool ICollection<TValue>.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<TValue>.IsReadOnly As Boolean Implements ICollection(Of TValue).IsReadOnly
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.IsReadOnly
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<TValue>.IsReadOnly
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)
  id: System#Collections#Generic#ICollection{TValue}#Remove(`1)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection<TValue>.Remove(TValue)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.ICollection<TValue>.Remove(TValue)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.Generic.ICollection<TValue>.Remove(TValue)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.Generic.ICollection<TValue>.Remove
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 605
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: bool ICollection<TValue>.Remove(TValue item)
    content.vb: Function System.Collections.Generic.ICollection<TValue>.Remove(item As TValue) As Boolean Implements ICollection(Of TValue).Remove
    parameters:
    - id: item
      type: '{TValue}'
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove*
  implements:
  - System.Collections.Generic.ICollection{{TValue}}.Remove({TValue})
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.Remove(TValue)
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.Remove(TValue)
  name.vb: System.Collections.Generic.ICollection<TValue>.Remove(TValue)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.GetEnumerator()
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: GetEnumerator
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 620
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: public IEnumerator<TValue> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of TValue)
    return:
      type: System.Collections.Generic.IEnumerator{{TValue}}
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{TValue}}.GetEnumerator
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.GetEnumerator()
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.IEnumerable.GetEnumerator()
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 630
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.ICollection.CopyTo(Array, Int32)
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.ICollection.CopyTo
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 641
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  summary: ''
  example: []
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
      description: ''
    - id: index
      type: System.Int32
      description: ''
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo*
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#IsSynchronized
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.ICollection.IsSynchronized
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.ICollection.IsSynchronized
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 645
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#IsSynchronized*
  implements:
  - System.Collections.ICollection.IsSynchronized
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#SyncRoot
  commentId: P:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.ICollection.SyncRoot
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: System.Collections.ICollection.SyncRoot
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Common/ReadOnlyDictionary45.cs
    startLine: 649
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Common
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
  overload: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#SyncRoot*
  implements:
  - System.Collections.ICollection.SyncRoot
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
references:
- uid: Microsoft.ServiceBus.Common
  commentId: N:Microsoft.ServiceBus.Common
  isExternal: false
  name: Microsoft.ServiceBus.Common
  nameWithType: Microsoft.ServiceBus.Common
  fullName: Microsoft.ServiceBus.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.ICollection{{TValue}}
  commentId: T:System.Collections.Generic.ICollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TValue>
  nameWithType: ICollection<TValue>
  fullName: System.Collections.Generic.ICollection<TValue>
  nameWithType.vb: ICollection(Of TValue)
  fullname.vb: System.Collections.Generic.ICollection(Of TValue)
  name.vb: ICollection(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TValue}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TValue>
  nameWithType: IEnumerable<TValue>
  fullName: System.Collections.Generic.IEnumerable<TValue>
  nameWithType.vb: IEnumerable(Of TValue)
  fullname.vb: System.Collections.Generic.IEnumerable(Of TValue)
  name.vb: IEnumerable(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add
  isExternal: false
  name: ICollection.Add
  nameWithType: ReadOnlyDictionary45.ValueCollection.ICollection.Add
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection.System.Collections.Generic.ICollection.Add
  nameWithType.vb: ReadOnlyDictionary45.ValueCollection.System.Collections.Generic.ICollection<TValue>.Add
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection.System.Collections.Generic.ICollection<TValue>.Add
  name.vb: System.Collections.Generic.ICollection<TValue>.Add
- uid: System.Collections.Generic.ICollection{{TValue}}.Add({TValue})
  commentId: M:System.Collections.Generic.ICollection{`1}.Add(`1)
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(TValue)
  nameWithType: ICollection<TValue>.Add(TValue)
  fullName: System.Collections.Generic.ICollection<TValue>.Add(TValue)
  nameWithType.vb: ICollection(Of TValue).Add(TValue)
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).Add(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<TValue>.Add
    fullName: System.Collections.Generic.ICollection<TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of TValue).Add
    fullName: System.Collections.Generic.ICollection(Of TValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TValue
  isExternal: false
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear
  isExternal: false
  name: ICollection.Clear
  nameWithType: ReadOnlyDictionary45.ValueCollection.ICollection.Clear
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection.System.Collections.Generic.ICollection.Clear
  nameWithType.vb: ReadOnlyDictionary45.ValueCollection.System.Collections.Generic.ICollection<TValue>.Clear
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection.System.Collections.Generic.ICollection<TValue>.Clear
  name.vb: System.Collections.Generic.ICollection<TValue>.Clear
- uid: System.Collections.Generic.ICollection{{TValue}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`1}.Clear
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<TValue>.Clear()
  fullName: System.Collections.Generic.ICollection<TValue>.Clear()
  nameWithType.vb: ICollection(Of TValue).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<TValue>.Clear
    fullName: System.Collections.Generic.ICollection<TValue>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of TValue).Clear
    fullName: System.Collections.Generic.ICollection(Of TValue).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains
  isExternal: false
  name: ICollection.Contains
  nameWithType: ReadOnlyDictionary45.ValueCollection.ICollection.Contains
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection.System.Collections.Generic.ICollection.Contains
  nameWithType.vb: ReadOnlyDictionary45.ValueCollection.System.Collections.Generic.ICollection<TValue>.Contains
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection.System.Collections.Generic.ICollection<TValue>.Contains
  name.vb: System.Collections.Generic.ICollection<TValue>.Contains
- uid: System.Collections.Generic.ICollection{{TValue}}.Contains({TValue})
  commentId: M:System.Collections.Generic.ICollection{`1}.Contains(`1)
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(TValue)
  nameWithType: ICollection<TValue>.Contains(TValue)
  fullName: System.Collections.Generic.ICollection<TValue>.Contains(TValue)
  nameWithType.vb: ICollection(Of TValue).Contains(TValue)
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).Contains(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<TValue>.Contains
    fullName: System.Collections.Generic.ICollection<TValue>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of TValue).Contains
    fullName: System.Collections.Generic.ICollection(Of TValue).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo
  isExternal: false
  name: CopyTo
  nameWithType: ReadOnlyDictionary45.ValueCollection.CopyTo
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection.CopyTo
- uid: System.Collections.Generic.ICollection{{TValue}}.CopyTo({TValue}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`1}.CopyTo(`1[],System.Int32)
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(TValue[], Int32)
  nameWithType: ICollection<TValue>.CopyTo(TValue[], Int32)
  fullName: System.Collections.Generic.ICollection<TValue>.CopyTo(TValue[], System.Int32)
  nameWithType.vb: ICollection(Of TValue).CopyTo(TValue(), Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).CopyTo(TValue(), System.Int32)
  name.vb: CopyTo(TValue(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<TValue>.CopyTo
    fullName: System.Collections.Generic.ICollection<TValue>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of TValue).CopyTo
    fullName: System.Collections.Generic.ICollection(Of TValue).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TValue}[]'
  name: TValue[]
  nameWithType: TValue[]
  fullName: TValue[]
  nameWithType.vb: TValue()
  fullname.vb: TValue()
  name.vb: TValue()
  spec.csharp:
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.Count*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.Count
  isExternal: false
  name: Count
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.Count
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.Count
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.Count
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.Count
- uid: System.Collections.Generic.ICollection{{TValue}}.Count
  commentId: P:System.Collections.Generic.ICollection{`1}.Count
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<TValue>.Count
  fullName: System.Collections.Generic.ICollection<TValue>.Count
  nameWithType.vb: ICollection(Of TValue).Count
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).Count
- uid: System.Collections.ICollection.Count
  commentId: P:System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: true
  name: Count
  nameWithType: ICollection.Count
  fullName: System.Collections.ICollection.Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly
  isExternal: false
  name: ICollection<TValue>.IsReadOnly
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.ICollection<TValue>.IsReadOnly
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.Generic.ICollection<TValue>.IsReadOnly
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.IsReadOnly
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.Generic.ICollection<TValue>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<TValue>.IsReadOnly
- uid: System.Collections.Generic.ICollection{{TValue}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`1}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<TValue>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<TValue>.IsReadOnly
  nameWithType.vb: ICollection(Of TValue).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove
  isExternal: false
  name: ICollection.Remove
  nameWithType: ReadOnlyDictionary45.ValueCollection.ICollection.Remove
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection.System.Collections.Generic.ICollection.Remove
  nameWithType.vb: ReadOnlyDictionary45.ValueCollection.System.Collections.Generic.ICollection<TValue>.Remove
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection.System.Collections.Generic.ICollection<TValue>.Remove
  name.vb: System.Collections.Generic.ICollection<TValue>.Remove
- uid: System.Collections.Generic.ICollection{{TValue}}.Remove({TValue})
  commentId: M:System.Collections.Generic.ICollection{`1}.Remove(`1)
  parent: System.Collections.Generic.ICollection{{TValue}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(TValue)
  nameWithType: ICollection<TValue>.Remove(TValue)
  fullName: System.Collections.Generic.ICollection<TValue>.Remove(TValue)
  nameWithType.vb: ICollection(Of TValue).Remove(TValue)
  fullname.vb: System.Collections.Generic.ICollection(Of TValue).Remove(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<TValue>.Remove
    fullName: System.Collections.Generic.ICollection<TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of TValue).Remove
    fullName: System.Collections.Generic.ICollection(Of TValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: ReadOnlyDictionary45.ValueCollection.GetEnumerator
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{TValue}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`1}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{TValue}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<TValue>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of TValue).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of TValue).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<TValue>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TValue>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of TValue).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TValue).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{TValue}}
  commentId: T:System.Collections.Generic.IEnumerator{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TValue>
  nameWithType: IEnumerator<TValue>
  fullName: System.Collections.Generic.IEnumerator<TValue>
  nameWithType.vb: IEnumerator(Of TValue)
  fullname.vb: System.Collections.Generic.IEnumerator(Of TValue)
  name.vb: IEnumerator(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: ReadOnlyDictionary45.ValueCollection.IEnumerable.GetEnumerator
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ReadOnlyDictionary45.ValueCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#CopyTo
  isExternal: false
  name: ICollection.CopyTo
  nameWithType: ReadOnlyDictionary45.ValueCollection.ICollection.CopyTo
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45.ValueCollection.System.Collections.ICollection.CopyTo
  nameWithType.vb: ReadOnlyDictionary45.ValueCollection.System.Collections.ICollection.CopyTo
  name.vb: System.Collections.ICollection.CopyTo
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#IsSynchronized*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#IsSynchronized
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.ICollection.IsSynchronized
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.IsSynchronized
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: true
  name: IsSynchronized
  nameWithType: ICollection.IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#SyncRoot*
  commentId: Overload:Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2.ValueCollection.System#Collections#ICollection#SyncRoot
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.ICollection.SyncRoot
  fullName: Microsoft.ServiceBus.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.System.Collections.ICollection.SyncRoot
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.SyncRoot
  fullname.vb: Microsoft.ServiceBus.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: true
  name: SyncRoot
  nameWithType: ICollection.SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
