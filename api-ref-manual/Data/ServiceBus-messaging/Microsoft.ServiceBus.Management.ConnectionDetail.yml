### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceBus.Management.ConnectionDetail
  commentId: T:Microsoft.ServiceBus.Management.ConnectionDetail
  id: ConnectionDetail
  parent: Microsoft.ServiceBus.Management
  children:
  - Microsoft.ServiceBus.Management.ConnectionDetail.AuthorizationType
  - Microsoft.ServiceBus.Management.ConnectionDetail.ConnectionString
  - Microsoft.ServiceBus.Management.ConnectionDetail.KeyName
  - Microsoft.ServiceBus.Management.ConnectionDetail.Rights
  - Microsoft.ServiceBus.Management.ConnectionDetail.SecondaryConnectionString
  langs:
  - csharp
  - vb
  name: ConnectionDetail
  nameWithType: ConnectionDetail
  fullName: Microsoft.ServiceBus.Management.ConnectionDetail
  type: Class
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/ConnectionDetail.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ConnectionDetail
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/ConnectionDetail.cs
    startLine: 12
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Represents the details associated with the service bus connection.
  example: []
  syntax:
    content: >-
      [DataContract(Name = "ConnectionDetail", Namespace = "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")]

      public class ConnectionDetail
    content.vb: >-
      <DataContract(Name:="ConnectionDetail", Namespace:="http://schemas.microsoft.com/netservices/2010/10/servicebus/connect")>

      Public Class ConnectionDetail
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ConnectionDetail
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/netservices/2010/10/servicebus/connect
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceBus.Management.ConnectionDetail.KeyName
  commentId: P:Microsoft.ServiceBus.Management.ConnectionDetail.KeyName
  id: KeyName
  parent: Microsoft.ServiceBus.Management.ConnectionDetail
  langs:
  - csharp
  - vb
  name: KeyName
  nameWithType: ConnectionDetail.KeyName
  fullName: Microsoft.ServiceBus.Management.ConnectionDetail.KeyName
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/ConnectionDetail.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: KeyName
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/ConnectionDetail.cs
    startLine: 17
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the key name associated with the connection.
  example: []
  syntax:
    content: >-
      [Key]

      [DataMember(Name = "KeyName", IsRequired = true, Order = 1001, EmitDefaultValue = false)]

      public string KeyName { get; set; }
    content.vb: >-
      <Key>

      <DataMember(Name:="KeyName", IsRequired:=True, Order:=1001, EmitDefaultValue:=False)>

      Public Property KeyName As String
    parameters: []
    return:
      type: System.String
      description: The key name associated with the connection.
  overload: Microsoft.ServiceBus.Management.ConnectionDetail.KeyName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: KeyName
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Order
      type: System.Int32
      value: 1001
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.ConnectionDetail.ConnectionString
  commentId: P:Microsoft.ServiceBus.Management.ConnectionDetail.ConnectionString
  id: ConnectionString
  parent: Microsoft.ServiceBus.Management.ConnectionDetail
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: ConnectionDetail.ConnectionString
  fullName: Microsoft.ServiceBus.Management.ConnectionDetail.ConnectionString
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/ConnectionDetail.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: ConnectionString
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/ConnectionDetail.cs
    startLine: 23
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the connection string associated with the connection.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "ConnectionString", IsRequired = false, Order = 1002, EmitDefaultValue = false)]

      public string ConnectionString { get; set; }
    content.vb: >-
      <DataMember(Name:="ConnectionString", IsRequired:=False, Order:=1002, EmitDefaultValue:=False)>

      Public Property ConnectionString As String
    parameters: []
    return:
      type: System.String
      description: The connection string associated with the connection.
  overload: Microsoft.ServiceBus.Management.ConnectionDetail.ConnectionString*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ConnectionString
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 1002
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.ConnectionDetail.SecondaryConnectionString
  commentId: P:Microsoft.ServiceBus.Management.ConnectionDetail.SecondaryConnectionString
  id: SecondaryConnectionString
  parent: Microsoft.ServiceBus.Management.ConnectionDetail
  langs:
  - csharp
  - vb
  name: SecondaryConnectionString
  nameWithType: ConnectionDetail.SecondaryConnectionString
  fullName: Microsoft.ServiceBus.Management.ConnectionDetail.SecondaryConnectionString
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/ConnectionDetail.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: SecondaryConnectionString
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/ConnectionDetail.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the secondary connection string associated with the connection.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "SecondaryConnectionString", IsRequired = false, Order = 1003, EmitDefaultValue = false)]

      public string SecondaryConnectionString { get; set; }
    content.vb: >-
      <DataMember(Name:="SecondaryConnectionString", IsRequired:=False, Order:=1003, EmitDefaultValue:=False)>

      Public Property SecondaryConnectionString As String
    parameters: []
    return:
      type: System.String
      description: The secondary connection string associated with the connection.
  overload: Microsoft.ServiceBus.Management.ConnectionDetail.SecondaryConnectionString*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: SecondaryConnectionString
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 1003
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.ConnectionDetail.AuthorizationType
  commentId: P:Microsoft.ServiceBus.Management.ConnectionDetail.AuthorizationType
  id: AuthorizationType
  parent: Microsoft.ServiceBus.Management.ConnectionDetail
  langs:
  - csharp
  - vb
  name: AuthorizationType
  nameWithType: ConnectionDetail.AuthorizationType
  fullName: Microsoft.ServiceBus.Management.ConnectionDetail.AuthorizationType
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/ConnectionDetail.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: AuthorizationType
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/ConnectionDetail.cs
    startLine: 33
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the authorization type for the connection.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "AuthorizationType", IsRequired = false, Order = 1004, EmitDefaultValue = false)]

      public string AuthorizationType { get; set; }
    content.vb: >-
      <DataMember(Name:="AuthorizationType", IsRequired:=False, Order:=1004, EmitDefaultValue:=False)>

      Public Property AuthorizationType As String
    parameters: []
    return:
      type: System.String
      description: The authorization type for the connection.
  overload: Microsoft.ServiceBus.Management.ConnectionDetail.AuthorizationType*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: AuthorizationType
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 1004
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceBus.Management.ConnectionDetail.Rights
  commentId: P:Microsoft.ServiceBus.Management.ConnectionDetail.Rights
  id: Rights
  parent: Microsoft.ServiceBus.Management.ConnectionDetail
  langs:
  - csharp
  - vb
  name: Rights
  nameWithType: ConnectionDetail.Rights
  fullName: Microsoft.ServiceBus.Management.ConnectionDetail.Rights
  type: Property
  source:
    remote:
      path: src/product/Clients/Microsoft.ServiceBus.Messaging/Management/ConnectionDetail.cs
      branch: ClientSDK_30
      repo: https://msazure.visualstudio.com/One/_git/ServiceBus-Messaging
      commit: ef69c0f00c222ceba94c418de56bba5fe44df979
    id: Rights
    path: ../src/msazure-vso-servicebusmessaging/src/product/Clients/Microsoft.ServiceBus.Messaging/Management/ConnectionDetail.cs
    startLine: 38
  assemblies:
  - Microsoft.ServiceBus
  namespace: Microsoft.ServiceBus.Management
  summary: Gets or sets the access rights associated with the connection.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Rights", IsRequired = false, Order = 1005, EmitDefaultValue = false)]

      public IEnumerable<AccessRights> Rights { get; set; }
    content.vb: >-
      <DataMember(Name:="Rights", IsRequired:=False, Order:=1005, EmitDefaultValue:=False)>

      Public Property Rights As IEnumerable(Of AccessRights)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights}
      description: The access rights associated with the connection.
  overload: Microsoft.ServiceBus.Management.ConnectionDetail.Rights*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Rights
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 1005
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceBus.Management
  commentId: N:Microsoft.ServiceBus.Management
  isExternal: false
  name: Microsoft.ServiceBus.Management
  nameWithType: Microsoft.ServiceBus.Management
  fullName: Microsoft.ServiceBus.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceBus.Management.ConnectionDetail.KeyName*
  commentId: Overload:Microsoft.ServiceBus.Management.ConnectionDetail.KeyName
  isExternal: false
  name: KeyName
  nameWithType: ConnectionDetail.KeyName
  fullName: Microsoft.ServiceBus.Management.ConnectionDetail.KeyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceBus.Management.ConnectionDetail.ConnectionString*
  commentId: Overload:Microsoft.ServiceBus.Management.ConnectionDetail.ConnectionString
  isExternal: false
  name: ConnectionString
  nameWithType: ConnectionDetail.ConnectionString
  fullName: Microsoft.ServiceBus.Management.ConnectionDetail.ConnectionString
- uid: Microsoft.ServiceBus.Management.ConnectionDetail.SecondaryConnectionString*
  commentId: Overload:Microsoft.ServiceBus.Management.ConnectionDetail.SecondaryConnectionString
  isExternal: false
  name: SecondaryConnectionString
  nameWithType: ConnectionDetail.SecondaryConnectionString
  fullName: Microsoft.ServiceBus.Management.ConnectionDetail.SecondaryConnectionString
- uid: Microsoft.ServiceBus.Management.ConnectionDetail.AuthorizationType*
  commentId: Overload:Microsoft.ServiceBus.Management.ConnectionDetail.AuthorizationType
  isExternal: false
  name: AuthorizationType
  nameWithType: ConnectionDetail.AuthorizationType
  fullName: Microsoft.ServiceBus.Management.ConnectionDetail.AuthorizationType
- uid: Microsoft.ServiceBus.Management.ConnectionDetail.Rights*
  commentId: Overload:Microsoft.ServiceBus.Management.ConnectionDetail.Rights
  isExternal: false
  name: Rights
  nameWithType: ConnectionDetail.Rights
  fullName: Microsoft.ServiceBus.Management.ConnectionDetail.Rights
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AccessRights>
  nameWithType: IEnumerable<AccessRights>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceBus.Messaging.AccessRights>
  nameWithType.vb: IEnumerable(Of AccessRights)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceBus.Messaging.AccessRights)
  name.vb: IEnumerable(Of AccessRights)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceBus.Messaging.AccessRights
    name: AccessRights
    nameWithType: AccessRights
    fullName: Microsoft.ServiceBus.Messaging.AccessRights
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceBus.Messaging.AccessRights
    name: AccessRights
    nameWithType: AccessRights
    fullName: Microsoft.ServiceBus.Messaging.AccessRights
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
