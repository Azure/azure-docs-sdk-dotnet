### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.QueryResponse`1
  commentId: T:Microsoft.Azure.Devices.QueryResponse`1
  id: QueryResponse`1
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.QueryResponse`1.ContinuationToken
  - Microsoft.Azure.Devices.QueryResponse`1.GetEnumerator
  langs:
  - csharp
  - vb
  name: QueryResponse<T>
  nameWithType: QueryResponse<T>
  fullName: Microsoft.Azure.Devices.QueryResponse<T>
  type: Class
  source:
    remote:
      path: service/Microsoft.Azure.Devices/QueryResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: QueryResponse
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/QueryResponse.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nRepresents the template class for the results of an IQuery request\n"
  example: []
  syntax:
    content: 'public class QueryResponse<T> : IEnumerable<T>'
    content.vb: >-
      Public Class QueryResponse(Of T)
          Inherits IEnumerable(Of T)
    typeParameters:
    - id: T
      description: The result type
  inheritance:
  - System.Object
  nameWithType.vb: QueryResponse(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Azure.Devices.QueryResponse(Of T)
  name.vb: QueryResponse(Of T)
- uid: Microsoft.Azure.Devices.QueryResponse`1.ContinuationToken
  commentId: P:Microsoft.Azure.Devices.QueryResponse`1.ContinuationToken
  id: ContinuationToken
  parent: Microsoft.Azure.Devices.QueryResponse`1
  langs:
  - csharp
  - vb
  name: ContinuationToken
  nameWithType: QueryResponse<T>.ContinuationToken
  fullName: Microsoft.Azure.Devices.QueryResponse<T>.ContinuationToken
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/QueryResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ContinuationToken
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/QueryResponse.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nGets the ContinuationToken to use for continuing the enumeration\n"
  example: []
  syntax:
    content: public string ContinuationToken { get; }
    content.vb: Public ReadOnly Property ContinuationToken As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.QueryResponse`1.ContinuationToken*
  nameWithType.vb: QueryResponse(Of T).ContinuationToken
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.QueryResponse(Of T).ContinuationToken
- uid: Microsoft.Azure.Devices.QueryResponse`1.GetEnumerator
  commentId: M:Microsoft.Azure.Devices.QueryResponse`1.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Azure.Devices.QueryResponse`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: QueryResponse<T>.GetEnumerator()
  fullName: Microsoft.Azure.Devices.QueryResponse<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: service/Microsoft.Azure.Devices/QueryResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: GetEnumerator
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/QueryResponse.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
    return:
      type: IEnumerator{{T}}
  overload: Microsoft.Azure.Devices.QueryResponse`1.GetEnumerator*
  nameWithType.vb: QueryResponse(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.QueryResponse(Of T).GetEnumerator()
references:
- uid: Microsoft.Azure.Devices
  commentId: N:Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  nameWithType: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.QueryResponse`1.ContinuationToken*
  commentId: Overload:Microsoft.Azure.Devices.QueryResponse`1.ContinuationToken
  isExternal: false
  name: ContinuationToken
  nameWithType: QueryResponse<T>.ContinuationToken
  fullName: Microsoft.Azure.Devices.QueryResponse<T>.ContinuationToken
  nameWithType.vb: QueryResponse(Of T).ContinuationToken
  fullname.vb: Microsoft.Azure.Devices.QueryResponse(Of T).ContinuationToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Devices.QueryResponse`1.GetEnumerator*
  commentId: Overload:Microsoft.Azure.Devices.QueryResponse`1.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: QueryResponse.GetEnumerator
  fullName: Microsoft.Azure.Devices.QueryResponse.GetEnumerator
- uid: IEnumerator{{T}}
  commentId: '!:IEnumerator{`0}'
  definition: IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullname.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
