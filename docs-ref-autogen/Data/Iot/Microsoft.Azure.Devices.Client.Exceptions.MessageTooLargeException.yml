### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException
  commentId: T:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException
  id: MessageTooLargeException
  parent: Microsoft.Azure.Devices.Client.Exceptions
  children:
  - Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.Int32)
  - Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.String)
  - Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  - vb
  name: MessageTooLargeException
  nameWithType: MessageTooLargeException
  fullName: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException
  type: Class
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Common/Exceptions/MessageTooLargeException.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: MessageTooLargeException
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Common/Exceptions/MessageTooLargeException.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Exceptions
  summary: "\nThe exception that is thrown when an attempt to send a message fails because the length of the message exceeds the maximum size allowed.\n"
  example: []
  syntax:
    content: 'public sealed class MessageTooLargeException : IotHubException'
    content.vb: >-
      Public NotInheritable Class MessageTooLargeException
          Inherits IotHubException
  inheritance:
  - System.Object
  - System.Exception
  - Microsoft.Azure.Devices.Client.Exceptions.IotHubException
  inheritedMembers:
  - Microsoft.Azure.Devices.Client.Exceptions.IotHubException.IsTransient
  - Microsoft.Azure.Devices.Client.Exceptions.IotHubException.TrackingId
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.Int32)
  commentId: M:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException
  langs:
  - csharp
  - vb
  name: MessageTooLargeException(Int32)
  nameWithType: MessageTooLargeException.MessageTooLargeException(Int32)
  fullName: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.MessageTooLargeException(System.Int32)
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Common/Exceptions/MessageTooLargeException.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Common/Exceptions/MessageTooLargeException.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Exceptions
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException\" data-throw-if-not-resolved=\"false\"></xref> class with the message string containing the maximum sized allowed for a message, in bytes.\n"
  example: []
  syntax:
    content: public MessageTooLargeException(int maximumMessageSizeInBytes)
    content.vb: Public Sub New(maximumMessageSizeInBytes As Integer)
    parameters:
    - id: maximumMessageSizeInBytes
      type: System.Int32
      description: Device identifier that already exists.
  overload: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.String)
  commentId: M:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException
  langs:
  - csharp
  - vb
  name: MessageTooLargeException(String)
  nameWithType: MessageTooLargeException.MessageTooLargeException(String)
  fullName: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.MessageTooLargeException(System.String)
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Common/Exceptions/MessageTooLargeException.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Common/Exceptions/MessageTooLargeException.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Exceptions
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException\" data-throw-if-not-resolved=\"false\"></xref> class with the message string set to the message parameter.\n"
  example: []
  syntax:
    content: public MessageTooLargeException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: A description of the error. The content of message is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
  overload: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.String,System.Exception)
  commentId: M:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException
  langs:
  - csharp
  - vb
  name: MessageTooLargeException(String, Exception)
  nameWithType: MessageTooLargeException.MessageTooLargeException(String, Exception)
  fullName: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.MessageTooLargeException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Common/Exceptions/MessageTooLargeException.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Common/Exceptions/MessageTooLargeException.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client.Exceptions
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException\" data-throw-if-not-resolved=\"false\"></xref> class with the message string set to the message parameter and a reference to the inner exception that is the cause of this exception.\n"
  example: []
  syntax:
    content: public MessageTooLargeException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: A description of the error. The content of message is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception
  overload: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices.Client.Exceptions
  commentId: N:Microsoft.Azure.Devices.Client.Exceptions
  isExternal: false
  name: Microsoft.Azure.Devices.Client.Exceptions
  nameWithType: Microsoft.Azure.Devices.Client.Exceptions
  fullName: Microsoft.Azure.Devices.Client.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Azure.Devices.Client.Exceptions.IotHubException
  commentId: T:Microsoft.Azure.Devices.Client.Exceptions.IotHubException
  parent: Microsoft.Azure.Devices.Client.Exceptions
  isExternal: false
  name: IotHubException
  nameWithType: IotHubException
  fullName: Microsoft.Azure.Devices.Client.Exceptions.IotHubException
- uid: Microsoft.Azure.Devices.Client.Exceptions.IotHubException.IsTransient
  commentId: P:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.IsTransient
  parent: Microsoft.Azure.Devices.Client.Exceptions.IotHubException
  isExternal: false
  name: IsTransient
  nameWithType: IotHubException.IsTransient
  fullName: Microsoft.Azure.Devices.Client.Exceptions.IotHubException.IsTransient
- uid: Microsoft.Azure.Devices.Client.Exceptions.IotHubException.TrackingId
  commentId: P:Microsoft.Azure.Devices.Client.Exceptions.IotHubException.TrackingId
  parent: Microsoft.Azure.Devices.Client.Exceptions.IotHubException
  isExternal: false
  name: TrackingId
  nameWithType: IotHubException.TrackingId
  fullName: Microsoft.Azure.Devices.Client.Exceptions.IotHubException.TrackingId
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException
  commentId: T:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException
  isExternal: false
  name: MessageTooLargeException
  nameWithType: MessageTooLargeException
  fullName: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException
- uid: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor*
  commentId: Overload:Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.#ctor
  isExternal: false
  name: MessageTooLargeException
  nameWithType: MessageTooLargeException.MessageTooLargeException
  fullName: Microsoft.Azure.Devices.Client.Exceptions.MessageTooLargeException.MessageTooLargeException
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
