### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions
  id: PatchSchedulesOperationsExtensions
  parent: Microsoft.Azure.Management.Redis
  children:
  - Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule)
  - Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String)
  - Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String)
  - Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: PatchSchedulesOperationsExtensions
  nameWithType: PatchSchedulesOperationsExtensions
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PatchSchedulesOperationsExtensions
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nExtension methods for PatchSchedulesOperations.\n"
  example: []
  syntax:
    content: public static class PatchSchedulesOperationsExtensions
    content.vb: Public Module PatchSchedulesOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule)
  commentId: M:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule)
  id: CreateOrUpdate(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IPatchSchedulesOperations, String, String, RedisPatchSchedule)
  nameWithType: PatchSchedulesOperationsExtensions.CreateOrUpdate(IPatchSchedulesOperations, String, String, RedisPatchSchedule)
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nCreate or replace the patching schedule for redis cache.\n"
  example: []
  syntax:
    content: public static RedisPatchSchedule CreateOrUpdate(this IPatchSchedulesOperations operations, string resourceGroupName, string name, RedisPatchSchedule parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IPatchSchedulesOperations, resourceGroupName As String, name As String, parameters As RedisPatchSchedule) As RedisPatchSchedule
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule
      description: "\nParameters to set patch schedules for redis cache.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule
  overload: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule,System.Threading.CancellationToken)
  id: CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IPatchSchedulesOperations, String, String, RedisPatchSchedule, CancellationToken)
  nameWithType: PatchSchedulesOperationsExtensions.CreateOrUpdateAsync(IPatchSchedulesOperations, String, String, RedisPatchSchedule, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nCreate or replace the patching schedule for redis cache.\n"
  example: []
  syntax:
    content: public static Task<RedisPatchSchedule> CreateOrUpdateAsync(this IPatchSchedulesOperations operations, string resourceGroupName, string name, RedisPatchSchedule parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IPatchSchedulesOperations, resourceGroupName As String, name As String, parameters As RedisPatchSchedule, cancellationToken As CancellationToken = Nothing) As Task(Of RedisPatchSchedule)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule
      description: "\nParameters to set patch schedules for redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule}
  overload: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String)
  id: Delete(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IPatchSchedulesOperations, String, String)
  nameWithType: PatchSchedulesOperationsExtensions.Delete(IPatchSchedulesOperations, String, String)
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nDeletes the patching schedule for redis cache.\n"
  example: []
  syntax:
    content: public static void Delete(this IPatchSchedulesOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(operations As IPatchSchedulesOperations, resourceGroupName As String, name As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
  overload: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IPatchSchedulesOperations, String, String, CancellationToken)
  nameWithType: PatchSchedulesOperationsExtensions.DeleteAsync(IPatchSchedulesOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nDeletes the patching schedule for redis cache.\n"
  example: []
  syntax:
    content: public static Task DeleteAsync(this IPatchSchedulesOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IPatchSchedulesOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.DeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String)
  id: Get(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IPatchSchedulesOperations, String, String)
  nameWithType: PatchSchedulesOperationsExtensions.Get(IPatchSchedulesOperations, String, String)
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
    startLine: 114
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets the patching schedule for redis cache.\n"
  example: []
  syntax:
    content: public static RedisPatchSchedule Get(this IPatchSchedulesOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IPatchSchedulesOperations, resourceGroupName As String, name As String) As RedisPatchSchedule
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule
  overload: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IPatchSchedulesOperations, String, String, CancellationToken)
  nameWithType: PatchSchedulesOperationsExtensions.GetAsync(IPatchSchedulesOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IPatchSchedulesOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/PatchSchedulesOperationsExtensions.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets the patching schedule for redis cache.\n"
  example: []
  syntax:
    content: public static Task<RedisPatchSchedule> GetAsync(this IPatchSchedulesOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IPatchSchedulesOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of RedisPatchSchedule)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule}
  overload: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Redis
  commentId: N:Microsoft.Azure.Management.Redis
  isExternal: false
  name: Microsoft.Azure.Management.Redis
  nameWithType: Microsoft.Azure.Management.Redis
  fullName: Microsoft.Azure.Management.Redis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdate*
  commentId: Overload:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdate
  isExternal: false
  name: CreateOrUpdate
  nameWithType: PatchSchedulesOperationsExtensions.CreateOrUpdate
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdate
- uid: Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
  commentId: T:Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
  parent: Microsoft.Azure.Management.Redis
  isExternal: false
  name: IPatchSchedulesOperations
  nameWithType: IPatchSchedulesOperations
  fullName: Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisPatchSchedule
  nameWithType: RedisPatchSchedule
  fullName: Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule
- uid: Microsoft.Azure.Management.Redis.Models
  commentId: N:Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: Microsoft.Azure.Management.Redis.Models
  nameWithType: Microsoft.Azure.Management.Redis.Models
  fullName: Microsoft.Azure.Management.Redis.Models
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdateAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdateAsync
  isExternal: false
  name: CreateOrUpdateAsync
  nameWithType: PatchSchedulesOperationsExtensions.CreateOrUpdateAsync
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.CreateOrUpdateAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RedisPatchSchedule>
  nameWithType: Task<RedisPatchSchedule>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule>
  nameWithType.vb: Task(Of RedisPatchSchedule)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule)
  name.vb: Task(Of RedisPatchSchedule)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule
    name: RedisPatchSchedule
    nameWithType: RedisPatchSchedule
    fullName: Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule
    name: RedisPatchSchedule
    nameWithType: RedisPatchSchedule
    fullName: Microsoft.Azure.Management.Redis.Models.RedisPatchSchedule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Delete*
  commentId: Overload:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Delete
  isExternal: false
  name: Delete
  nameWithType: PatchSchedulesOperationsExtensions.Delete
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Delete
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: PatchSchedulesOperationsExtensions.DeleteAsync
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.DeleteAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: PatchSchedulesOperationsExtensions.Get
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.Get
- uid: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: PatchSchedulesOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Management.Redis.PatchSchedulesOperationsExtensions.GetAsync
