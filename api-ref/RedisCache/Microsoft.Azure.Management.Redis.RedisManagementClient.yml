### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient
  commentId: T:Microsoft.Azure.Management.Redis.RedisManagementClient
  id: RedisManagementClient
  parent: Microsoft.Azure.Management.Redis
  children:
  - Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  - Microsoft.Azure.Management.Redis.RedisManagementClient.AcceptLanguage
  - Microsoft.Azure.Management.Redis.RedisManagementClient.ApiVersion
  - Microsoft.Azure.Management.Redis.RedisManagementClient.BaseUri
  - Microsoft.Azure.Management.Redis.RedisManagementClient.Credentials
  - Microsoft.Azure.Management.Redis.RedisManagementClient.DeserializationSettings
  - Microsoft.Azure.Management.Redis.RedisManagementClient.GenerateClientRequestId
  - Microsoft.Azure.Management.Redis.RedisManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Azure.Management.Redis.RedisManagementClient.PatchSchedules
  - Microsoft.Azure.Management.Redis.RedisManagementClient.Redis
  - Microsoft.Azure.Management.Redis.RedisManagementClient.SerializationSettings
  - Microsoft.Azure.Management.Redis.RedisManagementClient.SubscriptionId
  langs:
  - csharp
  - vb
  name: RedisManagementClient
  nameWithType: RedisManagementClient
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RedisManagementClient
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nREST API for Azure Redis Cache Service\n"
  example: []
  syntax:
    content: 'public class RedisManagementClient : ServiceClient<RedisManagementClient>, IRedisManagementClient, IDisposable, IAzureClient'
    content.vb: >-
      Public Class RedisManagementClient
          Inherits ServiceClient(Of RedisManagementClient)
          Implements IRedisManagementClient, IDisposable, IAzureClient
  inheritance:
  - System.Object
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  implements:
  - Microsoft.Azure.Management.Redis.IRedisManagementClient
  - System.IDisposable
  - Microsoft.Rest.Azure.IAzureClient
  inheritedMembers:
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.FirstMessageHandler
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.HttpClientHandler
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.CreateRootHandler
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.HttpClient
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.UserAgent
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.HttpMessageHandlers
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.Dispose
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.Dispose(System.Boolean)
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.SetUserAgent(System.String)
  - Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.SetUserAgent(System.String,System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.Redis.RedisManagementClient.BaseUri
  id: BaseUri
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: RedisManagementClient.BaseUri
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.BaseUri
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BaseUri
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nThe base URI of the service.\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    content.vb: Public Property BaseUri As Uri
    parameters: []
    return:
      type: System.Uri
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.BaseUri*
  implements:
  - Microsoft.Azure.Management.Redis.IRedisManagementClient.BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.SerializationSettings
  commentId: P:Microsoft.Azure.Management.Redis.RedisManagementClient.SerializationSettings
  id: SerializationSettings
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: SerializationSettings
  nameWithType: RedisManagementClient.SerializationSettings
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.SerializationSettings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SerializationSettings
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets or sets json serialization settings.\n"
  example: []
  syntax:
    content: public JsonSerializerSettings SerializationSettings { get; }
    content.vb: Public ReadOnly Property SerializationSettings As JsonSerializerSettings
    parameters: []
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.SerializationSettings*
  implements:
  - Microsoft.Azure.Management.Redis.IRedisManagementClient.SerializationSettings
  - Microsoft.Rest.Azure.IAzureClient.SerializationSettings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.DeserializationSettings
  commentId: P:Microsoft.Azure.Management.Redis.RedisManagementClient.DeserializationSettings
  id: DeserializationSettings
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: DeserializationSettings
  nameWithType: RedisManagementClient.DeserializationSettings
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.DeserializationSettings
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeserializationSettings
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets or sets json deserialization settings.\n"
  example: []
  syntax:
    content: public JsonSerializerSettings DeserializationSettings { get; }
    content.vb: Public ReadOnly Property DeserializationSettings As JsonSerializerSettings
    parameters: []
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.DeserializationSettings*
  implements:
  - Microsoft.Azure.Management.Redis.IRedisManagementClient.DeserializationSettings
  - Microsoft.Rest.Azure.IAzureClient.DeserializationSettings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.Redis.RedisManagementClient.Credentials
  id: Credentials
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: RedisManagementClient.Credentials
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.Credentials
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Credentials
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nCredentials needed for the client to connect to Azure.\n"
  example: []
  syntax:
    content: public ServiceClientCredentials Credentials { get; }
    content.vb: Public ReadOnly Property Credentials As ServiceClientCredentials
    parameters: []
    return:
      type: Microsoft.Rest.ServiceClientCredentials
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.Credentials*
  implements:
  - Microsoft.Azure.Management.Redis.IRedisManagementClient.Credentials
  - Microsoft.Rest.Azure.IAzureClient.Credentials
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.SubscriptionId
  commentId: P:Microsoft.Azure.Management.Redis.RedisManagementClient.SubscriptionId
  id: SubscriptionId
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: RedisManagementClient.SubscriptionId
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.SubscriptionId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubscriptionId
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets subscription credentials which uniquely identify Microsoft Azure\nsubscription. The subscription ID forms part of the URI for every service\ncall.\n"
  example: []
  syntax:
    content: public string SubscriptionId { get; set; }
    content.vb: Public Property SubscriptionId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.SubscriptionId*
  implements:
  - Microsoft.Azure.Management.Redis.IRedisManagementClient.SubscriptionId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.Redis.RedisManagementClient.ApiVersion
  id: ApiVersion
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: ApiVersion
  nameWithType: RedisManagementClient.ApiVersion
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.ApiVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApiVersion
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nClient Api Version.\n"
  example: []
  syntax:
    content: public string ApiVersion { get; }
    content.vb: Public ReadOnly Property ApiVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.ApiVersion*
  implements:
  - Microsoft.Azure.Management.Redis.IRedisManagementClient.ApiVersion
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.AcceptLanguage
  commentId: P:Microsoft.Azure.Management.Redis.RedisManagementClient.AcceptLanguage
  id: AcceptLanguage
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: AcceptLanguage
  nameWithType: RedisManagementClient.AcceptLanguage
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.AcceptLanguage
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AcceptLanguage
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets or sets the preferred language for the response.\n"
  example: []
  syntax:
    content: public string AcceptLanguage { get; set; }
    content.vb: Public Property AcceptLanguage As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.AcceptLanguage*
  implements:
  - Microsoft.Azure.Management.Redis.IRedisManagementClient.AcceptLanguage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.Redis.RedisManagementClient.LongRunningOperationRetryTimeout
  id: LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: LongRunningOperationRetryTimeout
  nameWithType: RedisManagementClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.LongRunningOperationRetryTimeout
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LongRunningOperationRetryTimeout
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets or sets the retry timeout in seconds for Long Running Operations.\nDefault value is 30.\n"
  example: []
  syntax:
    content: public int ? LongRunningOperationRetryTimeout { get; set; }
    content.vb: Public Property LongRunningOperationRetryTimeout As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.LongRunningOperationRetryTimeout*
  implements:
  - Microsoft.Azure.Management.Redis.IRedisManagementClient.LongRunningOperationRetryTimeout
  - Microsoft.Rest.Azure.IAzureClient.LongRunningOperationRetryTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.GenerateClientRequestId
  commentId: P:Microsoft.Azure.Management.Redis.RedisManagementClient.GenerateClientRequestId
  id: GenerateClientRequestId
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: GenerateClientRequestId
  nameWithType: RedisManagementClient.GenerateClientRequestId
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.GenerateClientRequestId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GenerateClientRequestId
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nWhen set to true a unique x-ms-client-request-id value is generated and\nincluded in each request. Default is true.\n"
  example: []
  syntax:
    content: public bool ? GenerateClientRequestId { get; set; }
    content.vb: Public Property GenerateClientRequestId As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.GenerateClientRequestId*
  implements:
  - Microsoft.Azure.Management.Redis.IRedisManagementClient.GenerateClientRequestId
  - Microsoft.Rest.Azure.IAzureClient.GenerateClientRequestId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.Redis
  commentId: P:Microsoft.Azure.Management.Redis.RedisManagementClient.Redis
  id: Redis
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: Redis
  nameWithType: RedisManagementClient.Redis
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.Redis
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Redis
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets the IRedisOperations.\n"
  example: []
  syntax:
    content: public virtual IRedisOperations Redis { get; }
    content.vb: Public Overridable ReadOnly Property Redis As IRedisOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Redis.IRedisOperations
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.Redis*
  implements:
  - Microsoft.Azure.Management.Redis.IRedisManagementClient.Redis
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.PatchSchedules
  commentId: P:Microsoft.Azure.Management.Redis.RedisManagementClient.PatchSchedules
  id: PatchSchedules
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: PatchSchedules
  nameWithType: RedisManagementClient.PatchSchedules
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.PatchSchedules
  type: Property
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PatchSchedules
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets the IPatchSchedulesOperations.\n"
  example: []
  syntax:
    content: public virtual IPatchSchedulesOperations PatchSchedules { get; }
    content.vb: Public Overridable ReadOnly Property PatchSchedules As IPatchSchedulesOperations
    parameters: []
    return:
      type: Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.PatchSchedules*
  implements:
  - Microsoft.Azure.Management.Redis.IRedisManagementClient.PatchSchedules
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Net.Http.DelegatingHandler[])
  id: '#ctor(System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: RedisManagementClient(DelegatingHandler[])
  nameWithType: RedisManagementClient.RedisManagementClient(DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nInitializes a new instance of the RedisManagementClient class.\n"
  example: []
  syntax:
    content: protected RedisManagementClient(params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(ParamArray handlers As DelegatingHandler())
    parameters:
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor*
  nameWithType.vb: RedisManagementClient.RedisManagementClient(DelegatingHandler())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(System.Net.Http.DelegatingHandler())
  name.vb: RedisManagementClient(DelegatingHandler())
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  id: '#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: RedisManagementClient(HttpClientHandler, DelegatingHandler[])
  nameWithType: RedisManagementClient.RedisManagementClient(HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nInitializes a new instance of the RedisManagementClient class.\n"
  example: []
  syntax:
    content: protected RedisManagementClient(HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: rootHandler
      type: System.Net.Http.HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor*
  nameWithType.vb: RedisManagementClient.RedisManagementClient(HttpClientHandler, DelegatingHandler())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler())
  name.vb: RedisManagementClient(HttpClientHandler, DelegatingHandler())
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])
  id: '#ctor(System.Uri,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: RedisManagementClient(Uri, DelegatingHandler[])
  nameWithType: RedisManagementClient.RedisManagementClient(Uri, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(System.Uri, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 116
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nInitializes a new instance of the RedisManagementClient class.\n"
  example: []
  syntax:
    content: protected RedisManagementClient(Uri baseUri, params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(baseUri As Uri, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThrown when a required parameter is null\n"
  nameWithType.vb: RedisManagementClient.RedisManagementClient(Uri, DelegatingHandler())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(System.Uri, System.Net.Http.DelegatingHandler())
  name.vb: RedisManagementClient(Uri, DelegatingHandler())
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  id: '#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: RedisManagementClient(Uri, HttpClientHandler, DelegatingHandler[])
  nameWithType: RedisManagementClient.RedisManagementClient(Uri, HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(System.Uri, System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nInitializes a new instance of the RedisManagementClient class.\n"
  example: []
  syntax:
    content: protected RedisManagementClient(Uri baseUri, HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Protected Sub New(baseUri As Uri, rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: rootHandler
      type: System.Net.Http.HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThrown when a required parameter is null\n"
  nameWithType.vb: RedisManagementClient.RedisManagementClient(Uri, HttpClientHandler, DelegatingHandler())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(System.Uri, System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler())
  name.vb: RedisManagementClient(Uri, HttpClientHandler, DelegatingHandler())
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])
  id: '#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: RedisManagementClient(ServiceClientCredentials, DelegatingHandler[])
  nameWithType: RedisManagementClient.RedisManagementClient(ServiceClientCredentials, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(Microsoft.Rest.ServiceClientCredentials, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 161
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nInitializes a new instance of the RedisManagementClient class.\n"
  example: []
  syntax:
    content: public RedisManagementClient(ServiceClientCredentials credentials, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(credentials As ServiceClientCredentials, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: credentials
      type: Microsoft.Rest.ServiceClientCredentials
      description: "\nRequired. Credentials needed for the client to connect to Azure.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThrown when a required parameter is null\n"
  nameWithType.vb: RedisManagementClient.RedisManagementClient(ServiceClientCredentials, DelegatingHandler())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(Microsoft.Rest.ServiceClientCredentials, System.Net.Http.DelegatingHandler())
  name.vb: RedisManagementClient(ServiceClientCredentials, DelegatingHandler())
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  id: '#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: RedisManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  nameWithType: RedisManagementClient.RedisManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(Microsoft.Rest.ServiceClientCredentials, System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 189
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nInitializes a new instance of the RedisManagementClient class.\n"
  example: []
  syntax:
    content: public RedisManagementClient(ServiceClientCredentials credentials, HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(credentials As ServiceClientCredentials, rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: credentials
      type: Microsoft.Rest.ServiceClientCredentials
      description: "\nRequired. Credentials needed for the client to connect to Azure.\n"
    - id: rootHandler
      type: System.Net.Http.HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThrown when a required parameter is null\n"
  nameWithType.vb: RedisManagementClient.RedisManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(Microsoft.Rest.ServiceClientCredentials, System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler())
  name.vb: RedisManagementClient(ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])
  id: '#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: RedisManagementClient(Uri, ServiceClientCredentials, DelegatingHandler[])
  nameWithType: RedisManagementClient.RedisManagementClient(Uri, ServiceClientCredentials, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(System.Uri, Microsoft.Rest.ServiceClientCredentials, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 217
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nInitializes a new instance of the RedisManagementClient class.\n"
  example: []
  syntax:
    content: public RedisManagementClient(Uri baseUri, ServiceClientCredentials credentials, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(baseUri As Uri, credentials As ServiceClientCredentials, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: credentials
      type: Microsoft.Rest.ServiceClientCredentials
      description: "\nRequired. Credentials needed for the client to connect to Azure.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThrown when a required parameter is null\n"
  nameWithType.vb: RedisManagementClient.RedisManagementClient(Uri, ServiceClientCredentials, DelegatingHandler())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(System.Uri, Microsoft.Rest.ServiceClientCredentials, System.Net.Http.DelegatingHandler())
  name.vb: RedisManagementClient(Uri, ServiceClientCredentials, DelegatingHandler())
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  id: '#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])'
  parent: Microsoft.Azure.Management.Redis.RedisManagementClient
  langs:
  - csharp
  - vb
  name: RedisManagementClient(Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  nameWithType: RedisManagementClient.RedisManagementClient(Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(System.Uri, Microsoft.Rest.ServiceClientCredentials, System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler[])
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisManagementClient.cs
    startLine: 253
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nInitializes a new instance of the RedisManagementClient class.\n"
  example: []
  syntax:
    content: public RedisManagementClient(Uri baseUri, ServiceClientCredentials credentials, HttpClientHandler rootHandler, params DelegatingHandler[] handlers)
    content.vb: Public Sub New(baseUri As Uri, credentials As ServiceClientCredentials, rootHandler As HttpClientHandler, ParamArray handlers As DelegatingHandler())
    parameters:
    - id: baseUri
      type: System.Uri
      description: "\nOptional. The base URI of the service.\n"
    - id: credentials
      type: Microsoft.Rest.ServiceClientCredentials
      description: "\nRequired. Credentials needed for the client to connect to Azure.\n"
    - id: rootHandler
      type: System.Net.Http.HttpClientHandler
      description: "\nOptional. The http client handler used to handle http transport.\n"
    - id: handlers
      type: System.Net.Http.DelegatingHandler[]
      description: "\nOptional. The delegating handlers to add to the http client pipeline.\n"
  overload: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThrown when a required parameter is null\n"
  nameWithType.vb: RedisManagementClient.RedisManagementClient(Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient(System.Uri, Microsoft.Rest.ServiceClientCredentials, System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler())
  name.vb: RedisManagementClient(Uri, ServiceClientCredentials, HttpClientHandler, DelegatingHandler())
references:
- uid: Microsoft.Azure.Management.Redis
  commentId: N:Microsoft.Azure.Management.Redis
  isExternal: false
  name: Microsoft.Azure.Management.Redis
  nameWithType: Microsoft.Azure.Management.Redis
  fullName: Microsoft.Azure.Management.Redis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  commentId: T:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  parent: Microsoft.Rest
  definition: Microsoft.Rest.ServiceClient`1
  name: ServiceClient<RedisManagementClient>
  nameWithType: ServiceClient<RedisManagementClient>
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>
  nameWithType.vb: ServiceClient(Of RedisManagementClient)
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient)
  name.vb: ServiceClient(Of RedisManagementClient)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Microsoft.Rest.ServiceClient
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.RedisManagementClient
    name: RedisManagementClient
    nameWithType: RedisManagementClient
    fullName: Microsoft.Azure.Management.Redis.RedisManagementClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Microsoft.Rest.ServiceClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.RedisManagementClient
    name: RedisManagementClient
    nameWithType: RedisManagementClient
    fullName: Microsoft.Azure.Management.Redis.RedisManagementClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Redis.IRedisManagementClient
  commentId: T:Microsoft.Azure.Management.Redis.IRedisManagementClient
  parent: Microsoft.Azure.Management.Redis
  isExternal: false
  name: IRedisManagementClient
  nameWithType: IRedisManagementClient
  fullName: Microsoft.Azure.Management.Redis.IRedisManagementClient
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Rest.Azure.IAzureClient
  commentId: T:Microsoft.Rest.Azure.IAzureClient
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IAzureClient
  nameWithType: IAzureClient
  fullName: Microsoft.Rest.Azure.IAzureClient
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.FirstMessageHandler
  commentId: P:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.FirstMessageHandler
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.FirstMessageHandler
  name: FirstMessageHandler
  nameWithType: ServiceClient<RedisManagementClient>.FirstMessageHandler
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.FirstMessageHandler
  nameWithType.vb: ServiceClient(Of RedisManagementClient).FirstMessageHandler
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).FirstMessageHandler
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.HttpClientHandler
  commentId: P:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.HttpClientHandler
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.HttpClientHandler
  name: HttpClientHandler
  nameWithType: ServiceClient<RedisManagementClient>.HttpClientHandler
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.HttpClientHandler
  nameWithType.vb: ServiceClient(Of RedisManagementClient).HttpClientHandler
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).HttpClientHandler
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.CreateRootHandler
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.CreateRootHandler
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.CreateRootHandler
  name: CreateRootHandler()
  nameWithType: ServiceClient<RedisManagementClient>.CreateRootHandler()
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.CreateRootHandler()
  nameWithType.vb: ServiceClient(Of RedisManagementClient).CreateRootHandler()
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).CreateRootHandler()
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.CreateRootHandler
    name: CreateRootHandler
    nameWithType: ServiceClient<RedisManagementClient>.CreateRootHandler
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.CreateRootHandler
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.CreateRootHandler
    name: CreateRootHandler
    nameWithType: ServiceClient(Of RedisManagementClient).CreateRootHandler
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).CreateRootHandler
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.HttpClient
  commentId: P:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.HttpClient
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.HttpClient
  name: HttpClient
  nameWithType: ServiceClient<RedisManagementClient>.HttpClient
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.HttpClient
  nameWithType.vb: ServiceClient(Of RedisManagementClient).HttpClient
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).HttpClient
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.UserAgent
  commentId: P:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.UserAgent
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.UserAgent
  name: UserAgent
  nameWithType: ServiceClient<RedisManagementClient>.UserAgent
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.UserAgent
  nameWithType.vb: ServiceClient(Of RedisManagementClient).UserAgent
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).UserAgent
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.HttpMessageHandlers
  commentId: P:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.HttpMessageHandlers
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.HttpMessageHandlers
  name: HttpMessageHandlers
  nameWithType: ServiceClient<RedisManagementClient>.HttpMessageHandlers
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.HttpMessageHandlers
  nameWithType.vb: ServiceClient(Of RedisManagementClient).HttpMessageHandlers
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).HttpMessageHandlers
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  name: SetRetryPolicy(RetryPolicy)
  nameWithType: ServiceClient<RedisManagementClient>.SetRetryPolicy(RetryPolicy)
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  nameWithType.vb: ServiceClient(Of RedisManagementClient).SetRetryPolicy(RetryPolicy)
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
    name: SetRetryPolicy
    nameWithType: ServiceClient<RedisManagementClient>.SetRetryPolicy
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.SetRetryPolicy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Rest.TransientFaultHandling.RetryPolicy
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: Microsoft.Rest.TransientFaultHandling.RetryPolicy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
    name: SetRetryPolicy
    nameWithType: ServiceClient(Of RedisManagementClient).SetRetryPolicy
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).SetRetryPolicy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Rest.TransientFaultHandling.RetryPolicy
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: Microsoft.Rest.TransientFaultHandling.RetryPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.Dispose
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.Dispose
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.Dispose
  name: Dispose()
  nameWithType: ServiceClient<RedisManagementClient>.Dispose()
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.Dispose()
  nameWithType.vb: ServiceClient(Of RedisManagementClient).Dispose()
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).Dispose()
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose
    name: Dispose
    nameWithType: ServiceClient<RedisManagementClient>.Dispose
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose
    name: Dispose
    nameWithType: ServiceClient(Of RedisManagementClient).Dispose
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.Dispose(System.Boolean)
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.Dispose(System.Boolean)
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  nameWithType: ServiceClient<RedisManagementClient>.Dispose(Boolean)
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.Dispose(System.Boolean)
  nameWithType.vb: ServiceClient(Of RedisManagementClient).Dispose(Boolean)
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ServiceClient<RedisManagementClient>.Dispose
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ServiceClient(Of RedisManagementClient).Dispose
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  name: InitializeHttpClient(HttpClientHandler, DelegatingHandler[])
  nameWithType: ServiceClient<RedisManagementClient>.InitializeHttpClient(HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.InitializeHttpClient(System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler[])
  nameWithType.vb: ServiceClient(Of RedisManagementClient).InitializeHttpClient(HttpClientHandler, DelegatingHandler())
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).InitializeHttpClient(System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler())
  name.vb: InitializeHttpClient(HttpClientHandler, DelegatingHandler())
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
    name: InitializeHttpClient
    nameWithType: ServiceClient<RedisManagementClient>.InitializeHttpClient
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.InitializeHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
    name: InitializeHttpClient
    nameWithType: ServiceClient(Of RedisManagementClient).InitializeHttpClient
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).InitializeHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.SetUserAgent(System.String)
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.SetUserAgent(System.String)
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
  name: SetUserAgent(String)
  nameWithType: ServiceClient<RedisManagementClient>.SetUserAgent(String)
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.SetUserAgent(System.String)
  nameWithType.vb: ServiceClient(Of RedisManagementClient).SetUserAgent(String)
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).SetUserAgent(System.String)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
    name: SetUserAgent
    nameWithType: ServiceClient<RedisManagementClient>.SetUserAgent
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
    name: SetUserAgent
    nameWithType: ServiceClient(Of RedisManagementClient).SetUserAgent
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.SetUserAgent(System.String,System.String)
  commentId: M:Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}.SetUserAgent(System.String,System.String)
  parent: Microsoft.Rest.ServiceClient{Microsoft.Azure.Management.Redis.RedisManagementClient}
  definition: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
  name: SetUserAgent(String, String)
  nameWithType: ServiceClient<RedisManagementClient>.SetUserAgent(String, String)
  fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.SetUserAgent(System.String, System.String)
  nameWithType.vb: ServiceClient(Of RedisManagementClient).SetUserAgent(String, String)
  fullname.vb: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).SetUserAgent(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
    name: SetUserAgent
    nameWithType: ServiceClient<RedisManagementClient>.SetUserAgent
    fullName: Microsoft.Rest.ServiceClient<Microsoft.Azure.Management.Redis.RedisManagementClient>.SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
    name: SetUserAgent
    nameWithType: ServiceClient(Of RedisManagementClient).SetUserAgent
    fullName: Microsoft.Rest.ServiceClient(Of Microsoft.Azure.Management.Redis.RedisManagementClient).SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.ServiceClient`1
  commentId: T:Microsoft.Rest.ServiceClient`1
  isExternal: false
  name: ServiceClient<T>
  nameWithType: ServiceClient<T>
  fullName: Microsoft.Rest.ServiceClient<T>
  nameWithType.vb: ServiceClient(Of T)
  fullname.vb: Microsoft.Rest.ServiceClient(Of T)
  name.vb: ServiceClient(Of T)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Microsoft.Rest.ServiceClient
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1
    name: ServiceClient
    nameWithType: ServiceClient
    fullName: Microsoft.Rest.ServiceClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest
  commentId: N:Microsoft.Rest
  isExternal: false
  name: Microsoft.Rest
  nameWithType: Microsoft.Rest
  fullName: Microsoft.Rest
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Rest.ServiceClient`1.FirstMessageHandler
  commentId: P:Microsoft.Rest.ServiceClient`1.FirstMessageHandler
  isExternal: false
  name: FirstMessageHandler
  nameWithType: ServiceClient<T>.FirstMessageHandler
  fullName: Microsoft.Rest.ServiceClient<T>.FirstMessageHandler
  nameWithType.vb: ServiceClient(Of T).FirstMessageHandler
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).FirstMessageHandler
- uid: Microsoft.Rest.ServiceClient`1.HttpClientHandler
  commentId: P:Microsoft.Rest.ServiceClient`1.HttpClientHandler
  isExternal: false
  name: HttpClientHandler
  nameWithType: ServiceClient<T>.HttpClientHandler
  fullName: Microsoft.Rest.ServiceClient<T>.HttpClientHandler
  nameWithType.vb: ServiceClient(Of T).HttpClientHandler
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).HttpClientHandler
- uid: Microsoft.Rest.ServiceClient`1.CreateRootHandler
  commentId: M:Microsoft.Rest.ServiceClient`1.CreateRootHandler
  isExternal: false
  name: CreateRootHandler()
  nameWithType: ServiceClient<T>.CreateRootHandler()
  fullName: Microsoft.Rest.ServiceClient<T>.CreateRootHandler()
  nameWithType.vb: ServiceClient(Of T).CreateRootHandler()
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).CreateRootHandler()
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.CreateRootHandler
    name: CreateRootHandler
    nameWithType: ServiceClient<T>.CreateRootHandler
    fullName: Microsoft.Rest.ServiceClient<T>.CreateRootHandler
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.CreateRootHandler
    name: CreateRootHandler
    nameWithType: ServiceClient(Of T).CreateRootHandler
    fullName: Microsoft.Rest.ServiceClient(Of T).CreateRootHandler
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient`1.HttpClient
  commentId: P:Microsoft.Rest.ServiceClient`1.HttpClient
  isExternal: false
  name: HttpClient
  nameWithType: ServiceClient<T>.HttpClient
  fullName: Microsoft.Rest.ServiceClient<T>.HttpClient
  nameWithType.vb: ServiceClient(Of T).HttpClient
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).HttpClient
- uid: Microsoft.Rest.ServiceClient`1.UserAgent
  commentId: P:Microsoft.Rest.ServiceClient`1.UserAgent
  isExternal: false
  name: UserAgent
  nameWithType: ServiceClient<T>.UserAgent
  fullName: Microsoft.Rest.ServiceClient<T>.UserAgent
  nameWithType.vb: ServiceClient(Of T).UserAgent
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).UserAgent
- uid: Microsoft.Rest.ServiceClient`1.HttpMessageHandlers
  commentId: P:Microsoft.Rest.ServiceClient`1.HttpMessageHandlers
  isExternal: false
  name: HttpMessageHandlers
  nameWithType: ServiceClient<T>.HttpMessageHandlers
  fullName: Microsoft.Rest.ServiceClient<T>.HttpMessageHandlers
  nameWithType.vb: ServiceClient(Of T).HttpMessageHandlers
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).HttpMessageHandlers
- uid: Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  commentId: M:Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  isExternal: false
  name: SetRetryPolicy(RetryPolicy)
  nameWithType: ServiceClient<T>.SetRetryPolicy(RetryPolicy)
  fullName: Microsoft.Rest.ServiceClient<T>.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  nameWithType.vb: ServiceClient(Of T).SetRetryPolicy(RetryPolicy)
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
    name: SetRetryPolicy
    nameWithType: ServiceClient<T>.SetRetryPolicy
    fullName: Microsoft.Rest.ServiceClient<T>.SetRetryPolicy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Rest.TransientFaultHandling.RetryPolicy
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: Microsoft.Rest.TransientFaultHandling.RetryPolicy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)
    name: SetRetryPolicy
    nameWithType: ServiceClient(Of T).SetRetryPolicy
    fullName: Microsoft.Rest.ServiceClient(Of T).SetRetryPolicy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Rest.TransientFaultHandling.RetryPolicy
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: Microsoft.Rest.TransientFaultHandling.RetryPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient`1.Dispose
  commentId: M:Microsoft.Rest.ServiceClient`1.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: ServiceClient<T>.Dispose()
  fullName: Microsoft.Rest.ServiceClient<T>.Dispose()
  nameWithType.vb: ServiceClient(Of T).Dispose()
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).Dispose()
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose
    name: Dispose
    nameWithType: ServiceClient<T>.Dispose
    fullName: Microsoft.Rest.ServiceClient<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose
    name: Dispose
    nameWithType: ServiceClient(Of T).Dispose
    fullName: Microsoft.Rest.ServiceClient(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
  commentId: M:Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: ServiceClient<T>.Dispose(Boolean)
  fullName: Microsoft.Rest.ServiceClient<T>.Dispose(System.Boolean)
  nameWithType.vb: ServiceClient(Of T).Dispose(Boolean)
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ServiceClient<T>.Dispose
    fullName: Microsoft.Rest.ServiceClient<T>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ServiceClient(Of T).Dispose
    fullName: Microsoft.Rest.ServiceClient(Of T).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  commentId: M:Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
  isExternal: true
  name: InitializeHttpClient(HttpClientHandler, DelegatingHandler[])
  nameWithType: ServiceClient<T>.InitializeHttpClient(HttpClientHandler, DelegatingHandler[])
  fullName: Microsoft.Rest.ServiceClient<T>.InitializeHttpClient(System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler[])
  nameWithType.vb: ServiceClient(Of T).InitializeHttpClient(HttpClientHandler, DelegatingHandler())
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).InitializeHttpClient(System.Net.Http.HttpClientHandler, System.Net.Http.DelegatingHandler())
  name.vb: InitializeHttpClient(HttpClientHandler, DelegatingHandler())
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
    name: InitializeHttpClient
    nameWithType: ServiceClient<T>.InitializeHttpClient
    fullName: Microsoft.Rest.ServiceClient<T>.InitializeHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.InitializeHttpClient(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])
    name: InitializeHttpClient
    nameWithType: ServiceClient(Of T).InitializeHttpClient
    fullName: Microsoft.Rest.ServiceClient(Of T).InitializeHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
  commentId: M:Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
  isExternal: true
  name: SetUserAgent(String)
  nameWithType: ServiceClient<T>.SetUserAgent(String)
  fullName: Microsoft.Rest.ServiceClient<T>.SetUserAgent(System.String)
  nameWithType.vb: ServiceClient(Of T).SetUserAgent(String)
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).SetUserAgent(System.String)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
    name: SetUserAgent
    nameWithType: ServiceClient<T>.SetUserAgent
    fullName: Microsoft.Rest.ServiceClient<T>.SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String)
    name: SetUserAgent
    nameWithType: ServiceClient(Of T).SetUserAgent
    fullName: Microsoft.Rest.ServiceClient(Of T).SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
  commentId: M:Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
  isExternal: true
  name: SetUserAgent(String, String)
  nameWithType: ServiceClient<T>.SetUserAgent(String, String)
  fullName: Microsoft.Rest.ServiceClient<T>.SetUserAgent(System.String, System.String)
  nameWithType.vb: ServiceClient(Of T).SetUserAgent(String, String)
  fullname.vb: Microsoft.Rest.ServiceClient(Of T).SetUserAgent(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
    name: SetUserAgent
    nameWithType: ServiceClient<T>.SetUserAgent
    fullName: Microsoft.Rest.ServiceClient<T>.SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Rest.ServiceClient`1.SetUserAgent(System.String,System.String)
    name: SetUserAgent
    nameWithType: ServiceClient(Of T).SetUserAgent
    fullName: Microsoft.Rest.ServiceClient(Of T).SetUserAgent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.BaseUri*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisManagementClient.BaseUri
  isExternal: false
  name: BaseUri
  nameWithType: RedisManagementClient.BaseUri
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.BaseUri
- uid: Microsoft.Azure.Management.Redis.IRedisManagementClient.BaseUri
  commentId: P:Microsoft.Azure.Management.Redis.IRedisManagementClient.BaseUri
  parent: Microsoft.Azure.Management.Redis.IRedisManagementClient
  isExternal: false
  name: BaseUri
  nameWithType: IRedisManagementClient.BaseUri
  fullName: Microsoft.Azure.Management.Redis.IRedisManagementClient.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.SerializationSettings*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisManagementClient.SerializationSettings
  isExternal: false
  name: SerializationSettings
  nameWithType: RedisManagementClient.SerializationSettings
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.SerializationSettings
- uid: Microsoft.Azure.Management.Redis.IRedisManagementClient.SerializationSettings
  commentId: P:Microsoft.Azure.Management.Redis.IRedisManagementClient.SerializationSettings
  parent: Microsoft.Azure.Management.Redis.IRedisManagementClient
  isExternal: false
  name: SerializationSettings
  nameWithType: IRedisManagementClient.SerializationSettings
  fullName: Microsoft.Azure.Management.Redis.IRedisManagementClient.SerializationSettings
- uid: Microsoft.Rest.Azure.IAzureClient.SerializationSettings
  commentId: P:Microsoft.Rest.Azure.IAzureClient.SerializationSettings
  parent: Microsoft.Rest.Azure.IAzureClient
  isExternal: false
  name: SerializationSettings
  nameWithType: IAzureClient.SerializationSettings
  fullName: Microsoft.Rest.Azure.IAzureClient.SerializationSettings
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.DeserializationSettings*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisManagementClient.DeserializationSettings
  isExternal: false
  name: DeserializationSettings
  nameWithType: RedisManagementClient.DeserializationSettings
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.DeserializationSettings
- uid: Microsoft.Azure.Management.Redis.IRedisManagementClient.DeserializationSettings
  commentId: P:Microsoft.Azure.Management.Redis.IRedisManagementClient.DeserializationSettings
  parent: Microsoft.Azure.Management.Redis.IRedisManagementClient
  isExternal: false
  name: DeserializationSettings
  nameWithType: IRedisManagementClient.DeserializationSettings
  fullName: Microsoft.Azure.Management.Redis.IRedisManagementClient.DeserializationSettings
- uid: Microsoft.Rest.Azure.IAzureClient.DeserializationSettings
  commentId: P:Microsoft.Rest.Azure.IAzureClient.DeserializationSettings
  parent: Microsoft.Rest.Azure.IAzureClient
  isExternal: false
  name: DeserializationSettings
  nameWithType: IAzureClient.DeserializationSettings
  fullName: Microsoft.Rest.Azure.IAzureClient.DeserializationSettings
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.Credentials*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisManagementClient.Credentials
  isExternal: false
  name: Credentials
  nameWithType: RedisManagementClient.Credentials
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.Credentials
- uid: Microsoft.Azure.Management.Redis.IRedisManagementClient.Credentials
  commentId: P:Microsoft.Azure.Management.Redis.IRedisManagementClient.Credentials
  parent: Microsoft.Azure.Management.Redis.IRedisManagementClient
  isExternal: false
  name: Credentials
  nameWithType: IRedisManagementClient.Credentials
  fullName: Microsoft.Azure.Management.Redis.IRedisManagementClient.Credentials
- uid: Microsoft.Rest.Azure.IAzureClient.Credentials
  commentId: P:Microsoft.Rest.Azure.IAzureClient.Credentials
  parent: Microsoft.Rest.Azure.IAzureClient
  isExternal: false
  name: Credentials
  nameWithType: IAzureClient.Credentials
  fullName: Microsoft.Rest.Azure.IAzureClient.Credentials
- uid: Microsoft.Rest.ServiceClientCredentials
  commentId: T:Microsoft.Rest.ServiceClientCredentials
  parent: Microsoft.Rest
  isExternal: false
  name: ServiceClientCredentials
  nameWithType: ServiceClientCredentials
  fullName: Microsoft.Rest.ServiceClientCredentials
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.SubscriptionId*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisManagementClient.SubscriptionId
  isExternal: false
  name: SubscriptionId
  nameWithType: RedisManagementClient.SubscriptionId
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.SubscriptionId
- uid: Microsoft.Azure.Management.Redis.IRedisManagementClient.SubscriptionId
  commentId: P:Microsoft.Azure.Management.Redis.IRedisManagementClient.SubscriptionId
  parent: Microsoft.Azure.Management.Redis.IRedisManagementClient
  isExternal: false
  name: SubscriptionId
  nameWithType: IRedisManagementClient.SubscriptionId
  fullName: Microsoft.Azure.Management.Redis.IRedisManagementClient.SubscriptionId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.ApiVersion*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisManagementClient.ApiVersion
  isExternal: false
  name: ApiVersion
  nameWithType: RedisManagementClient.ApiVersion
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.ApiVersion
- uid: Microsoft.Azure.Management.Redis.IRedisManagementClient.ApiVersion
  commentId: P:Microsoft.Azure.Management.Redis.IRedisManagementClient.ApiVersion
  parent: Microsoft.Azure.Management.Redis.IRedisManagementClient
  isExternal: false
  name: ApiVersion
  nameWithType: IRedisManagementClient.ApiVersion
  fullName: Microsoft.Azure.Management.Redis.IRedisManagementClient.ApiVersion
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.AcceptLanguage*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisManagementClient.AcceptLanguage
  isExternal: false
  name: AcceptLanguage
  nameWithType: RedisManagementClient.AcceptLanguage
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.AcceptLanguage
- uid: Microsoft.Azure.Management.Redis.IRedisManagementClient.AcceptLanguage
  commentId: P:Microsoft.Azure.Management.Redis.IRedisManagementClient.AcceptLanguage
  parent: Microsoft.Azure.Management.Redis.IRedisManagementClient
  isExternal: false
  name: AcceptLanguage
  nameWithType: IRedisManagementClient.AcceptLanguage
  fullName: Microsoft.Azure.Management.Redis.IRedisManagementClient.AcceptLanguage
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.LongRunningOperationRetryTimeout*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisManagementClient.LongRunningOperationRetryTimeout
  isExternal: false
  name: LongRunningOperationRetryTimeout
  nameWithType: RedisManagementClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.LongRunningOperationRetryTimeout
- uid: Microsoft.Azure.Management.Redis.IRedisManagementClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Azure.Management.Redis.IRedisManagementClient.LongRunningOperationRetryTimeout
  parent: Microsoft.Azure.Management.Redis.IRedisManagementClient
  isExternal: false
  name: LongRunningOperationRetryTimeout
  nameWithType: IRedisManagementClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Azure.Management.Redis.IRedisManagementClient.LongRunningOperationRetryTimeout
- uid: Microsoft.Rest.Azure.IAzureClient.LongRunningOperationRetryTimeout
  commentId: P:Microsoft.Rest.Azure.IAzureClient.LongRunningOperationRetryTimeout
  parent: Microsoft.Rest.Azure.IAzureClient
  isExternal: false
  name: LongRunningOperationRetryTimeout
  nameWithType: IAzureClient.LongRunningOperationRetryTimeout
  fullName: Microsoft.Rest.Azure.IAzureClient.LongRunningOperationRetryTimeout
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.GenerateClientRequestId*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisManagementClient.GenerateClientRequestId
  isExternal: false
  name: GenerateClientRequestId
  nameWithType: RedisManagementClient.GenerateClientRequestId
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.GenerateClientRequestId
- uid: Microsoft.Azure.Management.Redis.IRedisManagementClient.GenerateClientRequestId
  commentId: P:Microsoft.Azure.Management.Redis.IRedisManagementClient.GenerateClientRequestId
  parent: Microsoft.Azure.Management.Redis.IRedisManagementClient
  isExternal: false
  name: GenerateClientRequestId
  nameWithType: IRedisManagementClient.GenerateClientRequestId
  fullName: Microsoft.Azure.Management.Redis.IRedisManagementClient.GenerateClientRequestId
- uid: Microsoft.Rest.Azure.IAzureClient.GenerateClientRequestId
  commentId: P:Microsoft.Rest.Azure.IAzureClient.GenerateClientRequestId
  parent: Microsoft.Rest.Azure.IAzureClient
  isExternal: false
  name: GenerateClientRequestId
  nameWithType: IAzureClient.GenerateClientRequestId
  fullName: Microsoft.Rest.Azure.IAzureClient.GenerateClientRequestId
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.Redis*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisManagementClient.Redis
  isExternal: false
  name: Redis
  nameWithType: RedisManagementClient.Redis
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.Redis
- uid: Microsoft.Azure.Management.Redis.IRedisManagementClient.Redis
  commentId: P:Microsoft.Azure.Management.Redis.IRedisManagementClient.Redis
  parent: Microsoft.Azure.Management.Redis.IRedisManagementClient
  isExternal: false
  name: Redis
  nameWithType: IRedisManagementClient.Redis
  fullName: Microsoft.Azure.Management.Redis.IRedisManagementClient.Redis
- uid: Microsoft.Azure.Management.Redis.IRedisOperations
  commentId: T:Microsoft.Azure.Management.Redis.IRedisOperations
  parent: Microsoft.Azure.Management.Redis
  isExternal: false
  name: IRedisOperations
  nameWithType: IRedisOperations
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.PatchSchedules*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisManagementClient.PatchSchedules
  isExternal: false
  name: PatchSchedules
  nameWithType: RedisManagementClient.PatchSchedules
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.PatchSchedules
- uid: Microsoft.Azure.Management.Redis.IRedisManagementClient.PatchSchedules
  commentId: P:Microsoft.Azure.Management.Redis.IRedisManagementClient.PatchSchedules
  parent: Microsoft.Azure.Management.Redis.IRedisManagementClient
  isExternal: false
  name: PatchSchedules
  nameWithType: IRedisManagementClient.PatchSchedules
  fullName: Microsoft.Azure.Management.Redis.IRedisManagementClient.PatchSchedules
- uid: Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
  commentId: T:Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
  parent: Microsoft.Azure.Management.Redis
  isExternal: false
  name: IPatchSchedulesOperations
  nameWithType: IPatchSchedulesOperations
  fullName: Microsoft.Azure.Management.Redis.IPatchSchedulesOperations
- uid: Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisManagementClient.#ctor
  isExternal: false
  name: RedisManagementClient
  nameWithType: RedisManagementClient.RedisManagementClient
  fullName: Microsoft.Azure.Management.Redis.RedisManagementClient.RedisManagementClient
- uid: System.Net.Http.DelegatingHandler[]
  name: DelegatingHandler[]
  nameWithType: DelegatingHandler[]
  fullName: System.Net.Http.DelegatingHandler[]
  nameWithType.vb: DelegatingHandler()
  fullname.vb: System.Net.Http.DelegatingHandler()
  name.vb: DelegatingHandler()
  spec.csharp:
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Net.Http.HttpClientHandler
  commentId: T:System.Net.Http.HttpClientHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpClientHandler
  nameWithType: HttpClientHandler
  fullName: System.Net.Http.HttpClientHandler
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
