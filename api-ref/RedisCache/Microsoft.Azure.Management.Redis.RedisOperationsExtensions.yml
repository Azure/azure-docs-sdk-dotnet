### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  commentId: T:Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  id: RedisOperationsExtensions
  parent: Microsoft.Azure.Management.Redis
  children:
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Create(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Redis.IRedisOperations)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Update(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters)
  - Microsoft.Azure.Management.Redis.RedisOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: RedisOperationsExtensions
  nameWithType: RedisOperationsExtensions
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RedisOperationsExtensions
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nExtension methods for RedisOperations.\n"
  example: []
  syntax:
    content: public static class RedisOperationsExtensions
    content.vb: Public Module RedisOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Create(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Create(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters)
  id: Create(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(IRedisOperations, String, String, RedisCreateParameters)
  nameWithType: RedisOperationsExtensions.Create(IRedisOperations, String, String, RedisCreateParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Create(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisCreateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Create
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nCreate or replace (overwrite/recreate, with potential downtime) an\nexisting redis cache\n"
  example: []
  syntax:
    content: public static RedisResource Create(this IRedisOperations operations, string resourceGroupName, string name, RedisCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Create(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisCreateParameters) As RedisResource
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisCreateParameters
      description: "\nParameters supplied to the Create redis operation.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisResource
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Threading.CancellationToken)
  id: CreateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(IRedisOperations, String, String, RedisCreateParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.CreateAsync(IRedisOperations, String, String, RedisCreateParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisCreateParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nCreate or replace (overwrite/recreate, with potential downtime) an\nexisting redis cache\n"
  example: []
  syntax:
    content: public static Task<RedisResource> CreateAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisCreateParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisCreateParameters, cancellationToken As CancellationToken = Nothing) As Task(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisCreateParameters
      description: "\nParameters supplied to the Create redis operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters)
  id: BeginCreate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreate(IRedisOperations, String, String, RedisCreateParameters)
  nameWithType: RedisOperationsExtensions.BeginCreate(IRedisOperations, String, String, RedisCreateParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisCreateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginCreate
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nCreate or replace (overwrite/recreate, with potential downtime) an\nexisting redis cache\n"
  example: []
  syntax:
    content: public static RedisResource BeginCreate(this IRedisOperations operations, string resourceGroupName, string name, RedisCreateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCreate(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisCreateParameters) As RedisResource
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisCreateParameters
      description: "\nParameters supplied to the Create redis operation.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisResource
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Threading.CancellationToken)
  id: BeginCreateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisCreateParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginCreateAsync(IRedisOperations, String, String, RedisCreateParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.BeginCreateAsync(IRedisOperations, String, String, RedisCreateParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisCreateParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginCreateAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nCreate or replace (overwrite/recreate, with potential downtime) an\nexisting redis cache\n"
  example: []
  syntax:
    content: public static Task<RedisResource> BeginCreateAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisCreateParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginCreateAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisCreateParameters, cancellationToken As CancellationToken = Nothing) As Task(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisCreateParameters
      description: "\nParameters supplied to the Create redis operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Update(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Update(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters)
  id: Update(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: Update(IRedisOperations, String, String, RedisUpdateParameters)
  nameWithType: RedisOperationsExtensions.Update(IRedisOperations, String, String, RedisUpdateParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Update(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Update
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nUpdate an existing Redis cache\n"
  example: []
  syntax:
    content: public static RedisResource Update(this IRedisOperations operations, string resourceGroupName, string name, RedisUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Update(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisUpdateParameters) As RedisResource
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters
      description: "\nParameters supplied to the Update redis operation.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisResource
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Update*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Threading.CancellationToken)
  id: UpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(IRedisOperations, String, String, RedisUpdateParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.UpdateAsync(IRedisOperations, String, String, RedisUpdateParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 153
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nUpdate an existing Redis cache\n"
  example: []
  syntax:
    content: public static Task<RedisResource> UpdateAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisUpdateParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisUpdateParameters, cancellationToken As CancellationToken = Nothing) As Task(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters
      description: "\nParameters supplied to the Update redis operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.UpdateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters)
  id: BeginUpdate(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUpdate(IRedisOperations, String, String, RedisUpdateParameters)
  nameWithType: RedisOperationsExtensions.BeginUpdate(IRedisOperations, String, String, RedisUpdateParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginUpdate
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 176
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nUpdate an existing Redis cache\n"
  example: []
  syntax:
    content: public static RedisResource BeginUpdate(this IRedisOperations operations, string resourceGroupName, string name, RedisUpdateParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginUpdate(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisUpdateParameters) As RedisResource
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters
      description: "\nParameters supplied to the Update redis operation.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisResource
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Threading.CancellationToken)
  id: BeginUpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginUpdateAsync(IRedisOperations, String, String, RedisUpdateParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.BeginUpdateAsync(IRedisOperations, String, String, RedisUpdateParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginUpdateAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 199
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nUpdate an existing Redis cache\n"
  example: []
  syntax:
    content: public static Task<RedisResource> BeginUpdateAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisUpdateParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginUpdateAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisUpdateParameters, cancellationToken As CancellationToken = Nothing) As Task(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters
      description: "\nParameters supplied to the Update redis operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  id: Delete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IRedisOperations, String, String)
  nameWithType: RedisOperationsExtensions.Delete(IRedisOperations, String, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 219
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: public static void Delete(this IRedisOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(operations As IRedisOperations, resourceGroupName As String, name As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IRedisOperations, String, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.DeleteAsync(IRedisOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 239
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: public static Task DeleteAsync(this IRedisOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IRedisOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  id: BeginDelete(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDelete(IRedisOperations, String, String)
  nameWithType: RedisOperationsExtensions.BeginDelete(IRedisOperations, String, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginDelete
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 256
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: public static void BeginDelete(this IRedisOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeginDelete(operations As IRedisOperations, resourceGroupName As String, name As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDelete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  id: BeginDeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeleteAsync(IRedisOperations, String, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.BeginDeleteAsync(IRedisOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginDeleteAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 276
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nDeletes a redis cache. This operation takes a while to complete.\n"
  example: []
  syntax:
    content: public static Task BeginDeleteAsync(this IRedisOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginDeleteAsync(operations As IRedisOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  id: Get(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IRedisOperations, String, String)
  nameWithType: RedisOperationsExtensions.Get(IRedisOperations, String, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 293
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets a redis cache (resource description).\n"
  example: []
  syntax:
    content: public static RedisResource Get(this IRedisOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IRedisOperations, resourceGroupName As String, name As String) As RedisResource
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisResource
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IRedisOperations, String, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.GetAsync(IRedisOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 313
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets a redis cache (resource description).\n"
  example: []
  syntax:
    content: public static Task<RedisResource> GetAsync(this IRedisOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IRedisOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  id: ListByResourceGroup(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroup(IRedisOperations, String)
  nameWithType: RedisOperationsExtensions.ListByResourceGroup(IRedisOperations, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Redis.IRedisOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroup
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 330
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: public static IPage<RedisResource> ListByResourceGroup(this IRedisOperations operations, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroup(operations As IRedisOperations, resourceGroupName As String) As IPage(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  id: ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroupAsync(IRedisOperations, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.ListByResourceGroupAsync(IRedisOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 347
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: public static Task<IPage<RedisResource>> ListByResourceGroupAsync(this IRedisOperations operations, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroupAsync(operations As IRedisOperations, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of RedisResource))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Redis.IRedisOperations)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Redis.IRedisOperations)
  id: List(Microsoft.Azure.Management.Redis.IRedisOperations)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IRedisOperations)
  nameWithType: RedisOperationsExtensions.List(IRedisOperations)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List(Microsoft.Azure.Management.Redis.IRedisOperations)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 361
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: public static IPage<RedisResource> List(this IRedisOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IRedisOperations) As IPage(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IRedisOperations, CancellationToken)
  nameWithType: RedisOperationsExtensions.ListAsync(IRedisOperations, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 375
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: public static Task<IPage<RedisResource>> ListAsync(this IRedisOperations operations, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IRedisOperations, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of RedisResource))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  id: ListKeys(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListKeys(IRedisOperations, String, String)
  nameWithType: RedisOperationsExtensions.ListKeys(IRedisOperations, String, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListKeys
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 396
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nRetrieve a redis cache's access keys. This operation requires write\npermission to the cache resource.\n"
  example: []
  syntax:
    content: public static RedisAccessKeys ListKeys(this IRedisOperations operations, string resourceGroupName, string name)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListKeys(operations As IRedisOperations, resourceGroupName As String, name As String) As RedisAccessKeys
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisAccessKeys
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  id: ListKeysAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListKeysAsync(IRedisOperations, String, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.ListKeysAsync(IRedisOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListKeysAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 417
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nRetrieve a redis cache's access keys. This operation requires write\npermission to the cache resource.\n"
  example: []
  syntax:
    content: public static Task<RedisAccessKeys> ListKeysAsync(this IRedisOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListKeysAsync(operations As IRedisOperations, resourceGroupName As String, name As String, cancellationToken As CancellationToken = Nothing) As Task(Of RedisAccessKeys)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisAccessKeys}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters)
  id: RegenerateKey(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegenerateKey(IRedisOperations, String, String, RedisRegenerateKeyParameters)
  nameWithType: RedisOperationsExtensions.RegenerateKey(IRedisOperations, String, String, RedisRegenerateKeyParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKey
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 441
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nRegenerate redis cache's access keys. This operation requires write\npermission to the cache resource.\n"
  example: []
  syntax:
    content: public static RedisAccessKeys RegenerateKey(this IRedisOperations operations, string resourceGroupName, string name, RedisRegenerateKeyParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegenerateKey(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisRegenerateKeyParameters) As RedisAccessKeys
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
      description: "\nSpecifies which key to reset.\n"
    return:
      type: Microsoft.Azure.Management.Redis.Models.RedisAccessKeys
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)
  id: RegenerateKeyAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegenerateKeyAsync(IRedisOperations, String, String, RedisRegenerateKeyParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.RegenerateKeyAsync(IRedisOperations, String, String, RedisRegenerateKeyParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegenerateKeyAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 465
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nRegenerate redis cache's access keys. This operation requires write\npermission to the cache resource.\n"
  example: []
  syntax:
    content: public static Task<RedisAccessKeys> RegenerateKeyAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisRegenerateKeyParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegenerateKeyAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisRegenerateKeyParameters, cancellationToken As CancellationToken = Nothing) As Task(Of RedisAccessKeys)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
      description: "\nSpecifies which key to reset.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisAccessKeys}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters)
  id: ForceReboot(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ForceReboot(IRedisOperations, String, String, RedisRebootParameters)
  nameWithType: RedisOperationsExtensions.ForceReboot(IRedisOperations, String, String, RedisRebootParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRebootParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ForceReboot
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 489
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nReboot specified redis node(s). This operation requires write permission\nto the cache resource. There can be potential data loss.\n"
  example: []
  syntax:
    content: public static void ForceReboot(this IRedisOperations operations, string resourceGroupName, string name, RedisRebootParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ForceReboot(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisRebootParameters)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
      description: "\nSpecifies which redis node(s) to reboot.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Threading.CancellationToken)
  id: ForceRebootAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.RedisRebootParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ForceRebootAsync(IRedisOperations, String, String, RedisRebootParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.ForceRebootAsync(IRedisOperations, String, String, RedisRebootParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.RedisRebootParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ForceRebootAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 513
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nReboot specified redis node(s). This operation requires write permission\nto the cache resource. There can be potential data loss.\n"
  example: []
  syntax:
    content: public static Task ForceRebootAsync(this IRedisOperations operations, string resourceGroupName, string name, RedisRebootParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForceRebootAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As RedisRebootParameters, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
      description: "\nSpecifies which redis node(s) to reboot.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  id: ImportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ImportData(IRedisOperations, String, String, ImportRDBParameters)
  nameWithType: RedisOperationsExtensions.ImportData(IRedisOperations, String, String, ImportRDBParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportData(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportData
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 533
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static void ImportData(this IRedisOperations operations, string resourceGroupName, string name, ImportRDBParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ImportData(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ImportRDBParameters)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
      description: "\nParameters for redis import operation.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  id: ImportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ImportDataAsync(IRedisOperations, String, String, ImportRDBParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.ImportDataAsync(IRedisOperations, String, String, ImportRDBParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ImportRDBParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportDataAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 556
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static Task ImportDataAsync(this IRedisOperations operations, string resourceGroupName, string name, ImportRDBParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ImportDataAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ImportRDBParameters, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
      description: "\nParameters for redis import operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportDataAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  id: BeginImportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginImportData(IRedisOperations, String, String, ImportRDBParameters)
  nameWithType: RedisOperationsExtensions.BeginImportData(IRedisOperations, String, String, ImportRDBParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportData(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ImportRDBParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginImportData
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 576
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static void BeginImportData(this IRedisOperations operations, string resourceGroupName, string name, ImportRDBParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeginImportData(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ImportRDBParameters)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
      description: "\nParameters for redis import operation.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  id: BeginImportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ImportRDBParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginImportDataAsync(IRedisOperations, String, String, ImportRDBParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.BeginImportDataAsync(IRedisOperations, String, String, ImportRDBParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ImportRDBParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginImportDataAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 599
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static Task BeginImportDataAsync(this IRedisOperations operations, string resourceGroupName, string name, ImportRDBParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginImportDataAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ImportRDBParameters, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
      description: "\nParameters for redis import operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportDataAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  id: ExportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExportData(IRedisOperations, String, String, ExportRDBParameters)
  nameWithType: RedisOperationsExtensions.ExportData(IRedisOperations, String, String, ExportRDBParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportData(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExportData
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 619
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static void ExportData(this IRedisOperations operations, string resourceGroupName, string name, ExportRDBParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ExportData(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ExportRDBParameters)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
      description: "\nParameters for redis export operation.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  id: ExportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExportDataAsync(IRedisOperations, String, String, ExportRDBParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.ExportDataAsync(IRedisOperations, String, String, ExportRDBParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ExportRDBParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExportDataAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 642
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static Task ExportDataAsync(this IRedisOperations operations, string resourceGroupName, string name, ExportRDBParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExportDataAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ExportRDBParameters, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
      description: "\nParameters for redis export operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportDataAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  id: BeginExportData(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginExportData(IRedisOperations, String, String, ExportRDBParameters)
  nameWithType: RedisOperationsExtensions.BeginExportData(IRedisOperations, String, String, ExportRDBParameters)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportData(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ExportRDBParameters)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginExportData
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 662
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static void BeginExportData(this IRedisOperations operations, string resourceGroupName, string name, ExportRDBParameters parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeginExportData(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ExportRDBParameters)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
      description: "\nParameters for redis export operation.\n"
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  id: BeginExportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Models.ExportRDBParameters,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginExportDataAsync(IRedisOperations, String, String, ExportRDBParameters, CancellationToken)
  nameWithType: RedisOperationsExtensions.BeginExportDataAsync(IRedisOperations, String, String, ExportRDBParameters, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportDataAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.String, Microsoft.Azure.Management.Redis.Models.ExportRDBParameters, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginExportDataAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 685
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nImport data into redis cache.\n"
  example: []
  syntax:
    content: public static Task BeginExportDataAsync(this IRedisOperations operations, string resourceGroupName, string name, ExportRDBParameters parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginExportDataAsync(operations As IRedisOperations, resourceGroupName As String, name As String, parameters As ExportRDBParameters, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group.\n"
    - id: name
      type: System.String
      description: "\nThe name of the redis cache.\n"
    - id: parameters
      type: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
      description: "\nParameters for redis export operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportDataAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  id: ListByResourceGroupNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroupNext(IRedisOperations, String)
  nameWithType: RedisOperationsExtensions.ListByResourceGroupNext(IRedisOperations, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Redis.IRedisOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupNext
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 699
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: public static IPage<RedisResource> ListByResourceGroupNext(this IRedisOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroupNext(operations As IRedisOperations, nextPageLink As String) As IPage(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  id: ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListByResourceGroupNextAsync(IRedisOperations, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.ListByResourceGroupNextAsync(IRedisOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListByResourceGroupNextAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 716
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in a resource group.\n"
  example: []
  syntax:
    content: public static Task<IPage<RedisResource>> ListByResourceGroupNextAsync(this IRedisOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListByResourceGroupNextAsync(operations As IRedisOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of RedisResource))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  id: ListNext(Microsoft.Azure.Management.Redis.IRedisOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IRedisOperations, String)
  nameWithType: RedisOperationsExtensions.ListNext(IRedisOperations, String)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Redis.IRedisOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 733
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: public static IPage<RedisResource> ListNext(this IRedisOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IRedisOperations, nextPageLink As String) As IPage(Of RedisResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.Redis.RedisOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IRedisOperations, String, CancellationToken)
  nameWithType: RedisOperationsExtensions.ListNextAsync(IRedisOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.IRedisOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/RedisCache/Microsoft.Azure.Management.Redis/Generated/RedisOperationsExtensions.cs
    startLine: 750
  assemblies:
  - Microsoft.Azure.Management.Redis
  namespace: Microsoft.Azure.Management.Redis
  summary: "\nGets all redis caches in the specified subscription.\n"
  example: []
  syntax:
    content: public static Task<IPage<RedisResource>> ListNextAsync(this IRedisOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IRedisOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of RedisResource))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.Redis.IRedisOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  overload: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.Redis
  commentId: N:Microsoft.Azure.Management.Redis
  isExternal: false
  name: Microsoft.Azure.Management.Redis
  nameWithType: Microsoft.Azure.Management.Redis
  fullName: Microsoft.Azure.Management.Redis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Create*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Create
  isExternal: false
  name: Create
  nameWithType: RedisOperationsExtensions.Create
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Create
- uid: Microsoft.Azure.Management.Redis.IRedisOperations
  commentId: T:Microsoft.Azure.Management.Redis.IRedisOperations
  parent: Microsoft.Azure.Management.Redis
  isExternal: false
  name: IRedisOperations
  nameWithType: IRedisOperations
  fullName: Microsoft.Azure.Management.Redis.IRedisOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.Redis.Models.RedisCreateParameters
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisCreateParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisCreateParameters
  nameWithType: RedisCreateParameters
  fullName: Microsoft.Azure.Management.Redis.Models.RedisCreateParameters
- uid: Microsoft.Azure.Management.Redis.Models.RedisResource
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisResource
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisResource
  nameWithType: RedisResource
  fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
- uid: Microsoft.Azure.Management.Redis.Models
  commentId: N:Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: Microsoft.Azure.Management.Redis.Models
  nameWithType: Microsoft.Azure.Management.Redis.Models
  fullName: Microsoft.Azure.Management.Redis.Models
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: RedisOperationsExtensions.CreateAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.CreateAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResource}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisResource}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RedisResource>
  nameWithType: Task<RedisResource>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Redis.Models.RedisResource>
  nameWithType.vb: Task(Of RedisResource)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Redis.Models.RedisResource)
  name.vb: Task(Of RedisResource)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    nameWithType: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    nameWithType: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreate*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreate
  isExternal: false
  name: BeginCreate
  nameWithType: RedisOperationsExtensions.BeginCreate
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreate
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreateAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreateAsync
  isExternal: false
  name: BeginCreateAsync
  nameWithType: RedisOperationsExtensions.BeginCreateAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginCreateAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Update*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Update
  isExternal: false
  name: Update
  nameWithType: RedisOperationsExtensions.Update
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Update
- uid: Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisUpdateParameters
  nameWithType: RedisUpdateParameters
  fullName: Microsoft.Azure.Management.Redis.Models.RedisUpdateParameters
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.UpdateAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.UpdateAsync
  isExternal: false
  name: UpdateAsync
  nameWithType: RedisOperationsExtensions.UpdateAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.UpdateAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdate*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdate
  isExternal: false
  name: BeginUpdate
  nameWithType: RedisOperationsExtensions.BeginUpdate
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdate
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdateAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdateAsync
  isExternal: false
  name: BeginUpdateAsync
  nameWithType: RedisOperationsExtensions.BeginUpdateAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginUpdateAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete
  isExternal: false
  name: Delete
  nameWithType: RedisOperationsExtensions.Delete
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Delete
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: RedisOperationsExtensions.DeleteAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.DeleteAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDelete*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDelete
  isExternal: false
  name: BeginDelete
  nameWithType: RedisOperationsExtensions.BeginDelete
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDelete
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDeleteAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDeleteAsync
  isExternal: false
  name: BeginDeleteAsync
  nameWithType: RedisOperationsExtensions.BeginDeleteAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginDeleteAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: RedisOperationsExtensions.Get
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.Get
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: RedisOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.GetAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup
  isExternal: false
  name: ListByResourceGroup
  nameWithType: RedisOperationsExtensions.ListByResourceGroup
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroup
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}
  commentId: T:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}
  parent: Microsoft.Rest.Azure
  definition: Microsoft.Rest.Azure.IPage`1
  name: IPage<RedisResource>
  nameWithType: IPage<RedisResource>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.Redis.Models.RedisResource>
  nameWithType.vb: IPage(Of RedisResource)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.Redis.Models.RedisResource)
  name.vb: IPage(Of RedisResource)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    nameWithType: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    nameWithType: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage`1
  commentId: T:Microsoft.Rest.Azure.IPage`1
  isExternal: false
  name: IPage<T>
  nameWithType: IPage<T>
  fullName: Microsoft.Rest.Azure.IPage<T>
  nameWithType.vb: IPage(Of T)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of T)
  name.vb: IPage(Of T)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync
  isExternal: false
  name: ListByResourceGroupAsync
  nameWithType: RedisOperationsExtensions.ListByResourceGroupAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.Redis.Models.RedisResource}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<RedisResource>>
  nameWithType: Task<IPage<RedisResource>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.Redis.Models.RedisResource>>
  nameWithType.vb: Task(Of IPage(Of RedisResource))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.Redis.Models.RedisResource))
  name.vb: Task(Of IPage(Of RedisResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    nameWithType: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisResource
    name: RedisResource
    nameWithType: RedisResource
    fullName: Microsoft.Azure.Management.Redis.Models.RedisResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List
  isExternal: false
  name: List
  nameWithType: RedisOperationsExtensions.List
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.List
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync
  isExternal: false
  name: ListAsync
  nameWithType: RedisOperationsExtensions.ListAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys
  isExternal: false
  name: ListKeys
  nameWithType: RedisOperationsExtensions.ListKeys
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeys
- uid: Microsoft.Azure.Management.Redis.Models.RedisAccessKeys
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisAccessKeys
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisAccessKeys
  nameWithType: RedisAccessKeys
  fullName: Microsoft.Azure.Management.Redis.Models.RedisAccessKeys
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync
  isExternal: false
  name: ListKeysAsync
  nameWithType: RedisOperationsExtensions.ListKeysAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListKeysAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisAccessKeys}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.Redis.Models.RedisAccessKeys}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RedisAccessKeys>
  nameWithType: Task<RedisAccessKeys>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.Redis.Models.RedisAccessKeys>
  nameWithType.vb: Task(Of RedisAccessKeys)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.Redis.Models.RedisAccessKeys)
  name.vb: Task(Of RedisAccessKeys)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Redis.Models.RedisAccessKeys
    name: RedisAccessKeys
    nameWithType: RedisAccessKeys
    fullName: Microsoft.Azure.Management.Redis.Models.RedisAccessKeys
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Redis.Models.RedisAccessKeys
    name: RedisAccessKeys
    nameWithType: RedisAccessKeys
    fullName: Microsoft.Azure.Management.Redis.Models.RedisAccessKeys
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey
  isExternal: false
  name: RegenerateKey
  nameWithType: RedisOperationsExtensions.RegenerateKey
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKey
- uid: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisRegenerateKeyParameters
  nameWithType: RedisRegenerateKeyParameters
  fullName: Microsoft.Azure.Management.Redis.Models.RedisRegenerateKeyParameters
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync
  isExternal: false
  name: RegenerateKeyAsync
  nameWithType: RedisOperationsExtensions.RegenerateKeyAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.RegenerateKeyAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot
  isExternal: false
  name: ForceReboot
  nameWithType: RedisOperationsExtensions.ForceReboot
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceReboot
- uid: Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
  commentId: T:Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: RedisRebootParameters
  nameWithType: RedisRebootParameters
  fullName: Microsoft.Azure.Management.Redis.Models.RedisRebootParameters
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync
  isExternal: false
  name: ForceRebootAsync
  nameWithType: RedisOperationsExtensions.ForceRebootAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ForceRebootAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportData*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportData
  isExternal: false
  name: ImportData
  nameWithType: RedisOperationsExtensions.ImportData
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportData
- uid: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
  commentId: T:Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: ImportRDBParameters
  nameWithType: ImportRDBParameters
  fullName: Microsoft.Azure.Management.Redis.Models.ImportRDBParameters
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportDataAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportDataAsync
  isExternal: false
  name: ImportDataAsync
  nameWithType: RedisOperationsExtensions.ImportDataAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ImportDataAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportData*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportData
  isExternal: false
  name: BeginImportData
  nameWithType: RedisOperationsExtensions.BeginImportData
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportData
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportDataAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportDataAsync
  isExternal: false
  name: BeginImportDataAsync
  nameWithType: RedisOperationsExtensions.BeginImportDataAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginImportDataAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportData*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportData
  isExternal: false
  name: ExportData
  nameWithType: RedisOperationsExtensions.ExportData
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportData
- uid: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
  commentId: T:Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
  parent: Microsoft.Azure.Management.Redis.Models
  isExternal: false
  name: ExportRDBParameters
  nameWithType: ExportRDBParameters
  fullName: Microsoft.Azure.Management.Redis.Models.ExportRDBParameters
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportDataAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportDataAsync
  isExternal: false
  name: ExportDataAsync
  nameWithType: RedisOperationsExtensions.ExportDataAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ExportDataAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportData*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportData
  isExternal: false
  name: BeginExportData
  nameWithType: RedisOperationsExtensions.BeginExportData
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportData
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportDataAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportDataAsync
  isExternal: false
  name: BeginExportDataAsync
  nameWithType: RedisOperationsExtensions.BeginExportDataAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.BeginExportDataAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext
  isExternal: false
  name: ListByResourceGroupNext
  nameWithType: RedisOperationsExtensions.ListByResourceGroupNext
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNext
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync
  isExternal: false
  name: ListByResourceGroupNextAsync
  nameWithType: RedisOperationsExtensions.ListByResourceGroupNextAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListByResourceGroupNextAsync
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext
  isExternal: false
  name: ListNext
  nameWithType: RedisOperationsExtensions.ListNext
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNext
- uid: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync*
  commentId: Overload:Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync
  isExternal: false
  name: ListNextAsync
  nameWithType: RedisOperationsExtensions.ListNextAsync
  fullName: Microsoft.Azure.Management.Redis.RedisOperationsExtensions.ListNextAsync
