### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataFactories.Models.GenericDataset
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.GenericDataset
  id: GenericDataset
  parent: Microsoft.Azure.Management.DataFactories.Models
  children:
  - Microsoft.Azure.Management.DataFactories.Models.GenericDataset.#ctor
  - Microsoft.Azure.Management.DataFactories.Models.GenericDataset.#ctor(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken})
  - Microsoft.Azure.Management.DataFactories.Models.GenericDataset.ServiceExtraProperties
  langs:
  - csharp
  - vb
  name: GenericDataset
  nameWithType: GenericDataset
  fullName: Microsoft.Azure.Management.DataFactories.Models.GenericDataset
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/GenericDataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GenericDataset
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/GenericDataset.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  syntax:
    content: 'public sealed class GenericDataset : DatasetTypeProperties, IRegisteredType, IGenericTypeProperties'
    content.vb: >-
      Public NotInheritable Class GenericDataset
          Inherits DatasetTypeProperties
          Implements IRegisteredType, IGenericTypeProperties
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.DataFactories.Models.TypeProperties
  - Microsoft.Azure.Management.DataFactories.Models.DatasetTypeProperties
  implements:
  - Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
  - Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.ServiceExtraProperties
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.GenericDataset.ServiceExtraProperties
  id: ServiceExtraProperties
  parent: Microsoft.Azure.Management.DataFactories.Models.GenericDataset
  langs:
  - csharp
  - vb
  name: ServiceExtraProperties
  nameWithType: GenericDataset.ServiceExtraProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.ServiceExtraProperties
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/GenericDataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ServiceExtraProperties
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/GenericDataset.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  syntax:
    content: public IDictionary<string, JToken> ServiceExtraProperties { get; set; }
    content.vb: Public Property ServiceExtraProperties As IDictionary(Of String, JToken)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken}
  overload: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.ServiceExtraProperties*
  implements:
  - Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties.ServiceExtraProperties
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.#ctor
  commentId: M:Microsoft.Azure.Management.DataFactories.Models.GenericDataset.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.DataFactories.Models.GenericDataset
  langs:
  - csharp
  - vb
  name: GenericDataset()
  nameWithType: GenericDataset.GenericDataset()
  fullName: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.GenericDataset()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/GenericDataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/GenericDataset.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  syntax:
    content: public GenericDataset()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.#ctor(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken})
  commentId: M:Microsoft.Azure.Management.DataFactories.Models.GenericDataset.#ctor(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken})
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken})'
  parent: Microsoft.Azure.Management.DataFactories.Models.GenericDataset
  langs:
  - csharp
  - vb
  name: GenericDataset(IDictionary<String, JToken>)
  nameWithType: GenericDataset.GenericDataset(IDictionary<String, JToken>)
  fullName: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.GenericDataset(System.Collections.Generic.IDictionary<System.String, Newtonsoft.Json.Linq.JToken>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/GenericDataset.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Datasets/GenericDataset.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  syntax:
    content: public GenericDataset(IDictionary<string, JToken> serviceExtraProperties)
    content.vb: Public Sub New(serviceExtraProperties As IDictionary(Of String, JToken))
    parameters:
    - id: serviceExtraProperties
      type: System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken}
  overload: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.#ctor*
  nameWithType.vb: GenericDataset.GenericDataset(IDictionary(Of String, JToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.GenericDataset(System.Collections.Generic.IDictionary(Of System.String, Newtonsoft.Json.Linq.JToken))
  name.vb: GenericDataset(IDictionary(Of String, JToken))
references:
- uid: Microsoft.Azure.Management.DataFactories.Models
  commentId: N:Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Models
  nameWithType: Microsoft.Azure.Management.DataFactories.Models
  fullName: Microsoft.Azure.Management.DataFactories.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.DataFactories.Models.TypeProperties
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.TypeProperties
  parent: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: TypeProperties
  nameWithType: TypeProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.TypeProperties
- uid: Microsoft.Azure.Management.DataFactories.Models.DatasetTypeProperties
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.DatasetTypeProperties
  parent: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: DatasetTypeProperties
  nameWithType: DatasetTypeProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.DatasetTypeProperties
- uid: Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
  commentId: T:Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
  parent: Microsoft.Azure.Management.DataFactories.Registration.Models
  isExternal: false
  name: IRegisteredType
  nameWithType: IRegisteredType
  fullName: Microsoft.Azure.Management.DataFactories.Registration.Models.IRegisteredType
- uid: Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties
  parent: Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: IGenericTypeProperties
  nameWithType: IGenericTypeProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataFactories.Registration.Models
  commentId: N:Microsoft.Azure.Management.DataFactories.Registration.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Registration.Models
  nameWithType: Microsoft.Azure.Management.DataFactories.Registration.Models
  fullName: Microsoft.Azure.Management.DataFactories.Registration.Models
- uid: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.ServiceExtraProperties*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Models.GenericDataset.ServiceExtraProperties
  isExternal: false
  name: ServiceExtraProperties
  nameWithType: GenericDataset.ServiceExtraProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.ServiceExtraProperties
- uid: Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties.ServiceExtraProperties
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties.ServiceExtraProperties
  parent: Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties
  isExternal: false
  name: ServiceExtraProperties
  nameWithType: IGenericTypeProperties.ServiceExtraProperties
  fullName: Microsoft.Azure.Management.DataFactories.Models.IGenericTypeProperties.ServiceExtraProperties
- uid: System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, JToken>
  nameWithType: IDictionary<String, JToken>
  fullName: System.Collections.Generic.IDictionary<System.String, Newtonsoft.Json.Linq.JToken>
  nameWithType.vb: IDictionary(Of String, JToken)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Newtonsoft.Json.Linq.JToken)
  name.vb: IDictionary(Of String, JToken)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.#ctor*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Models.GenericDataset.#ctor
  isExternal: false
  name: GenericDataset
  nameWithType: GenericDataset.GenericDataset
  fullName: Microsoft.Azure.Management.DataFactories.Models.GenericDataset.GenericDataset
