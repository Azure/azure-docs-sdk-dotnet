### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings
  id: PolyBaseSettings
  parent: Microsoft.Azure.Management.DataFactories.Models
  children:
  - Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectSampleValue
  - Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectType
  - Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectValue
  - Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.UseTypeDefault
  langs:
  - csharp
  - vb
  name: PolyBaseSettings
  nameWithType: PolyBaseSettings
  fullName: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/CopySinks/PolyBaseSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: PolyBaseSettings
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/CopySinks/PolyBaseSettings.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nPolybase settings.\n"
  example: []
  syntax:
    content: public class PolyBaseSettings
    content.vb: Public Class PolyBaseSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectType
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectType
  id: RejectType
  parent: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings
  langs:
  - csharp
  - vb
  name: RejectType
  nameWithType: PolyBaseSettings.RejectType
  fullName: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/CopySinks/PolyBaseSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: RejectType
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/CopySinks/PolyBaseSettings.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nOptional. Indicates whether RejectValue is specified as a literal value or a percentage.\nMust be one of <xref href=\"Microsoft.Azure.Management.DataFactories.Models.PolyBaseRejectType\" data-throw-if-not-resolved=\"false\"></xref>.\nDefault value is <xref href=\"Microsoft.Azure.Management.DataFactories.Models.PolyBaseRejectType.Value\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string RejectType { get; set; }
    content.vb: Public Property RejectType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectValue
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectValue
  id: RejectValue
  parent: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings
  langs:
  - csharp
  - vb
  name: RejectValue
  nameWithType: PolyBaseSettings.RejectValue
  fullName: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectValue
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/CopySinks/PolyBaseSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: RejectValue
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/CopySinks/PolyBaseSettings.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nOptional. Specifies the value or the percentage of rows that can be rejected before the query fails.\nDefault value is 0.\n"
  example: []
  syntax:
    content: public double ? RejectValue { get; set; }
    content.vb: Public Property RejectValue As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectSampleValue
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectSampleValue
  id: RejectSampleValue
  parent: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings
  langs:
  - csharp
  - vb
  name: RejectSampleValue
  nameWithType: PolyBaseSettings.RejectSampleValue
  fullName: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectSampleValue
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/CopySinks/PolyBaseSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: RejectSampleValue
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/CopySinks/PolyBaseSettings.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nOptional. Determines the number of rows to attempt to retrieve before PolyBase recalculates the percentage of rejected rows.\nRequired when RejectType is <xref href=\"Microsoft.Azure.Management.DataFactories.Models.PolyBaseRejectType.Percentage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ulong ? RejectSampleValue { get; set; }
    content.vb: Public Property RejectSampleValue As ULong?
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
  overload: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectSampleValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.UseTypeDefault
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.UseTypeDefault
  id: UseTypeDefault
  parent: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings
  langs:
  - csharp
  - vb
  name: UseTypeDefault
  nameWithType: PolyBaseSettings.UseTypeDefault
  fullName: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.UseTypeDefault
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/CopySinks/PolyBaseSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: UseTypeDefault
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/CopySinks/PolyBaseSettings.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nOptional. Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file.\nDefault value is false.\n"
  example: []
  syntax:
    content: public bool ? UseTypeDefault { get; set; }
    content.vb: Public Property UseTypeDefault As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.UseTypeDefault*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataFactories.Models
  commentId: N:Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Models
  nameWithType: Microsoft.Azure.Management.DataFactories.Models
  fullName: Microsoft.Azure.Management.DataFactories.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataFactories.Models.PolyBaseRejectType
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.PolyBaseRejectType
  isExternal: false
  name: PolyBaseRejectType
  nameWithType: PolyBaseRejectType
  fullName: Microsoft.Azure.Management.DataFactories.Models.PolyBaseRejectType
- uid: Microsoft.Azure.Management.DataFactories.Models.PolyBaseRejectType.Value
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.PolyBaseRejectType.Value
- uid: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectType*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectType
  isExternal: false
  name: RejectType
  nameWithType: PolyBaseSettings.RejectType
  fullName: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectValue*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectValue
  isExternal: false
  name: RejectValue
  nameWithType: PolyBaseSettings.RejectValue
  fullName: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectValue
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataFactories.Models.PolyBaseRejectType.Percentage
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.PolyBaseRejectType.Percentage
- uid: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectSampleValue*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectSampleValue
  isExternal: false
  name: RejectSampleValue
  nameWithType: PolyBaseSettings.RejectSampleValue
  fullName: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.RejectSampleValue
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt64>
  nameWithType: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: Nullable(Of UInt64)
  fullname.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.UseTypeDefault*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.UseTypeDefault
  isExternal: false
  name: UseTypeDefault
  nameWithType: PolyBaseSettings.UseTypeDefault
  fullName: Microsoft.Azure.Management.DataFactories.Models.PolyBaseSettings.UseTypeDefault
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
