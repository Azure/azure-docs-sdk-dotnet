### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport
  commentId: T:Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport
  id: ComputeTransport
  parent: Microsoft.Azure.Management.DataFactories.Core.Registration.Models
  children:
  - Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.#ctor
  - Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.TransportProtocolVersion
  langs:
  - csharp
  - vb
  name: ComputeTransport
  nameWithType: ComputeTransport
  fullName: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Core/Registration/Models/ComputeTransport.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: ComputeTransport
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Core/Registration/Models/ComputeTransport.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Core.Registration.Models
  summary: "\nThe protocol definition for communication with a ComputeType.\n"
  example: []
  syntax:
    content: public abstract class ComputeTransport
    content.vb: Public MustInherit Class ComputeTransport
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ServiceBusReferenceTransport
  - Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ServiceBusTransport
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.TransportProtocolVersion
  commentId: P:Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.TransportProtocolVersion
  id: TransportProtocolVersion
  parent: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport
  langs:
  - csharp
  - vb
  name: TransportProtocolVersion
  nameWithType: ComputeTransport.TransportProtocolVersion
  fullName: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.TransportProtocolVersion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Core/Registration/Models/ComputeTransport.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: TransportProtocolVersion
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Core/Registration/Models/ComputeTransport.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Core.Registration.Models
  summary: "\nOptional. The version of the transport protocol for communication\nbetween ADF and the user's compute resource proxy service.\n"
  example: []
  syntax:
    content: public string TransportProtocolVersion { get; set; }
    content.vb: Public Property TransportProtocolVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.TransportProtocolVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.#ctor
  commentId: M:Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport
  langs:
  - csharp
  - vb
  name: ComputeTransport()
  nameWithType: ComputeTransport.ComputeTransport()
  fullName: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.ComputeTransport()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Core/Registration/Models/ComputeTransport.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Core/Registration/Models/ComputeTransport.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Core.Registration.Models
  summary: "\nInitializes a new instance of the ComputeTransport class.\n"
  example: []
  syntax:
    content: public ComputeTransport()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataFactories.Core.Registration.Models
  commentId: N:Microsoft.Azure.Management.DataFactories.Core.Registration.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Core.Registration.Models
  nameWithType: Microsoft.Azure.Management.DataFactories.Core.Registration.Models
  fullName: Microsoft.Azure.Management.DataFactories.Core.Registration.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.TransportProtocolVersion*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.TransportProtocolVersion
  isExternal: false
  name: TransportProtocolVersion
  nameWithType: ComputeTransport.TransportProtocolVersion
  fullName: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.TransportProtocolVersion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.#ctor*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.#ctor
  isExternal: false
  name: ComputeTransport
  nameWithType: ComputeTransport.ComputeTransport
  fullName: Microsoft.Azure.Management.DataFactories.Core.Registration.Models.ComputeTransport.ComputeTransport
