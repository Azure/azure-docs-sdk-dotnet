### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataFactories.Models.PipelineState
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.PipelineState
  id: PipelineState
  parent: Microsoft.Azure.Management.DataFactories.Models
  children:
  - Microsoft.Azure.Management.DataFactories.Models.PipelineState.Completed
  - Microsoft.Azure.Management.DataFactories.Models.PipelineState.Deleting
  - Microsoft.Azure.Management.DataFactories.Models.PipelineState.Inactive
  - Microsoft.Azure.Management.DataFactories.Models.PipelineState.Initializing
  - Microsoft.Azure.Management.DataFactories.Models.PipelineState.NotSpecified
  - Microsoft.Azure.Management.DataFactories.Models.PipelineState.Paused
  - Microsoft.Azure.Management.DataFactories.Models.PipelineState.Running
  - Microsoft.Azure.Management.DataFactories.Models.PipelineState.Updating
  langs:
  - csharp
  - vb
  name: PipelineState
  nameWithType: PipelineState
  fullName: Microsoft.Azure.Management.DataFactories.Models.PipelineState
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: PipelineState
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nCurrent state of the pipeline.\n"
  example: []
  syntax:
    content: public static class PipelineState
    content.vb: Public Module PipelineState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.DataFactories.Models.PipelineState.NotSpecified
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.PipelineState.NotSpecified
  id: NotSpecified
  parent: Microsoft.Azure.Management.DataFactories.Models.PipelineState
  langs:
  - csharp
  - vb
  name: NotSpecified
  nameWithType: PipelineState.NotSpecified
  fullName: Microsoft.Azure.Management.DataFactories.Models.PipelineState.NotSpecified
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: NotSpecified
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nNot Specified.\n"
  example: []
  syntax:
    content: public const string NotSpecified = "NotSpecified"
    content.vb: Public Const NotSpecified As String = "NotSpecified"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Initializing
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.PipelineState.Initializing
  id: Initializing
  parent: Microsoft.Azure.Management.DataFactories.Models.PipelineState
  langs:
  - csharp
  - vb
  name: Initializing
  nameWithType: PipelineState.Initializing
  fullName: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Initializing
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Initializing
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe pipeline has a pending initialization task.\n"
  example: []
  syntax:
    content: public const string Initializing = "Initializing"
    content.vb: Public Const Initializing As String = "Initializing"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Updating
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.PipelineState.Updating
  id: Updating
  parent: Microsoft.Azure.Management.DataFactories.Models.PipelineState
  langs:
  - csharp
  - vb
  name: Updating
  nameWithType: PipelineState.Updating
  fullName: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Updating
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Updating
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe pipeline has a pending update task.\n"
  example: []
  syntax:
    content: public const string Updating = "Updating"
    content.vb: Public Const Updating As String = "Updating"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Deleting
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.PipelineState.Deleting
  id: Deleting
  parent: Microsoft.Azure.Management.DataFactories.Models.PipelineState
  langs:
  - csharp
  - vb
  name: Deleting
  nameWithType: PipelineState.Deleting
  fullName: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Deleting
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Deleting
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe pipeline has a pending deletion task.\n"
  example: []
  syntax:
    content: public const string Deleting = "Deleting"
    content.vb: Public Const Deleting As String = "Deleting"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Inactive
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.PipelineState.Inactive
  id: Inactive
  parent: Microsoft.Azure.Management.DataFactories.Models.PipelineState
  langs:
  - csharp
  - vb
  name: Inactive
  nameWithType: PipelineState.Inactive
  fullName: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Inactive
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Inactive
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe pipeline is not active. No active period is set or active\nperiod is in future.\n"
  example: []
  syntax:
    content: public const string Inactive = "Inactive"
    content.vb: Public Const Inactive As String = "Inactive"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Running
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.PipelineState.Running
  id: Running
  parent: Microsoft.Azure.Management.DataFactories.Models.PipelineState
  langs:
  - csharp
  - vb
  name: Running
  nameWithType: PipelineState.Running
  fullName: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Running
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Running
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe pipeline is active and executing activities.\n"
  example: []
  syntax:
    content: public const string Running = "Running"
    content.vb: Public Const Running As String = "Running"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Completed
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.PipelineState.Completed
  id: Completed
  parent: Microsoft.Azure.Management.DataFactories.Models.PipelineState
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: PipelineState.Completed
  fullName: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Completed
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Completed
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe pipeline has completed all the scheduled runs for its\nactivities.\n"
  example: []
  syntax:
    content: public const string Completed = "Completed"
    content.vb: Public Const Completed As String = "Completed"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Paused
  commentId: F:Microsoft.Azure.Management.DataFactories.Models.PipelineState.Paused
  id: Paused
  parent: Microsoft.Azure.Management.DataFactories.Models.PipelineState
  langs:
  - csharp
  - vb
  name: Paused
  nameWithType: PipelineState.Paused
  fullName: Microsoft.Azure.Management.DataFactories.Models.PipelineState.Paused
  type: Field
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Paused
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Models/PipelineState.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nThe pipeline is paused.\n"
  example: []
  syntax:
    content: public const string Paused = "Paused"
    content.vb: Public Const Paused As String = "Paused"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Azure.Management.DataFactories.Models
  commentId: N:Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Models
  nameWithType: Microsoft.Azure.Management.DataFactories.Models
  fullName: Microsoft.Azure.Management.DataFactories.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
