### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions
  commentId: T:Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions
  id: DataFactoryManagementClientExtensions
  parent: Microsoft.Azure.Management.DataFactories.Core
  children:
  - Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatus(Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient,System.String)
  - Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatusAsync(Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient,System.String)
  langs:
  - csharp
  - vb
  name: DataFactoryManagementClientExtensions
  nameWithType: DataFactoryManagementClientExtensions
  fullName: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Core/DataFactoryManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: DataFactoryManagementClientExtensions
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Core/DataFactoryManagementClientExtensions.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Core
  syntax:
    content: public static class DataFactoryManagementClientExtensions
    content.vb: Public Module DataFactoryManagementClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatus(Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient,System.String)
  commentId: M:Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatus(Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient,System.String)
  id: GetLongRunningOperationStatus(Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetLongRunningOperationStatus(IDataFactoryManagementClient, String)
  nameWithType: DataFactoryManagementClientExtensions.GetLongRunningOperationStatus(IDataFactoryManagementClient, String)
  fullName: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatus(Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Core/DataFactoryManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetLongRunningOperationStatus
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Core/DataFactoryManagementClientExtensions.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Core
  summary: "\nThe Get Operation Status operation returns the status of the\nspecified operation. After calling an asynchronous operation, you\ncan call Get Operation Status to determine whether the operation\nhas succeeded, failed, or is still in progress.\n"
  example: []
  syntax:
    content: public static LongRunningOperationResponse GetLongRunningOperationStatus(this IDataFactoryManagementClient operations, string operationStatusLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLongRunningOperationStatus(operations As IDataFactoryManagementClient, operationStatusLink As String) As LongRunningOperationResponse
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient
      description: "\nReference to the\nMicrosoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient.\n"
    - id: operationStatusLink
      type: System.String
      description: "\nRequired. Location value returned by the Begin operation.\n"
    return:
      type: Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse
      description: "\nA standard service response for long running operations.\n"
  overload: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatusAsync(Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient,System.String)
  commentId: M:Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatusAsync(Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient,System.String)
  id: GetLongRunningOperationStatusAsync(Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions
  langs:
  - csharp
  - vb
  name: GetLongRunningOperationStatusAsync(IDataFactoryManagementClient, String)
  nameWithType: DataFactoryManagementClientExtensions.GetLongRunningOperationStatusAsync(IDataFactoryManagementClient, String)
  fullName: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatusAsync(Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Core/DataFactoryManagementClientExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: GetLongRunningOperationStatusAsync
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Core/DataFactoryManagementClientExtensions.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Core
  summary: "\nThe Get Operation Status operation returns the status of the\nspecified operation. After calling an asynchronous operation, you\ncan call Get Operation Status to determine whether the operation\nhas succeeded, failed, or is still in progress.\n"
  example: []
  syntax:
    content: public static Task<LongRunningOperationResponse> GetLongRunningOperationStatusAsync(this IDataFactoryManagementClient operations, string operationStatusLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLongRunningOperationStatusAsync(operations As IDataFactoryManagementClient, operationStatusLink As String) As Task(Of LongRunningOperationResponse)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient
      description: "\nReference to the\nMicrosoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient.\n"
    - id: operationStatusLink
      type: System.String
      description: "\nRequired. Location value returned by the Begin operation.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse}
      description: "\nA standard service response for long running operations.\n"
  overload: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatusAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.DataFactories.Core
  commentId: N:Microsoft.Azure.Management.DataFactories.Core
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Core
  nameWithType: Microsoft.Azure.Management.DataFactories.Core
  fullName: Microsoft.Azure.Management.DataFactories.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatus*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatus
  isExternal: false
  name: GetLongRunningOperationStatus
  nameWithType: DataFactoryManagementClientExtensions.GetLongRunningOperationStatus
  fullName: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatus
- uid: Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient
  commentId: T:Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient
  parent: Microsoft.Azure.Management.DataFactories.Core
  isExternal: false
  name: IDataFactoryManagementClient
  nameWithType: IDataFactoryManagementClient
  fullName: Microsoft.Azure.Management.DataFactories.Core.IDataFactoryManagementClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse
  commentId: T:Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse
  parent: Microsoft.Azure.Management.DataFactories.Common.Models
  isExternal: false
  name: LongRunningOperationResponse
  nameWithType: LongRunningOperationResponse
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse
- uid: Microsoft.Azure.Management.DataFactories.Common.Models
  commentId: N:Microsoft.Azure.Management.DataFactories.Common.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Common.Models
  nameWithType: Microsoft.Azure.Management.DataFactories.Common.Models
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models
- uid: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatusAsync*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatusAsync
  isExternal: false
  name: GetLongRunningOperationStatusAsync
  nameWithType: DataFactoryManagementClientExtensions.GetLongRunningOperationStatusAsync
  fullName: Microsoft.Azure.Management.DataFactories.Core.DataFactoryManagementClientExtensions.GetLongRunningOperationStatusAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LongRunningOperationResponse>
  nameWithType: Task<LongRunningOperationResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse>
  nameWithType.vb: Task(Of LongRunningOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse)
  name.vb: Task(Of LongRunningOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    nameWithType: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse
    name: LongRunningOperationResponse
    nameWithType: LongRunningOperationResponse
    fullName: Microsoft.Azure.Management.DataFactories.Common.Models.LongRunningOperationResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
