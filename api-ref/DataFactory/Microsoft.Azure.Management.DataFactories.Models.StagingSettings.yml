### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataFactories.Models.StagingSettings
  commentId: T:Microsoft.Azure.Management.DataFactories.Models.StagingSettings
  id: StagingSettings
  parent: Microsoft.Azure.Management.DataFactories.Models
  children:
  - Microsoft.Azure.Management.DataFactories.Models.StagingSettings.EnableCompression
  - Microsoft.Azure.Management.DataFactories.Models.StagingSettings.LinkedServiceName
  - Microsoft.Azure.Management.DataFactories.Models.StagingSettings.Path
  langs:
  - csharp
  - vb
  name: StagingSettings
  nameWithType: StagingSettings
  fullName: Microsoft.Azure.Management.DataFactories.Models.StagingSettings
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/StagingSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: StagingSettings
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/StagingSettings.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nInterim staging settings\n"
  example: []
  syntax:
    content: public class StagingSettings
    content.vb: Public Class StagingSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.LinkedServiceName
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.StagingSettings.LinkedServiceName
  id: LinkedServiceName
  parent: Microsoft.Azure.Management.DataFactories.Models.StagingSettings
  langs:
  - csharp
  - vb
  name: LinkedServiceName
  nameWithType: StagingSettings.LinkedServiceName
  fullName: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.LinkedServiceName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/StagingSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: LinkedServiceName
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/StagingSettings.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nName of the Azure Storage linked service used as an interim staging. \nMust be specified if copy via staging is enbled.\n"
  example: []
  syntax:
    content: public string LinkedServiceName { get; set; }
    content.vb: Public Property LinkedServiceName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.LinkedServiceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.Path
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.StagingSettings.Path
  id: Path
  parent: Microsoft.Azure.Management.DataFactories.Models.StagingSettings
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: StagingSettings.Path
  fullName: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.Path
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/StagingSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Path
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/StagingSettings.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nOptional. The storage path for storing the interim data.\n"
  example: []
  syntax:
    content: public string Path { get; set; }
    content.vb: Public Property Path As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.Path*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.EnableCompression
  commentId: P:Microsoft.Azure.Management.DataFactories.Models.StagingSettings.EnableCompression
  id: EnableCompression
  parent: Microsoft.Azure.Management.DataFactories.Models.StagingSettings
  langs:
  - csharp
  - vb
  name: EnableCompression
  nameWithType: StagingSettings.EnableCompression
  fullName: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.EnableCompression
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/StagingSettings.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: EnableCompression
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Customizations/Models/Activities/StagingSettings.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Models
  summary: "\nOptional. Specifies whether to use compression when copy data via an interim staging.\nDefault value is false.\n"
  example: []
  syntax:
    content: public bool ? EnableCompression { get; set; }
    content.vb: Public Property EnableCompression As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.EnableCompression*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataFactories.Models
  commentId: N:Microsoft.Azure.Management.DataFactories.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Models
  nameWithType: Microsoft.Azure.Management.DataFactories.Models
  fullName: Microsoft.Azure.Management.DataFactories.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.LinkedServiceName*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Models.StagingSettings.LinkedServiceName
  isExternal: false
  name: LinkedServiceName
  nameWithType: StagingSettings.LinkedServiceName
  fullName: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.LinkedServiceName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.Path*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Models.StagingSettings.Path
  isExternal: false
  name: Path
  nameWithType: StagingSettings.Path
  fullName: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.Path
- uid: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.EnableCompression*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Models.StagingSettings.EnableCompression
  isExternal: false
  name: EnableCompression
  nameWithType: StagingSettings.EnableCompression
  fullName: Microsoft.Azure.Management.DataFactories.Models.StagingSettings.EnableCompression
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
