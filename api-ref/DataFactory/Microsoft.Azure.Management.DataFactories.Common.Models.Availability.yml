### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataFactories.Common.Models.Availability
  commentId: T:Microsoft.Azure.Management.DataFactories.Common.Models.Availability
  id: Availability
  parent: Microsoft.Azure.Management.DataFactories.Common.Models
  children:
  - Microsoft.Azure.Management.DataFactories.Common.Models.Availability.#ctor
  - Microsoft.Azure.Management.DataFactories.Common.Models.Availability.#ctor(System.String,System.UInt32)
  langs:
  - csharp
  - vb
  name: Availability
  nameWithType: Availability
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models.Availability
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Common/Models/Availability.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: Availability
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Common/Models/Availability.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Common.Models
  summary: "\nThe availability definition.\n"
  example: []
  syntax:
    content: 'public class Availability : BaseScheduler'
    content.vb: >-
      Public Class Availability
          Inherits BaseScheduler
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler
  inheritedMembers:
  - Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.AnchorDateTime
  - Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Frequency
  - Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Interval
  - Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Offset
  - Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Style
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataFactories.Common.Models.Availability.#ctor
  commentId: M:Microsoft.Azure.Management.DataFactories.Common.Models.Availability.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.DataFactories.Common.Models.Availability
  langs:
  - csharp
  - vb
  name: Availability()
  nameWithType: Availability.Availability()
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models.Availability.Availability()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Common/Models/Availability.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Common/Models/Availability.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Common.Models
  summary: "\nInitializes a new instance of the Availability class.\n"
  example: []
  syntax:
    content: public Availability()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.DataFactories.Common.Models.Availability.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataFactories.Common.Models.Availability.#ctor(System.String,System.UInt32)
  commentId: M:Microsoft.Azure.Management.DataFactories.Common.Models.Availability.#ctor(System.String,System.UInt32)
  id: '#ctor(System.String,System.UInt32)'
  parent: Microsoft.Azure.Management.DataFactories.Common.Models.Availability
  langs:
  - csharp
  - vb
  name: Availability(String, UInt32)
  nameWithType: Availability.Availability(String, UInt32)
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models.Availability.Availability(System.String, System.UInt32)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Common/Models/Availability.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-net
    id: .ctor
    path: src/azure-sdk-for-net-master/src/ResourceManagement/DataFactory/DataFactoryManagement/Generated/Common/Models/Availability.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.DataFactories
  namespace: Microsoft.Azure.Management.DataFactories.Common.Models
  summary: "\nInitializes a new instance of the Availability class with required\narguments.\n"
  example: []
  syntax:
    content: public Availability(string frequency, uint interval)
    content.vb: Public Sub New(frequency As String, interval As UInteger)
    parameters:
    - id: frequency
      type: System.String
    - id: interval
      type: System.UInt32
  overload: Microsoft.Azure.Management.DataFactories.Common.Models.Availability.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataFactories.Common.Models
  commentId: N:Microsoft.Azure.Management.DataFactories.Common.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataFactories.Common.Models
  nameWithType: Microsoft.Azure.Management.DataFactories.Common.Models
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler
  commentId: T:Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler
  parent: Microsoft.Azure.Management.DataFactories.Common.Models
  isExternal: false
  name: BaseScheduler
  nameWithType: BaseScheduler
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler
- uid: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.AnchorDateTime
  commentId: P:Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.AnchorDateTime
  parent: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler
  isExternal: false
  name: AnchorDateTime
  nameWithType: BaseScheduler.AnchorDateTime
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.AnchorDateTime
- uid: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Frequency
  commentId: P:Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Frequency
  parent: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler
  isExternal: false
  name: Frequency
  nameWithType: BaseScheduler.Frequency
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Frequency
- uid: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Interval
  commentId: P:Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Interval
  parent: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler
  isExternal: false
  name: Interval
  nameWithType: BaseScheduler.Interval
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Interval
- uid: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Offset
  commentId: P:Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Offset
  parent: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler
  isExternal: false
  name: Offset
  nameWithType: BaseScheduler.Offset
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Offset
- uid: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Style
  commentId: P:Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Style
  parent: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler
  isExternal: false
  name: Style
  nameWithType: BaseScheduler.Style
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models.BaseScheduler.Style
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataFactories.Common.Models.Availability.#ctor*
  commentId: Overload:Microsoft.Azure.Management.DataFactories.Common.Models.Availability.#ctor
  isExternal: false
  name: Availability
  nameWithType: Availability.Availability
  fullName: Microsoft.Azure.Management.DataFactories.Common.Models.Availability.Availability
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
