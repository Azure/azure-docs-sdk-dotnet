### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary
  id: ApplicationSummary
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})
  - Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.DisplayName
  - Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Id
  - Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Validate
  - Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Versions
  langs:
  - csharp
  - vb
  name: ApplicationSummary
  nameWithType: ApplicationSummary
  fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationSummary
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nContains information about an application in an Azure Batch account.\n"
  example: []
  syntax:
    content: public class ApplicationSummary
    content.vb: Public Class ApplicationSummary
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary
  langs:
  - csharp
  - vb
  name: ApplicationSummary()
  nameWithType: ApplicationSummary.ApplicationSummary()
  fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.ApplicationSummary()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the ApplicationSummary class.\n"
  example: []
  syntax:
    content: public ApplicationSummary()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})'
  parent: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary
  langs:
  - csharp
  - vb
  name: ApplicationSummary(String, String, IList<String>)
  nameWithType: ApplicationSummary.ApplicationSummary(String, String, IList<String>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.ApplicationSummary(System.String, System.String, System.Collections.Generic.IList<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the ApplicationSummary class.\n"
  example: []
  syntax:
    content: public ApplicationSummary(string id, string displayName, IList<string> versions)
    content.vb: Public Sub New(id As String, displayName As String, versions As IList(Of String))
    parameters:
    - id: id
      type: System.String
      description: >-
        A string that uniquely identifies the application

        within the account.
    - id: displayName
      type: System.String
      description: >-
        The display name for the

        application.
    - id: versions
      type: System.Collections.Generic.IList{System.String}
      description: >-
        The versions of the application which are

        available.
  overload: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor*
  nameWithType.vb: ApplicationSummary.ApplicationSummary(String, String, IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.ApplicationSummary(System.String, System.String, System.Collections.Generic.IList(Of System.String))
  name.vb: ApplicationSummary(String, String, IList(Of String))
- uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Id
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Id
  id: Id
  parent: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ApplicationSummary.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a string that uniquely identifies the application\nwithin the account.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.DisplayName
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: ApplicationSummary.DisplayName
  fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.DisplayName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the display name for the application.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "displayName")]

      public string DisplayName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="displayName")>

      Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.DisplayName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: displayName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Versions
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Versions
  id: Versions
  parent: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary
  langs:
  - csharp
  - vb
  name: Versions
  nameWithType: ApplicationSummary.Versions
  fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Versions
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Versions
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the versions of the application which are available.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "versions")]

      public IList<string> Versions { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="versions")>

      Public Property Versions As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Versions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: versions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ApplicationSummary.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ApplicationSummary.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor
  isExternal: false
  name: ApplicationSummary
  nameWithType: ApplicationSummary.ApplicationSummary
  fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.ApplicationSummary
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Id*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Id
  isExternal: false
  name: Id
  nameWithType: ApplicationSummary.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Id
- uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.DisplayName*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: ApplicationSummary.DisplayName
  fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.DisplayName
- uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Versions*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Versions
  isExternal: false
  name: Versions
  nameWithType: ApplicationSummary.Versions
  fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Versions
- uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Validate
  isExternal: false
  name: Validate
  nameWithType: ApplicationSummary.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Validate
