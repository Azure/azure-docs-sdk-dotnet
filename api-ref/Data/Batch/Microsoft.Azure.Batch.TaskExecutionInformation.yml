### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.TaskExecutionInformation
  commentId: T:Microsoft.Azure.Batch.TaskExecutionInformation
  id: TaskExecutionInformation
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.TaskExecutionInformation.EndTime
  - Microsoft.Azure.Batch.TaskExecutionInformation.ExitCode
  - Microsoft.Azure.Batch.TaskExecutionInformation.LastRequeueTime
  - Microsoft.Azure.Batch.TaskExecutionInformation.LastRetryTime
  - Microsoft.Azure.Batch.TaskExecutionInformation.RequeueCount
  - Microsoft.Azure.Batch.TaskExecutionInformation.RetryCount
  - Microsoft.Azure.Batch.TaskExecutionInformation.SchedulingError
  - Microsoft.Azure.Batch.TaskExecutionInformation.StartTime
  langs:
  - csharp
  - vb
  name: TaskExecutionInformation
  nameWithType: TaskExecutionInformation
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskExecutionInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nTask execution information.\n"
  example: []
  syntax:
    content: 'public class TaskExecutionInformation : IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class TaskExecutionInformation
          Implements IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.EndTime
  commentId: P:Microsoft.Azure.Batch.TaskExecutionInformation.EndTime
  id: EndTime
  parent: Microsoft.Azure.Batch.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: TaskExecutionInformation.EndTime
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.EndTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the task completed.\n"
  example: []
  syntax:
    content: public DateTime? EndTime { get; }
    content.vb: Public ReadOnly Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.TaskExecutionInformation.EndTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.ExitCode
  commentId: P:Microsoft.Azure.Batch.TaskExecutionInformation.ExitCode
  id: ExitCode
  parent: Microsoft.Azure.Batch.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: ExitCode
  nameWithType: TaskExecutionInformation.ExitCode
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.ExitCode
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExitCode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the exit code of the program specified on the task command line.\n"
  remarks: "\nThis property is only returned if the task is in the <xref href=\"Microsoft.Azure.Batch.Common.TaskState.Completed\" data-throw-if-not-resolved=\"false\"></xref> state. The exit \ncode for a process reflects the specific convention implemented by the application developer for that process. \nIf you use the exit code value to make decisions in your code, be sure that you know the exit code convention \nused by the application process. Note that the exit code may also be generated by the compute node operating \nsystem, such as when a process is forcibly terminated.\n"
  example: []
  syntax:
    content: public int ? ExitCode { get; }
    content.vb: Public ReadOnly Property ExitCode As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.TaskExecutionInformation.ExitCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.LastRequeueTime
  commentId: P:Microsoft.Azure.Batch.TaskExecutionInformation.LastRequeueTime
  id: LastRequeueTime
  parent: Microsoft.Azure.Batch.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: LastRequeueTime
  nameWithType: TaskExecutionInformation.LastRequeueTime
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.LastRequeueTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastRequeueTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the most recent time at which this task's execution was re-queued by the Batch service per user request.\n"
  example: []
  syntax:
    content: public DateTime? LastRequeueTime { get; }
    content.vb: Public ReadOnly Property LastRequeueTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.TaskExecutionInformation.LastRequeueTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.LastRetryTime
  commentId: P:Microsoft.Azure.Batch.TaskExecutionInformation.LastRetryTime
  id: LastRetryTime
  parent: Microsoft.Azure.Batch.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: LastRetryTime
  nameWithType: TaskExecutionInformation.LastRetryTime
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.LastRetryTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastRetryTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the most recent time at which this task's execution was retried by the Batch service.\n"
  example: []
  syntax:
    content: public DateTime? LastRetryTime { get; }
    content.vb: Public ReadOnly Property LastRetryTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.TaskExecutionInformation.LastRetryTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.RequeueCount
  commentId: P:Microsoft.Azure.Batch.TaskExecutionInformation.RequeueCount
  id: RequeueCount
  parent: Microsoft.Azure.Batch.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: RequeueCount
  nameWithType: TaskExecutionInformation.RequeueCount
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.RequeueCount
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RequeueCount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the number of times this task's execution was re-queued by the Batch service per user request.\n"
  example: []
  syntax:
    content: public int RequeueCount { get; }
    content.vb: Public ReadOnly Property RequeueCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Batch.TaskExecutionInformation.RequeueCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.RetryCount
  commentId: P:Microsoft.Azure.Batch.TaskExecutionInformation.RetryCount
  id: RetryCount
  parent: Microsoft.Azure.Batch.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: RetryCount
  nameWithType: TaskExecutionInformation.RetryCount
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.RetryCount
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RetryCount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the number of times the task has been retried by the Batch service. Every time the task exits with a non-zero \ncode, it is deemed as an application failure. The Batch service will retry the task up to the specified MaxTaskRetryCount.\n"
  example: []
  syntax:
    content: public int RetryCount { get; }
    content.vb: Public ReadOnly Property RetryCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Batch.TaskExecutionInformation.RetryCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.SchedulingError
  commentId: P:Microsoft.Azure.Batch.TaskExecutionInformation.SchedulingError
  id: SchedulingError
  parent: Microsoft.Azure.Batch.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: SchedulingError
  nameWithType: TaskExecutionInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.SchedulingError
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SchedulingError
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
    startLine: 122
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the error encountered by the service in starting the task. This parameter is only returned if there was \nan error in scheduling the task and it is now in completed state.\n"
  example: []
  syntax:
    content: public TaskSchedulingError SchedulingError { get; }
    content.vb: Public ReadOnly Property SchedulingError As TaskSchedulingError
    parameters: []
    return:
      type: Microsoft.Azure.Batch.TaskSchedulingError
  overload: Microsoft.Azure.Batch.TaskExecutionInformation.SchedulingError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.StartTime
  commentId: P:Microsoft.Azure.Batch.TaskExecutionInformation.StartTime
  id: StartTime
  parent: Microsoft.Azure.Batch.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: TaskExecutionInformation.StartTime
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.StartTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskExecutionInformation.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the task started running.\n"
  example: []
  syntax:
    content: public DateTime? StartTime { get; }
    content.vb: Public ReadOnly Property StartTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.TaskExecutionInformation.StartTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.EndTime*
  commentId: Overload:Microsoft.Azure.Batch.TaskExecutionInformation.EndTime
  isExternal: false
  name: EndTime
  nameWithType: TaskExecutionInformation.EndTime
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.EndTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Common.TaskState.Completed
  commentId: F:Microsoft.Azure.Batch.Common.TaskState.Completed
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.ExitCode*
  commentId: Overload:Microsoft.Azure.Batch.TaskExecutionInformation.ExitCode
  isExternal: false
  name: ExitCode
  nameWithType: TaskExecutionInformation.ExitCode
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.ExitCode
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.LastRequeueTime*
  commentId: Overload:Microsoft.Azure.Batch.TaskExecutionInformation.LastRequeueTime
  isExternal: false
  name: LastRequeueTime
  nameWithType: TaskExecutionInformation.LastRequeueTime
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.LastRequeueTime
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.LastRetryTime*
  commentId: Overload:Microsoft.Azure.Batch.TaskExecutionInformation.LastRetryTime
  isExternal: false
  name: LastRetryTime
  nameWithType: TaskExecutionInformation.LastRetryTime
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.LastRetryTime
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.RequeueCount*
  commentId: Overload:Microsoft.Azure.Batch.TaskExecutionInformation.RequeueCount
  isExternal: false
  name: RequeueCount
  nameWithType: TaskExecutionInformation.RequeueCount
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.RequeueCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.RetryCount*
  commentId: Overload:Microsoft.Azure.Batch.TaskExecutionInformation.RetryCount
  isExternal: false
  name: RetryCount
  nameWithType: TaskExecutionInformation.RetryCount
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.RetryCount
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.SchedulingError*
  commentId: Overload:Microsoft.Azure.Batch.TaskExecutionInformation.SchedulingError
  isExternal: false
  name: SchedulingError
  nameWithType: TaskExecutionInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.SchedulingError
- uid: Microsoft.Azure.Batch.TaskSchedulingError
  commentId: T:Microsoft.Azure.Batch.TaskSchedulingError
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: TaskSchedulingError
  nameWithType: TaskSchedulingError
  fullName: Microsoft.Azure.Batch.TaskSchedulingError
- uid: Microsoft.Azure.Batch.TaskExecutionInformation.StartTime*
  commentId: Overload:Microsoft.Azure.Batch.TaskExecutionInformation.StartTime
  isExternal: false
  name: StartTime
  nameWithType: TaskExecutionInformation.StartTime
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation.StartTime
