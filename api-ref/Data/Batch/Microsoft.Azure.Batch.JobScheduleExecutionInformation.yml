### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.JobScheduleExecutionInformation
  commentId: T:Microsoft.Azure.Batch.JobScheduleExecutionInformation
  id: JobScheduleExecutionInformation
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.JobScheduleExecutionInformation.EndTime
  - Microsoft.Azure.Batch.JobScheduleExecutionInformation.NextRunTime
  - Microsoft.Azure.Batch.JobScheduleExecutionInformation.RecentJob
  langs:
  - csharp
  - vb
  name: JobScheduleExecutionInformation
  nameWithType: JobScheduleExecutionInformation
  fullName: Microsoft.Azure.Batch.JobScheduleExecutionInformation
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobScheduleExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobScheduleExecutionInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobScheduleExecutionInformation.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nThe execution information for a job schedule.\n"
  example: []
  syntax:
    content: 'public class JobScheduleExecutionInformation : IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class JobScheduleExecutionInformation
          Implements IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.JobScheduleExecutionInformation.EndTime
  commentId: P:Microsoft.Azure.Batch.JobScheduleExecutionInformation.EndTime
  id: EndTime
  parent: Microsoft.Azure.Batch.JobScheduleExecutionInformation
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: JobScheduleExecutionInformation.EndTime
  fullName: Microsoft.Azure.Batch.JobScheduleExecutionInformation.EndTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobScheduleExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobScheduleExecutionInformation.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the completion time of the job schedule. This property is only returned for completed job schedules.\n"
  example: []
  syntax:
    content: public DateTime? EndTime { get; }
    content.vb: Public ReadOnly Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.JobScheduleExecutionInformation.EndTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.JobScheduleExecutionInformation.NextRunTime
  commentId: P:Microsoft.Azure.Batch.JobScheduleExecutionInformation.NextRunTime
  id: NextRunTime
  parent: Microsoft.Azure.Batch.JobScheduleExecutionInformation
  langs:
  - csharp
  - vb
  name: NextRunTime
  nameWithType: JobScheduleExecutionInformation.NextRunTime
  fullName: Microsoft.Azure.Batch.JobScheduleExecutionInformation.NextRunTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobScheduleExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NextRunTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobScheduleExecutionInformation.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the next job will be scheduled under this job schedule. This property is only returned \nfor active job schedules.\n"
  example: []
  syntax:
    content: public DateTime? NextRunTime { get; }
    content.vb: Public ReadOnly Property NextRunTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.JobScheduleExecutionInformation.NextRunTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.JobScheduleExecutionInformation.RecentJob
  commentId: P:Microsoft.Azure.Batch.JobScheduleExecutionInformation.RecentJob
  id: RecentJob
  parent: Microsoft.Azure.Batch.JobScheduleExecutionInformation
  langs:
  - csharp
  - vb
  name: RecentJob
  nameWithType: JobScheduleExecutionInformation.RecentJob
  fullName: Microsoft.Azure.Batch.JobScheduleExecutionInformation.RecentJob
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobScheduleExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RecentJob
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobScheduleExecutionInformation.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the information about the most recent job under the job schedule. Note that this element is only returned \nif the job schedule contains at least one job under it.\n"
  example: []
  syntax:
    content: public RecentJob RecentJob { get; }
    content.vb: Public ReadOnly Property RecentJob As RecentJob
    parameters: []
    return:
      type: Microsoft.Azure.Batch.RecentJob
  overload: Microsoft.Azure.Batch.JobScheduleExecutionInformation.RecentJob*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.JobScheduleExecutionInformation.EndTime*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleExecutionInformation.EndTime
  isExternal: false
  name: EndTime
  nameWithType: JobScheduleExecutionInformation.EndTime
  fullName: Microsoft.Azure.Batch.JobScheduleExecutionInformation.EndTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.JobScheduleExecutionInformation.NextRunTime*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleExecutionInformation.NextRunTime
  isExternal: false
  name: NextRunTime
  nameWithType: JobScheduleExecutionInformation.NextRunTime
  fullName: Microsoft.Azure.Batch.JobScheduleExecutionInformation.NextRunTime
- uid: Microsoft.Azure.Batch.JobScheduleExecutionInformation.RecentJob*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleExecutionInformation.RecentJob
  isExternal: false
  name: RecentJob
  nameWithType: JobScheduleExecutionInformation.RecentJob
  fullName: Microsoft.Azure.Batch.JobScheduleExecutionInformation.RecentJob
- uid: Microsoft.Azure.Batch.RecentJob
  commentId: T:Microsoft.Azure.Batch.RecentJob
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: RecentJob
  nameWithType: RecentJob
  fullName: Microsoft.Azure.Batch.RecentJob
