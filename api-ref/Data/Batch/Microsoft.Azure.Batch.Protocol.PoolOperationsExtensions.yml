### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  commentId: T:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  id: PoolOperationsExtensions
  parent: Microsoft.Azure.Batch.Protocol
  children:
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetrics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions)
  - Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: PoolOperationsExtensions
  nameWithType: PoolOperationsExtensions
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolOperationsExtensions
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nExtension methods for PoolOperations.\n"
  example: []
  syntax:
    content: public static class PoolOperationsExtensions
    content.vb: Public Module PoolOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetrics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetrics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions)
  id: ListPoolUsageMetrics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListPoolUsageMetrics(IPoolOperations, PoolListPoolUsageMetricsOptions)
  nameWithType: PoolOperationsExtensions.ListPoolUsageMetrics(IPoolOperations, PoolListPoolUsageMetricsOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetrics(Microsoft.Azure.Batch.Protocol.IPoolOperations, Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListPoolUsageMetrics
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the usage metrics, aggregated by pool across individual time\nintervals, for the specified account.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<PoolUsageMetrics> ListPoolUsageMetrics(this IPoolOperations operations, PoolListPoolUsageMetricsOptions poolListPoolUsageMetricsOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListPoolUsageMetrics(operations As IPoolOperations, poolListPoolUsageMetricsOptions As PoolListPoolUsageMetricsOptions = Nothing) As Rest.Azure.IPage(Of PoolUsageMetrics)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolListPoolUsageMetricsOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetrics*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions,System.Threading.CancellationToken)
  id: ListPoolUsageMetricsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListPoolUsageMetricsAsync(IPoolOperations, PoolListPoolUsageMetricsOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.ListPoolUsageMetricsAsync(IPoolOperations, PoolListPoolUsageMetricsOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListPoolUsageMetricsAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the usage metrics, aggregated by pool across individual time\nintervals, for the specified account.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<PoolUsageMetrics>> ListPoolUsageMetricsAsync(this IPoolOperations operations, PoolListPoolUsageMetricsOptions poolListPoolUsageMetricsOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListPoolUsageMetricsAsync(operations As IPoolOperations, poolListPoolUsageMetricsOptions As PoolListPoolUsageMetricsOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of PoolUsageMetrics))
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolListPoolUsageMetricsOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics}}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions)
  id: GetAllPoolsLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAllPoolsLifetimeStatistics(IPoolOperations, PoolGetAllPoolsLifetimeStatisticsOptions)
  nameWithType: PoolOperationsExtensions.GetAllPoolsLifetimeStatistics(IPoolOperations, PoolGetAllPoolsLifetimeStatisticsOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IPoolOperations, Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAllPoolsLifetimeStatistics
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets lifetime summary statistics for all of the pools in the specified\naccount.\n"
  remarks: "\nStatistics are aggregated across all pools that have ever existed in the\naccount, from account creation to the last update time of the statistics.\n"
  example: []
  syntax:
    content: public static PoolStatistics GetAllPoolsLifetimeStatistics(this IPoolOperations operations, PoolGetAllPoolsLifetimeStatisticsOptions poolGetAllPoolsLifetimeStatisticsOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAllPoolsLifetimeStatistics(operations As IPoolOperations, poolGetAllPoolsLifetimeStatisticsOptions As PoolGetAllPoolsLifetimeStatisticsOptions = Nothing) As PoolStatistics
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolGetAllPoolsLifetimeStatisticsOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatistics*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions,System.Threading.CancellationToken)
  id: GetAllPoolsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAllPoolsLifetimeStatisticsAsync(IPoolOperations, PoolGetAllPoolsLifetimeStatisticsOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.GetAllPoolsLifetimeStatisticsAsync(IPoolOperations, PoolGetAllPoolsLifetimeStatisticsOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAllPoolsLifetimeStatisticsAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets lifetime summary statistics for all of the pools in the specified\naccount.\n"
  remarks: "\nStatistics are aggregated across all pools that have ever existed in the\naccount, from account creation to the last update time of the statistics.\n"
  example: []
  syntax:
    content: public static Task<PoolStatistics> GetAllPoolsLifetimeStatisticsAsync(this IPoolOperations operations, PoolGetAllPoolsLifetimeStatisticsOptions poolGetAllPoolsLifetimeStatisticsOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAllPoolsLifetimeStatisticsAsync(operations As IPoolOperations, poolGetAllPoolsLifetimeStatisticsOptions As PoolGetAllPoolsLifetimeStatisticsOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of PoolStatistics)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolGetAllPoolsLifetimeStatisticsOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolStatistics}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatisticsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions)
  id: Add(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: Add(IPoolOperations, PoolAddParameter, PoolAddOptions)
  nameWithType: PoolOperationsExtensions.Add(IPoolOperations, PoolAddParameter, PoolAddOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IPoolOperations, Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter, Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Add
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nAdds a pool to the specified account.\n"
  example: []
  syntax:
    content: public static PoolAddHeaders Add(this IPoolOperations operations, PoolAddParameter pool, PoolAddOptions poolAddOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Add(operations As IPoolOperations, pool As PoolAddParameter, poolAddOptions As PoolAddOptions = Nothing) As PoolAddHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: pool
      type: Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter
      description: "\nThe pool to be added.\n"
    - id: poolAddOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions,System.Threading.CancellationToken)
  id: AddAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: AddAsync(IPoolOperations, PoolAddParameter, PoolAddOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.AddAsync(IPoolOperations, PoolAddParameter, PoolAddOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter, Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 141
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nAdds a pool to the specified account.\n"
  example: []
  syntax:
    content: public static Task<PoolAddHeaders> AddAsync(this IPoolOperations operations, PoolAddParameter pool, PoolAddOptions poolAddOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAsync(operations As IPoolOperations, pool As PoolAddParameter, poolAddOptions As PoolAddOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of PoolAddHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: pool
      type: Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter
      description: "\nThe pool to be added.\n"
    - id: poolAddOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions)
  id: List(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IPoolOperations, PoolListOptions)
  nameWithType: PoolOperationsExtensions.List(IPoolOperations, PoolListOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IPoolOperations, Microsoft.Azure.Batch.Protocol.Models.PoolListOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 158
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the pools in the specified account.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<CloudPool> List(this IPoolOperations operations, PoolListOptions poolListOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IPoolOperations, poolListOptions As PoolListOptions = Nothing) As Rest.Azure.IPage(Of CloudPool)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolListOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolListOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudPool}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IPoolOperations, PoolListOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.ListAsync(IPoolOperations, PoolListOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, Microsoft.Azure.Batch.Protocol.Models.PoolListOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the pools in the specified account.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<CloudPool>> ListAsync(this IPoolOperations operations, PoolListOptions poolListOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IPoolOperations, poolListOptions As PoolListOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of CloudPool))
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolListOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolListOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudPool}}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions)
  id: Delete(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IPoolOperations, String, PoolDeleteOptions)
  nameWithType: PoolOperationsExtensions.Delete(IPoolOperations, String, PoolDeleteOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 195
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDeletes a pool from the specified account.\n"
  example: []
  syntax:
    content: public static PoolDeleteHeaders Delete(this IPoolOperations operations, string poolId, PoolDeleteOptions poolDeleteOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As IPoolOperations, poolId As String, poolDeleteOptions As PoolDeleteOptions = Nothing) As PoolDeleteHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to delete.\n"
    - id: poolDeleteOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IPoolOperations, String, PoolDeleteOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.DeleteAsync(IPoolOperations, String, PoolDeleteOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 215
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDeletes a pool from the specified account.\n"
  example: []
  syntax:
    content: public static Task<PoolDeleteHeaders> DeleteAsync(this IPoolOperations operations, string poolId, PoolDeleteOptions poolDeleteOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IPoolOperations, poolId As String, poolDeleteOptions As PoolDeleteOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of PoolDeleteHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to delete.\n"
    - id: poolDeleteOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions)
  id: Exists(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: Exists(IPoolOperations, String, PoolExistsOptions)
  nameWithType: PoolOperationsExtensions.Exists(IPoolOperations, String, PoolExistsOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Exists
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 235
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets basic properties of a pool.\n"
  example: []
  syntax:
    content: public static bool Exists(this IPoolOperations operations, string poolId, PoolExistsOptions poolExistsOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Exists(operations As IPoolOperations, poolId As String, poolExistsOptions As PoolExistsOptions = Nothing) As Boolean
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to get.\n"
    - id: poolExistsOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions,System.Threading.CancellationToken)
  id: ExistsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExistsAsync(IPoolOperations, String, PoolExistsOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.ExistsAsync(IPoolOperations, String, PoolExistsOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExistsAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 255
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets basic properties of a pool.\n"
  example: []
  syntax:
    content: public static Task<bool> ExistsAsync(this IPoolOperations operations, string poolId, PoolExistsOptions poolExistsOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExistsAsync(operations As IPoolOperations, poolId As String, poolExistsOptions As PoolExistsOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to get.\n"
    - id: poolExistsOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions)
  id: Get(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IPoolOperations, String, PoolGetOptions)
  nameWithType: PoolOperationsExtensions.Get(IPoolOperations, String, PoolGetOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 275
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets information about the specified pool.\n"
  example: []
  syntax:
    content: public static CloudPool Get(this IPoolOperations operations, string poolId, PoolGetOptions poolGetOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IPoolOperations, poolId As String, poolGetOptions As PoolGetOptions = Nothing) As CloudPool
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to get.\n"
    - id: poolGetOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IPoolOperations, String, PoolGetOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.GetAsync(IPoolOperations, String, PoolGetOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 295
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets information about the specified pool.\n"
  example: []
  syntax:
    content: public static Task<CloudPool> GetAsync(this IPoolOperations operations, string poolId, PoolGetOptions poolGetOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IPoolOperations, poolId As String, poolGetOptions As PoolGetOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CloudPool)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to get.\n"
    - id: poolGetOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CloudPool}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions)
  id: Patch(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: Patch(IPoolOperations, String, PoolPatchParameter, PoolPatchOptions)
  nameWithType: PoolOperationsExtensions.Patch(IPoolOperations, String, PoolPatchParameter, PoolPatchOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter, Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Patch
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 318
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nUpdates the properties of a pool.\n"
  example: []
  syntax:
    content: public static PoolPatchHeaders Patch(this IPoolOperations operations, string poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Patch(operations As IPoolOperations, poolId As String, poolPatchParameter As PoolPatchParameter, poolPatchOptions As PoolPatchOptions = Nothing) As PoolPatchHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to update.\n"
    - id: poolPatchParameter
      type: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
      description: "\nThe parameters for the request.\n"
    - id: poolPatchOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions,System.Threading.CancellationToken)
  id: PatchAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: PatchAsync(IPoolOperations, String, PoolPatchParameter, PoolPatchOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.PatchAsync(IPoolOperations, String, PoolPatchParameter, PoolPatchOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter, Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PatchAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 341
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nUpdates the properties of a pool.\n"
  example: []
  syntax:
    content: public static Task<PoolPatchHeaders> PatchAsync(this IPoolOperations operations, string poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchAsync(operations As IPoolOperations, poolId As String, poolPatchParameter As PoolPatchParameter, poolPatchOptions As PoolPatchOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of PoolPatchHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to update.\n"
    - id: poolPatchParameter
      type: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
      description: "\nThe parameters for the request.\n"
    - id: poolPatchOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions)
  id: DisableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: DisableAutoScale(IPoolOperations, String, PoolDisableAutoScaleOptions)
  nameWithType: PoolOperationsExtensions.DisableAutoScale(IPoolOperations, String, PoolDisableAutoScaleOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisableAutoScale
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 361
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDisables automatic scaling for a pool.\n"
  example: []
  syntax:
    content: public static PoolDisableAutoScaleHeaders DisableAutoScale(this IPoolOperations operations, string poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisableAutoScale(operations As IPoolOperations, poolId As String, poolDisableAutoScaleOptions As PoolDisableAutoScaleOptions = Nothing) As PoolDisableAutoScaleHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool on which to disable automatic scaling.\n"
    - id: poolDisableAutoScaleOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions,System.Threading.CancellationToken)
  id: DisableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: DisableAutoScaleAsync(IPoolOperations, String, PoolDisableAutoScaleOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.DisableAutoScaleAsync(IPoolOperations, String, PoolDisableAutoScaleOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisableAutoScaleAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 381
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDisables automatic scaling for a pool.\n"
  example: []
  syntax:
    content: public static Task<PoolDisableAutoScaleHeaders> DisableAutoScaleAsync(this IPoolOperations operations, string poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisableAutoScaleAsync(operations As IPoolOperations, poolId As String, poolDisableAutoScaleOptions As PoolDisableAutoScaleOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of PoolDisableAutoScaleHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool on which to disable automatic scaling.\n"
    - id: poolDisableAutoScaleOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions)
  id: EnableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: EnableAutoScale(IPoolOperations, String, PoolEnableAutoScaleParameter, PoolEnableAutoScaleOptions)
  nameWithType: PoolOperationsExtensions.EnableAutoScale(IPoolOperations, String, PoolEnableAutoScaleParameter, PoolEnableAutoScaleOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter, Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableAutoScale
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 404
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nEnables automatic scaling for a pool.\n"
  example: []
  syntax:
    content: public static PoolEnableAutoScaleHeaders EnableAutoScale(this IPoolOperations operations, string poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EnableAutoScale(operations As IPoolOperations, poolId As String, poolEnableAutoScaleParameter As PoolEnableAutoScaleParameter, poolEnableAutoScaleOptions As PoolEnableAutoScaleOptions = Nothing) As PoolEnableAutoScaleHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool on which to enable automatic scaling.\n"
    - id: poolEnableAutoScaleParameter
      type: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter
      description: "\nThe parameters for the request.\n"
    - id: poolEnableAutoScaleOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions,System.Threading.CancellationToken)
  id: EnableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: EnableAutoScaleAsync(IPoolOperations, String, PoolEnableAutoScaleParameter, PoolEnableAutoScaleOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.EnableAutoScaleAsync(IPoolOperations, String, PoolEnableAutoScaleParameter, PoolEnableAutoScaleOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter, Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableAutoScaleAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 427
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nEnables automatic scaling for a pool.\n"
  example: []
  syntax:
    content: public static Task<PoolEnableAutoScaleHeaders> EnableAutoScaleAsync(this IPoolOperations operations, string poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EnableAutoScaleAsync(operations As IPoolOperations, poolId As String, poolEnableAutoScaleParameter As PoolEnableAutoScaleParameter, poolEnableAutoScaleOptions As PoolEnableAutoScaleOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of PoolEnableAutoScaleHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool on which to enable automatic scaling.\n"
    - id: poolEnableAutoScaleParameter
      type: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter
      description: "\nThe parameters for the request.\n"
    - id: poolEnableAutoScaleOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions)
  id: EvaluateAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: EvaluateAutoScale(IPoolOperations, String, String, PoolEvaluateAutoScaleOptions)
  nameWithType: PoolOperationsExtensions.EvaluateAutoScale(IPoolOperations, String, String, PoolEvaluateAutoScaleOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EvaluateAutoScale
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 450
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the result of evaluating an automatic scaling formula on the pool.\n"
  example: []
  syntax:
    content: public static AutoScaleRun EvaluateAutoScale(this IPoolOperations operations, string poolId, string autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EvaluateAutoScale(operations As IPoolOperations, poolId As String, autoScaleFormula As String, poolEvaluateAutoScaleOptions As PoolEvaluateAutoScaleOptions = Nothing) As AutoScaleRun
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool on which to evaluate the automatic scaling formula.\n"
    - id: autoScaleFormula
      type: System.String
      description: "\nA formula for the desired number of compute nodes in the pool.\n"
    - id: poolEvaluateAutoScaleOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions,System.Threading.CancellationToken)
  id: EvaluateAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: EvaluateAutoScaleAsync(IPoolOperations, String, String, PoolEvaluateAutoScaleOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.EvaluateAutoScaleAsync(IPoolOperations, String, String, PoolEvaluateAutoScaleOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EvaluateAutoScaleAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 473
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the result of evaluating an automatic scaling formula on the pool.\n"
  example: []
  syntax:
    content: public static Task<AutoScaleRun> EvaluateAutoScaleAsync(this IPoolOperations operations, string poolId, string autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EvaluateAutoScaleAsync(operations As IPoolOperations, poolId As String, autoScaleFormula As String, poolEvaluateAutoScaleOptions As PoolEvaluateAutoScaleOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AutoScaleRun)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool on which to evaluate the automatic scaling formula.\n"
    - id: autoScaleFormula
      type: System.String
      description: "\nA formula for the desired number of compute nodes in the pool.\n"
    - id: poolEvaluateAutoScaleOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions)
  id: Resize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: Resize(IPoolOperations, String, PoolResizeParameter, PoolResizeOptions)
  nameWithType: PoolOperationsExtensions.Resize(IPoolOperations, String, PoolResizeParameter, PoolResizeOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter, Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Resize
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 496
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nChanges the number of compute nodes that are assigned to a pool.\n"
  example: []
  syntax:
    content: public static PoolResizeHeaders Resize(this IPoolOperations operations, string poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Resize(operations As IPoolOperations, poolId As String, poolResizeParameter As PoolResizeParameter, poolResizeOptions As PoolResizeOptions = Nothing) As PoolResizeHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to resize.\n"
    - id: poolResizeParameter
      type: Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter
      description: "\nThe parameters for the request.\n"
    - id: poolResizeOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions,System.Threading.CancellationToken)
  id: ResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: ResizeAsync(IPoolOperations, String, PoolResizeParameter, PoolResizeOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.ResizeAsync(IPoolOperations, String, PoolResizeParameter, PoolResizeOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter, Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResizeAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 519
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nChanges the number of compute nodes that are assigned to a pool.\n"
  example: []
  syntax:
    content: public static Task<PoolResizeHeaders> ResizeAsync(this IPoolOperations operations, string poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ResizeAsync(operations As IPoolOperations, poolId As String, poolResizeParameter As PoolResizeParameter, poolResizeOptions As PoolResizeOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of PoolResizeHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to resize.\n"
    - id: poolResizeParameter
      type: Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter
      description: "\nThe parameters for the request.\n"
    - id: poolResizeOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions)
  id: StopResize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: StopResize(IPoolOperations, String, PoolStopResizeOptions)
  nameWithType: PoolOperationsExtensions.StopResize(IPoolOperations, String, PoolStopResizeOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StopResize
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 544
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nStops an ongoing resize operation on the pool.\n"
  remarks: "\nThis does not restore the pool to its previous state before the resize\noperation: it only stops any further changes being made, and the pool\nmaintains its current state.\n"
  example: []
  syntax:
    content: public static PoolStopResizeHeaders StopResize(this IPoolOperations operations, string poolId, PoolStopResizeOptions poolStopResizeOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function StopResize(operations As IPoolOperations, poolId As String, poolStopResizeOptions As PoolStopResizeOptions = Nothing) As PoolStopResizeHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool whose resizing you want to stop.\n"
    - id: poolStopResizeOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions,System.Threading.CancellationToken)
  id: StopResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: StopResizeAsync(IPoolOperations, String, PoolStopResizeOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.StopResizeAsync(IPoolOperations, String, PoolStopResizeOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StopResizeAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 569
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nStops an ongoing resize operation on the pool.\n"
  remarks: "\nThis does not restore the pool to its previous state before the resize\noperation: it only stops any further changes being made, and the pool\nmaintains its current state.\n"
  example: []
  syntax:
    content: public static Task<PoolStopResizeHeaders> StopResizeAsync(this IPoolOperations operations, string poolId, PoolStopResizeOptions poolStopResizeOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function StopResizeAsync(operations As IPoolOperations, poolId As String, poolStopResizeOptions As PoolStopResizeOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of PoolStopResizeHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool whose resizing you want to stop.\n"
    - id: poolStopResizeOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions)
  id: UpdateProperties(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateProperties(IPoolOperations, String, PoolUpdatePropertiesParameter, PoolUpdatePropertiesOptions)
  nameWithType: PoolOperationsExtensions.UpdateProperties(IPoolOperations, String, PoolUpdatePropertiesParameter, PoolUpdatePropertiesOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter, Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateProperties
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 592
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nUpdates the properties of a pool.\n"
  example: []
  syntax:
    content: public static PoolUpdatePropertiesHeaders UpdateProperties(this IPoolOperations operations, string poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateProperties(operations As IPoolOperations, poolId As String, poolUpdatePropertiesParameter As PoolUpdatePropertiesParameter, poolUpdatePropertiesOptions As PoolUpdatePropertiesOptions = Nothing) As PoolUpdatePropertiesHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to update.\n"
    - id: poolUpdatePropertiesParameter
      type: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter
      description: "\nThe parameters for the request.\n"
    - id: poolUpdatePropertiesOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions,System.Threading.CancellationToken)
  id: UpdatePropertiesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdatePropertiesAsync(IPoolOperations, String, PoolUpdatePropertiesParameter, PoolUpdatePropertiesOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.UpdatePropertiesAsync(IPoolOperations, String, PoolUpdatePropertiesParameter, PoolUpdatePropertiesOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter, Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdatePropertiesAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 615
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nUpdates the properties of a pool.\n"
  example: []
  syntax:
    content: public static Task<PoolUpdatePropertiesHeaders> UpdatePropertiesAsync(this IPoolOperations operations, string poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdatePropertiesAsync(operations As IPoolOperations, poolId As String, poolUpdatePropertiesParameter As PoolUpdatePropertiesParameter, poolUpdatePropertiesOptions As PoolUpdatePropertiesOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of PoolUpdatePropertiesHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to update.\n"
    - id: poolUpdatePropertiesParameter
      type: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter
      description: "\nThe parameters for the request.\n"
    - id: poolUpdatePropertiesOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions)
  id: UpgradeOS(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpgradeOS(IPoolOperations, String, String, PoolUpgradeOSOptions)
  nameWithType: PoolOperationsExtensions.UpgradeOS(IPoolOperations, String, String, PoolUpgradeOSOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpgradeOS
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 639
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nUpgrades the operating system of the specified pool.\n"
  example: []
  syntax:
    content: public static PoolUpgradeOSHeaders UpgradeOS(this IPoolOperations operations, string poolId, string targetOSVersion, PoolUpgradeOSOptions poolUpgradeOSOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpgradeOS(operations As IPoolOperations, poolId As String, targetOSVersion As String, poolUpgradeOSOptions As PoolUpgradeOSOptions = Nothing) As PoolUpgradeOSHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to upgrade.\n"
    - id: targetOSVersion
      type: System.String
      description: "\nThe Azure Guest OS version to be installed on the virtual machines in the\npool.\n"
    - id: poolUpgradeOSOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions,System.Threading.CancellationToken)
  id: UpgradeOSAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpgradeOSAsync(IPoolOperations, String, String, PoolUpgradeOSOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.UpgradeOSAsync(IPoolOperations, String, String, PoolUpgradeOSOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpgradeOSAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 663
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nUpgrades the operating system of the specified pool.\n"
  example: []
  syntax:
    content: public static Task<PoolUpgradeOSHeaders> UpgradeOSAsync(this IPoolOperations operations, string poolId, string targetOSVersion, PoolUpgradeOSOptions poolUpgradeOSOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpgradeOSAsync(operations As IPoolOperations, poolId As String, targetOSVersion As String, poolUpgradeOSOptions As PoolUpgradeOSOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of PoolUpgradeOSHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool to upgrade.\n"
    - id: targetOSVersion
      type: System.String
      description: "\nThe Azure Guest OS version to be installed on the virtual machines in the\npool.\n"
    - id: poolUpgradeOSOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions)
  id: RemoveNodes(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveNodes(IPoolOperations, String, NodeRemoveParameter, PoolRemoveNodesOptions)
  nameWithType: PoolOperationsExtensions.RemoveNodes(IPoolOperations, String, NodeRemoveParameter, PoolRemoveNodesOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter, Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveNodes
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 686
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nRemoves compute nodes from the specified pool.\n"
  example: []
  syntax:
    content: public static PoolRemoveNodesHeaders RemoveNodes(this IPoolOperations operations, string poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveNodes(operations As IPoolOperations, poolId As String, nodeRemoveParameter As NodeRemoveParameter, poolRemoveNodesOptions As PoolRemoveNodesOptions = Nothing) As PoolRemoveNodesHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool from which you want to remove nodes.\n"
    - id: nodeRemoveParameter
      type: Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter
      description: "\nThe parameters for the request.\n"
    - id: poolRemoveNodesOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions,System.Threading.CancellationToken)
  id: RemoveNodesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: RemoveNodesAsync(IPoolOperations, String, NodeRemoveParameter, PoolRemoveNodesOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.RemoveNodesAsync(IPoolOperations, String, NodeRemoveParameter, PoolRemoveNodesOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter, Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveNodesAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 709
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nRemoves compute nodes from the specified pool.\n"
  example: []
  syntax:
    content: public static Task<PoolRemoveNodesHeaders> RemoveNodesAsync(this IPoolOperations operations, string poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RemoveNodesAsync(operations As IPoolOperations, poolId As String, nodeRemoveParameter As NodeRemoveParameter, poolRemoveNodesOptions As PoolRemoveNodesOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of PoolRemoveNodesHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool from which you want to remove nodes.\n"
    - id: nodeRemoveParameter
      type: Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter
      description: "\nThe parameters for the request.\n"
    - id: poolRemoveNodesOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions)
  id: ListPoolUsageMetricsNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListPoolUsageMetricsNext(IPoolOperations, String, PoolListPoolUsageMetricsNextOptions)
  nameWithType: PoolOperationsExtensions.ListPoolUsageMetricsNext(IPoolOperations, String, PoolListPoolUsageMetricsNextOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNext(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListPoolUsageMetricsNext
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 730
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the usage metrics, aggregated by pool across individual time\nintervals, for the specified account.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<PoolUsageMetrics> ListPoolUsageMetricsNext(this IPoolOperations operations, string nextPageLink, PoolListPoolUsageMetricsNextOptions poolListPoolUsageMetricsNextOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListPoolUsageMetricsNext(operations As IPoolOperations, nextPageLink As String, poolListPoolUsageMetricsNextOptions As PoolListPoolUsageMetricsNextOptions = Nothing) As Rest.Azure.IPage(Of PoolUsageMetrics)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: poolListPoolUsageMetricsNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions,System.Threading.CancellationToken)
  id: ListPoolUsageMetricsNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListPoolUsageMetricsNextAsync(IPoolOperations, String, PoolListPoolUsageMetricsNextOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.ListPoolUsageMetricsNextAsync(IPoolOperations, String, PoolListPoolUsageMetricsNextOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListPoolUsageMetricsNextAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 751
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the usage metrics, aggregated by pool across individual time\nintervals, for the specified account.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<PoolUsageMetrics>> ListPoolUsageMetricsNextAsync(this IPoolOperations operations, string nextPageLink, PoolListPoolUsageMetricsNextOptions poolListPoolUsageMetricsNextOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListPoolUsageMetricsNextAsync(operations As IPoolOperations, nextPageLink As String, poolListPoolUsageMetricsNextOptions As PoolListPoolUsageMetricsNextOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of PoolUsageMetrics))
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: poolListPoolUsageMetricsNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics}}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions)
  id: ListNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IPoolOperations, String, PoolListNextOptions)
  nameWithType: PoolOperationsExtensions.ListNext(IPoolOperations, String, PoolListNextOptions)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 771
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the pools in the specified account.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<CloudPool> ListNext(this IPoolOperations operations, string nextPageLink, PoolListNextOptions poolListNextOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IPoolOperations, nextPageLink As String, poolListNextOptions As PoolListNextOptions = Nothing) As Rest.Azure.IPage(Of CloudPool)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: poolListNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudPool}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IPoolOperations, String, PoolListNextOptions, CancellationToken)
  nameWithType: PoolOperationsExtensions.ListNextAsync(IPoolOperations, String, PoolListNextOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/PoolOperationsExtensions.cs
    startLine: 791
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the pools in the specified account.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<CloudPool>> ListNextAsync(this IPoolOperations operations, string nextPageLink, PoolListNextOptions poolListNextOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IPoolOperations, nextPageLink As String, poolListNextOptions As PoolListNextOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of CloudPool))
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IPoolOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: poolListNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudPool}}
  overload: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetrics*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetrics
  isExternal: false
  name: ListPoolUsageMetrics
  nameWithType: PoolOperationsExtensions.ListPoolUsageMetrics
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetrics
- uid: Microsoft.Azure.Batch.Protocol.IPoolOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.IPoolOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: IPoolOperations
  nameWithType: IPoolOperations
  fullName: Microsoft.Azure.Batch.Protocol.IPoolOperations
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolListPoolUsageMetricsOptions
  nameWithType: PoolListPoolUsageMetricsOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics}
  commentId: '!:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics}'
  definition: Microsoft.Rest.Azure.IPage`1
  name: Rest.Azure.IPage<PoolUsageMetrics>
  nameWithType: Rest.Azure.IPage<PoolUsageMetrics>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics>
  nameWithType.vb: Rest.Azure.IPage(Of PoolUsageMetrics)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics)
  name.vb: Rest.Azure.IPage(Of PoolUsageMetrics)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
    name: PoolUsageMetrics
    nameWithType: PoolUsageMetrics
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
    name: PoolUsageMetrics
    nameWithType: PoolUsageMetrics
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: Microsoft.Rest.Azure.IPage`1
  isExternal: true
  name: Rest.Azure.IPage<>
  nameWithType: Rest.Azure.IPage<>
  fullName: Microsoft.Rest.Azure.IPage<>
  nameWithType.vb: Rest.Azure.IPage(Of )
  fullname.vb: Microsoft.Rest.Azure.IPage(Of )
  name.vb: Rest.Azure.IPage(Of )
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsAsync
  isExternal: false
  name: ListPoolUsageMetricsAsync
  nameWithType: PoolOperationsExtensions.ListPoolUsageMetricsAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Rest.Azure.IPage<PoolUsageMetrics>>
  nameWithType: Task<Rest.Azure.IPage<PoolUsageMetrics>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics>>
  nameWithType.vb: Task(Of Rest.Azure.IPage(Of PoolUsageMetrics))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics))
  name.vb: Task(Of Rest.Azure.IPage(Of PoolUsageMetrics))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
    name: PoolUsageMetrics
    nameWithType: PoolUsageMetrics
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
    name: PoolUsageMetrics
    nameWithType: PoolUsageMetrics
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatistics*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatistics
  isExternal: false
  name: GetAllPoolsLifetimeStatistics
  nameWithType: PoolOperationsExtensions.GetAllPoolsLifetimeStatistics
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatistics
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolGetAllPoolsLifetimeStatisticsOptions
  nameWithType: PoolGetAllPoolsLifetimeStatisticsOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolStatistics
  nameWithType: PoolStatistics
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatisticsAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatisticsAsync
  isExternal: false
  name: GetAllPoolsLifetimeStatisticsAsync
  nameWithType: PoolOperationsExtensions.GetAllPoolsLifetimeStatisticsAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatisticsAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolStatistics}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolStatistics}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PoolStatistics>
  nameWithType: Task<PoolStatistics>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.PoolStatistics>
  nameWithType.vb: Task(Of PoolStatistics)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.PoolStatistics)
  name.vb: Task(Of PoolStatistics)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
    name: PoolStatistics
    nameWithType: PoolStatistics
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
    name: PoolStatistics
    nameWithType: PoolStatistics
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add
  isExternal: false
  name: Add
  nameWithType: PoolOperationsExtensions.Add
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolAddParameter
  nameWithType: PoolAddParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolAddOptions
  nameWithType: PoolAddOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolAddHeaders
  nameWithType: PoolAddHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync
  isExternal: false
  name: AddAsync
  nameWithType: PoolOperationsExtensions.AddAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PoolAddHeaders>
  nameWithType: Task<PoolAddHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders>
  nameWithType.vb: Task(Of PoolAddHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders)
  name.vb: Task(Of PoolAddHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders
    name: PoolAddHeaders
    nameWithType: PoolAddHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders
    name: PoolAddHeaders
    nameWithType: PoolAddHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List
  isExternal: false
  name: List
  nameWithType: PoolOperationsExtensions.List
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolListOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolListOptions
  nameWithType: PoolListOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolListOptions
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudPool}
  commentId: '!:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudPool}'
  definition: Microsoft.Rest.Azure.IPage`1
  name: Rest.Azure.IPage<CloudPool>
  nameWithType: Rest.Azure.IPage<CloudPool>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.CloudPool>
  nameWithType.vb: Rest.Azure.IPage(Of CloudPool)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.CloudPool)
  name.vb: Rest.Azure.IPage(Of CloudPool)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool
    name: CloudPool
    nameWithType: CloudPool
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool
    name: CloudPool
    nameWithType: CloudPool
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync
  isExternal: false
  name: ListAsync
  nameWithType: PoolOperationsExtensions.ListAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudPool}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudPool}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Rest.Azure.IPage<CloudPool>>
  nameWithType: Task<Rest.Azure.IPage<CloudPool>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.CloudPool>>
  nameWithType.vb: Task(Of Rest.Azure.IPage(Of CloudPool))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.CloudPool))
  name.vb: Task(Of Rest.Azure.IPage(Of CloudPool))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool
    name: CloudPool
    nameWithType: CloudPool
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool
    name: CloudPool
    nameWithType: CloudPool
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete
  isExternal: false
  name: Delete
  nameWithType: PoolOperationsExtensions.Delete
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolDeleteOptions
  nameWithType: PoolDeleteOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolDeleteHeaders
  nameWithType: PoolDeleteHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: PoolOperationsExtensions.DeleteAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PoolDeleteHeaders>
  nameWithType: Task<PoolDeleteHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders>
  nameWithType.vb: Task(Of PoolDeleteHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders)
  name.vb: Task(Of PoolDeleteHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders
    name: PoolDeleteHeaders
    nameWithType: PoolDeleteHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders
    name: PoolDeleteHeaders
    nameWithType: PoolDeleteHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists
  isExternal: false
  name: Exists
  nameWithType: PoolOperationsExtensions.Exists
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolExistsOptions
  nameWithType: PoolExistsOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync
  isExternal: false
  name: ExistsAsync
  nameWithType: PoolOperationsExtensions.ExistsAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: PoolOperationsExtensions.Get
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolGetOptions
  nameWithType: PoolGetOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CloudPool
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CloudPool
  nameWithType: CloudPool
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: PoolOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CloudPool}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CloudPool}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CloudPool>
  nameWithType: Task<CloudPool>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.CloudPool>
  nameWithType.vb: Task(Of CloudPool)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.CloudPool)
  name.vb: Task(Of CloudPool)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool
    name: CloudPool
    nameWithType: CloudPool
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool
    name: CloudPool
    nameWithType: CloudPool
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch
  isExternal: false
  name: Patch
  nameWithType: PoolOperationsExtensions.Patch
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolPatchParameter
  nameWithType: PoolPatchParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolPatchOptions
  nameWithType: PoolPatchOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolPatchHeaders
  nameWithType: PoolPatchHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync
  isExternal: false
  name: PatchAsync
  nameWithType: PoolOperationsExtensions.PatchAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PoolPatchHeaders>
  nameWithType: Task<PoolPatchHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders>
  nameWithType.vb: Task(Of PoolPatchHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders)
  name.vb: Task(Of PoolPatchHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders
    name: PoolPatchHeaders
    nameWithType: PoolPatchHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders
    name: PoolPatchHeaders
    nameWithType: PoolPatchHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale
  isExternal: false
  name: DisableAutoScale
  nameWithType: PoolOperationsExtensions.DisableAutoScale
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolDisableAutoScaleOptions
  nameWithType: PoolDisableAutoScaleOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolDisableAutoScaleHeaders
  nameWithType: PoolDisableAutoScaleHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync
  isExternal: false
  name: DisableAutoScaleAsync
  nameWithType: PoolOperationsExtensions.DisableAutoScaleAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PoolDisableAutoScaleHeaders>
  nameWithType: Task<PoolDisableAutoScaleHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders>
  nameWithType.vb: Task(Of PoolDisableAutoScaleHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders)
  name.vb: Task(Of PoolDisableAutoScaleHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders
    name: PoolDisableAutoScaleHeaders
    nameWithType: PoolDisableAutoScaleHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders
    name: PoolDisableAutoScaleHeaders
    nameWithType: PoolDisableAutoScaleHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale
  isExternal: false
  name: EnableAutoScale
  nameWithType: PoolOperationsExtensions.EnableAutoScale
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolEnableAutoScaleParameter
  nameWithType: PoolEnableAutoScaleParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolEnableAutoScaleOptions
  nameWithType: PoolEnableAutoScaleOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolEnableAutoScaleHeaders
  nameWithType: PoolEnableAutoScaleHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync
  isExternal: false
  name: EnableAutoScaleAsync
  nameWithType: PoolOperationsExtensions.EnableAutoScaleAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PoolEnableAutoScaleHeaders>
  nameWithType: Task<PoolEnableAutoScaleHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders>
  nameWithType.vb: Task(Of PoolEnableAutoScaleHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders)
  name.vb: Task(Of PoolEnableAutoScaleHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders
    name: PoolEnableAutoScaleHeaders
    nameWithType: PoolEnableAutoScaleHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders
    name: PoolEnableAutoScaleHeaders
    nameWithType: PoolEnableAutoScaleHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale
  isExternal: false
  name: EvaluateAutoScale
  nameWithType: PoolOperationsExtensions.EvaluateAutoScale
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolEvaluateAutoScaleOptions
  nameWithType: PoolEvaluateAutoScaleOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: AutoScaleRun
  nameWithType: AutoScaleRun
  fullName: Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync
  isExternal: false
  name: EvaluateAutoScaleAsync
  nameWithType: PoolOperationsExtensions.EvaluateAutoScaleAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AutoScaleRun>
  nameWithType: Task<AutoScaleRun>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun>
  nameWithType.vb: Task(Of AutoScaleRun)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun)
  name.vb: Task(Of AutoScaleRun)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
    name: AutoScaleRun
    nameWithType: AutoScaleRun
    fullName: Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
    name: AutoScaleRun
    nameWithType: AutoScaleRun
    fullName: Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize
  isExternal: false
  name: Resize
  nameWithType: PoolOperationsExtensions.Resize
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolResizeParameter
  nameWithType: PoolResizeParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolResizeOptions
  nameWithType: PoolResizeOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolResizeHeaders
  nameWithType: PoolResizeHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync
  isExternal: false
  name: ResizeAsync
  nameWithType: PoolOperationsExtensions.ResizeAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PoolResizeHeaders>
  nameWithType: Task<PoolResizeHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders>
  nameWithType.vb: Task(Of PoolResizeHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders)
  name.vb: Task(Of PoolResizeHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders
    name: PoolResizeHeaders
    nameWithType: PoolResizeHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders
    name: PoolResizeHeaders
    nameWithType: PoolResizeHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize
  isExternal: false
  name: StopResize
  nameWithType: PoolOperationsExtensions.StopResize
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolStopResizeOptions
  nameWithType: PoolStopResizeOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolStopResizeHeaders
  nameWithType: PoolStopResizeHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync
  isExternal: false
  name: StopResizeAsync
  nameWithType: PoolOperationsExtensions.StopResizeAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PoolStopResizeHeaders>
  nameWithType: Task<PoolStopResizeHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders>
  nameWithType.vb: Task(Of PoolStopResizeHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders)
  name.vb: Task(Of PoolStopResizeHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders
    name: PoolStopResizeHeaders
    nameWithType: PoolStopResizeHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders
    name: PoolStopResizeHeaders
    nameWithType: PoolStopResizeHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties
  isExternal: false
  name: UpdateProperties
  nameWithType: PoolOperationsExtensions.UpdateProperties
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolUpdatePropertiesParameter
  nameWithType: PoolUpdatePropertiesParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolUpdatePropertiesOptions
  nameWithType: PoolUpdatePropertiesOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolUpdatePropertiesHeaders
  nameWithType: PoolUpdatePropertiesHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync
  isExternal: false
  name: UpdatePropertiesAsync
  nameWithType: PoolOperationsExtensions.UpdatePropertiesAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PoolUpdatePropertiesHeaders>
  nameWithType: Task<PoolUpdatePropertiesHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders>
  nameWithType.vb: Task(Of PoolUpdatePropertiesHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders)
  name.vb: Task(Of PoolUpdatePropertiesHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders
    name: PoolUpdatePropertiesHeaders
    nameWithType: PoolUpdatePropertiesHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders
    name: PoolUpdatePropertiesHeaders
    nameWithType: PoolUpdatePropertiesHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS
  isExternal: false
  name: UpgradeOS
  nameWithType: PoolOperationsExtensions.UpgradeOS
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolUpgradeOSOptions
  nameWithType: PoolUpgradeOSOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolUpgradeOSHeaders
  nameWithType: PoolUpgradeOSHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync
  isExternal: false
  name: UpgradeOSAsync
  nameWithType: PoolOperationsExtensions.UpgradeOSAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PoolUpgradeOSHeaders>
  nameWithType: Task<PoolUpgradeOSHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders>
  nameWithType.vb: Task(Of PoolUpgradeOSHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders)
  name.vb: Task(Of PoolUpgradeOSHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders
    name: PoolUpgradeOSHeaders
    nameWithType: PoolUpgradeOSHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders
    name: PoolUpgradeOSHeaders
    nameWithType: PoolUpgradeOSHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes
  isExternal: false
  name: RemoveNodes
  nameWithType: PoolOperationsExtensions.RemoveNodes
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: NodeRemoveParameter
  nameWithType: NodeRemoveParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolRemoveNodesOptions
  nameWithType: PoolRemoveNodesOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolRemoveNodesHeaders
  nameWithType: PoolRemoveNodesHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync
  isExternal: false
  name: RemoveNodesAsync
  nameWithType: PoolOperationsExtensions.RemoveNodesAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PoolRemoveNodesHeaders>
  nameWithType: Task<PoolRemoveNodesHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders>
  nameWithType.vb: Task(Of PoolRemoveNodesHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders)
  name.vb: Task(Of PoolRemoveNodesHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders
    name: PoolRemoveNodesHeaders
    nameWithType: PoolRemoveNodesHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders
    name: PoolRemoveNodesHeaders
    nameWithType: PoolRemoveNodesHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNext*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNext
  isExternal: false
  name: ListPoolUsageMetricsNext
  nameWithType: PoolOperationsExtensions.ListPoolUsageMetricsNext
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNext
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolListPoolUsageMetricsNextOptions
  nameWithType: PoolListPoolUsageMetricsNextOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNextAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNextAsync
  isExternal: false
  name: ListPoolUsageMetricsNextAsync
  nameWithType: PoolOperationsExtensions.ListPoolUsageMetricsNextAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNextAsync
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext
  isExternal: false
  name: ListNext
  nameWithType: PoolOperationsExtensions.ListNext
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolListNextOptions
  nameWithType: PoolListNextOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions
- uid: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync
  isExternal: false
  name: ListNextAsync
  nameWithType: PoolOperationsExtensions.ListNextAsync
  fullName: Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync
