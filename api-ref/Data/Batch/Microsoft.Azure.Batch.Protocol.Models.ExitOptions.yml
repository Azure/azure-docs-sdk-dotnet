### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.ExitOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.ExitOptions
  id: ExitOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.ExitOptions.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.ExitOptions.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobAction})
  - Microsoft.Azure.Batch.Protocol.Models.ExitOptions.JobAction
  langs:
  - csharp
  - vb
  name: ExitOptions
  nameWithType: ExitOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.ExitOptions
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ExitOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExitOptions
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ExitOptions.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nHow the Batch service should respond to a particular exit condition.\n"
  example: []
  syntax:
    content: public class ExitOptions
    content.vb: Public Class ExitOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.ExitOptions.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.ExitOptions
  langs:
  - csharp
  - vb
  name: ExitOptions()
  nameWithType: ExitOptions.ExitOptions()
  fullName: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.ExitOptions()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ExitOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ExitOptions.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the ExitOptions class.\n"
  example: []
  syntax:
    content: public ExitOptions()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobAction})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.ExitOptions.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobAction})
  id: '#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobAction})'
  parent: Microsoft.Azure.Batch.Protocol.Models.ExitOptions
  langs:
  - csharp
  - vb
  name: ExitOptions(Nullable<JobAction>)
  nameWithType: ExitOptions.ExitOptions(Nullable<JobAction>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.ExitOptions(System.Nullable<Microsoft.Azure.Batch.Protocol.Models.JobAction>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ExitOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ExitOptions.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the ExitOptions class.\n"
  example: []
  syntax:
    content: public ExitOptions(JobAction? jobAction = null)
    content.vb: Public Sub New(jobAction As JobAction? = Nothing)
    parameters:
    - id: jobAction
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobAction}
      description: >-
        An action to take on the job containing

        the task, if the task completes with the given exit condition and

        the job’s onTaskFailed property is 'performexitoptionsjobaction'.

        Possible values include: 'none', 'disable', 'terminate'
  overload: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.#ctor*
  nameWithType.vb: ExitOptions.ExitOptions(Nullable(Of JobAction))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.ExitOptions(System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.JobAction))
  name.vb: ExitOptions(Nullable(Of JobAction))
- uid: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.JobAction
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.ExitOptions.JobAction
  id: JobAction
  parent: Microsoft.Azure.Batch.Protocol.Models.ExitOptions
  langs:
  - csharp
  - vb
  name: JobAction
  nameWithType: ExitOptions.JobAction
  fullName: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.JobAction
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ExitOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobAction
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ExitOptions.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets an action to take on the job containing the task, if\nthe task completes with the given exit condition and the job’s\nonTaskFailed property is 'performexitoptionsjobaction'. Possible\nvalues include: 'none', 'disable', 'terminate'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "jobAction")]

      public JobAction? JobAction { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="jobAction")>

      Public Property JobAction As JobAction?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobAction}
  overload: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.JobAction*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: jobAction
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ExitOptions.#ctor
  isExternal: false
  name: ExitOptions
  nameWithType: ExitOptions.ExitOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.ExitOptions
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobAction}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobAction}
  parent: System
  definition: System.Nullable`1
  name: Nullable<JobAction>
  nameWithType: Nullable<JobAction>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.JobAction>
  nameWithType.vb: Nullable(Of JobAction)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.JobAction)
  name.vb: Nullable(Of JobAction)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobAction
    name: JobAction
    nameWithType: JobAction
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobAction
    name: JobAction
    nameWithType: JobAction
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobAction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.JobAction*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ExitOptions.JobAction
  isExternal: false
  name: JobAction
  nameWithType: ExitOptions.JobAction
  fullName: Microsoft.Azure.Batch.Protocol.Models.ExitOptions.JobAction
