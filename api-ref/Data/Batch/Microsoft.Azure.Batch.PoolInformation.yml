### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.PoolInformation
  commentId: T:Microsoft.Azure.Batch.PoolInformation
  id: PoolInformation
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.PoolInformation.#ctor
  - Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification
  - Microsoft.Azure.Batch.PoolInformation.PoolId
  langs:
  - csharp
  - vb
  name: PoolInformation
  nameWithType: PoolInformation
  fullName: Microsoft.Azure.Batch.PoolInformation
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolInformation.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nSpecifies how a job should be assigned to a pool.\n"
  example: []
  syntax:
    content: 'public class PoolInformation : ITransportObjectProvider<PoolInformation>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class PoolInformation
          Implements ITransportObjectProvider(Of PoolInformation), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.PoolInformation.#ctor
  commentId: M:Microsoft.Azure.Batch.PoolInformation.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.PoolInformation
  langs:
  - csharp
  - vb
  name: PoolInformation()
  nameWithType: PoolInformation.PoolInformation()
  fullName: Microsoft.Azure.Batch.PoolInformation.PoolInformation()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolInformation.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.PoolInformation\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public PoolInformation()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.PoolInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification
  commentId: P:Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification
  id: AutoPoolSpecification
  parent: Microsoft.Azure.Batch.PoolInformation
  langs:
  - csharp
  - vb
  name: AutoPoolSpecification
  nameWithType: PoolInformation.AutoPoolSpecification
  fullName: Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoPoolSpecification
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolInformation.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the properties for the auto pool that will be created.\n"
  remarks: "\nIf this property is set, then <xref href=\"Microsoft.Azure.Batch.PoolInformation.PoolId\" data-throw-if-not-resolved=\"false\"></xref> must be left unset.\n"
  example: []
  syntax:
    content: public AutoPoolSpecification AutoPoolSpecification { get; set; }
    content.vb: Public Property AutoPoolSpecification As AutoPoolSpecification
    parameters: []
    return:
      type: Microsoft.Azure.Batch.AutoPoolSpecification
  overload: Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolInformation.PoolId
  commentId: P:Microsoft.Azure.Batch.PoolInformation.PoolId
  id: PoolId
  parent: Microsoft.Azure.Batch.PoolInformation
  langs:
  - csharp
  - vb
  name: PoolId
  nameWithType: PoolInformation.PoolId
  fullName: Microsoft.Azure.Batch.PoolInformation.PoolId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolInformation.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the name of an existing pool that can be used for running tasks.\n"
  remarks: "\nIf this property is set, then <xref href=\"Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification\" data-throw-if-not-resolved=\"false\"></xref> must be left unset.\n"
  example: []
  syntax:
    content: public string PoolId { get; set; }
    content.vb: Public Property PoolId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.PoolInformation.PoolId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.PoolInformation
  commentId: T:Microsoft.Azure.Batch.PoolInformation
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: PoolInformation
  nameWithType: PoolInformation
  fullName: Microsoft.Azure.Batch.PoolInformation
- uid: Microsoft.Azure.Batch.PoolInformation.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.PoolInformation.#ctor
  isExternal: false
  name: PoolInformation
  nameWithType: PoolInformation.PoolInformation
  fullName: Microsoft.Azure.Batch.PoolInformation.PoolInformation
- uid: Microsoft.Azure.Batch.PoolInformation.PoolId
  commentId: P:Microsoft.Azure.Batch.PoolInformation.PoolId
- uid: Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification*
  commentId: Overload:Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification
  isExternal: false
  name: AutoPoolSpecification
  nameWithType: PoolInformation.AutoPoolSpecification
  fullName: Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification
- uid: Microsoft.Azure.Batch.AutoPoolSpecification
  commentId: T:Microsoft.Azure.Batch.AutoPoolSpecification
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: AutoPoolSpecification
  nameWithType: AutoPoolSpecification
  fullName: Microsoft.Azure.Batch.AutoPoolSpecification
- uid: Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification
  commentId: P:Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification
- uid: Microsoft.Azure.Batch.PoolInformation.PoolId*
  commentId: Overload:Microsoft.Azure.Batch.PoolInformation.PoolId
  isExternal: false
  name: PoolId
  nameWithType: PoolInformation.PoolId
  fullName: Microsoft.Azure.Batch.PoolInformation.PoolId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
