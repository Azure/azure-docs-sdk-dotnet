### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.JobReleaseTask
  commentId: T:Microsoft.Azure.Batch.JobReleaseTask
  id: JobReleaseTask
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.JobReleaseTask.#ctor
  - Microsoft.Azure.Batch.JobReleaseTask.#ctor(System.String)
  - Microsoft.Azure.Batch.JobReleaseTask.CommandLine
  - Microsoft.Azure.Batch.JobReleaseTask.EnvironmentSettings
  - Microsoft.Azure.Batch.JobReleaseTask.Id
  - Microsoft.Azure.Batch.JobReleaseTask.MaxWallClockTime
  - Microsoft.Azure.Batch.JobReleaseTask.ResourceFiles
  - Microsoft.Azure.Batch.JobReleaseTask.RetentionTime
  - Microsoft.Azure.Batch.JobReleaseTask.RunElevated
  langs:
  - csharp
  - vb
  name: JobReleaseTask
  nameWithType: JobReleaseTask
  fullName: Microsoft.Azure.Batch.JobReleaseTask
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobReleaseTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobReleaseTask.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nA Job Release task to run on job completion on any compute node where the job has run.\n"
  example: []
  syntax:
    content: 'public class JobReleaseTask : ITransportObjectProvider<JobReleaseTask>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class JobReleaseTask
          Implements ITransportObjectProvider(Of JobReleaseTask), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.JobReleaseTask.#ctor
  commentId: M:Microsoft.Azure.Batch.JobReleaseTask.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.JobReleaseTask
  langs:
  - csharp
  - vb
  name: JobReleaseTask()
  nameWithType: JobReleaseTask.JobReleaseTask()
  fullName: Microsoft.Azure.Batch.JobReleaseTask.JobReleaseTask()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobReleaseTask.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  syntax:
    content: public JobReleaseTask()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.JobReleaseTask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobReleaseTask.#ctor(System.String)
  commentId: M:Microsoft.Azure.Batch.JobReleaseTask.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.Batch.JobReleaseTask
  langs:
  - csharp
  - vb
  name: JobReleaseTask(String)
  nameWithType: JobReleaseTask.JobReleaseTask(String)
  fullName: Microsoft.Azure.Batch.JobReleaseTask.JobReleaseTask(System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobReleaseTask.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.JobReleaseTask\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public JobReleaseTask(string commandLine)
    content.vb: Public Sub New(commandLine As String)
    parameters:
    - id: commandLine
      type: System.String
      description: The command line of the task.
  overload: Microsoft.Azure.Batch.JobReleaseTask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobReleaseTask.CommandLine
  commentId: P:Microsoft.Azure.Batch.JobReleaseTask.CommandLine
  id: CommandLine
  parent: Microsoft.Azure.Batch.JobReleaseTask
  langs:
  - csharp
  - vb
  name: CommandLine
  nameWithType: JobReleaseTask.CommandLine
  fullName: Microsoft.Azure.Batch.JobReleaseTask.CommandLine
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommandLine
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobReleaseTask.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the command line of the task.\n"
  remarks: "\nThe command line does not run under a shell, and therefore cannot take advantage of shell features such as environment \nvariable expansion. If you want to take advantage of such features, you should invoke the shell in the command \nline, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.\n"
  example: []
  syntax:
    content: public string CommandLine { get; set; }
    content.vb: Public Property CommandLine As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.JobReleaseTask.CommandLine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobReleaseTask.EnvironmentSettings
  commentId: P:Microsoft.Azure.Batch.JobReleaseTask.EnvironmentSettings
  id: EnvironmentSettings
  parent: Microsoft.Azure.Batch.JobReleaseTask
  langs:
  - csharp
  - vb
  name: EnvironmentSettings
  nameWithType: JobReleaseTask.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.JobReleaseTask.EnvironmentSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobReleaseTask.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the collection of EnvironmentSetting instances.\n"
  example: []
  syntax:
    content: public IList<EnvironmentSetting> EnvironmentSettings { get; set; }
    content.vb: Public Property EnvironmentSettings As IList(Of EnvironmentSetting)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.EnvironmentSetting}
  overload: Microsoft.Azure.Batch.JobReleaseTask.EnvironmentSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobReleaseTask.Id
  commentId: P:Microsoft.Azure.Batch.JobReleaseTask.Id
  id: Id
  parent: Microsoft.Azure.Batch.JobReleaseTask
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: JobReleaseTask.Id
  fullName: Microsoft.Azure.Batch.JobReleaseTask.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobReleaseTask.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the id of the task.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.JobReleaseTask.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobReleaseTask.MaxWallClockTime
  commentId: P:Microsoft.Azure.Batch.JobReleaseTask.MaxWallClockTime
  id: MaxWallClockTime
  parent: Microsoft.Azure.Batch.JobReleaseTask
  langs:
  - csharp
  - vb
  name: MaxWallClockTime
  nameWithType: JobReleaseTask.MaxWallClockTime
  fullName: Microsoft.Azure.Batch.JobReleaseTask.MaxWallClockTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxWallClockTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobReleaseTask.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the maximum duration of time for which a task is allowed to run from the time it is created.\n"
  example: []
  syntax:
    content: public TimeSpan? MaxWallClockTime { get; set; }
    content.vb: Public Property MaxWallClockTime As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.JobReleaseTask.MaxWallClockTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobReleaseTask.ResourceFiles
  commentId: P:Microsoft.Azure.Batch.JobReleaseTask.ResourceFiles
  id: ResourceFiles
  parent: Microsoft.Azure.Batch.JobReleaseTask
  langs:
  - csharp
  - vb
  name: ResourceFiles
  nameWithType: JobReleaseTask.ResourceFiles
  fullName: Microsoft.Azure.Batch.JobReleaseTask.ResourceFiles
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceFiles
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobReleaseTask.cs
    startLine: 161
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of files that the Batch service will download to the compute node before running the command \nline.\n"
  example: []
  syntax:
    content: public IList<ResourceFile> ResourceFiles { get; set; }
    content.vb: Public Property ResourceFiles As IList(Of ResourceFile)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.ResourceFile}
  overload: Microsoft.Azure.Batch.JobReleaseTask.ResourceFiles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobReleaseTask.RetentionTime
  commentId: P:Microsoft.Azure.Batch.JobReleaseTask.RetentionTime
  id: RetentionTime
  parent: Microsoft.Azure.Batch.JobReleaseTask
  langs:
  - csharp
  - vb
  name: RetentionTime
  nameWithType: JobReleaseTask.RetentionTime
  fullName: Microsoft.Azure.Batch.JobReleaseTask.RetentionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RetentionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobReleaseTask.cs
    startLine: 174
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the duration of time for which files in the task's working directory are retained, from the time \nit completes execution. After this duration, the task's working directory is reclaimed.\n"
  example: []
  syntax:
    content: public TimeSpan? RetentionTime { get; set; }
    content.vb: Public Property RetentionTime As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.JobReleaseTask.RetentionTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobReleaseTask.RunElevated
  commentId: P:Microsoft.Azure.Batch.JobReleaseTask.RunElevated
  id: RunElevated
  parent: Microsoft.Azure.Batch.JobReleaseTask
  langs:
  - csharp
  - vb
  name: RunElevated
  nameWithType: JobReleaseTask.RunElevated
  fullName: Microsoft.Azure.Batch.JobReleaseTask.RunElevated
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RunElevated
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobReleaseTask.cs
    startLine: 183
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets whether to run the task in elevated mode.\n"
  example: []
  syntax:
    content: public bool ? RunElevated { get; set; }
    content.vb: Public Property RunElevated As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.JobReleaseTask.RunElevated*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.JobReleaseTask.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.JobReleaseTask.#ctor
  isExternal: false
  name: JobReleaseTask
  nameWithType: JobReleaseTask.JobReleaseTask
  fullName: Microsoft.Azure.Batch.JobReleaseTask.JobReleaseTask
- uid: Microsoft.Azure.Batch.JobReleaseTask
  commentId: T:Microsoft.Azure.Batch.JobReleaseTask
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobReleaseTask
  nameWithType: JobReleaseTask
  fullName: Microsoft.Azure.Batch.JobReleaseTask
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.JobReleaseTask.CommandLine*
  commentId: Overload:Microsoft.Azure.Batch.JobReleaseTask.CommandLine
  isExternal: false
  name: CommandLine
  nameWithType: JobReleaseTask.CommandLine
  fullName: Microsoft.Azure.Batch.JobReleaseTask.CommandLine
- uid: Microsoft.Azure.Batch.JobReleaseTask.EnvironmentSettings*
  commentId: Overload:Microsoft.Azure.Batch.JobReleaseTask.EnvironmentSettings
  isExternal: false
  name: EnvironmentSettings
  nameWithType: JobReleaseTask.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.JobReleaseTask.EnvironmentSettings
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.EnvironmentSetting}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.EnvironmentSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EnvironmentSetting>
  nameWithType: IList<EnvironmentSetting>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.EnvironmentSetting>
  nameWithType.vb: IList(Of EnvironmentSetting)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.EnvironmentSetting)
  name.vb: IList(Of EnvironmentSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.EnvironmentSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.EnvironmentSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.JobReleaseTask.Id*
  commentId: Overload:Microsoft.Azure.Batch.JobReleaseTask.Id
  isExternal: false
  name: Id
  nameWithType: JobReleaseTask.Id
  fullName: Microsoft.Azure.Batch.JobReleaseTask.Id
- uid: Microsoft.Azure.Batch.JobReleaseTask.MaxWallClockTime*
  commentId: Overload:Microsoft.Azure.Batch.JobReleaseTask.MaxWallClockTime
  isExternal: false
  name: MaxWallClockTime
  nameWithType: JobReleaseTask.MaxWallClockTime
  fullName: Microsoft.Azure.Batch.JobReleaseTask.MaxWallClockTime
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.JobReleaseTask.ResourceFiles*
  commentId: Overload:Microsoft.Azure.Batch.JobReleaseTask.ResourceFiles
  isExternal: false
  name: ResourceFiles
  nameWithType: JobReleaseTask.ResourceFiles
  fullName: Microsoft.Azure.Batch.JobReleaseTask.ResourceFiles
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.ResourceFile}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.ResourceFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ResourceFile>
  nameWithType: IList<ResourceFile>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.ResourceFile>
  nameWithType.vb: IList(Of ResourceFile)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.ResourceFile)
  name.vb: IList(Of ResourceFile)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.ResourceFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.ResourceFile
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.JobReleaseTask.RetentionTime*
  commentId: Overload:Microsoft.Azure.Batch.JobReleaseTask.RetentionTime
  isExternal: false
  name: RetentionTime
  nameWithType: JobReleaseTask.RetentionTime
  fullName: Microsoft.Azure.Batch.JobReleaseTask.RetentionTime
- uid: Microsoft.Azure.Batch.JobReleaseTask.RunElevated*
  commentId: Overload:Microsoft.Azure.Batch.JobReleaseTask.RunElevated
  isExternal: false
  name: RunElevated
  nameWithType: JobReleaseTask.RunElevated
  fullName: Microsoft.Azure.Batch.JobReleaseTask.RunElevated
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
