### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  id: JobUpdateParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete})
  - Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Constraints
  - Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Metadata
  - Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.OnAllTasksComplete
  - Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.PoolInfo
  - Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Priority
  - Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Validate
  langs:
  - csharp
  - vb
  name: JobUpdateParameter
  nameWithType: JobUpdateParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobUpdateParameter
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nParameters for a CloudJobOperations.Update request.\n"
  example: []
  syntax:
    content: public class JobUpdateParameter
    content.vb: Public Class JobUpdateParameter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  langs:
  - csharp
  - vb
  name: JobUpdateParameter()
  nameWithType: JobUpdateParameter.JobUpdateParameter()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.JobUpdateParameter()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobUpdateParameter class.\n"
  example: []
  syntax:
    content: public JobUpdateParameter()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete})
  id: '#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete})'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  langs:
  - csharp
  - vb
  name: JobUpdateParameter(PoolInformation, Nullable<Int32>, JobConstraints, IList<MetadataItem>, Nullable<OnAllTasksComplete>)
  nameWithType: JobUpdateParameter.JobUpdateParameter(PoolInformation, Nullable<Int32>, JobConstraints, IList<MetadataItem>, Nullable<OnAllTasksComplete>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.JobUpdateParameter(Microsoft.Azure.Batch.Protocol.Models.PoolInformation, System.Nullable<System.Int32>, Microsoft.Azure.Batch.Protocol.Models.JobConstraints, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.MetadataItem>, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobUpdateParameter class.\n"
  example: []
  syntax:
    content: public JobUpdateParameter(PoolInformation poolInfo, int ? priority = null, JobConstraints constraints = null, IList<MetadataItem> metadata = null, OnAllTasksComplete? onAllTasksComplete = null)
    content.vb: Public Sub New(poolInfo As PoolInformation, priority As Integer? = Nothing, constraints As JobConstraints = Nothing, metadata As IList(Of MetadataItem) = Nothing, onAllTasksComplete As OnAllTasksComplete? = Nothing)
    parameters:
    - id: poolInfo
      type: Microsoft.Azure.Batch.Protocol.Models.PoolInformation
      description: >-
        The pool on which the Batch service runs

        the job's tasks.
    - id: priority
      type: System.Nullable{System.Int32}
      description: The priority of the job.
    - id: constraints
      type: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
      description: >-
        The execution constraints for the

        job.
    - id: metadata
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
      description: >-
        A list of name-value pairs associated with

        the job as metadata.
    - id: onAllTasksComplete
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete}
      description: >-
        Specifies an action the Batch

        service should take when all tasks in the job are in the

        completed state. Possible values include: 'noAction',

        'terminateJob'
  overload: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor*
  nameWithType.vb: JobUpdateParameter.JobUpdateParameter(PoolInformation, Nullable(Of Int32), JobConstraints, IList(Of MetadataItem), Nullable(Of OnAllTasksComplete))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.JobUpdateParameter(Microsoft.Azure.Batch.Protocol.Models.PoolInformation, System.Nullable(Of System.Int32), Microsoft.Azure.Batch.Protocol.Models.JobConstraints, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.MetadataItem), System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete))
  name.vb: JobUpdateParameter(PoolInformation, Nullable(Of Int32), JobConstraints, IList(Of MetadataItem), Nullable(Of OnAllTasksComplete))
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Priority
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Priority
  id: Priority
  parent: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: JobUpdateParameter.Priority
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Priority
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Priority
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the priority of the job.\n"
  remarks: "\nPriority values can range from -1000 to 1000, with -1000 being the\nlowest priority and 1000 being the highest priority. If omitted,\nit is set to the default value 0.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "priority")]

      public int ? Priority { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="priority")>

      Public Property Priority As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Priority*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: priority
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Constraints
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Constraints
  id: Constraints
  parent: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: JobUpdateParameter.Constraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Constraints
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Constraints
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the execution constraints for the job.\n"
  remarks: "\nIf omitted, the constraints are cleared.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "constraints")]

      public JobConstraints Constraints { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="constraints")>

      Public Property Constraints As JobConstraints
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  overload: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Constraints*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: constraints
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.PoolInfo
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.PoolInfo
  id: PoolInfo
  parent: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  langs:
  - csharp
  - vb
  name: PoolInfo
  nameWithType: JobUpdateParameter.PoolInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.PoolInfo
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolInfo
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the pool on which the Batch service runs the job's\ntasks.\n"
  remarks: "\nYou may change the pool for a job only when the job is disabled.\nThe Update Job call will fail if you include the poolInfo element\nand the job is not disabled. If you specify an\nautoPoolSpecification specification in the poolInfo, only the\nkeepAlive property can be updated, and then only if the auto pool\nhas a poolLifetimeOption of job.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "poolInfo")]

      public PoolInformation PoolInfo { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="poolInfo")>

      Public Property PoolInfo As PoolInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolInformation
  overload: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.PoolInfo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: poolInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Metadata
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Metadata
  id: Metadata
  parent: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: JobUpdateParameter.Metadata
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Metadata
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Metadata
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of name-value pairs associated with the job as\nmetadata.\n"
  remarks: "\nIf omitted, it takes the default value of an empty list; in\neffect, any existing metadata is deleted.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "metadata")]

      public IList<MetadataItem> Metadata { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="metadata")>

      Public Property Metadata As IList(Of MetadataItem)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Metadata*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: metadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.OnAllTasksComplete
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.OnAllTasksComplete
  id: OnAllTasksComplete
  parent: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  langs:
  - csharp
  - vb
  name: OnAllTasksComplete
  nameWithType: JobUpdateParameter.OnAllTasksComplete
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.OnAllTasksComplete
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OnAllTasksComplete
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets specifies an action the Batch service should take\nwhen all tasks in the job are in the completed state. Possible\nvalues include: 'noAction', 'terminateJob'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "onAllTasksComplete")]

      public OnAllTasksComplete? OnAllTasksComplete { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="onAllTasksComplete")>

      Public Property OnAllTasksComplete As OnAllTasksComplete?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.OnAllTasksComplete*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: onAllTasksComplete
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: JobUpdateParameter.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobUpdateParameter.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor
  isExternal: false
  name: JobUpdateParameter
  nameWithType: JobUpdateParameter.JobUpdateParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.JobUpdateParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolInformation
  nameWithType: PoolInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolInformation
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobConstraints
  nameWithType: JobConstraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MetadataItem>
  nameWithType: IList<MetadataItem>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.MetadataItem>
  nameWithType.vb: IList(Of MetadataItem)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.MetadataItem)
  name.vb: IList(Of MetadataItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete}
  parent: System
  definition: System.Nullable`1
  name: Nullable<OnAllTasksComplete>
  nameWithType: Nullable<OnAllTasksComplete>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete>
  nameWithType.vb: Nullable(Of OnAllTasksComplete)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete)
  name.vb: Nullable(Of OnAllTasksComplete)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete
    name: OnAllTasksComplete
    nameWithType: OnAllTasksComplete
    fullName: Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete
    name: OnAllTasksComplete
    nameWithType: OnAllTasksComplete
    fullName: Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Priority*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Priority
  isExternal: false
  name: Priority
  nameWithType: JobUpdateParameter.Priority
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Priority
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Constraints*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Constraints
  isExternal: false
  name: Constraints
  nameWithType: JobUpdateParameter.Constraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Constraints
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.PoolInfo*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.PoolInfo
  isExternal: false
  name: PoolInfo
  nameWithType: JobUpdateParameter.PoolInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.PoolInfo
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Metadata*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Metadata
  isExternal: false
  name: Metadata
  nameWithType: JobUpdateParameter.Metadata
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Metadata
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.OnAllTasksComplete*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.OnAllTasksComplete
  isExternal: false
  name: OnAllTasksComplete
  nameWithType: JobUpdateParameter.OnAllTasksComplete
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.OnAllTasksComplete
- uid: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Validate
  isExternal: false
  name: Validate
  nameWithType: JobUpdateParameter.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Validate
