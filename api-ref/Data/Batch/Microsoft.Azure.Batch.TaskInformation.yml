### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.TaskInformation
  commentId: T:Microsoft.Azure.Batch.TaskInformation
  id: TaskInformation
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.TaskInformation.ExecutionInformation
  - Microsoft.Azure.Batch.TaskInformation.JobId
  - Microsoft.Azure.Batch.TaskInformation.SubtaskId
  - Microsoft.Azure.Batch.TaskInformation.TaskId
  - Microsoft.Azure.Batch.TaskInformation.TaskState
  - Microsoft.Azure.Batch.TaskInformation.TaskUrl
  langs:
  - csharp
  - vb
  name: TaskInformation
  nameWithType: TaskInformation
  fullName: Microsoft.Azure.Batch.TaskInformation
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskInformation.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nThe compute node's task info class.\n"
  example: []
  syntax:
    content: 'public class TaskInformation : IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class TaskInformation
          Implements IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.TaskInformation.ExecutionInformation
  commentId: P:Microsoft.Azure.Batch.TaskInformation.ExecutionInformation
  id: ExecutionInformation
  parent: Microsoft.Azure.Batch.TaskInformation
  langs:
  - csharp
  - vb
  name: ExecutionInformation
  nameWithType: TaskInformation.ExecutionInformation
  fullName: Microsoft.Azure.Batch.TaskInformation.ExecutionInformation
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExecutionInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskInformation.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the execution information for the task.\n"
  example: []
  syntax:
    content: public TaskExecutionInformation ExecutionInformation { get; }
    content.vb: Public ReadOnly Property ExecutionInformation As TaskExecutionInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.TaskExecutionInformation
  overload: Microsoft.Azure.Batch.TaskInformation.ExecutionInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.TaskInformation.JobId
  commentId: P:Microsoft.Azure.Batch.TaskInformation.JobId
  id: JobId
  parent: Microsoft.Azure.Batch.TaskInformation
  langs:
  - csharp
  - vb
  name: JobId
  nameWithType: TaskInformation.JobId
  fullName: Microsoft.Azure.Batch.TaskInformation.JobId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskInformation.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the job id.\n"
  example: []
  syntax:
    content: public string JobId { get; }
    content.vb: Public ReadOnly Property JobId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.TaskInformation.JobId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.TaskInformation.SubtaskId
  commentId: P:Microsoft.Azure.Batch.TaskInformation.SubtaskId
  id: SubtaskId
  parent: Microsoft.Azure.Batch.TaskInformation
  langs:
  - csharp
  - vb
  name: SubtaskId
  nameWithType: TaskInformation.SubtaskId
  fullName: Microsoft.Azure.Batch.TaskInformation.SubtaskId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubtaskId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskInformation.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the subtask id.\n"
  example: []
  syntax:
    content: public int ? SubtaskId { get; }
    content.vb: Public ReadOnly Property SubtaskId As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.TaskInformation.SubtaskId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.TaskInformation.TaskId
  commentId: P:Microsoft.Azure.Batch.TaskInformation.TaskId
  id: TaskId
  parent: Microsoft.Azure.Batch.TaskInformation
  langs:
  - csharp
  - vb
  name: TaskId
  nameWithType: TaskInformation.TaskId
  fullName: Microsoft.Azure.Batch.TaskInformation.TaskId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskInformation.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the task id.\n"
  example: []
  syntax:
    content: public string TaskId { get; }
    content.vb: Public ReadOnly Property TaskId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.TaskInformation.TaskId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.TaskInformation.TaskState
  commentId: P:Microsoft.Azure.Batch.TaskInformation.TaskState
  id: TaskState
  parent: Microsoft.Azure.Batch.TaskInformation
  langs:
  - csharp
  - vb
  name: TaskState
  nameWithType: TaskInformation.TaskState
  fullName: Microsoft.Azure.Batch.TaskInformation.TaskState
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskState
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskInformation.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the task state.\n"
  example: []
  syntax:
    content: public TaskState TaskState { get; }
    content.vb: Public ReadOnly Property TaskState As TaskState
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Common.TaskState
  overload: Microsoft.Azure.Batch.TaskInformation.TaskState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.TaskInformation.TaskUrl
  commentId: P:Microsoft.Azure.Batch.TaskInformation.TaskUrl
  id: TaskUrl
  parent: Microsoft.Azure.Batch.TaskInformation
  langs:
  - csharp
  - vb
  name: TaskUrl
  nameWithType: TaskInformation.TaskUrl
  fullName: Microsoft.Azure.Batch.TaskInformation.TaskUrl
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskUrl
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskInformation.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the task URL.\n"
  example: []
  syntax:
    content: public string TaskUrl { get; }
    content.vb: Public ReadOnly Property TaskUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.TaskInformation.TaskUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.TaskInformation.ExecutionInformation*
  commentId: Overload:Microsoft.Azure.Batch.TaskInformation.ExecutionInformation
  isExternal: false
  name: ExecutionInformation
  nameWithType: TaskInformation.ExecutionInformation
  fullName: Microsoft.Azure.Batch.TaskInformation.ExecutionInformation
- uid: Microsoft.Azure.Batch.TaskExecutionInformation
  commentId: T:Microsoft.Azure.Batch.TaskExecutionInformation
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: TaskExecutionInformation
  nameWithType: TaskExecutionInformation
  fullName: Microsoft.Azure.Batch.TaskExecutionInformation
- uid: Microsoft.Azure.Batch.TaskInformation.JobId*
  commentId: Overload:Microsoft.Azure.Batch.TaskInformation.JobId
  isExternal: false
  name: JobId
  nameWithType: TaskInformation.JobId
  fullName: Microsoft.Azure.Batch.TaskInformation.JobId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.TaskInformation.SubtaskId*
  commentId: Overload:Microsoft.Azure.Batch.TaskInformation.SubtaskId
  isExternal: false
  name: SubtaskId
  nameWithType: TaskInformation.SubtaskId
  fullName: Microsoft.Azure.Batch.TaskInformation.SubtaskId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.TaskInformation.TaskId*
  commentId: Overload:Microsoft.Azure.Batch.TaskInformation.TaskId
  isExternal: false
  name: TaskId
  nameWithType: TaskInformation.TaskId
  fullName: Microsoft.Azure.Batch.TaskInformation.TaskId
- uid: Microsoft.Azure.Batch.TaskInformation.TaskState*
  commentId: Overload:Microsoft.Azure.Batch.TaskInformation.TaskState
  isExternal: false
  name: TaskState
  nameWithType: TaskInformation.TaskState
  fullName: Microsoft.Azure.Batch.TaskInformation.TaskState
- uid: Microsoft.Azure.Batch.Common.TaskState
  commentId: T:Microsoft.Azure.Batch.Common.TaskState
  parent: Microsoft.Azure.Batch.Common
  isExternal: false
  name: TaskState
  nameWithType: TaskState
  fullName: Microsoft.Azure.Batch.Common.TaskState
- uid: Microsoft.Azure.Batch.Common
  commentId: N:Microsoft.Azure.Batch.Common
  isExternal: false
  name: Microsoft.Azure.Batch.Common
  nameWithType: Microsoft.Azure.Batch.Common
  fullName: Microsoft.Azure.Batch.Common
- uid: Microsoft.Azure.Batch.TaskInformation.TaskUrl*
  commentId: Overload:Microsoft.Azure.Batch.TaskInformation.TaskUrl
  isExternal: false
  name: TaskUrl
  nameWithType: TaskInformation.TaskUrl
  fullName: Microsoft.Azure.Batch.TaskInformation.TaskUrl
