### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.JobSpecification
  commentId: T:Microsoft.Azure.Batch.JobSpecification
  id: JobSpecification
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.JobSpecification.#ctor
  - Microsoft.Azure.Batch.JobSpecification.#ctor(Microsoft.Azure.Batch.PoolInformation)
  - Microsoft.Azure.Batch.JobSpecification.CommonEnvironmentSettings
  - Microsoft.Azure.Batch.JobSpecification.Constraints
  - Microsoft.Azure.Batch.JobSpecification.DisplayName
  - Microsoft.Azure.Batch.JobSpecification.JobManagerTask
  - Microsoft.Azure.Batch.JobSpecification.JobPreparationTask
  - Microsoft.Azure.Batch.JobSpecification.JobReleaseTask
  - Microsoft.Azure.Batch.JobSpecification.Metadata
  - Microsoft.Azure.Batch.JobSpecification.PoolInformation
  - Microsoft.Azure.Batch.JobSpecification.Priority
  - Microsoft.Azure.Batch.JobSpecification.UsesTaskDependencies
  langs:
  - csharp
  - vb
  name: JobSpecification
  nameWithType: JobSpecification
  fullName: Microsoft.Azure.Batch.JobSpecification
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobSpecification
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobSpecification.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nThe <xref href=\"Microsoft.Azure.Batch.CloudJobSchedule.JobSpecification\" data-throw-if-not-resolved=\"false\"></xref> of a <xref href=\"Microsoft.Azure.Batch.CloudJobSchedule\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class JobSpecification : ITransportObjectProvider<JobSpecification>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class JobSpecification
          Implements ITransportObjectProvider(Of JobSpecification), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.JobSpecification.#ctor
  commentId: M:Microsoft.Azure.Batch.JobSpecification.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.JobSpecification
  langs:
  - csharp
  - vb
  name: JobSpecification()
  nameWithType: JobSpecification.JobSpecification()
  fullName: Microsoft.Azure.Batch.JobSpecification.JobSpecification()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobSpecification.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  syntax:
    content: public JobSpecification()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.JobSpecification.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobSpecification.#ctor(Microsoft.Azure.Batch.PoolInformation)
  commentId: M:Microsoft.Azure.Batch.JobSpecification.#ctor(Microsoft.Azure.Batch.PoolInformation)
  id: '#ctor(Microsoft.Azure.Batch.PoolInformation)'
  parent: Microsoft.Azure.Batch.JobSpecification
  langs:
  - csharp
  - vb
  name: JobSpecification(PoolInformation)
  nameWithType: JobSpecification.JobSpecification(PoolInformation)
  fullName: Microsoft.Azure.Batch.JobSpecification.JobSpecification(Microsoft.Azure.Batch.PoolInformation)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobSpecification.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.JobSpecification\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public JobSpecification(PoolInformation poolInformation)
    content.vb: Public Sub New(poolInformation As PoolInformation)
    parameters:
    - id: poolInformation
      type: Microsoft.Azure.Batch.PoolInformation
      description: The pool on which the Batch service runs the tasks of jobs created via this <xref href="Microsoft.Azure.Batch.JobSpecification" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.JobSpecification.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobSpecification.CommonEnvironmentSettings
  commentId: P:Microsoft.Azure.Batch.JobSpecification.CommonEnvironmentSettings
  id: CommonEnvironmentSettings
  parent: Microsoft.Azure.Batch.JobSpecification
  langs:
  - csharp
  - vb
  name: CommonEnvironmentSettings
  nameWithType: JobSpecification.CommonEnvironmentSettings
  fullName: Microsoft.Azure.Batch.JobSpecification.CommonEnvironmentSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommonEnvironmentSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobSpecification.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of common environment variable settings.\n"
  remarks: "\nThese environment variables are set for all tasks in jobs created under this <xref href=\"Microsoft.Azure.Batch.CloudJobSchedule\" data-throw-if-not-resolved=\"false\"></xref> (including \nthe Job Manager, Job Preparation and Job Release tasks).\n"
  example: []
  syntax:
    content: public IList<EnvironmentSetting> CommonEnvironmentSettings { get; set; }
    content.vb: Public Property CommonEnvironmentSettings As IList(Of EnvironmentSetting)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.EnvironmentSetting}
  overload: Microsoft.Azure.Batch.JobSpecification.CommonEnvironmentSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobSpecification.Constraints
  commentId: P:Microsoft.Azure.Batch.JobSpecification.Constraints
  id: Constraints
  parent: Microsoft.Azure.Batch.JobSpecification
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: JobSpecification.Constraints
  fullName: Microsoft.Azure.Batch.JobSpecification.Constraints
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Constraints
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobSpecification.cs
    startLine: 150
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the execution constraints for jobs created via this <xref href=\"Microsoft.Azure.Batch.JobSpecification\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public JobConstraints Constraints { get; set; }
    content.vb: Public Property Constraints As JobConstraints
    parameters: []
    return:
      type: Microsoft.Azure.Batch.JobConstraints
  overload: Microsoft.Azure.Batch.JobSpecification.Constraints*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobSpecification.DisplayName
  commentId: P:Microsoft.Azure.Batch.JobSpecification.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Batch.JobSpecification
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: JobSpecification.DisplayName
  fullName: Microsoft.Azure.Batch.JobSpecification.DisplayName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobSpecification.cs
    startLine: 159
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a display name for all jobs created via this <xref href=\"Microsoft.Azure.Batch.JobSpecification\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    content.vb: Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.JobSpecification.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobSpecification.JobManagerTask
  commentId: P:Microsoft.Azure.Batch.JobSpecification.JobManagerTask
  id: JobManagerTask
  parent: Microsoft.Azure.Batch.JobSpecification
  langs:
  - csharp
  - vb
  name: JobManagerTask
  nameWithType: JobSpecification.JobManagerTask
  fullName: Microsoft.Azure.Batch.JobSpecification.JobManagerTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobManagerTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobSpecification.cs
    startLine: 168
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets details of a Job Manager task to be launched when a job is created via this <xref href=\"Microsoft.Azure.Batch.JobSpecification\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public JobManagerTask JobManagerTask { get; set; }
    content.vb: Public Property JobManagerTask As JobManagerTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.JobManagerTask
  overload: Microsoft.Azure.Batch.JobSpecification.JobManagerTask*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobSpecification.JobPreparationTask
  commentId: P:Microsoft.Azure.Batch.JobSpecification.JobPreparationTask
  id: JobPreparationTask
  parent: Microsoft.Azure.Batch.JobSpecification
  langs:
  - csharp
  - vb
  name: JobPreparationTask
  nameWithType: JobSpecification.JobPreparationTask
  fullName: Microsoft.Azure.Batch.JobSpecification.JobPreparationTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobPreparationTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobSpecification.cs
    startLine: 181
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the Job Preparation task for jobs created via this <xref href=\"Microsoft.Azure.Batch.JobSpecification\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe Batch service will run the Job Preparation task on a compute node before starting any tasks of that job on \nthat compute node.\n"
  example: []
  syntax:
    content: public JobPreparationTask JobPreparationTask { get; set; }
    content.vb: Public Property JobPreparationTask As JobPreparationTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.JobPreparationTask
  overload: Microsoft.Azure.Batch.JobSpecification.JobPreparationTask*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobSpecification.JobReleaseTask
  commentId: P:Microsoft.Azure.Batch.JobSpecification.JobReleaseTask
  id: JobReleaseTask
  parent: Microsoft.Azure.Batch.JobSpecification
  langs:
  - csharp
  - vb
  name: JobReleaseTask
  nameWithType: JobSpecification.JobReleaseTask
  fullName: Microsoft.Azure.Batch.JobSpecification.JobReleaseTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobReleaseTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobSpecification.cs
    startLine: 194
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the Job Release task for jobs created via this <xref href=\"Microsoft.Azure.Batch.JobSpecification\" data-throw-if-not-resolved=\"false\"></xref>. \n"
  remarks: "\nThe Batch service runs the Job Release task when the job ends, on each compute node where any task of the job \nhas run.\n"
  example: []
  syntax:
    content: public JobReleaseTask JobReleaseTask { get; set; }
    content.vb: Public Property JobReleaseTask As JobReleaseTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.JobReleaseTask
  overload: Microsoft.Azure.Batch.JobSpecification.JobReleaseTask*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobSpecification.Metadata
  commentId: P:Microsoft.Azure.Batch.JobSpecification.Metadata
  id: Metadata
  parent: Microsoft.Azure.Batch.JobSpecification
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: JobSpecification.Metadata
  fullName: Microsoft.Azure.Batch.JobSpecification.Metadata
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Metadata
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobSpecification.cs
    startLine: 204
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of name-value pairs associated with jobs created via this <xref href=\"Microsoft.Azure.Batch.JobSpecification\" data-throw-if-not-resolved=\"false\"></xref> \nas metadata.\n"
  example: []
  syntax:
    content: public IList<MetadataItem> Metadata { get; set; }
    content.vb: Public Property Metadata As IList(Of MetadataItem)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.MetadataItem}
  overload: Microsoft.Azure.Batch.JobSpecification.Metadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobSpecification.PoolInformation
  commentId: P:Microsoft.Azure.Batch.JobSpecification.PoolInformation
  id: PoolInformation
  parent: Microsoft.Azure.Batch.JobSpecification
  langs:
  - csharp
  - vb
  name: PoolInformation
  nameWithType: JobSpecification.PoolInformation
  fullName: Microsoft.Azure.Batch.JobSpecification.PoolInformation
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobSpecification.cs
    startLine: 216
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the pool on which the Batch service runs the tasks of jobs created via this <xref href=\"Microsoft.Azure.Batch.JobSpecification\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public PoolInformation PoolInformation { get; set; }
    content.vb: Public Property PoolInformation As PoolInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.PoolInformation
  overload: Microsoft.Azure.Batch.JobSpecification.PoolInformation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobSpecification.Priority
  commentId: P:Microsoft.Azure.Batch.JobSpecification.Priority
  id: Priority
  parent: Microsoft.Azure.Batch.JobSpecification
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: JobSpecification.Priority
  fullName: Microsoft.Azure.Batch.JobSpecification.Priority
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Priority
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobSpecification.cs
    startLine: 229
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the priority of jobs created via this <xref href=\"Microsoft.Azure.Batch.JobSpecification\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nPriority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest \npriority.\n"
  example: []
  syntax:
    content: public int ? Priority { get; set; }
    content.vb: Public Property Priority As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.JobSpecification.Priority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobSpecification.UsesTaskDependencies
  commentId: P:Microsoft.Azure.Batch.JobSpecification.UsesTaskDependencies
  id: UsesTaskDependencies
  parent: Microsoft.Azure.Batch.JobSpecification
  langs:
  - csharp
  - vb
  name: UsesTaskDependencies
  nameWithType: JobSpecification.UsesTaskDependencies
  fullName: Microsoft.Azure.Batch.JobSpecification.UsesTaskDependencies
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UsesTaskDependencies
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobSpecification.cs
    startLine: 242
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets whether tasks in jobs created under this <xref href=\"Microsoft.Azure.Batch.CloudJobSchedule\" data-throw-if-not-resolved=\"false\"></xref> can define dependencies \non each other.\n"
  remarks: "\nThe default value is false.\n"
  example: []
  syntax:
    content: public bool ? UsesTaskDependencies { get; set; }
    content.vb: Public Property UsesTaskDependencies As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.JobSpecification.UsesTaskDependencies*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.CloudJobSchedule.JobSpecification
  commentId: P:Microsoft.Azure.Batch.CloudJobSchedule.JobSpecification
- uid: Microsoft.Azure.Batch.CloudJobSchedule
  commentId: T:Microsoft.Azure.Batch.CloudJobSchedule
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudJobSchedule
  nameWithType: CloudJobSchedule
  fullName: Microsoft.Azure.Batch.CloudJobSchedule
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.JobSpecification.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.JobSpecification.#ctor
  isExternal: false
  name: JobSpecification
  nameWithType: JobSpecification.JobSpecification
  fullName: Microsoft.Azure.Batch.JobSpecification.JobSpecification
- uid: Microsoft.Azure.Batch.JobSpecification
  commentId: T:Microsoft.Azure.Batch.JobSpecification
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobSpecification
  nameWithType: JobSpecification
  fullName: Microsoft.Azure.Batch.JobSpecification
- uid: Microsoft.Azure.Batch.PoolInformation
  commentId: T:Microsoft.Azure.Batch.PoolInformation
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: PoolInformation
  nameWithType: PoolInformation
  fullName: Microsoft.Azure.Batch.PoolInformation
- uid: Microsoft.Azure.Batch.JobSpecification.CommonEnvironmentSettings*
  commentId: Overload:Microsoft.Azure.Batch.JobSpecification.CommonEnvironmentSettings
  isExternal: false
  name: CommonEnvironmentSettings
  nameWithType: JobSpecification.CommonEnvironmentSettings
  fullName: Microsoft.Azure.Batch.JobSpecification.CommonEnvironmentSettings
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.EnvironmentSetting}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.EnvironmentSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EnvironmentSetting>
  nameWithType: IList<EnvironmentSetting>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.EnvironmentSetting>
  nameWithType.vb: IList(Of EnvironmentSetting)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.EnvironmentSetting)
  name.vb: IList(Of EnvironmentSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.EnvironmentSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.EnvironmentSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.JobSpecification.Constraints*
  commentId: Overload:Microsoft.Azure.Batch.JobSpecification.Constraints
  isExternal: false
  name: Constraints
  nameWithType: JobSpecification.Constraints
  fullName: Microsoft.Azure.Batch.JobSpecification.Constraints
- uid: Microsoft.Azure.Batch.JobConstraints
  commentId: T:Microsoft.Azure.Batch.JobConstraints
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobConstraints
  nameWithType: JobConstraints
  fullName: Microsoft.Azure.Batch.JobConstraints
- uid: Microsoft.Azure.Batch.JobSpecification.DisplayName*
  commentId: Overload:Microsoft.Azure.Batch.JobSpecification.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: JobSpecification.DisplayName
  fullName: Microsoft.Azure.Batch.JobSpecification.DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.JobSpecification.JobManagerTask*
  commentId: Overload:Microsoft.Azure.Batch.JobSpecification.JobManagerTask
  isExternal: false
  name: JobManagerTask
  nameWithType: JobSpecification.JobManagerTask
  fullName: Microsoft.Azure.Batch.JobSpecification.JobManagerTask
- uid: Microsoft.Azure.Batch.JobManagerTask
  commentId: T:Microsoft.Azure.Batch.JobManagerTask
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobManagerTask
  nameWithType: JobManagerTask
  fullName: Microsoft.Azure.Batch.JobManagerTask
- uid: Microsoft.Azure.Batch.JobSpecification.JobPreparationTask*
  commentId: Overload:Microsoft.Azure.Batch.JobSpecification.JobPreparationTask
  isExternal: false
  name: JobPreparationTask
  nameWithType: JobSpecification.JobPreparationTask
  fullName: Microsoft.Azure.Batch.JobSpecification.JobPreparationTask
- uid: Microsoft.Azure.Batch.JobPreparationTask
  commentId: T:Microsoft.Azure.Batch.JobPreparationTask
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobPreparationTask
  nameWithType: JobPreparationTask
  fullName: Microsoft.Azure.Batch.JobPreparationTask
- uid: Microsoft.Azure.Batch.JobSpecification.JobReleaseTask*
  commentId: Overload:Microsoft.Azure.Batch.JobSpecification.JobReleaseTask
  isExternal: false
  name: JobReleaseTask
  nameWithType: JobSpecification.JobReleaseTask
  fullName: Microsoft.Azure.Batch.JobSpecification.JobReleaseTask
- uid: Microsoft.Azure.Batch.JobReleaseTask
  commentId: T:Microsoft.Azure.Batch.JobReleaseTask
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobReleaseTask
  nameWithType: JobReleaseTask
  fullName: Microsoft.Azure.Batch.JobReleaseTask
- uid: Microsoft.Azure.Batch.JobSpecification.Metadata*
  commentId: Overload:Microsoft.Azure.Batch.JobSpecification.Metadata
  isExternal: false
  name: Metadata
  nameWithType: JobSpecification.Metadata
  fullName: Microsoft.Azure.Batch.JobSpecification.Metadata
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.MetadataItem}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.MetadataItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MetadataItem>
  nameWithType: IList<MetadataItem>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.MetadataItem>
  nameWithType.vb: IList(Of MetadataItem)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.MetadataItem)
  name.vb: IList(Of MetadataItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.MetadataItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.MetadataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.JobSpecification.PoolInformation*
  commentId: Overload:Microsoft.Azure.Batch.JobSpecification.PoolInformation
  isExternal: false
  name: PoolInformation
  nameWithType: JobSpecification.PoolInformation
  fullName: Microsoft.Azure.Batch.JobSpecification.PoolInformation
- uid: Microsoft.Azure.Batch.JobSpecification.Priority*
  commentId: Overload:Microsoft.Azure.Batch.JobSpecification.Priority
  isExternal: false
  name: Priority
  nameWithType: JobSpecification.Priority
  fullName: Microsoft.Azure.Batch.JobSpecification.Priority
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.JobSpecification.UsesTaskDependencies*
  commentId: Overload:Microsoft.Azure.Batch.JobSpecification.UsesTaskDependencies
  isExternal: false
  name: UsesTaskDependencies
  nameWithType: JobSpecification.UsesTaskDependencies
  fullName: Microsoft.Azure.Batch.JobSpecification.UsesTaskDependencies
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
