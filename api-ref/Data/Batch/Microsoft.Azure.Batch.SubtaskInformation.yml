### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.SubtaskInformation
  commentId: T:Microsoft.Azure.Batch.SubtaskInformation
  id: SubtaskInformation
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.SubtaskInformation.ComputeNodeInformation
  - Microsoft.Azure.Batch.SubtaskInformation.EndTime
  - Microsoft.Azure.Batch.SubtaskInformation.ExitCode
  - Microsoft.Azure.Batch.SubtaskInformation.Id
  - Microsoft.Azure.Batch.SubtaskInformation.PreviousState
  - Microsoft.Azure.Batch.SubtaskInformation.PreviousStateTransitionTime
  - Microsoft.Azure.Batch.SubtaskInformation.SchedulingError
  - Microsoft.Azure.Batch.SubtaskInformation.StartTime
  - Microsoft.Azure.Batch.SubtaskInformation.State
  - Microsoft.Azure.Batch.SubtaskInformation.StateTransitionTime
  langs:
  - csharp
  - vb
  name: SubtaskInformation
  nameWithType: SubtaskInformation
  fullName: Microsoft.Azure.Batch.SubtaskInformation
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubtaskInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/SubtaskInformation.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInformation about an Azure Batch subtask.\n"
  example: []
  syntax:
    content: 'public class SubtaskInformation : IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class SubtaskInformation
          Implements IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.SubtaskInformation.ComputeNodeInformation
  commentId: P:Microsoft.Azure.Batch.SubtaskInformation.ComputeNodeInformation
  id: ComputeNodeInformation
  parent: Microsoft.Azure.Batch.SubtaskInformation
  langs:
  - csharp
  - vb
  name: ComputeNodeInformation
  nameWithType: SubtaskInformation.ComputeNodeInformation
  fullName: Microsoft.Azure.Batch.SubtaskInformation.ComputeNodeInformation
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ComputeNodeInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/SubtaskInformation.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the information about the compute node on which the subtask ran.\n"
  example: []
  syntax:
    content: public ComputeNodeInformation ComputeNodeInformation { get; }
    content.vb: Public ReadOnly Property ComputeNodeInformation As ComputeNodeInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.ComputeNodeInformation
  overload: Microsoft.Azure.Batch.SubtaskInformation.ComputeNodeInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.SubtaskInformation.EndTime
  commentId: P:Microsoft.Azure.Batch.SubtaskInformation.EndTime
  id: EndTime
  parent: Microsoft.Azure.Batch.SubtaskInformation
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: SubtaskInformation.EndTime
  fullName: Microsoft.Azure.Batch.SubtaskInformation.EndTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/SubtaskInformation.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the subtask completed. This property is set only if the subtask is in the Completed state.\n"
  example: []
  syntax:
    content: public DateTime? EndTime { get; }
    content.vb: Public ReadOnly Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.SubtaskInformation.EndTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.SubtaskInformation.ExitCode
  commentId: P:Microsoft.Azure.Batch.SubtaskInformation.ExitCode
  id: ExitCode
  parent: Microsoft.Azure.Batch.SubtaskInformation
  langs:
  - csharp
  - vb
  name: ExitCode
  nameWithType: SubtaskInformation.ExitCode
  fullName: Microsoft.Azure.Batch.SubtaskInformation.ExitCode
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExitCode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/SubtaskInformation.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the exit code of the program specified on the subtask command line.\n"
  remarks: "\nThis property is only returned if the subtask is in the <xref href=\"Microsoft.Azure.Batch.Common.TaskState.Completed\" data-throw-if-not-resolved=\"false\"></xref> state. The exit \ncode for a process reflects the specific convention implemented by the application developer for that process. \nIf you use the exit code value to make decisions in your code, be sure that you know the exit code convention \nused by the application process. Note that the exit code may also be generated by the compute node operating \nsystem, such as when a process is forcibly terminated.\n"
  example: []
  syntax:
    content: public int ? ExitCode { get; }
    content.vb: Public ReadOnly Property ExitCode As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.SubtaskInformation.ExitCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.SubtaskInformation.Id
  commentId: P:Microsoft.Azure.Batch.SubtaskInformation.Id
  id: Id
  parent: Microsoft.Azure.Batch.SubtaskInformation
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SubtaskInformation.Id
  fullName: Microsoft.Azure.Batch.SubtaskInformation.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/SubtaskInformation.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the id of the subtask.\n"
  example: []
  syntax:
    content: public int ? Id { get; }
    content.vb: Public ReadOnly Property Id As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.SubtaskInformation.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.SubtaskInformation.PreviousState
  commentId: P:Microsoft.Azure.Batch.SubtaskInformation.PreviousState
  id: PreviousState
  parent: Microsoft.Azure.Batch.SubtaskInformation
  langs:
  - csharp
  - vb
  name: PreviousState
  nameWithType: SubtaskInformation.PreviousState
  fullName: Microsoft.Azure.Batch.SubtaskInformation.PreviousState
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreviousState
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/SubtaskInformation.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the previous state of the subtask. This property is not set if the subtask is in its initial active state.\n"
  example: []
  syntax:
    content: public TaskState? PreviousState { get; }
    content.vb: Public ReadOnly Property PreviousState As TaskState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.TaskState}
  overload: Microsoft.Azure.Batch.SubtaskInformation.PreviousState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.SubtaskInformation.PreviousStateTransitionTime
  commentId: P:Microsoft.Azure.Batch.SubtaskInformation.PreviousStateTransitionTime
  id: PreviousStateTransitionTime
  parent: Microsoft.Azure.Batch.SubtaskInformation
  langs:
  - csharp
  - vb
  name: PreviousStateTransitionTime
  nameWithType: SubtaskInformation.PreviousStateTransitionTime
  fullName: Microsoft.Azure.Batch.SubtaskInformation.PreviousStateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreviousStateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/SubtaskInformation.cs
    startLine: 117
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the subtask entered its previous state. This property is not set if the subtask is in \nits initial active state.\n"
  example: []
  syntax:
    content: public DateTime? PreviousStateTransitionTime { get; }
    content.vb: Public ReadOnly Property PreviousStateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.SubtaskInformation.PreviousStateTransitionTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.SubtaskInformation.SchedulingError
  commentId: P:Microsoft.Azure.Batch.SubtaskInformation.SchedulingError
  id: SchedulingError
  parent: Microsoft.Azure.Batch.SubtaskInformation
  langs:
  - csharp
  - vb
  name: SchedulingError
  nameWithType: SubtaskInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.SubtaskInformation.SchedulingError
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SchedulingError
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/SubtaskInformation.cs
    startLine: 125
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the details of any error encountered scheduling the subtask.\n"
  example: []
  syntax:
    content: public TaskSchedulingError SchedulingError { get; }
    content.vb: Public ReadOnly Property SchedulingError As TaskSchedulingError
    parameters: []
    return:
      type: Microsoft.Azure.Batch.TaskSchedulingError
  overload: Microsoft.Azure.Batch.SubtaskInformation.SchedulingError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.SubtaskInformation.StartTime
  commentId: P:Microsoft.Azure.Batch.SubtaskInformation.StartTime
  id: StartTime
  parent: Microsoft.Azure.Batch.SubtaskInformation
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: SubtaskInformation.StartTime
  fullName: Microsoft.Azure.Batch.SubtaskInformation.StartTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/SubtaskInformation.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the subtask started running. If the subtask has been restarted or retried, this is the \nmost recent time at which the subtask started running.\n"
  example: []
  syntax:
    content: public DateTime? StartTime { get; }
    content.vb: Public ReadOnly Property StartTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.SubtaskInformation.StartTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.SubtaskInformation.State
  commentId: P:Microsoft.Azure.Batch.SubtaskInformation.State
  id: State
  parent: Microsoft.Azure.Batch.SubtaskInformation
  langs:
  - csharp
  - vb
  name: State
  nameWithType: SubtaskInformation.State
  fullName: Microsoft.Azure.Batch.SubtaskInformation.State
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/SubtaskInformation.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the current state of the subtask.\n"
  example: []
  syntax:
    content: public TaskState? State { get; }
    content.vb: Public ReadOnly Property State As TaskState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.TaskState}
  overload: Microsoft.Azure.Batch.SubtaskInformation.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.SubtaskInformation.StateTransitionTime
  commentId: P:Microsoft.Azure.Batch.SubtaskInformation.StateTransitionTime
  id: StateTransitionTime
  parent: Microsoft.Azure.Batch.SubtaskInformation
  langs:
  - csharp
  - vb
  name: StateTransitionTime
  nameWithType: SubtaskInformation.StateTransitionTime
  fullName: Microsoft.Azure.Batch.SubtaskInformation.StateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/SubtaskInformation.cs
    startLine: 150
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the subtask entered its current state.\n"
  example: []
  syntax:
    content: public DateTime? StateTransitionTime { get; }
    content.vb: Public ReadOnly Property StateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.SubtaskInformation.StateTransitionTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.SubtaskInformation.ComputeNodeInformation*
  commentId: Overload:Microsoft.Azure.Batch.SubtaskInformation.ComputeNodeInformation
  isExternal: false
  name: ComputeNodeInformation
  nameWithType: SubtaskInformation.ComputeNodeInformation
  fullName: Microsoft.Azure.Batch.SubtaskInformation.ComputeNodeInformation
- uid: Microsoft.Azure.Batch.ComputeNodeInformation
  commentId: T:Microsoft.Azure.Batch.ComputeNodeInformation
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ComputeNodeInformation
  nameWithType: ComputeNodeInformation
  fullName: Microsoft.Azure.Batch.ComputeNodeInformation
- uid: Microsoft.Azure.Batch.SubtaskInformation.EndTime*
  commentId: Overload:Microsoft.Azure.Batch.SubtaskInformation.EndTime
  isExternal: false
  name: EndTime
  nameWithType: SubtaskInformation.EndTime
  fullName: Microsoft.Azure.Batch.SubtaskInformation.EndTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Common.TaskState.Completed
  commentId: F:Microsoft.Azure.Batch.Common.TaskState.Completed
- uid: Microsoft.Azure.Batch.SubtaskInformation.ExitCode*
  commentId: Overload:Microsoft.Azure.Batch.SubtaskInformation.ExitCode
  isExternal: false
  name: ExitCode
  nameWithType: SubtaskInformation.ExitCode
  fullName: Microsoft.Azure.Batch.SubtaskInformation.ExitCode
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.SubtaskInformation.Id*
  commentId: Overload:Microsoft.Azure.Batch.SubtaskInformation.Id
  isExternal: false
  name: Id
  nameWithType: SubtaskInformation.Id
  fullName: Microsoft.Azure.Batch.SubtaskInformation.Id
- uid: Microsoft.Azure.Batch.SubtaskInformation.PreviousState*
  commentId: Overload:Microsoft.Azure.Batch.SubtaskInformation.PreviousState
  isExternal: false
  name: PreviousState
  nameWithType: SubtaskInformation.PreviousState
  fullName: Microsoft.Azure.Batch.SubtaskInformation.PreviousState
- uid: System.Nullable{Microsoft.Azure.Batch.Common.TaskState}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.TaskState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TaskState>
  nameWithType: Nullable<TaskState>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.TaskState>
  nameWithType.vb: Nullable(Of TaskState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.TaskState)
  name.vb: Nullable(Of TaskState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.TaskState
    name: TaskState
    nameWithType: TaskState
    fullName: Microsoft.Azure.Batch.Common.TaskState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.TaskState
    name: TaskState
    nameWithType: TaskState
    fullName: Microsoft.Azure.Batch.Common.TaskState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.SubtaskInformation.PreviousStateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.SubtaskInformation.PreviousStateTransitionTime
  isExternal: false
  name: PreviousStateTransitionTime
  nameWithType: SubtaskInformation.PreviousStateTransitionTime
  fullName: Microsoft.Azure.Batch.SubtaskInformation.PreviousStateTransitionTime
- uid: Microsoft.Azure.Batch.SubtaskInformation.SchedulingError*
  commentId: Overload:Microsoft.Azure.Batch.SubtaskInformation.SchedulingError
  isExternal: false
  name: SchedulingError
  nameWithType: SubtaskInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.SubtaskInformation.SchedulingError
- uid: Microsoft.Azure.Batch.TaskSchedulingError
  commentId: T:Microsoft.Azure.Batch.TaskSchedulingError
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: TaskSchedulingError
  nameWithType: TaskSchedulingError
  fullName: Microsoft.Azure.Batch.TaskSchedulingError
- uid: Microsoft.Azure.Batch.SubtaskInformation.StartTime*
  commentId: Overload:Microsoft.Azure.Batch.SubtaskInformation.StartTime
  isExternal: false
  name: StartTime
  nameWithType: SubtaskInformation.StartTime
  fullName: Microsoft.Azure.Batch.SubtaskInformation.StartTime
- uid: Microsoft.Azure.Batch.SubtaskInformation.State*
  commentId: Overload:Microsoft.Azure.Batch.SubtaskInformation.State
  isExternal: false
  name: State
  nameWithType: SubtaskInformation.State
  fullName: Microsoft.Azure.Batch.SubtaskInformation.State
- uid: Microsoft.Azure.Batch.SubtaskInformation.StateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.SubtaskInformation.StateTransitionTime
  isExternal: false
  name: StateTransitionTime
  nameWithType: SubtaskInformation.StateTransitionTime
  fullName: Microsoft.Azure.Batch.SubtaskInformation.StateTransitionTime
