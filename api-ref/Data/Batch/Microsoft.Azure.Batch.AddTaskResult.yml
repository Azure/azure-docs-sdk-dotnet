### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.AddTaskResult
  commentId: T:Microsoft.Azure.Batch.AddTaskResult
  id: AddTaskResult
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.AddTaskResult.Error
  - Microsoft.Azure.Batch.AddTaskResult.ETag
  - Microsoft.Azure.Batch.AddTaskResult.LastModified
  - Microsoft.Azure.Batch.AddTaskResult.Location
  - Microsoft.Azure.Batch.AddTaskResult.RetryCount
  - Microsoft.Azure.Batch.AddTaskResult.Status
  - Microsoft.Azure.Batch.AddTaskResult.Task
  - Microsoft.Azure.Batch.AddTaskResult.TaskId
  - Microsoft.Azure.Batch.AddTaskResult.ToString
  langs:
  - csharp
  - vb
  name: AddTaskResult
  nameWithType: AddTaskResult
  fullName: Microsoft.Azure.Batch.AddTaskResult
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/AddTaskResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddTaskResult
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/AddTaskResult.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nResult for a single task added as part of a collection of tasks.\n"
  example: []
  syntax:
    content: 'public class AddTaskResult : IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class AddTaskResult
          Implements IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.AddTaskResult.Task
  commentId: P:Microsoft.Azure.Batch.AddTaskResult.Task
  id: Task
  parent: Microsoft.Azure.Batch.AddTaskResult
  langs:
  - csharp
  - vb
  name: Task
  nameWithType: AddTaskResult.Task
  fullName: Microsoft.Azure.Batch.AddTaskResult.Task
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/AddTaskResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Task
    path: src/azure-sdk-for-net/src/Batch/Client/Src/AddTaskResult.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets details of the task.\n"
  example: []
  syntax:
    content: public CloudTask Task { get; }
    content.vb: Public ReadOnly Property Task As CloudTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.CloudTask
  overload: Microsoft.Azure.Batch.AddTaskResult.Task*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.AddTaskResult.RetryCount
  commentId: P:Microsoft.Azure.Batch.AddTaskResult.RetryCount
  id: RetryCount
  parent: Microsoft.Azure.Batch.AddTaskResult
  langs:
  - csharp
  - vb
  name: RetryCount
  nameWithType: AddTaskResult.RetryCount
  fullName: Microsoft.Azure.Batch.AddTaskResult.RetryCount
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/AddTaskResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RetryCount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/AddTaskResult.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the number of times the Add Task operation was retried for this task.\n"
  example: []
  syntax:
    content: public int RetryCount { get; }
    content.vb: Public ReadOnly Property RetryCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Batch.AddTaskResult.RetryCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.AddTaskResult.ToString
  commentId: M:Microsoft.Azure.Batch.AddTaskResult.ToString
  id: ToString
  parent: Microsoft.Azure.Batch.AddTaskResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AddTaskResult.ToString()
  fullName: Microsoft.Azure.Batch.AddTaskResult.ToString()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/AddTaskResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ToString
    path: src/azure-sdk-for-net/src/Batch/Client/Src/AddTaskResult.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nReturns a string that represents the current object.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string that represents the current object.
  overridden: System.Object.ToString
  overload: Microsoft.Azure.Batch.AddTaskResult.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.Batch.AddTaskResult.Error
  commentId: P:Microsoft.Azure.Batch.AddTaskResult.Error
  id: Error
  parent: Microsoft.Azure.Batch.AddTaskResult
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: AddTaskResult.Error
  fullName: Microsoft.Azure.Batch.AddTaskResult.Error
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/AddTaskResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Error
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/AddTaskResult.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the error caught while attempting to add the task.\n"
  example: []
  syntax:
    content: public BatchError Error { get; }
    content.vb: Public ReadOnly Property Error As BatchError
    parameters: []
    return:
      type: Microsoft.Azure.Batch.BatchError
  overload: Microsoft.Azure.Batch.AddTaskResult.Error*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.AddTaskResult.ETag
  commentId: P:Microsoft.Azure.Batch.AddTaskResult.ETag
  id: ETag
  parent: Microsoft.Azure.Batch.AddTaskResult
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: AddTaskResult.ETag
  fullName: Microsoft.Azure.Batch.AddTaskResult.ETag
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/AddTaskResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ETag
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/AddTaskResult.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets an ETag associated with a successfully added task.\n"
  example: []
  syntax:
    content: public string ETag { get; }
    content.vb: Public ReadOnly Property ETag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.AddTaskResult.ETag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.AddTaskResult.LastModified
  commentId: P:Microsoft.Azure.Batch.AddTaskResult.LastModified
  id: LastModified
  parent: Microsoft.Azure.Batch.AddTaskResult
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: AddTaskResult.LastModified
  fullName: Microsoft.Azure.Batch.AddTaskResult.LastModified
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/AddTaskResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastModified
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/AddTaskResult.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the last modified time associated with a successfully added task.\n"
  example: []
  syntax:
    content: public DateTime? LastModified { get; }
    content.vb: Public ReadOnly Property LastModified As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.AddTaskResult.LastModified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.AddTaskResult.Location
  commentId: P:Microsoft.Azure.Batch.AddTaskResult.Location
  id: Location
  parent: Microsoft.Azure.Batch.AddTaskResult
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: AddTaskResult.Location
  fullName: Microsoft.Azure.Batch.AddTaskResult.Location
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/AddTaskResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Location
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/AddTaskResult.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the URL of a successfully added task.\n"
  example: []
  syntax:
    content: public string Location { get; }
    content.vb: Public ReadOnly Property Location As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.AddTaskResult.Location*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.AddTaskResult.Status
  commentId: P:Microsoft.Azure.Batch.AddTaskResult.Status
  id: Status
  parent: Microsoft.Azure.Batch.AddTaskResult
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: AddTaskResult.Status
  fullName: Microsoft.Azure.Batch.AddTaskResult.Status
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/AddTaskResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/AddTaskResult.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the status of the add task request.\n"
  example: []
  syntax:
    content: public AddTaskStatus Status { get; }
    content.vb: Public ReadOnly Property Status As AddTaskStatus
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Common.AddTaskStatus
  overload: Microsoft.Azure.Batch.AddTaskResult.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.AddTaskResult.TaskId
  commentId: P:Microsoft.Azure.Batch.AddTaskResult.TaskId
  id: TaskId
  parent: Microsoft.Azure.Batch.AddTaskResult
  langs:
  - csharp
  - vb
  name: TaskId
  nameWithType: AddTaskResult.TaskId
  fullName: Microsoft.Azure.Batch.AddTaskResult.TaskId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/AddTaskResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/AddTaskResult.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the id of the task which this result applies to.\n"
  example: []
  syntax:
    content: public string TaskId { get; }
    content.vb: Public ReadOnly Property TaskId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.AddTaskResult.TaskId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.AddTaskResult.Task*
  commentId: Overload:Microsoft.Azure.Batch.AddTaskResult.Task
  isExternal: false
  name: Task
  nameWithType: AddTaskResult.Task
  fullName: Microsoft.Azure.Batch.AddTaskResult.Task
- uid: Microsoft.Azure.Batch.CloudTask
  commentId: T:Microsoft.Azure.Batch.CloudTask
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudTask
  nameWithType: CloudTask
  fullName: Microsoft.Azure.Batch.CloudTask
- uid: Microsoft.Azure.Batch.AddTaskResult.RetryCount*
  commentId: Overload:Microsoft.Azure.Batch.AddTaskResult.RetryCount
  isExternal: false
  name: RetryCount
  nameWithType: AddTaskResult.RetryCount
  fullName: Microsoft.Azure.Batch.AddTaskResult.RetryCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.AddTaskResult.ToString*
  commentId: Overload:Microsoft.Azure.Batch.AddTaskResult.ToString
  isExternal: false
  name: ToString
  nameWithType: AddTaskResult.ToString
  fullName: Microsoft.Azure.Batch.AddTaskResult.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.AddTaskResult.Error*
  commentId: Overload:Microsoft.Azure.Batch.AddTaskResult.Error
  isExternal: false
  name: Error
  nameWithType: AddTaskResult.Error
  fullName: Microsoft.Azure.Batch.AddTaskResult.Error
- uid: Microsoft.Azure.Batch.BatchError
  commentId: T:Microsoft.Azure.Batch.BatchError
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: BatchError
  nameWithType: BatchError
  fullName: Microsoft.Azure.Batch.BatchError
- uid: Microsoft.Azure.Batch.AddTaskResult.ETag*
  commentId: Overload:Microsoft.Azure.Batch.AddTaskResult.ETag
  isExternal: false
  name: ETag
  nameWithType: AddTaskResult.ETag
  fullName: Microsoft.Azure.Batch.AddTaskResult.ETag
- uid: Microsoft.Azure.Batch.AddTaskResult.LastModified*
  commentId: Overload:Microsoft.Azure.Batch.AddTaskResult.LastModified
  isExternal: false
  name: LastModified
  nameWithType: AddTaskResult.LastModified
  fullName: Microsoft.Azure.Batch.AddTaskResult.LastModified
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.AddTaskResult.Location*
  commentId: Overload:Microsoft.Azure.Batch.AddTaskResult.Location
  isExternal: false
  name: Location
  nameWithType: AddTaskResult.Location
  fullName: Microsoft.Azure.Batch.AddTaskResult.Location
- uid: Microsoft.Azure.Batch.AddTaskResult.Status*
  commentId: Overload:Microsoft.Azure.Batch.AddTaskResult.Status
  isExternal: false
  name: Status
  nameWithType: AddTaskResult.Status
  fullName: Microsoft.Azure.Batch.AddTaskResult.Status
- uid: Microsoft.Azure.Batch.Common.AddTaskStatus
  commentId: T:Microsoft.Azure.Batch.Common.AddTaskStatus
  parent: Microsoft.Azure.Batch.Common
  isExternal: false
  name: AddTaskStatus
  nameWithType: AddTaskStatus
  fullName: Microsoft.Azure.Batch.Common.AddTaskStatus
- uid: Microsoft.Azure.Batch.Common
  commentId: N:Microsoft.Azure.Batch.Common
  isExternal: false
  name: Microsoft.Azure.Batch.Common
  nameWithType: Microsoft.Azure.Batch.Common
  fullName: Microsoft.Azure.Batch.Common
- uid: Microsoft.Azure.Batch.AddTaskResult.TaskId*
  commentId: Overload:Microsoft.Azure.Batch.AddTaskResult.TaskId
  isExternal: false
  name: TaskId
  nameWithType: AddTaskResult.TaskId
  fullName: Microsoft.Azure.Batch.AddTaskResult.TaskId
