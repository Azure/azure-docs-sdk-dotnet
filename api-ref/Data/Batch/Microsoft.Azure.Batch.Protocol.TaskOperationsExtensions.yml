### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  commentId: T:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  id: TaskOperationsExtensions
  parent: Microsoft.Azure.Batch.Protocol
  children:
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Reactivate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ReactivateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions)
  - Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: TaskOperationsExtensions
  nameWithType: TaskOperationsExtensions
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskOperationsExtensions
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nExtension methods for TaskOperations.\n"
  example: []
  syntax:
    content: public static class TaskOperationsExtensions
    content.vb: Public Module TaskOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions)
  id: Add(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: Add(ITaskOperations, String, TaskAddParameter, TaskAddOptions)
  nameWithType: TaskOperationsExtensions.Add(ITaskOperations, String, TaskAddParameter, TaskAddOptions)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter, Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Add
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nAdds a task to the specified job.\n"
  example: []
  syntax:
    content: public static TaskAddHeaders Add(this ITaskOperations operations, string jobId, TaskAddParameter task, TaskAddOptions taskAddOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Add(operations As ITaskOperations, jobId As String, task As TaskAddParameter, taskAddOptions As TaskAddOptions = Nothing) As TaskAddHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job to which the task is to be added.\n"
    - id: task
      type: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
      description: "\nThe task to be added.\n"
    - id: taskAddOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions,System.Threading.CancellationToken)
  id: AddAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: AddAsync(ITaskOperations, String, TaskAddParameter, TaskAddOptions, CancellationToken)
  nameWithType: TaskOperationsExtensions.AddAsync(ITaskOperations, String, TaskAddParameter, TaskAddOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter, Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nAdds a task to the specified job.\n"
  example: []
  syntax:
    content: public static Task<TaskAddHeaders> AddAsync(this ITaskOperations operations, string jobId, TaskAddParameter task, TaskAddOptions taskAddOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAsync(operations As ITaskOperations, jobId As String, task As TaskAddParameter, taskAddOptions As TaskAddOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of TaskAddHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job to which the task is to be added.\n"
    - id: task
      type: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
      description: "\nThe task to be added.\n"
    - id: taskAddOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders}
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions)
  id: List(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(ITaskOperations, String, TaskListOptions)
  nameWithType: TaskOperationsExtensions.List(ITaskOperations, String, TaskListOptions)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskListOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the tasks that are associated with the specified job.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<CloudTask> List(this ITaskOperations operations, string jobId, TaskListOptions taskListOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As ITaskOperations, jobId As String, taskListOptions As TaskListOptions = Nothing) As Rest.Azure.IPage(Of CloudTask)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job.\n"
    - id: taskListOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskListOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudTask}
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(ITaskOperations, String, TaskListOptions, CancellationToken)
  nameWithType: TaskOperationsExtensions.ListAsync(ITaskOperations, String, TaskListOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskListOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the tasks that are associated with the specified job.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<CloudTask>> ListAsync(this ITaskOperations operations, string jobId, TaskListOptions taskListOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As ITaskOperations, jobId As String, taskListOptions As TaskListOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of CloudTask))
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job.\n"
    - id: taskListOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskListOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudTask}}
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions)
  id: AddCollection(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: AddCollection(ITaskOperations, String, IList<TaskAddParameter>, TaskAddCollectionOptions)
  nameWithType: TaskOperationsExtensions.AddCollection(ITaskOperations, String, IList<TaskAddParameter>, TaskAddCollectionOptions)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter>, Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddCollection
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nAdds a collection of tasks to the specified job.\n"
  example: []
  syntax:
    content: public static TaskAddCollectionResult AddCollection(this ITaskOperations operations, string jobId, IList<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCollection(operations As ITaskOperations, jobId As String, value As IList(Of TaskAddParameter), taskAddCollectionOptions As TaskAddCollectionOptions = Nothing) As TaskAddCollectionResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job to which the task collection is to be added.\n"
    - id: value
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter}
      description: "\nThe collection of tasks to add.\n"
    - id: taskAddCollectionOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection*
  nameWithType.vb: TaskOperationsExtensions.AddCollection(ITaskOperations, String, IList(Of TaskAddParameter), TaskAddCollectionOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter), Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions)
  name.vb: AddCollection(ITaskOperations, String, IList(Of TaskAddParameter), TaskAddCollectionOptions)
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions,System.Threading.CancellationToken)
  id: AddCollectionAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: AddCollectionAsync(ITaskOperations, String, IList<TaskAddParameter>, TaskAddCollectionOptions, CancellationToken)
  nameWithType: TaskOperationsExtensions.AddCollectionAsync(ITaskOperations, String, IList<TaskAddParameter>, TaskAddCollectionOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter>, Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddCollectionAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 153
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nAdds a collection of tasks to the specified job.\n"
  example: []
  syntax:
    content: public static Task<TaskAddCollectionResult> AddCollectionAsync(this ITaskOperations operations, string jobId, IList<TaskAddParameter> value, TaskAddCollectionOptions taskAddCollectionOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCollectionAsync(operations As ITaskOperations, jobId As String, value As IList(Of TaskAddParameter), taskAddCollectionOptions As TaskAddCollectionOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of TaskAddCollectionResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job to which the task collection is to be added.\n"
    - id: value
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter}
      description: "\nThe collection of tasks to add.\n"
    - id: taskAddCollectionOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult}
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync*
  nameWithType.vb: TaskOperationsExtensions.AddCollectionAsync(ITaskOperations, String, IList(Of TaskAddParameter), TaskAddCollectionOptions, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter), Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions, System.Threading.CancellationToken)
  name.vb: AddCollectionAsync(ITaskOperations, String, IList(Of TaskAddParameter), TaskAddCollectionOptions, CancellationToken)
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions)
  id: Delete(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(ITaskOperations, String, String, TaskDeleteOptions)
  nameWithType: TaskOperationsExtensions.Delete(ITaskOperations, String, String, TaskDeleteOptions)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 176
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDeletes a task from the specified job.\n"
  example: []
  syntax:
    content: public static TaskDeleteHeaders Delete(this ITaskOperations operations, string jobId, string taskId, TaskDeleteOptions taskDeleteOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As ITaskOperations, jobId As String, taskId As String, taskDeleteOptions As TaskDeleteOptions = Nothing) As TaskDeleteHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job from which to delete the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task to delete.\n"
    - id: taskDeleteOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(ITaskOperations, String, String, TaskDeleteOptions, CancellationToken)
  nameWithType: TaskOperationsExtensions.DeleteAsync(ITaskOperations, String, String, TaskDeleteOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 199
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDeletes a task from the specified job.\n"
  example: []
  syntax:
    content: public static Task<TaskDeleteHeaders> DeleteAsync(this ITaskOperations operations, string jobId, string taskId, TaskDeleteOptions taskDeleteOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As ITaskOperations, jobId As String, taskId As String, taskDeleteOptions As TaskDeleteOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of TaskDeleteHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job from which to delete the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task to delete.\n"
    - id: taskDeleteOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders}
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions)
  id: Get(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(ITaskOperations, String, String, TaskGetOptions)
  nameWithType: TaskOperationsExtensions.Get(ITaskOperations, String, String, TaskGetOptions)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 222
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets information about the specified task.\n"
  example: []
  syntax:
    content: public static CloudTask Get(this ITaskOperations operations, string jobId, string taskId, TaskGetOptions taskGetOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As ITaskOperations, jobId As String, taskId As String, taskGetOptions As TaskGetOptions = Nothing) As CloudTask
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job that contains the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task to get information about.\n"
    - id: taskGetOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(ITaskOperations, String, String, TaskGetOptions, CancellationToken)
  nameWithType: TaskOperationsExtensions.GetAsync(ITaskOperations, String, String, TaskGetOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 245
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets information about the specified task.\n"
  example: []
  syntax:
    content: public static Task<CloudTask> GetAsync(this ITaskOperations operations, string jobId, string taskId, TaskGetOptions taskGetOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As ITaskOperations, jobId As String, taskId As String, taskGetOptions As TaskGetOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CloudTask)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job that contains the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task to get information about.\n"
    - id: taskGetOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CloudTask}
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions)
  id: Update(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: Update(ITaskOperations, String, String, TaskConstraints, TaskUpdateOptions)
  nameWithType: TaskOperationsExtensions.Update(ITaskOperations, String, String, TaskConstraints, TaskUpdateOptions)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskConstraints, Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Update
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 272
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nUpdates the properties of the specified task.\n"
  example: []
  syntax:
    content: public static TaskUpdateHeaders Update(this ITaskOperations operations, string jobId, string taskId, TaskConstraints constraints = null, TaskUpdateOptions taskUpdateOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Update(operations As ITaskOperations, jobId As String, taskId As String, constraints As TaskConstraints = Nothing, taskUpdateOptions As TaskUpdateOptions = Nothing) As TaskUpdateHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job containing the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task to update.\n"
    - id: constraints
      type: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
      description: "\nConstraints that apply to this task. If omitted, the task is given the\ndefault constraints.\n"
    - id: taskUpdateOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions,System.Threading.CancellationToken)
  id: UpdateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync(ITaskOperations, String, String, TaskConstraints, TaskUpdateOptions, CancellationToken)
  nameWithType: TaskOperationsExtensions.UpdateAsync(ITaskOperations, String, String, TaskConstraints, TaskUpdateOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskConstraints, Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 299
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nUpdates the properties of the specified task.\n"
  example: []
  syntax:
    content: public static Task<TaskUpdateHeaders> UpdateAsync(this ITaskOperations operations, string jobId, string taskId, TaskConstraints constraints = null, TaskUpdateOptions taskUpdateOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateAsync(operations As ITaskOperations, jobId As String, taskId As String, constraints As TaskConstraints = Nothing, taskUpdateOptions As TaskUpdateOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of TaskUpdateHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job containing the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task to update.\n"
    - id: constraints
      type: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
      description: "\nConstraints that apply to this task. If omitted, the task is given the\ndefault constraints.\n"
    - id: taskUpdateOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders}
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions)
  id: ListSubtasks(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListSubtasks(ITaskOperations, String, String, TaskListSubtasksOptions)
  nameWithType: TaskOperationsExtensions.ListSubtasks(ITaskOperations, String, String, TaskListSubtasksOptions)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListSubtasks
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 323
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the subtasks that are associated with the specified\nmulti-instance task.\n"
  example: []
  syntax:
    content: public static CloudTaskListSubtasksResult ListSubtasks(this ITaskOperations operations, string jobId, string taskId, TaskListSubtasksOptions taskListSubtasksOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListSubtasks(operations As ITaskOperations, jobId As String, taskId As String, taskListSubtasksOptions As TaskListSubtasksOptions = Nothing) As CloudTaskListSubtasksResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task.\n"
    - id: taskListSubtasksOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions,System.Threading.CancellationToken)
  id: ListSubtasksAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListSubtasksAsync(ITaskOperations, String, String, TaskListSubtasksOptions, CancellationToken)
  nameWithType: TaskOperationsExtensions.ListSubtasksAsync(ITaskOperations, String, String, TaskListSubtasksOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListSubtasksAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 347
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the subtasks that are associated with the specified\nmulti-instance task.\n"
  example: []
  syntax:
    content: public static Task<CloudTaskListSubtasksResult> ListSubtasksAsync(this ITaskOperations operations, string jobId, string taskId, TaskListSubtasksOptions taskListSubtasksOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListSubtasksAsync(operations As ITaskOperations, jobId As String, taskId As String, taskListSubtasksOptions As TaskListSubtasksOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CloudTaskListSubtasksResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task.\n"
    - id: taskListSubtasksOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult}
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions)
  id: Terminate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: Terminate(ITaskOperations, String, String, TaskTerminateOptions)
  nameWithType: TaskOperationsExtensions.Terminate(ITaskOperations, String, String, TaskTerminateOptions)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Terminate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 370
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nTerminates the specified task.\n"
  example: []
  syntax:
    content: public static TaskTerminateHeaders Terminate(this ITaskOperations operations, string jobId, string taskId, TaskTerminateOptions taskTerminateOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Terminate(operations As ITaskOperations, jobId As String, taskId As String, taskTerminateOptions As TaskTerminateOptions = Nothing) As TaskTerminateHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job containing the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task to terminate.\n"
    - id: taskTerminateOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions,System.Threading.CancellationToken)
  id: TerminateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: TerminateAsync(ITaskOperations, String, String, TaskTerminateOptions, CancellationToken)
  nameWithType: TaskOperationsExtensions.TerminateAsync(ITaskOperations, String, String, TaskTerminateOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TerminateAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 393
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nTerminates the specified task.\n"
  example: []
  syntax:
    content: public static Task<TaskTerminateHeaders> TerminateAsync(this ITaskOperations operations, string jobId, string taskId, TaskTerminateOptions taskTerminateOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TerminateAsync(operations As ITaskOperations, jobId As String, taskId As String, taskTerminateOptions As TaskTerminateOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of TaskTerminateHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job containing the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task to terminate.\n"
    - id: taskTerminateOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders}
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Reactivate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Reactivate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions)
  id: Reactivate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: Reactivate(ITaskOperations, String, String, TaskReactivateOptions)
  nameWithType: TaskOperationsExtensions.Reactivate(ITaskOperations, String, String, TaskReactivateOptions)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Reactivate(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Reactivate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 422
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nReactivates the specified task.\n"
  remarks: "\nReactivation makes a task eligible to be retried again up to its maximum\nretry count. This will fail for tasks that are not completed or that\npreviously completed successfully (with an exit code of 0). Additionally,\nthis will fail if the job has completed (or is terminating or deleting).\n"
  example: []
  syntax:
    content: public static TaskReactivateHeaders Reactivate(this ITaskOperations operations, string jobId, string taskId, TaskReactivateOptions taskReactivateOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Reactivate(operations As ITaskOperations, jobId As String, taskId As String, taskReactivateOptions As TaskReactivateOptions = Nothing) As TaskReactivateHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job containing the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task to reactivate.\n"
    - id: taskReactivateOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Reactivate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ReactivateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ReactivateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions,System.Threading.CancellationToken)
  id: ReactivateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: ReactivateAsync(ITaskOperations, String, String, TaskReactivateOptions, CancellationToken)
  nameWithType: TaskOperationsExtensions.ReactivateAsync(ITaskOperations, String, String, TaskReactivateOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ReactivateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReactivateAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 451
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nReactivates the specified task.\n"
  remarks: "\nReactivation makes a task eligible to be retried again up to its maximum\nretry count. This will fail for tasks that are not completed or that\npreviously completed successfully (with an exit code of 0). Additionally,\nthis will fail if the job has completed (or is terminating or deleting).\n"
  example: []
  syntax:
    content: public static Task<TaskReactivateHeaders> ReactivateAsync(this ITaskOperations operations, string jobId, string taskId, TaskReactivateOptions taskReactivateOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReactivateAsync(operations As ITaskOperations, jobId As String, taskId As String, taskReactivateOptions As TaskReactivateOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of TaskReactivateHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job containing the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task to reactivate.\n"
    - id: taskReactivateOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders}
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ReactivateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions)
  id: ListNext(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(ITaskOperations, String, TaskListNextOptions)
  nameWithType: TaskOperationsExtensions.ListNext(ITaskOperations, String, TaskListNextOptions)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 471
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the tasks that are associated with the specified job.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<CloudTask> ListNext(this ITaskOperations operations, string nextPageLink, TaskListNextOptions taskListNextOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As ITaskOperations, nextPageLink As String, taskListNextOptions As TaskListNextOptions = Nothing) As Rest.Azure.IPage(Of CloudTask)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: taskListNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudTask}
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(ITaskOperations, String, TaskListNextOptions, CancellationToken)
  nameWithType: TaskOperationsExtensions.ListNextAsync(ITaskOperations, String, TaskListNextOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/TaskOperationsExtensions.cs
    startLine: 491
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the tasks that are associated with the specified job.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<CloudTask>> ListNextAsync(this ITaskOperations operations, string nextPageLink, TaskListNextOptions taskListNextOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As ITaskOperations, nextPageLink As String, taskListNextOptions As TaskListNextOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of CloudTask))
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ITaskOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: taskListNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudTask}}
  overload: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add
  isExternal: false
  name: Add
  nameWithType: TaskOperationsExtensions.Add
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add
- uid: Microsoft.Azure.Batch.Protocol.ITaskOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.ITaskOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: ITaskOperations
  nameWithType: ITaskOperations
  fullName: Microsoft.Azure.Batch.Protocol.ITaskOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskAddParameter
  nameWithType: TaskAddParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskAddOptions
  nameWithType: TaskAddOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskAddHeaders
  nameWithType: TaskAddHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync
  isExternal: false
  name: AddAsync
  nameWithType: TaskOperationsExtensions.AddAsync
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TaskAddHeaders>
  nameWithType: Task<TaskAddHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders>
  nameWithType.vb: Task(Of TaskAddHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders)
  name.vb: Task(Of TaskAddHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders
    name: TaskAddHeaders
    nameWithType: TaskAddHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders
    name: TaskAddHeaders
    nameWithType: TaskAddHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List
  isExternal: false
  name: List
  nameWithType: TaskOperationsExtensions.List
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskListOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskListOptions
  nameWithType: TaskListOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskListOptions
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudTask}
  commentId: '!:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudTask}'
  definition: Microsoft.Rest.Azure.IPage`1
  name: Rest.Azure.IPage<CloudTask>
  nameWithType: Rest.Azure.IPage<CloudTask>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.CloudTask>
  nameWithType.vb: Rest.Azure.IPage(Of CloudTask)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.CloudTask)
  name.vb: Rest.Azure.IPage(Of CloudTask)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask
    name: CloudTask
    nameWithType: CloudTask
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask
    name: CloudTask
    nameWithType: CloudTask
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage`1
  isExternal: true
  name: Rest.Azure.IPage<>
  nameWithType: Rest.Azure.IPage<>
  fullName: Microsoft.Rest.Azure.IPage<>
  nameWithType.vb: Rest.Azure.IPage(Of )
  fullname.vb: Microsoft.Rest.Azure.IPage(Of )
  name.vb: Rest.Azure.IPage(Of )
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync
  isExternal: false
  name: ListAsync
  nameWithType: TaskOperationsExtensions.ListAsync
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudTask}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.CloudTask}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Rest.Azure.IPage<CloudTask>>
  nameWithType: Task<Rest.Azure.IPage<CloudTask>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.CloudTask>>
  nameWithType.vb: Task(Of Rest.Azure.IPage(Of CloudTask))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.CloudTask))
  name.vb: Task(Of Rest.Azure.IPage(Of CloudTask))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask
    name: CloudTask
    nameWithType: CloudTask
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask
    name: CloudTask
    nameWithType: CloudTask
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection
  isExternal: false
  name: AddCollection
  nameWithType: TaskOperationsExtensions.AddCollection
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TaskAddParameter>
  nameWithType: IList<TaskAddParameter>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter>
  nameWithType.vb: IList(Of TaskAddParameter)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter)
  name.vb: IList(Of TaskAddParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
    name: TaskAddParameter
    nameWithType: TaskAddParameter
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
    name: TaskAddParameter
    nameWithType: TaskAddParameter
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskAddCollectionOptions
  nameWithType: TaskAddCollectionOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskAddCollectionResult
  nameWithType: TaskAddCollectionResult
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync
  isExternal: false
  name: AddCollectionAsync
  nameWithType: TaskOperationsExtensions.AddCollectionAsync
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TaskAddCollectionResult>
  nameWithType: Task<TaskAddCollectionResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult>
  nameWithType.vb: Task(Of TaskAddCollectionResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult)
  name.vb: Task(Of TaskAddCollectionResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult
    name: TaskAddCollectionResult
    nameWithType: TaskAddCollectionResult
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult
    name: TaskAddCollectionResult
    nameWithType: TaskAddCollectionResult
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete
  isExternal: false
  name: Delete
  nameWithType: TaskOperationsExtensions.Delete
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskDeleteOptions
  nameWithType: TaskDeleteOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskDeleteHeaders
  nameWithType: TaskDeleteHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: TaskOperationsExtensions.DeleteAsync
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TaskDeleteHeaders>
  nameWithType: Task<TaskDeleteHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders>
  nameWithType.vb: Task(Of TaskDeleteHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders)
  name.vb: Task(Of TaskDeleteHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders
    name: TaskDeleteHeaders
    nameWithType: TaskDeleteHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders
    name: TaskDeleteHeaders
    nameWithType: TaskDeleteHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: TaskOperationsExtensions.Get
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskGetOptions
  nameWithType: TaskGetOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CloudTask
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CloudTask
  nameWithType: CloudTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: TaskOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CloudTask}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CloudTask}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CloudTask>
  nameWithType: Task<CloudTask>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.CloudTask>
  nameWithType.vb: Task(Of CloudTask)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.CloudTask)
  name.vb: Task(Of CloudTask)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask
    name: CloudTask
    nameWithType: CloudTask
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask
    name: CloudTask
    nameWithType: CloudTask
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update
  isExternal: false
  name: Update
  nameWithType: TaskOperationsExtensions.Update
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskConstraints
  nameWithType: TaskConstraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskUpdateOptions
  nameWithType: TaskUpdateOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskUpdateHeaders
  nameWithType: TaskUpdateHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync
  isExternal: false
  name: UpdateAsync
  nameWithType: TaskOperationsExtensions.UpdateAsync
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TaskUpdateHeaders>
  nameWithType: Task<TaskUpdateHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders>
  nameWithType.vb: Task(Of TaskUpdateHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders)
  name.vb: Task(Of TaskUpdateHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders
    name: TaskUpdateHeaders
    nameWithType: TaskUpdateHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders
    name: TaskUpdateHeaders
    nameWithType: TaskUpdateHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks
  isExternal: false
  name: ListSubtasks
  nameWithType: TaskOperationsExtensions.ListSubtasks
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskListSubtasksOptions
  nameWithType: TaskListSubtasksOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CloudTaskListSubtasksResult
  nameWithType: CloudTaskListSubtasksResult
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync
  isExternal: false
  name: ListSubtasksAsync
  nameWithType: TaskOperationsExtensions.ListSubtasksAsync
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CloudTaskListSubtasksResult>
  nameWithType: Task<CloudTaskListSubtasksResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult>
  nameWithType.vb: Task(Of CloudTaskListSubtasksResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult)
  name.vb: Task(Of CloudTaskListSubtasksResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult
    name: CloudTaskListSubtasksResult
    nameWithType: CloudTaskListSubtasksResult
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult
    name: CloudTaskListSubtasksResult
    nameWithType: CloudTaskListSubtasksResult
    fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate
  isExternal: false
  name: Terminate
  nameWithType: TaskOperationsExtensions.Terminate
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskTerminateOptions
  nameWithType: TaskTerminateOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskTerminateHeaders
  nameWithType: TaskTerminateHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync
  isExternal: false
  name: TerminateAsync
  nameWithType: TaskOperationsExtensions.TerminateAsync
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TaskTerminateHeaders>
  nameWithType: Task<TaskTerminateHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders>
  nameWithType.vb: Task(Of TaskTerminateHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders)
  name.vb: Task(Of TaskTerminateHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders
    name: TaskTerminateHeaders
    nameWithType: TaskTerminateHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders
    name: TaskTerminateHeaders
    nameWithType: TaskTerminateHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Reactivate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Reactivate
  isExternal: false
  name: Reactivate
  nameWithType: TaskOperationsExtensions.Reactivate
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Reactivate
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskReactivateOptions
  nameWithType: TaskReactivateOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskReactivateHeaders
  nameWithType: TaskReactivateHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ReactivateAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ReactivateAsync
  isExternal: false
  name: ReactivateAsync
  nameWithType: TaskOperationsExtensions.ReactivateAsync
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ReactivateAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TaskReactivateHeaders>
  nameWithType: Task<TaskReactivateHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders>
  nameWithType.vb: Task(Of TaskReactivateHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders)
  name.vb: Task(Of TaskReactivateHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders
    name: TaskReactivateHeaders
    nameWithType: TaskReactivateHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders
    name: TaskReactivateHeaders
    nameWithType: TaskReactivateHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext
  isExternal: false
  name: ListNext
  nameWithType: TaskOperationsExtensions.ListNext
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskListNextOptions
  nameWithType: TaskListNextOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions
- uid: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync
  isExternal: false
  name: ListNextAsync
  nameWithType: TaskOperationsExtensions.ListNextAsync
  fullName: Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync
