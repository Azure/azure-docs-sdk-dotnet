### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.ComputeNodeUser
  commentId: T:Microsoft.Azure.Batch.ComputeNodeUser
  id: ComputeNodeUser
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.ComputeNodeUser.Commit(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNodeUser.CustomBehaviors
  - Microsoft.Azure.Batch.ComputeNodeUser.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNodeUser.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNodeUser.ExpiryTime
  - Microsoft.Azure.Batch.ComputeNodeUser.IsAdmin
  - Microsoft.Azure.Batch.ComputeNodeUser.Name
  - Microsoft.Azure.Batch.ComputeNodeUser.Password
  - Microsoft.Azure.Batch.ComputeNodeUser.SshPublicKey
  langs:
  - csharp
  - vb
  name: ComputeNodeUser
  nameWithType: ComputeNodeUser
  fullName: Microsoft.Azure.Batch.ComputeNodeUser
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ComputeNodeUser
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNodeUser.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nA user for a specific Azure Batch compute node.\n"
  example: []
  syntax:
    content: 'public class ComputeNodeUser : ITransportObjectProvider<ComputeNodeUser>, IInheritedBehaviors, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class ComputeNodeUser
          Implements ITransportObjectProvider(Of ComputeNodeUser), IInheritedBehaviors, IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Batch.IInheritedBehaviors
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: CommitAsync(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: CommitAsync(ComputeNodeUserCommitSemantics, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNodeUser.CommitAsync(ComputeNodeUserCommitSemantics, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommitAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNodeUser.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBegins an asynchronous call to create or update a user account on the compute node.\n"
  example: []
  syntax:
    content: public Task CommitAsync(ComputeNodeUserCommitSemantics addOrUpdate = ComputeNodeUserCommitSemantics.AddUser, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function CommitAsync(addOrUpdate As ComputeNodeUserCommitSemantics = ComputeNodeUserCommitSemantics.AddUser, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: addOrUpdate
      type: Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics
      description: Selects the type of commit operation to perform.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync*
  nameWithType.vb: ComputeNodeUser.CommitAsync(ComputeNodeUserCommitSemantics, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: CommitAsync(ComputeNodeUserCommitSemantics, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNodeUser.Commit(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNodeUser.Commit(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Commit(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: Commit(ComputeNodeUserCommitSemantics, IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNodeUser.Commit(ComputeNodeUserCommitSemantics, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.Commit(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Commit
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNodeUser.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBlocking call to create or update a user account on the compute node.\n"
  example: []
  syntax:
    content: public void Commit(ComputeNodeUserCommitSemantics addOrUpdate = ComputeNodeUserCommitSemantics.AddUser, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Commit(addOrUpdate As ComputeNodeUserCommitSemantics = ComputeNodeUserCommitSemantics.AddUser, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: addOrUpdate
      type: Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics
      description: Selects the type of commit operation to perform.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
  overload: Microsoft.Azure.Batch.ComputeNodeUser.Commit*
  nameWithType.vb: ComputeNodeUser.Commit(ComputeNodeUserCommitSemantics, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNodeUser.Commit(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Commit(ComputeNodeUserCommitSemantics, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNodeUser.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNodeUser.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: DeleteAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNodeUser.DeleteAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.DeleteAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNodeUser.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBegins an asyncrhonous call to delete the current user from the compute node.\n"
  example: []
  syntax:
    content: public Task DeleteAsync(IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function DeleteAsync(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.ComputeNodeUser.DeleteAsync*
  nameWithType.vb: ComputeNodeUser.DeleteAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNodeUser.DeleteAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: DeleteAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNodeUser.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNodeUser.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: Delete(IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNodeUser.Delete(IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.Delete(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNodeUser.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\ncall to delete the current user from the compute node.\n"
  example: []
  syntax:
    content: public void Delete(IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Delete(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
  overload: Microsoft.Azure.Batch.ComputeNodeUser.Delete*
  nameWithType.vb: ComputeNodeUser.Delete(IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNodeUser.Delete(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Delete(IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNodeUser.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.ComputeNodeUser.CustomBehaviors
  id: CustomBehaviors
  parent: Microsoft.Azure.Batch.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: CustomBehaviors
  nameWithType: ComputeNodeUser.CustomBehaviors
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.CustomBehaviors
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomBehaviors
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNodeUser.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of behaviors that modify or customize requests to the Batch service\nmade via this <xref href=\"Microsoft.Azure.Batch.ComputeNodeUser\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>These behaviors are inherited by child objects.</p>\n<p>Modifications are applied in the order of the collection. The last write wins.</p>\n"
  example: []
  syntax:
    content: public IList<BatchClientBehavior> CustomBehaviors { get; set; }
    content.vb: Public Property CustomBehaviors As IList(Of BatchClientBehavior)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  overload: Microsoft.Azure.Batch.ComputeNodeUser.CustomBehaviors*
  implements:
  - Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ComputeNodeUser.ExpiryTime
  commentId: P:Microsoft.Azure.Batch.ComputeNodeUser.ExpiryTime
  id: ExpiryTime
  parent: Microsoft.Azure.Batch.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: ExpiryTime
  nameWithType: ComputeNodeUser.ExpiryTime
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.ExpiryTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExpiryTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNodeUser.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the expiry time.\n"
  example: []
  syntax:
    content: public DateTime ExpiryTime { get; set; }
    content.vb: Public Property ExpiryTime As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Batch.ComputeNodeUser.ExpiryTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ComputeNodeUser.IsAdmin
  commentId: P:Microsoft.Azure.Batch.ComputeNodeUser.IsAdmin
  id: IsAdmin
  parent: Microsoft.Azure.Batch.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: IsAdmin
  nameWithType: ComputeNodeUser.IsAdmin
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.IsAdmin
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsAdmin
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNodeUser.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the administrative privilege level of the user account. The value of this property is ignored when \nUpdateUser is specified for the commit operation.\n"
  example: []
  syntax:
    content: public bool ? IsAdmin { get; set; }
    content.vb: Public Property IsAdmin As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.ComputeNodeUser.IsAdmin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ComputeNodeUser.Name
  commentId: P:Microsoft.Azure.Batch.ComputeNodeUser.Name
  id: Name
  parent: Microsoft.Azure.Batch.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ComputeNodeUser.Name
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.Name
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNodeUser.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the name. If AddUser is specified for the commit operation, the value of this property is the name \nof the local Windows account created. If UpdateUser is specified for the commit operation, the value of this \nproperty selects the local Windows account to modify. Changing this property does not rename the local Windows \naccount on the compute node.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ComputeNodeUser.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ComputeNodeUser.Password
  commentId: P:Microsoft.Azure.Batch.ComputeNodeUser.Password
  id: Password
  parent: Microsoft.Azure.Batch.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: ComputeNodeUser.Password
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.Password
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Password
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNodeUser.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the password.\n"
  example: []
  syntax:
    content: public string Password { get; set; }
    content.vb: Public Property Password As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ComputeNodeUser.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ComputeNodeUser.SshPublicKey
  commentId: P:Microsoft.Azure.Batch.ComputeNodeUser.SshPublicKey
  id: SshPublicKey
  parent: Microsoft.Azure.Batch.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: SshPublicKey
  nameWithType: ComputeNodeUser.SshPublicKey
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.SshPublicKey
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SshPublicKey
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNodeUser.cs
    startLine: 166
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the SSH public key that can be used for remote login to the compute node.\n"
  remarks: "\n<p>The public key should be compatible with Open SSH encoding and should be base 64 encoded. This property \ncan be specified only for Linux nodes. The Batch service will return an error if this property is set for pools \ncreated with <xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Microsoft.Azure.Batch.VirtualMachineConfiguration\" data-throw-if-not-resolved=\"false\"></xref> \nwith Windows compute nodes.</p>\n"
  example: []
  syntax:
    content: public string SshPublicKey { get; set; }
    content.vb: Public Property SshPublicKey As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ComputeNodeUser.SshPublicKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Batch.IInheritedBehaviors
  commentId: T:Microsoft.Azure.Batch.IInheritedBehaviors
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IInheritedBehaviors
  nameWithType: IInheritedBehaviors
  fullName: Microsoft.Azure.Batch.IInheritedBehaviors
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync
  isExternal: false
  name: CommitAsync
  nameWithType: ComputeNodeUser.CommitAsync
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync
- uid: Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics
  commentId: T:Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ComputeNodeUserCommitSemantics
  nameWithType: ComputeNodeUserCommitSemantics
  fullName: Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BatchClientBehavior>
  nameWithType: IEnumerable<BatchClientBehavior>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>
  nameWithType.vb: IEnumerable(Of BatchClientBehavior)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior)
  name.vb: IEnumerable(Of BatchClientBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.ComputeNodeUser.Commit*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNodeUser.Commit
  isExternal: false
  name: Commit
  nameWithType: ComputeNodeUser.Commit
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.Commit
- uid: Microsoft.Azure.Batch.ComputeNodeUser.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNodeUser.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: ComputeNodeUser.DeleteAsync
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.DeleteAsync
- uid: Microsoft.Azure.Batch.ComputeNodeUser.Delete*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNodeUser.Delete
  isExternal: false
  name: Delete
  nameWithType: ComputeNodeUser.Delete
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.Delete
- uid: Microsoft.Azure.Batch.ComputeNodeUser
  commentId: T:Microsoft.Azure.Batch.ComputeNodeUser
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ComputeNodeUser
  nameWithType: ComputeNodeUser
  fullName: Microsoft.Azure.Batch.ComputeNodeUser
- uid: Microsoft.Azure.Batch.ComputeNodeUser.CustomBehaviors*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNodeUser.CustomBehaviors
  isExternal: false
  name: CustomBehaviors
  nameWithType: ComputeNodeUser.CustomBehaviors
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.CustomBehaviors
- uid: Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  parent: Microsoft.Azure.Batch.IInheritedBehaviors
  isExternal: false
  name: CustomBehaviors
  nameWithType: IInheritedBehaviors.CustomBehaviors
  fullName: Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<BatchClientBehavior>
  nameWithType: IList<BatchClientBehavior>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.BatchClientBehavior>
  nameWithType.vb: IList(Of BatchClientBehavior)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.BatchClientBehavior)
  name.vb: IList(Of BatchClientBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNodeUser.ExpiryTime*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNodeUser.ExpiryTime
  isExternal: false
  name: ExpiryTime
  nameWithType: ComputeNodeUser.ExpiryTime
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.ExpiryTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Azure.Batch.ComputeNodeUser.IsAdmin*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNodeUser.IsAdmin
  isExternal: false
  name: IsAdmin
  nameWithType: ComputeNodeUser.IsAdmin
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.IsAdmin
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNodeUser.Name*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNodeUser.Name
  isExternal: false
  name: Name
  nameWithType: ComputeNodeUser.Name
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.ComputeNodeUser.Password*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNodeUser.Password
  isExternal: false
  name: Password
  nameWithType: ComputeNodeUser.Password
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.Password
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration
  commentId: T:Microsoft.Azure.Batch.CloudServiceConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration
  commentId: T:Microsoft.Azure.Batch.VirtualMachineConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration
- uid: Microsoft.Azure.Batch.ComputeNodeUser.SshPublicKey*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNodeUser.SshPublicKey
  isExternal: false
  name: SshPublicKey
  nameWithType: ComputeNodeUser.SshPublicKey
  fullName: Microsoft.Azure.Batch.ComputeNodeUser.SshPublicKey
