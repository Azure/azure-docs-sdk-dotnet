### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.IPagedEnumerable`1
  commentId: T:Microsoft.Azure.Batch.IPagedEnumerable`1
  id: IPagedEnumerable`1
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.IPagedEnumerable`1.GetPagedEnumerator
  langs:
  - csharp
  - vb
  name: IPagedEnumerable<T>
  nameWithType: IPagedEnumerable<T>
  fullName: Microsoft.Azure.Batch.IPagedEnumerable<T>
  type: Interface
  source:
    remote:
      path: src/Batch/Client/Src/IPagedEnumerable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IPagedEnumerable
    path: src/azure-sdk-for-net/src/Batch/Client/Src/IPagedEnumerable.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nExposes enumerators for a paged collection. These enumerators support simple iteration over a paged collection of a specified type.\n\nPaged collections are backed by one or more calls to the Batch Service.  \nEach of these calls can return a variable sized page of data which is then consumed by the enumerator. \n"
  example: []
  syntax:
    content: 'public interface IPagedEnumerable<T> : IEnumerable<T>, IEnumerable'
    content.vb: >-
      Public Interface IPagedEnumerable(Of T)
          Inherits IEnumerable(Of T)
    typeParameters:
    - id: T
      description: The type of objects to enumerate.
  inheritedMembers:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  extensionMethods:
  - Microsoft.Azure.Batch.IPagedEnumerable`1.Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(System.Func{{T},System.Threading.Tasks.Task},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.IPagedEnumerable`1.Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(System.Func{{T},System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.IPagedEnumerable`1.Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(System.Action{{T}},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.IPagedEnumerable`1.Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(System.Threading.CancellationToken)
  nameWithType.vb: IPagedEnumerable(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Azure.Batch.IPagedEnumerable(Of T)
  name.vb: IPagedEnumerable(Of T)
- uid: Microsoft.Azure.Batch.IPagedEnumerable`1.GetPagedEnumerator
  commentId: M:Microsoft.Azure.Batch.IPagedEnumerable`1.GetPagedEnumerator
  id: GetPagedEnumerator
  parent: Microsoft.Azure.Batch.IPagedEnumerable`1
  langs:
  - csharp
  - vb
  name: GetPagedEnumerator()
  nameWithType: IPagedEnumerable<T>.GetPagedEnumerator()
  fullName: Microsoft.Azure.Batch.IPagedEnumerable<T>.GetPagedEnumerator()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/IPagedEnumerable.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetPagedEnumerator
    path: src/azure-sdk-for-net/src/Batch/Client/Src/IPagedEnumerable.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nReturns an asynchronous enumerator that iterates through the paged collection.\n"
  example: []
  syntax:
    content: IPagedEnumerator<T> GetPagedEnumerator()
    content.vb: Function GetPagedEnumerator As IPagedEnumerator(Of T)
    return:
      type: Microsoft.Azure.Batch.IPagedEnumerator{{T}}
      description: The type of objects to enumerate.
  overload: Microsoft.Azure.Batch.IPagedEnumerable`1.GetPagedEnumerator*
  nameWithType.vb: IPagedEnumerable(Of T).GetPagedEnumerator()
  fullName.vb: Microsoft.Azure.Batch.IPagedEnumerable(Of T).GetPagedEnumerator()
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.IPagedEnumerable`1.Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(System.Func{{T},System.Threading.Tasks.Task},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.PagedEnumerableExtensions
  definition: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)
  name: ForEachAsync<T>(Func<T, Task>, CancellationToken)
  nameWithType: PagedEnumerableExtensions.ForEachAsync<T>(Func<T, Task>, CancellationToken)
  fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync<T>(System.Func<T, System.Threading.Tasks.Task>, System.Threading.CancellationToken)
  nameWithType.vb: PagedEnumerableExtensions.ForEachAsync(Of T)(Func(Of T, Task), CancellationToken)
  fullname.vb: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync(Of T)(System.Func(Of T, System.Threading.Tasks.Task), System.Threading.CancellationToken)
  name.vb: ForEachAsync(Of T)(Func(Of T, Task), CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)
    name: ForEachAsync<T>
    nameWithType: PagedEnumerableExtensions.ForEachAsync<T>
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)
    name: ForEachAsync(Of T)
    nameWithType: PagedEnumerableExtensions.ForEachAsync(Of T)
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.IPagedEnumerable`1.Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(System.Func{{T},System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.PagedEnumerableExtensions
  definition: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)
  name: ForEachAsync<T>(Func<T, CancellationToken, Task>, CancellationToken)
  nameWithType: PagedEnumerableExtensions.ForEachAsync<T>(Func<T, CancellationToken, Task>, CancellationToken)
  fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync<T>(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task>, System.Threading.CancellationToken)
  nameWithType.vb: PagedEnumerableExtensions.ForEachAsync(Of T)(Func(Of T, CancellationToken, Task), CancellationToken)
  fullname.vb: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync(Of T)(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task), System.Threading.CancellationToken)
  name.vb: ForEachAsync(Of T)(Func(Of T, CancellationToken, Task), CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)
    name: ForEachAsync<T>
    nameWithType: PagedEnumerableExtensions.ForEachAsync<T>
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)
    name: ForEachAsync(Of T)
    nameWithType: PagedEnumerableExtensions.ForEachAsync(Of T)
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.IPagedEnumerable`1.Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(System.Action{{T}},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Action{``0},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.PagedEnumerableExtensions
  definition: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Action{``0},System.Threading.CancellationToken)
  name: ForEachAsync<T>(Action<T>, CancellationToken)
  nameWithType: PagedEnumerableExtensions.ForEachAsync<T>(Action<T>, CancellationToken)
  fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync<T>(System.Action<T>, System.Threading.CancellationToken)
  nameWithType.vb: PagedEnumerableExtensions.ForEachAsync(Of T)(Action(Of T), CancellationToken)
  fullname.vb: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync(Of T)(System.Action(Of T), System.Threading.CancellationToken)
  name.vb: ForEachAsync(Of T)(Action(Of T), CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(System.Action{``0},System.Threading.CancellationToken)
    name: ForEachAsync<T>
    nameWithType: PagedEnumerableExtensions.ForEachAsync<T>
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(System.Action{``0},System.Threading.CancellationToken)
    name: ForEachAsync(Of T)
    nameWithType: PagedEnumerableExtensions.ForEachAsync(Of T)
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.IPagedEnumerable`1.Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.PagedEnumerableExtensions
  definition: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Threading.CancellationToken)
  name: ToListAsync<T>(CancellationToken)
  nameWithType: PagedEnumerableExtensions.ToListAsync<T>(CancellationToken)
  fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync<T>(System.Threading.CancellationToken)
  nameWithType.vb: PagedEnumerableExtensions.ToListAsync(Of T)(CancellationToken)
  fullname.vb: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync(Of T)(System.Threading.CancellationToken)
  name.vb: ToListAsync(Of T)(CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(System.Threading.CancellationToken)
    name: ToListAsync<T>
    nameWithType: PagedEnumerableExtensions.ToListAsync<T>
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(System.Threading.CancellationToken)
    name: ToListAsync(Of T)
    nameWithType: PagedEnumerableExtensions.ToListAsync(Of T)
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)
  isExternal: true
  name: ForEachAsync<T>(IPagedEnumerable<T>, Func<T, Task>, CancellationToken)
  nameWithType: PagedEnumerableExtensions.ForEachAsync<T>(IPagedEnumerable<T>, Func<T, Task>, CancellationToken)
  fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync<T>(Microsoft.Azure.Batch.IPagedEnumerable<T>, System.Func<T, System.Threading.Tasks.Task>, System.Threading.CancellationToken)
  nameWithType.vb: PagedEnumerableExtensions.ForEachAsync(Of T)(IPagedEnumerable(Of T), Func(Of T, Task), CancellationToken)
  fullname.vb: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync(Of T)(Microsoft.Azure.Batch.IPagedEnumerable(Of T), System.Func(Of T, System.Threading.Tasks.Task), System.Threading.CancellationToken)
  name.vb: ForEachAsync(Of T)(IPagedEnumerable(Of T), Func(Of T, Task), CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)
    name: ForEachAsync<T>
    nameWithType: PagedEnumerableExtensions.ForEachAsync<T>
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)
    name: ForEachAsync(Of T)
    nameWithType: PagedEnumerableExtensions.ForEachAsync(Of T)
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.PagedEnumerableExtensions
  commentId: T:Microsoft.Azure.Batch.PagedEnumerableExtensions
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: PagedEnumerableExtensions
  nameWithType: PagedEnumerableExtensions
  fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions
- uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)
  isExternal: true
  name: ForEachAsync<T>(IPagedEnumerable<T>, Func<T, CancellationToken, Task>, CancellationToken)
  nameWithType: PagedEnumerableExtensions.ForEachAsync<T>(IPagedEnumerable<T>, Func<T, CancellationToken, Task>, CancellationToken)
  fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync<T>(Microsoft.Azure.Batch.IPagedEnumerable<T>, System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task>, System.Threading.CancellationToken)
  nameWithType.vb: PagedEnumerableExtensions.ForEachAsync(Of T)(IPagedEnumerable(Of T), Func(Of T, CancellationToken, Task), CancellationToken)
  fullname.vb: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync(Of T)(Microsoft.Azure.Batch.IPagedEnumerable(Of T), System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task), System.Threading.CancellationToken)
  name.vb: ForEachAsync(Of T)(IPagedEnumerable(Of T), Func(Of T, CancellationToken, Task), CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)
    name: ForEachAsync<T>
    nameWithType: PagedEnumerableExtensions.ForEachAsync<T>
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)
    name: ForEachAsync(Of T)
    nameWithType: PagedEnumerableExtensions.ForEachAsync(Of T)
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Action{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Action{``0},System.Threading.CancellationToken)
  isExternal: true
  name: ForEachAsync<T>(IPagedEnumerable<T>, Action<T>, CancellationToken)
  nameWithType: PagedEnumerableExtensions.ForEachAsync<T>(IPagedEnumerable<T>, Action<T>, CancellationToken)
  fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync<T>(Microsoft.Azure.Batch.IPagedEnumerable<T>, System.Action<T>, System.Threading.CancellationToken)
  nameWithType.vb: PagedEnumerableExtensions.ForEachAsync(Of T)(IPagedEnumerable(Of T), Action(Of T), CancellationToken)
  fullname.vb: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync(Of T)(Microsoft.Azure.Batch.IPagedEnumerable(Of T), System.Action(Of T), System.Threading.CancellationToken)
  name.vb: ForEachAsync(Of T)(IPagedEnumerable(Of T), Action(Of T), CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Action{``0},System.Threading.CancellationToken)
    name: ForEachAsync<T>
    nameWithType: PagedEnumerableExtensions.ForEachAsync<T>
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Action{``0},System.Threading.CancellationToken)
    name: ForEachAsync(Of T)
    nameWithType: PagedEnumerableExtensions.ForEachAsync(Of T)
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Threading.CancellationToken)
  isExternal: true
  name: ToListAsync<T>(IPagedEnumerable<T>, CancellationToken)
  nameWithType: PagedEnumerableExtensions.ToListAsync<T>(IPagedEnumerable<T>, CancellationToken)
  fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync<T>(Microsoft.Azure.Batch.IPagedEnumerable<T>, System.Threading.CancellationToken)
  nameWithType.vb: PagedEnumerableExtensions.ToListAsync(Of T)(IPagedEnumerable(Of T), CancellationToken)
  fullname.vb: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync(Of T)(Microsoft.Azure.Batch.IPagedEnumerable(Of T), System.Threading.CancellationToken)
  name.vb: ToListAsync(Of T)(IPagedEnumerable(Of T), CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Threading.CancellationToken)
    name: ToListAsync<T>
    nameWithType: PagedEnumerableExtensions.ToListAsync<T>
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Threading.CancellationToken)
    name: ToListAsync(Of T)
    nameWithType: PagedEnumerableExtensions.ToListAsync(Of T)
    fullName: Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.IPagedEnumerable`1.GetPagedEnumerator*
  commentId: Overload:Microsoft.Azure.Batch.IPagedEnumerable`1.GetPagedEnumerator
  isExternal: false
  name: GetPagedEnumerator
  nameWithType: IPagedEnumerable.GetPagedEnumerator
  fullName: Microsoft.Azure.Batch.IPagedEnumerable.GetPagedEnumerator
- uid: Microsoft.Azure.Batch.IPagedEnumerator{{T}}
  commentId: T:Microsoft.Azure.Batch.IPagedEnumerator{`0}
  parent: Microsoft.Azure.Batch
  definition: Microsoft.Azure.Batch.IPagedEnumerator`1
  name: IPagedEnumerator<T>
  nameWithType: IPagedEnumerator<T>
  fullName: Microsoft.Azure.Batch.IPagedEnumerator<T>
  nameWithType.vb: IPagedEnumerator(Of T)
  fullname.vb: Microsoft.Azure.Batch.IPagedEnumerator(Of T)
  name.vb: IPagedEnumerator(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IPagedEnumerator`1
    name: IPagedEnumerator
    nameWithType: IPagedEnumerator
    fullName: Microsoft.Azure.Batch.IPagedEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Batch.IPagedEnumerator`1
    name: IPagedEnumerator
    nameWithType: IPagedEnumerator
    fullName: Microsoft.Azure.Batch.IPagedEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.IPagedEnumerator`1
  commentId: T:Microsoft.Azure.Batch.IPagedEnumerator`1
  isExternal: false
  name: IPagedEnumerator<T>
  nameWithType: IPagedEnumerator<T>
  fullName: Microsoft.Azure.Batch.IPagedEnumerator<T>
  nameWithType.vb: IPagedEnumerator(Of T)
  fullname.vb: Microsoft.Azure.Batch.IPagedEnumerator(Of T)
  name.vb: IPagedEnumerator(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IPagedEnumerator`1
    name: IPagedEnumerator
    nameWithType: IPagedEnumerator
    fullName: Microsoft.Azure.Batch.IPagedEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Batch.IPagedEnumerator`1
    name: IPagedEnumerator
    nameWithType: IPagedEnumerator
    fullName: Microsoft.Azure.Batch.IPagedEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
