### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.TaskConstraints
  commentId: T:Microsoft.Azure.Batch.TaskConstraints
  id: TaskConstraints
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.TaskConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Int32})
  - Microsoft.Azure.Batch.TaskConstraints.MaxTaskRetryCount
  - Microsoft.Azure.Batch.TaskConstraints.MaxWallClockTime
  - Microsoft.Azure.Batch.TaskConstraints.RetentionTime
  langs:
  - csharp
  - vb
  name: TaskConstraints
  nameWithType: TaskConstraints
  fullName: Microsoft.Azure.Batch.TaskConstraints
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskConstraints.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskConstraints
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskConstraints.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDefines the constraints on a particular Azure Batch task.\n"
  example: []
  syntax:
    content: 'public class TaskConstraints : ITransportObjectProvider<TaskConstraints>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class TaskConstraints
          Implements ITransportObjectProvider(Of TaskConstraints), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.TaskConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Int32})
  commentId: M:Microsoft.Azure.Batch.TaskConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Int32})
  id: '#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Int32})'
  parent: Microsoft.Azure.Batch.TaskConstraints
  langs:
  - csharp
  - vb
  name: TaskConstraints(Nullable<TimeSpan>, Nullable<TimeSpan>, Nullable<Int32>)
  nameWithType: TaskConstraints.TaskConstraints(Nullable<TimeSpan>, Nullable<TimeSpan>, Nullable<Int32>)
  fullName: Microsoft.Azure.Batch.TaskConstraints.TaskConstraints(System.Nullable<System.TimeSpan>, System.Nullable<System.TimeSpan>, System.Nullable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskConstraints.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskConstraints.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.TaskConstraints\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TaskConstraints(TimeSpan? maxWallClockTime = null, TimeSpan? retentionTime = null, int ? maxTaskRetryCount = null)
    content.vb: Public Sub New(maxWallClockTime As TimeSpan? = Nothing, retentionTime As TimeSpan? = Nothing, maxTaskRetryCount As Integer? = Nothing)
    parameters:
    - id: maxWallClockTime
      type: System.Nullable{System.TimeSpan}
      description: The maximum elapsed time that the task may run, measured from the time the task starts.
    - id: retentionTime
      type: System.Nullable{System.TimeSpan}
      description: "The minimum time to retain the working directory for the task on the compute node where it ran, from the time \nit completes execution. After this time, the Batch service may delete the working directory and all its contents."
    - id: maxTaskRetryCount
      type: System.Nullable{System.Int32}
      description: The maximum number of retries for the task.
  overload: Microsoft.Azure.Batch.TaskConstraints.#ctor*
  nameWithType.vb: TaskConstraints.TaskConstraints(Nullable(Of TimeSpan), Nullable(Of TimeSpan), Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.TaskConstraints.TaskConstraints(System.Nullable(Of System.TimeSpan), System.Nullable(Of System.TimeSpan), System.Nullable(Of System.Int32))
  name.vb: TaskConstraints(Nullable(Of TimeSpan), Nullable(Of TimeSpan), Nullable(Of Int32))
- uid: Microsoft.Azure.Batch.TaskConstraints.MaxTaskRetryCount
  commentId: P:Microsoft.Azure.Batch.TaskConstraints.MaxTaskRetryCount
  id: MaxTaskRetryCount
  parent: Microsoft.Azure.Batch.TaskConstraints
  langs:
  - csharp
  - vb
  name: MaxTaskRetryCount
  nameWithType: TaskConstraints.MaxTaskRetryCount
  fullName: Microsoft.Azure.Batch.TaskConstraints.MaxTaskRetryCount
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskConstraints.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxTaskRetryCount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskConstraints.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the maximum number of retries for the task.\n"
  example: []
  syntax:
    content: public int ? MaxTaskRetryCount { get; set; }
    content.vb: Public Property MaxTaskRetryCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.TaskConstraints.MaxTaskRetryCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.TaskConstraints.MaxWallClockTime
  commentId: P:Microsoft.Azure.Batch.TaskConstraints.MaxWallClockTime
  id: MaxWallClockTime
  parent: Microsoft.Azure.Batch.TaskConstraints
  langs:
  - csharp
  - vb
  name: MaxWallClockTime
  nameWithType: TaskConstraints.MaxWallClockTime
  fullName: Microsoft.Azure.Batch.TaskConstraints.MaxWallClockTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskConstraints.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxWallClockTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskConstraints.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the maximum elapsed time that the task may run, measured from the time the task starts.\n"
  example: []
  syntax:
    content: public TimeSpan? MaxWallClockTime { get; set; }
    content.vb: Public Property MaxWallClockTime As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.TaskConstraints.MaxWallClockTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.TaskConstraints.RetentionTime
  commentId: P:Microsoft.Azure.Batch.TaskConstraints.RetentionTime
  id: RetentionTime
  parent: Microsoft.Azure.Batch.TaskConstraints
  langs:
  - csharp
  - vb
  name: RetentionTime
  nameWithType: TaskConstraints.RetentionTime
  fullName: Microsoft.Azure.Batch.TaskConstraints.RetentionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/TaskConstraints.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RetentionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/TaskConstraints.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the minimum time to retain the working directory for the task on the compute node where it ran, \nfrom the time it completes execution. After this time, the Batch service may delete the working directory and \nall its contents.\n"
  example: []
  syntax:
    content: public TimeSpan? RetentionTime { get; set; }
    content.vb: Public Property RetentionTime As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.TaskConstraints.RetentionTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.TaskConstraints
  commentId: T:Microsoft.Azure.Batch.TaskConstraints
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: TaskConstraints
  nameWithType: TaskConstraints
  fullName: Microsoft.Azure.Batch.TaskConstraints
- uid: Microsoft.Azure.Batch.TaskConstraints.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.TaskConstraints.#ctor
  isExternal: false
  name: TaskConstraints
  nameWithType: TaskConstraints.TaskConstraints
  fullName: Microsoft.Azure.Batch.TaskConstraints.TaskConstraints
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.TaskConstraints.MaxTaskRetryCount*
  commentId: Overload:Microsoft.Azure.Batch.TaskConstraints.MaxTaskRetryCount
  isExternal: false
  name: MaxTaskRetryCount
  nameWithType: TaskConstraints.MaxTaskRetryCount
  fullName: Microsoft.Azure.Batch.TaskConstraints.MaxTaskRetryCount
- uid: Microsoft.Azure.Batch.TaskConstraints.MaxWallClockTime*
  commentId: Overload:Microsoft.Azure.Batch.TaskConstraints.MaxWallClockTime
  isExternal: false
  name: MaxWallClockTime
  nameWithType: TaskConstraints.MaxWallClockTime
  fullName: Microsoft.Azure.Batch.TaskConstraints.MaxWallClockTime
- uid: Microsoft.Azure.Batch.TaskConstraints.RetentionTime*
  commentId: Overload:Microsoft.Azure.Batch.TaskConstraints.RetentionTime
  isExternal: false
  name: RetentionTime
  nameWithType: TaskConstraints.RetentionTime
  fullName: Microsoft.Azure.Batch.TaskConstraints.RetentionTime
