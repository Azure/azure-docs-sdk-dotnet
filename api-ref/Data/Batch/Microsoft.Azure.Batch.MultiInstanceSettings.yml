### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.MultiInstanceSettings
  commentId: T:Microsoft.Azure.Batch.MultiInstanceSettings
  id: MultiInstanceSettings
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.MultiInstanceSettings.#ctor(System.Int32)
  - Microsoft.Azure.Batch.MultiInstanceSettings.CommonResourceFiles
  - Microsoft.Azure.Batch.MultiInstanceSettings.CoordinationCommandLine
  - Microsoft.Azure.Batch.MultiInstanceSettings.NumberOfInstances
  langs:
  - csharp
  - vb
  name: MultiInstanceSettings
  nameWithType: MultiInstanceSettings
  fullName: Microsoft.Azure.Batch.MultiInstanceSettings
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/MultiInstanceSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MultiInstanceSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/MultiInstanceSettings.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nSettings which specify how to run a multi-instance task. Multi-instance tasks are commonly used to support MPI tasks. \nFor more information see https://azure.microsoft.com/documentation/articles/batch-mpi/.\n"
  example: []
  syntax:
    content: 'public class MultiInstanceSettings : ITransportObjectProvider<MultiInstanceSettings>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class MultiInstanceSettings
          Implements ITransportObjectProvider(Of MultiInstanceSettings), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.MultiInstanceSettings.#ctor(System.Int32)
  commentId: M:Microsoft.Azure.Batch.MultiInstanceSettings.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.Azure.Batch.MultiInstanceSettings
  langs:
  - csharp
  - vb
  name: MultiInstanceSettings(Int32)
  nameWithType: MultiInstanceSettings.MultiInstanceSettings(Int32)
  fullName: Microsoft.Azure.Batch.MultiInstanceSettings.MultiInstanceSettings(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/MultiInstanceSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/MultiInstanceSettings.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.MultiInstanceSettings\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MultiInstanceSettings(int numberOfInstances)
    content.vb: Public Sub New(numberOfInstances As Integer)
    parameters:
    - id: numberOfInstances
      type: System.Int32
      description: The number of compute nodes required by the multi-instance task.
  overload: Microsoft.Azure.Batch.MultiInstanceSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.MultiInstanceSettings.CommonResourceFiles
  commentId: P:Microsoft.Azure.Batch.MultiInstanceSettings.CommonResourceFiles
  id: CommonResourceFiles
  parent: Microsoft.Azure.Batch.MultiInstanceSettings
  langs:
  - csharp
  - vb
  name: CommonResourceFiles
  nameWithType: MultiInstanceSettings.CommonResourceFiles
  fullName: Microsoft.Azure.Batch.MultiInstanceSettings.CommonResourceFiles
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/MultiInstanceSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommonResourceFiles
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/MultiInstanceSettings.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of files that the Batch service will download before running the coordination command line.\n"
  remarks: "\nThe difference between common resource files and task resource files is that common resource files are downloaded \nfor all subtasks including the primary, whereas task resource files are downloaded only for the primary.\n"
  example: []
  syntax:
    content: public IList<ResourceFile> CommonResourceFiles { get; set; }
    content.vb: Public Property CommonResourceFiles As IList(Of ResourceFile)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.ResourceFile}
  overload: Microsoft.Azure.Batch.MultiInstanceSettings.CommonResourceFiles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.MultiInstanceSettings.CoordinationCommandLine
  commentId: P:Microsoft.Azure.Batch.MultiInstanceSettings.CoordinationCommandLine
  id: CoordinationCommandLine
  parent: Microsoft.Azure.Batch.MultiInstanceSettings
  langs:
  - csharp
  - vb
  name: CoordinationCommandLine
  nameWithType: MultiInstanceSettings.CoordinationCommandLine
  fullName: Microsoft.Azure.Batch.MultiInstanceSettings.CoordinationCommandLine
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/MultiInstanceSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CoordinationCommandLine
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/MultiInstanceSettings.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the command to run on the compute node instances for coordinating among the subtasks.\n"
  example: []
  syntax:
    content: public string CoordinationCommandLine { get; set; }
    content.vb: Public Property CoordinationCommandLine As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.MultiInstanceSettings.CoordinationCommandLine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.MultiInstanceSettings.NumberOfInstances
  commentId: P:Microsoft.Azure.Batch.MultiInstanceSettings.NumberOfInstances
  id: NumberOfInstances
  parent: Microsoft.Azure.Batch.MultiInstanceSettings
  langs:
  - csharp
  - vb
  name: NumberOfInstances
  nameWithType: MultiInstanceSettings.NumberOfInstances
  fullName: Microsoft.Azure.Batch.MultiInstanceSettings.NumberOfInstances
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/MultiInstanceSettings.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NumberOfInstances
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/MultiInstanceSettings.cs
    startLine: 118
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the number of compute nodes required by the multi-instance task.\n"
  example: []
  syntax:
    content: public int NumberOfInstances { get; set; }
    content.vb: Public Property NumberOfInstances As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Batch.MultiInstanceSettings.NumberOfInstances*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.MultiInstanceSettings
  commentId: T:Microsoft.Azure.Batch.MultiInstanceSettings
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: MultiInstanceSettings
  nameWithType: MultiInstanceSettings
  fullName: Microsoft.Azure.Batch.MultiInstanceSettings
- uid: Microsoft.Azure.Batch.MultiInstanceSettings.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.MultiInstanceSettings.#ctor
  isExternal: false
  name: MultiInstanceSettings
  nameWithType: MultiInstanceSettings.MultiInstanceSettings
  fullName: Microsoft.Azure.Batch.MultiInstanceSettings.MultiInstanceSettings
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Batch.MultiInstanceSettings.CommonResourceFiles*
  commentId: Overload:Microsoft.Azure.Batch.MultiInstanceSettings.CommonResourceFiles
  isExternal: false
  name: CommonResourceFiles
  nameWithType: MultiInstanceSettings.CommonResourceFiles
  fullName: Microsoft.Azure.Batch.MultiInstanceSettings.CommonResourceFiles
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.ResourceFile}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.ResourceFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ResourceFile>
  nameWithType: IList<ResourceFile>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.ResourceFile>
  nameWithType.vb: IList(Of ResourceFile)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.ResourceFile)
  name.vb: IList(Of ResourceFile)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.ResourceFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.ResourceFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.MultiInstanceSettings.CoordinationCommandLine*
  commentId: Overload:Microsoft.Azure.Batch.MultiInstanceSettings.CoordinationCommandLine
  isExternal: false
  name: CoordinationCommandLine
  nameWithType: MultiInstanceSettings.CoordinationCommandLine
  fullName: Microsoft.Azure.Batch.MultiInstanceSettings.CoordinationCommandLine
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.MultiInstanceSettings.NumberOfInstances*
  commentId: Overload:Microsoft.Azure.Batch.MultiInstanceSettings.NumberOfInstances
  isExternal: false
  name: NumberOfInstances
  nameWithType: MultiInstanceSettings.NumberOfInstances
  fullName: Microsoft.Azure.Batch.MultiInstanceSettings.NumberOfInstances
