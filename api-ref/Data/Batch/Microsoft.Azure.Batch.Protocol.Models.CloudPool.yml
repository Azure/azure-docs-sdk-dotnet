### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CloudPool
  id: CloudPool
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.PoolState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AllocationState},System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration,Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration,System.Nullable{System.TimeSpan},Microsoft.Azure.Batch.Protocol.Models.ResizeError,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.TimeSpan},Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration,Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.PoolStatistics)
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationState
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationStateTransitionTime
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.ApplicationPackageReferences
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleEvaluationInterval
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleFormula
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleRun
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.CertificateReferences
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudServiceConfiguration
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.CreationTime
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentDedicated
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.DisplayName
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableAutoScale
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableInterNodeCommunication
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.ETag
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.Id
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.LastModified
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.MaxTasksPerNode
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.Metadata
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.NetworkConfiguration
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeError
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeTimeout
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.StartTask
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.State
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.StateTransitionTime
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.Stats
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetDedicated
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.TaskSchedulingPolicy
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.Url
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.Validate
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.VirtualMachineConfiguration
  - Microsoft.Azure.Batch.Protocol.Models.CloudPool.VmSize
  langs:
  - csharp
  - vb
  name: CloudPool
  nameWithType: CloudPool
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloudPool
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nA pool in the Azure Batch service.\n"
  example: []
  syntax:
    content: public class CloudPool
    content.vb: Public Class CloudPool
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: CloudPool()
  nameWithType: CloudPool.CloudPool()
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudPool()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the CloudPool class.\n"
  example: []
  syntax:
    content: public CloudPool()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.PoolState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AllocationState},System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration,Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration,System.Nullable{System.TimeSpan},Microsoft.Azure.Batch.Protocol.Models.ResizeError,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.TimeSpan},Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration,Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.PoolStatistics)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.PoolState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AllocationState},System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration,Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration,System.Nullable{System.TimeSpan},Microsoft.Azure.Batch.Protocol.Models.ResizeError,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.TimeSpan},Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration,Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.PoolStatistics)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.PoolState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AllocationState},System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration,Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration,System.Nullable{System.TimeSpan},Microsoft.Azure.Batch.Protocol.Models.ResizeError,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.TimeSpan},Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration,Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.PoolStatistics)'
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: CloudPool(String, String, String, String, Nullable<DateTime>, Nullable<DateTime>, Nullable<PoolState>, Nullable<DateTime>, Nullable<AllocationState>, Nullable<DateTime>, String, CloudServiceConfiguration, VirtualMachineConfiguration, Nullable<TimeSpan>, ResizeError, Nullable<Int32>, Nullable<Int32>, Nullable<Boolean>, String, Nullable<TimeSpan>, AutoScaleRun, Nullable<Boolean>, NetworkConfiguration, StartTask, IList<CertificateReference>, IList<ApplicationPackageReference>, Nullable<Int32>, TaskSchedulingPolicy, IList<MetadataItem>, PoolStatistics)
  nameWithType: CloudPool.CloudPool(String, String, String, String, Nullable<DateTime>, Nullable<DateTime>, Nullable<PoolState>, Nullable<DateTime>, Nullable<AllocationState>, Nullable<DateTime>, String, CloudServiceConfiguration, VirtualMachineConfiguration, Nullable<TimeSpan>, ResizeError, Nullable<Int32>, Nullable<Int32>, Nullable<Boolean>, String, Nullable<TimeSpan>, AutoScaleRun, Nullable<Boolean>, NetworkConfiguration, StartTask, IList<CertificateReference>, IList<ApplicationPackageReference>, Nullable<Int32>, TaskSchedulingPolicy, IList<MetadataItem>, PoolStatistics)
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudPool(System.String, System.String, System.String, System.String, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.PoolState>, System.Nullable<System.DateTime>, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.AllocationState>, System.Nullable<System.DateTime>, System.String, Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration, Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration, System.Nullable<System.TimeSpan>, Microsoft.Azure.Batch.Protocol.Models.ResizeError, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Boolean>, System.String, System.Nullable<System.TimeSpan>, Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration, Microsoft.Azure.Batch.Protocol.Models.StartTask, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.CertificateReference>, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference>, System.Nullable<System.Int32>, Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.MetadataItem>, Microsoft.Azure.Batch.Protocol.Models.PoolStatistics)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the CloudPool class.\n"
  example: []
  syntax:
    content: public CloudPool(string id = null, string displayName = null, string url = null, string eTag = null, DateTime? lastModified = null, DateTime? creationTime = null, PoolState? state = null, DateTime? stateTransitionTime = null, AllocationState? allocationState = null, DateTime? allocationStateTransitionTime = null, string vmSize = null, CloudServiceConfiguration cloudServiceConfiguration = null, VirtualMachineConfiguration virtualMachineConfiguration = null, TimeSpan? resizeTimeout = null, ResizeError resizeError = null, int ? currentDedicated = null, int ? targetDedicated = null, bool ? enableAutoScale = null, string autoScaleFormula = null, TimeSpan? autoScaleEvaluationInterval = null, AutoScaleRun autoScaleRun = null, bool ? enableInterNodeCommunication = null, NetworkConfiguration networkConfiguration = null, StartTask startTask = null, IList<CertificateReference> certificateReferences = null, IList<ApplicationPackageReference> applicationPackageReferences = null, int ? maxTasksPerNode = null, TaskSchedulingPolicy taskSchedulingPolicy = null, IList<MetadataItem> metadata = null, PoolStatistics stats = null)
    content.vb: Public Sub New(id As String = Nothing, displayName As String = Nothing, url As String = Nothing, eTag As String = Nothing, lastModified As Date? = Nothing, creationTime As Date? = Nothing, state As PoolState? = Nothing, stateTransitionTime As Date? = Nothing, allocationState As AllocationState? = Nothing, allocationStateTransitionTime As Date? = Nothing, vmSize As String = Nothing, cloudServiceConfiguration As CloudServiceConfiguration = Nothing, virtualMachineConfiguration As VirtualMachineConfiguration = Nothing, resizeTimeout As TimeSpan? = Nothing, resizeError As ResizeError = Nothing, currentDedicated As Integer? = Nothing, targetDedicated As Integer? = Nothing, enableAutoScale As Boolean? = Nothing, autoScaleFormula As String = Nothing, autoScaleEvaluationInterval As TimeSpan? = Nothing, autoScaleRun As AutoScaleRun = Nothing, enableInterNodeCommunication As Boolean? = Nothing, networkConfiguration As NetworkConfiguration = Nothing, startTask As StartTask = Nothing, certificateReferences As IList(Of CertificateReference) = Nothing, applicationPackageReferences As IList(Of ApplicationPackageReference) = Nothing, maxTasksPerNode As Integer? = Nothing, taskSchedulingPolicy As TaskSchedulingPolicy = Nothing, metadata As IList(Of MetadataItem) = Nothing, stats As PoolStatistics = Nothing)
    parameters:
    - id: id
      type: System.String
      description: >-
        A string that uniquely identifies the pool within

        the account.
    - id: displayName
      type: System.String
      description: The display name for the pool.
    - id: url
      type: System.String
      description: The URL of the pool.
    - id: eTag
      type: System.String
      description: The ETag of the pool.
    - id: lastModified
      type: System.Nullable{System.DateTime}
      description: >-
        The last modified time of the

        pool.
    - id: creationTime
      type: System.Nullable{System.DateTime}
      description: The creation time of the pool.
    - id: state
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.PoolState}
      description: The current state of the pool.
    - id: stateTransitionTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the pool

        entered its current state.
    - id: allocationState
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AllocationState}
      description: Whether the pool is resizing.
    - id: allocationStateTransitionTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the

        pool entered its current allocation state.
    - id: vmSize
      type: System.String
      description: >-
        The size of virtual machines in the pool. All

        virtual machines in a pool are the same size.
    - id: cloudServiceConfiguration
      type: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
      description: >-
        The cloud service

        configuration for the pool.
    - id: virtualMachineConfiguration
      type: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
      description: >-
        The virtual machine

        configuration for the pool.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: >-
        The timeout for allocation of compute

        nodes to the pool.
    - id: resizeError
      type: Microsoft.Azure.Batch.Protocol.Models.ResizeError
      description: >-
        Details of any error encountered while

        performing the last resize on the pool.
    - id: currentDedicated
      type: System.Nullable{System.Int32}
      description: >-
        The number of compute nodes

        currently in the pool.
    - id: targetDedicated
      type: System.Nullable{System.Int32}
      description: >-
        The desired number of compute nodes

        in the pool.
    - id: enableAutoScale
      type: System.Nullable{System.Boolean}
      description: >-
        Whether the pool size should

        automatically adjust over time.
    - id: autoScaleFormula
      type: System.String
      description: >-
        A formula for the desired number of

        compute nodes in the pool.
    - id: autoScaleEvaluationInterval
      type: System.Nullable{System.TimeSpan}
      description: >-
        A time interval for the

        desired AutoScale evaluation period in the pool.
    - id: autoScaleRun
      type: Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
      description: >-
        The results and errors from the last

        execution of the autoscale formula.
    - id: enableInterNodeCommunication
      type: System.Nullable{System.Boolean}
      description: >-
        Whether the pool

        permits direct communication between nodes.
    - id: networkConfiguration
      type: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration
      description: >-
        The network configuration for

        the pool.
    - id: startTask
      type: Microsoft.Azure.Batch.Protocol.Models.StartTask
      description: >-
        A task specified to run on each compute

        node as it joins the pool.
    - id: certificateReferences
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference}
      description: >-
        The list of certificates to be

        installed on each compute node in the pool.
    - id: applicationPackageReferences
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
      description: >-
        The list of application

        packages to be installed on each compute node in the pool.
    - id: maxTasksPerNode
      type: System.Nullable{System.Int32}
      description: >-
        The maximum number of tasks that can

        run concurrently on a single compute node in the pool.
    - id: taskSchedulingPolicy
      type: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy
      description: >-
        How the Batch service

        distributes tasks between compute nodes in the pool.
    - id: metadata
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
      description: >-
        A list of name-value pairs associated with

        the pool as metadata.
    - id: stats
      type: Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
      description: >-
        Utilization and resource usage statistics for

        the entire lifetime of the pool.
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor*
  nameWithType.vb: CloudPool.CloudPool(String, String, String, String, Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of PoolState), Nullable(Of DateTime), Nullable(Of AllocationState), Nullable(Of DateTime), String, CloudServiceConfiguration, VirtualMachineConfiguration, Nullable(Of TimeSpan), ResizeError, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Boolean), String, Nullable(Of TimeSpan), AutoScaleRun, Nullable(Of Boolean), NetworkConfiguration, StartTask, IList(Of CertificateReference), IList(Of ApplicationPackageReference), Nullable(Of Int32), TaskSchedulingPolicy, IList(Of MetadataItem), PoolStatistics)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudPool(System.String, System.String, System.String, System.String, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.PoolState), System.Nullable(Of System.DateTime), System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.AllocationState), System.Nullable(Of System.DateTime), System.String, Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration, Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration, System.Nullable(Of System.TimeSpan), Microsoft.Azure.Batch.Protocol.Models.ResizeError, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Boolean), System.String, System.Nullable(Of System.TimeSpan), Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration, Microsoft.Azure.Batch.Protocol.Models.StartTask, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.CertificateReference), System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference), System.Nullable(Of System.Int32), Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.MetadataItem), Microsoft.Azure.Batch.Protocol.Models.PoolStatistics)
  name.vb: CloudPool(String, String, String, String, Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of PoolState), Nullable(Of DateTime), Nullable(Of AllocationState), Nullable(Of DateTime), String, CloudServiceConfiguration, VirtualMachineConfiguration, Nullable(Of TimeSpan), ResizeError, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Boolean), String, Nullable(Of TimeSpan), AutoScaleRun, Nullable(Of Boolean), NetworkConfiguration, StartTask, IList(Of CertificateReference), IList(Of ApplicationPackageReference), Nullable(Of Int32), TaskSchedulingPolicy, IList(Of MetadataItem), PoolStatistics)
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Id
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Id
  id: Id
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CloudPool.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a string that uniquely identifies the pool within the\naccount.\n"
  remarks: "\nThe id can contain any combination of alphanumeric characters\nincluding hyphens and underscores, and cannot contain more than\n64 characters. It is common to use a GUID for the id.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.DisplayName
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: CloudPool.DisplayName
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.DisplayName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the display name for the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "displayName")]

      public string DisplayName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="displayName")>

      Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.DisplayName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: displayName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Url
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Url
  id: Url
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: CloudPool.Url
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Url
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Url
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 144
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the URL of the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "url")]

      public string Url { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="url")>

      Public Property Url As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Url*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: url
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ETag
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ETag
  id: ETag
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: CloudPool.ETag
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ETag
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ETag
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 150
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the ETag of the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "eTag")]

      public string ETag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="eTag")>

      Public Property ETag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ETag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: eTag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.LastModified
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.LastModified
  id: LastModified
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: CloudPool.LastModified
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.LastModified
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastModified
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the last modified time of the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lastModified")]

      public DateTime? LastModified { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="lastModified")>

      Public Property LastModified As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.LastModified*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lastModified
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CreationTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CreationTime
  id: CreationTime
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: CreationTime
  nameWithType: CloudPool.CreationTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CreationTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreationTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 162
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the creation time of the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "creationTime")]

      public DateTime? CreationTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="creationTime")>

      Public Property CreationTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CreationTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: creationTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.State
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.State
  id: State
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: State
  nameWithType: CloudPool.State
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.State
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 171
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the current state of the pool.\n"
  remarks: "\nPossible values include: 'active', 'deleting', 'upgrading'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "state")]

      public PoolState? State { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="state")>

      Public Property State As PoolState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.PoolState}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.State*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: state
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.StateTransitionTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.StateTransitionTime
  id: StateTransitionTime
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: StateTransitionTime
  nameWithType: CloudPool.StateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.StateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 177
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the pool entered its current state.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "stateTransitionTime")]

      public DateTime? StateTransitionTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="stateTransitionTime")>

      Public Property StateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.StateTransitionTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: stateTransitionTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationState
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationState
  id: AllocationState
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: AllocationState
  nameWithType: CloudPool.AllocationState
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationState
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllocationState
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 186
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether the pool is resizing.\n"
  remarks: "\nPossible values include: 'steady', 'resizing', 'stopping'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "allocationState")]

      public AllocationState? AllocationState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="allocationState")>

      Public Property AllocationState As AllocationState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AllocationState}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: allocationState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationStateTransitionTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationStateTransitionTime
  id: AllocationStateTransitionTime
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: AllocationStateTransitionTime
  nameWithType: CloudPool.AllocationStateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationStateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllocationStateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 193
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the pool entered its current\nallocation state.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "allocationStateTransitionTime")]

      public DateTime? AllocationStateTransitionTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="allocationStateTransitionTime")>

      Public Property AllocationStateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationStateTransitionTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: allocationStateTransitionTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.VmSize
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.VmSize
  id: VmSize
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: VmSize
  nameWithType: CloudPool.VmSize
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.VmSize
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VmSize
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 200
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the size of virtual machines in the pool. All virtual\nmachines in a pool are the same size.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "vmSize")]

      public string VmSize { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="vmSize")>

      Public Property VmSize As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.VmSize*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: vmSize
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudServiceConfiguration
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudServiceConfiguration
  id: CloudServiceConfiguration
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: CloudServiceConfiguration
  nameWithType: CloudPool.CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudServiceConfiguration
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloudServiceConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 210
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the cloud service configuration for the pool.\n"
  remarks: "\nThis property and virtualMachineConfiguration are mutually\nexclusive and one of the properties must be specified.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "cloudServiceConfiguration")]

      public CloudServiceConfiguration CloudServiceConfiguration { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="cloudServiceConfiguration")>

      Public Property CloudServiceConfiguration As CloudServiceConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudServiceConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: cloudServiceConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.VirtualMachineConfiguration
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.VirtualMachineConfiguration
  id: VirtualMachineConfiguration
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: VirtualMachineConfiguration
  nameWithType: CloudPool.VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.VirtualMachineConfiguration
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 220
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the virtual machine configuration for the pool.\n"
  remarks: "\nThis property and cloudServiceConfiguration are mutually exclusive\nand one of the properties must be specified.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "virtualMachineConfiguration")]

      public VirtualMachineConfiguration VirtualMachineConfiguration { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="virtualMachineConfiguration")>

      Public Property VirtualMachineConfiguration As VirtualMachineConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.VirtualMachineConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: virtualMachineConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeTimeout
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeTimeout
  id: ResizeTimeout
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: ResizeTimeout
  nameWithType: CloudPool.ResizeTimeout
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeTimeout
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResizeTimeout
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 231
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the timeout for allocation of compute nodes to the\npool.\n"
  remarks: "\nThis is the timeout for the most recent resize operation. The\ndefault value is 10 minutes.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "resizeTimeout")]

      public TimeSpan? ResizeTimeout { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="resizeTimeout")>

      Public Property ResizeTimeout As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeTimeout*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: resizeTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeError
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeError
  id: ResizeError
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: ResizeError
  nameWithType: CloudPool.ResizeError
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeError
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResizeError
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 242
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets details of any error encountered while performing the\nlast resize on the pool.\n"
  remarks: "\nThis property is set only if an error occurred during the last\npool resize, and only when the pool allocationState is Steady.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "resizeError")]

      public ResizeError ResizeError { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="resizeError")>

      Public Property ResizeError As ResizeError
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.ResizeError
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeError*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: resizeError
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentDedicated
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentDedicated
  id: CurrentDedicated
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: CurrentDedicated
  nameWithType: CloudPool.CurrentDedicated
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentDedicated
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CurrentDedicated
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 248
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the number of compute nodes currently in the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "currentDedicated")]

      public int ? CurrentDedicated { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="currentDedicated")>

      Public Property CurrentDedicated As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentDedicated*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: currentDedicated
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetDedicated
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetDedicated
  id: TargetDedicated
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: TargetDedicated
  nameWithType: CloudPool.TargetDedicated
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetDedicated
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TargetDedicated
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 258
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the desired number of compute nodes in the pool.\n"
  remarks: "\nThis property must have the default value if enableAutoScale is\ntrue. It is required if enableAutoScale is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "targetDedicated")]

      public int ? TargetDedicated { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="targetDedicated")>

      Public Property TargetDedicated As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetDedicated*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: targetDedicated
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableAutoScale
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableAutoScale
  id: EnableAutoScale
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: EnableAutoScale
  nameWithType: CloudPool.EnableAutoScale
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableAutoScale
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableAutoScale
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 269
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether the pool size should automatically adjust\nover time.\n"
  remarks: "\nIf true, the autoScaleFormula property must be set. If false, the\ntargetDedicated property must be set.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "enableAutoScale")]

      public bool ? EnableAutoScale { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="enableAutoScale")>

      Public Property EnableAutoScale As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableAutoScale*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: enableAutoScale
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleFormula
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleFormula
  id: AutoScaleFormula
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: AutoScaleFormula
  nameWithType: CloudPool.AutoScaleFormula
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleFormula
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoScaleFormula
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 276
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a formula for the desired number of compute nodes in\nthe pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "autoScaleFormula")]

      public string AutoScaleFormula { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="autoScaleFormula")>

      Public Property AutoScaleFormula As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleFormula*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: autoScaleFormula
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleEvaluationInterval
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleEvaluationInterval
  id: AutoScaleEvaluationInterval
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: AutoScaleEvaluationInterval
  nameWithType: CloudPool.AutoScaleEvaluationInterval
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleEvaluationInterval
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoScaleEvaluationInterval
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 283
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a time interval for the desired AutoScale evaluation\nperiod in the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "autoScaleEvaluationInterval")]

      public TimeSpan? AutoScaleEvaluationInterval { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="autoScaleEvaluationInterval")>

      Public Property AutoScaleEvaluationInterval As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleEvaluationInterval*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: autoScaleEvaluationInterval
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleRun
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleRun
  id: AutoScaleRun
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: AutoScaleRun
  nameWithType: CloudPool.AutoScaleRun
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleRun
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoScaleRun
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 290
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the results and errors from the last execution of the\nautoscale formula.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "autoScaleRun")]

      public AutoScaleRun AutoScaleRun { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="autoScaleRun")>

      Public Property AutoScaleRun As AutoScaleRun
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleRun*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: autoScaleRun
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableInterNodeCommunication
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableInterNodeCommunication
  id: EnableInterNodeCommunication
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: EnableInterNodeCommunication
  nameWithType: CloudPool.EnableInterNodeCommunication
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableInterNodeCommunication
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableInterNodeCommunication
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 297
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether the pool permits direct communication between\nnodes.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "enableInterNodeCommunication")]

      public bool ? EnableInterNodeCommunication { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="enableInterNodeCommunication")>

      Public Property EnableInterNodeCommunication As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableInterNodeCommunication*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: enableInterNodeCommunication
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.NetworkConfiguration
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.NetworkConfiguration
  id: NetworkConfiguration
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: NetworkConfiguration
  nameWithType: CloudPool.NetworkConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.NetworkConfiguration
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NetworkConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 303
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the network configuration for the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "networkConfiguration")]

      public NetworkConfiguration NetworkConfiguration { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="networkConfiguration")>

      Public Property NetworkConfiguration As NetworkConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.NetworkConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: networkConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.StartTask
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.StartTask
  id: StartTask
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: StartTask
  nameWithType: CloudPool.StartTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.StartTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 310
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a task specified to run on each compute node as it\njoins the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startTask")]

      public StartTask StartTask { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="startTask")>

      Public Property StartTask As StartTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.StartTask
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.StartTask*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startTask
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CertificateReferences
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CertificateReferences
  id: CertificateReferences
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: CertificateReferences
  nameWithType: CloudPool.CertificateReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CertificateReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 317
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the list of certificates to be installed on each\ncompute node in the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "certificateReferences")]

      public IList<CertificateReference> CertificateReferences { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="certificateReferences")>

      Public Property CertificateReferences As IList(Of CertificateReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CertificateReferences*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: certificateReferences
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ApplicationPackageReferences
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ApplicationPackageReferences
  id: ApplicationPackageReferences
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: ApplicationPackageReferences
  nameWithType: CloudPool.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ApplicationPackageReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationPackageReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 324
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the list of application packages to be installed on\neach compute node in the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "applicationPackageReferences")]

      public IList<ApplicationPackageReference> ApplicationPackageReferences { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="applicationPackageReferences")>

      Public Property ApplicationPackageReferences As IList(Of ApplicationPackageReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ApplicationPackageReferences*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: applicationPackageReferences
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.MaxTasksPerNode
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.MaxTasksPerNode
  id: MaxTasksPerNode
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: MaxTasksPerNode
  nameWithType: CloudPool.MaxTasksPerNode
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.MaxTasksPerNode
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxTasksPerNode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 331
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the maximum number of tasks that can run concurrently\non a single compute node in the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "maxTasksPerNode")]

      public int ? MaxTasksPerNode { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="maxTasksPerNode")>

      Public Property MaxTasksPerNode As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.MaxTasksPerNode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: maxTasksPerNode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.TaskSchedulingPolicy
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.TaskSchedulingPolicy
  id: TaskSchedulingPolicy
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: TaskSchedulingPolicy
  nameWithType: CloudPool.TaskSchedulingPolicy
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.TaskSchedulingPolicy
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskSchedulingPolicy
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 338
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets how the Batch service distributes tasks between\ncompute nodes in the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "taskSchedulingPolicy")]

      public TaskSchedulingPolicy TaskSchedulingPolicy { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="taskSchedulingPolicy")>

      Public Property TaskSchedulingPolicy As TaskSchedulingPolicy
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.TaskSchedulingPolicy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: taskSchedulingPolicy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Metadata
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Metadata
  id: Metadata
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: CloudPool.Metadata
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Metadata
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Metadata
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 345
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of name-value pairs associated with the pool\nas metadata.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "metadata")]

      public IList<MetadataItem> Metadata { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="metadata")>

      Public Property Metadata As IList(Of MetadataItem)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Metadata*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: metadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Stats
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Stats
  id: Stats
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: Stats
  nameWithType: CloudPool.Stats
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Stats
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Stats
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 352
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets utilization and resource usage statistics for the\nentire lifetime of the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "stats")]

      public PoolStatistics Stats { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="stats")>

      Public Property Stats As PoolStatistics
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Stats*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: stats
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudPool
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CloudPool.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudPool.cs
    startLine: 361
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor
  isExternal: false
  name: CloudPool
  nameWithType: CloudPool.CloudPool
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudPool
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.PoolState}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.PoolState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<PoolState>
  nameWithType: Nullable<PoolState>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.PoolState>
  nameWithType.vb: Nullable(Of PoolState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.PoolState)
  name.vb: Nullable(Of PoolState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolState
    name: PoolState
    nameWithType: PoolState
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.PoolState
    name: PoolState
    nameWithType: PoolState
    fullName: Microsoft.Azure.Batch.Protocol.Models.PoolState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AllocationState}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AllocationState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AllocationState>
  nameWithType: Nullable<AllocationState>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.AllocationState>
  nameWithType.vb: Nullable(Of AllocationState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.AllocationState)
  name.vb: Nullable(Of AllocationState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.AllocationState
    name: AllocationState
    nameWithType: AllocationState
    fullName: Microsoft.Azure.Batch.Protocol.Models.AllocationState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.AllocationState
    name: AllocationState
    nameWithType: AllocationState
    fullName: Microsoft.Azure.Batch.Protocol.Models.AllocationState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.ResizeError
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.ResizeError
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: ResizeError
  nameWithType: ResizeError
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResizeError
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: AutoScaleRun
  nameWithType: AutoScaleRun
  fullName: Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun
- uid: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: NetworkConfiguration
  nameWithType: NetworkConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.StartTask
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: StartTask
  nameWithType: StartTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<CertificateReference>
  nameWithType: IList<CertificateReference>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.CertificateReference>
  nameWithType.vb: IList(Of CertificateReference)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.CertificateReference)
  name.vb: IList(Of CertificateReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
    name: CertificateReference
    nameWithType: CertificateReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
    name: CertificateReference
    nameWithType: CertificateReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ApplicationPackageReference>
  nameWithType: IList<ApplicationPackageReference>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference>
  nameWithType.vb: IList(Of ApplicationPackageReference)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference)
  name.vb: IList(Of ApplicationPackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskSchedulingPolicy
  nameWithType: TaskSchedulingPolicy
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MetadataItem>
  nameWithType: IList<MetadataItem>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.MetadataItem>
  nameWithType.vb: IList(Of MetadataItem)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.MetadataItem)
  name.vb: IList(Of MetadataItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolStatistics
  nameWithType: PoolStatistics
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolStatistics
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Id*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Id
  isExternal: false
  name: Id
  nameWithType: CloudPool.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Id
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.DisplayName*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: CloudPool.DisplayName
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.DisplayName
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Url*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Url
  isExternal: false
  name: Url
  nameWithType: CloudPool.Url
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Url
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ETag*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ETag
  isExternal: false
  name: ETag
  nameWithType: CloudPool.ETag
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ETag
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.LastModified*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.LastModified
  isExternal: false
  name: LastModified
  nameWithType: CloudPool.LastModified
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.LastModified
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CreationTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CreationTime
  isExternal: false
  name: CreationTime
  nameWithType: CloudPool.CreationTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CreationTime
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.State*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.State
  isExternal: false
  name: State
  nameWithType: CloudPool.State
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.State
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.StateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.StateTransitionTime
  isExternal: false
  name: StateTransitionTime
  nameWithType: CloudPool.StateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.StateTransitionTime
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationState*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationState
  isExternal: false
  name: AllocationState
  nameWithType: CloudPool.AllocationState
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationState
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationStateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationStateTransitionTime
  isExternal: false
  name: AllocationStateTransitionTime
  nameWithType: CloudPool.AllocationStateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationStateTransitionTime
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.VmSize*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.VmSize
  isExternal: false
  name: VmSize
  nameWithType: CloudPool.VmSize
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.VmSize
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudServiceConfiguration*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudServiceConfiguration
  isExternal: false
  name: CloudServiceConfiguration
  nameWithType: CloudPool.CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudServiceConfiguration
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.VirtualMachineConfiguration*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.VirtualMachineConfiguration
  isExternal: false
  name: VirtualMachineConfiguration
  nameWithType: CloudPool.VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.VirtualMachineConfiguration
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeTimeout*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeTimeout
  isExternal: false
  name: ResizeTimeout
  nameWithType: CloudPool.ResizeTimeout
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeTimeout
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeError*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeError
  isExternal: false
  name: ResizeError
  nameWithType: CloudPool.ResizeError
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeError
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentDedicated*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentDedicated
  isExternal: false
  name: CurrentDedicated
  nameWithType: CloudPool.CurrentDedicated
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentDedicated
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetDedicated*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetDedicated
  isExternal: false
  name: TargetDedicated
  nameWithType: CloudPool.TargetDedicated
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetDedicated
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableAutoScale*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableAutoScale
  isExternal: false
  name: EnableAutoScale
  nameWithType: CloudPool.EnableAutoScale
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableAutoScale
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleFormula*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleFormula
  isExternal: false
  name: AutoScaleFormula
  nameWithType: CloudPool.AutoScaleFormula
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleFormula
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleEvaluationInterval*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleEvaluationInterval
  isExternal: false
  name: AutoScaleEvaluationInterval
  nameWithType: CloudPool.AutoScaleEvaluationInterval
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleEvaluationInterval
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleRun*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleRun
  isExternal: false
  name: AutoScaleRun
  nameWithType: CloudPool.AutoScaleRun
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleRun
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableInterNodeCommunication*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableInterNodeCommunication
  isExternal: false
  name: EnableInterNodeCommunication
  nameWithType: CloudPool.EnableInterNodeCommunication
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableInterNodeCommunication
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.NetworkConfiguration*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.NetworkConfiguration
  isExternal: false
  name: NetworkConfiguration
  nameWithType: CloudPool.NetworkConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.NetworkConfiguration
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.StartTask*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.StartTask
  isExternal: false
  name: StartTask
  nameWithType: CloudPool.StartTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.StartTask
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CertificateReferences*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CertificateReferences
  isExternal: false
  name: CertificateReferences
  nameWithType: CloudPool.CertificateReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.CertificateReferences
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ApplicationPackageReferences*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ApplicationPackageReferences
  isExternal: false
  name: ApplicationPackageReferences
  nameWithType: CloudPool.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.ApplicationPackageReferences
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.MaxTasksPerNode*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.MaxTasksPerNode
  isExternal: false
  name: MaxTasksPerNode
  nameWithType: CloudPool.MaxTasksPerNode
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.MaxTasksPerNode
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.TaskSchedulingPolicy*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.TaskSchedulingPolicy
  isExternal: false
  name: TaskSchedulingPolicy
  nameWithType: CloudPool.TaskSchedulingPolicy
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.TaskSchedulingPolicy
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Metadata*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Metadata
  isExternal: false
  name: Metadata
  nameWithType: CloudPool.Metadata
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Metadata
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Stats*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Stats
  isExternal: false
  name: Stats
  nameWithType: CloudPool.Stats
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Stats
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Validate
  isExternal: false
  name: Validate
  nameWithType: CloudPool.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudPool.Validate
