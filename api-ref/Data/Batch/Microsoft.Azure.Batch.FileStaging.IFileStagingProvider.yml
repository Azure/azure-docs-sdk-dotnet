### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  commentId: T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  id: IFileStagingProvider
  parent: Microsoft.Azure.Batch.FileStaging
  children:
  - Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact
  - Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles
  - Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
  - Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate
  langs:
  - csharp
  - vb
  name: IFileStagingProvider
  nameWithType: IFileStagingProvider
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  type: Interface
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/IFileStagingProvider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IFileStagingProvider
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/IFileStagingProvider.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nProvides basic file staging features.\n"
  example: []
  syntax:
    content: public interface IFileStagingProvider
    content.vb: Public Interface IFileStagingProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
  commentId: M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
  id: StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
  parent: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  langs:
  - csharp
  - vb
  name: StageFilesAsync(List<IFileStagingProvider>, IFileStagingArtifact)
  nameWithType: IFileStagingProvider.StageFilesAsync(List<IFileStagingProvider>, IFileStagingArtifact)
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List<Microsoft.Azure.Batch.FileStaging.IFileStagingProvider>, Microsoft.Azure.Batch.IFileStagingArtifact)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/IFileStagingProvider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StageFilesAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/IFileStagingProvider.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nBegins an asynchronous operation to stage all of the files in the given collection.\nWhen file staging begins, all instances of IFileStagingProvider are bucketized by their implementation type.\nThis produces one collection of instances per implementation.\nEach implmentation of IFileStagingProvider has a StageFilesAsync() method.  That method is called once with the \ncollection produced by the bucketization step oulined above.\n"
  example: []
  syntax:
    content: Task StageFilesAsync(List<IFileStagingProvider> filesToStage, IFileStagingArtifact fileStagingArtifact)
    content.vb: Function StageFilesAsync(filesToStage As List(Of IFileStagingProvider), fileStagingArtifact As IFileStagingArtifact) As Task
    parameters:
    - id: filesToStage
      type: System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider}
      description: Collection of all file staging objects to be staged.  All instances must have the same implementation type.
    - id: fileStagingArtifact
      type: Microsoft.Azure.Batch.IFileStagingArtifact
      description: IFileStagingProvider specific staging artifacts including error/progress.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync*
  nameWithType.vb: IFileStagingProvider.StageFilesAsync(List(Of IFileStagingProvider), IFileStagingArtifact)
  fullName.vb: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List(Of Microsoft.Azure.Batch.FileStaging.IFileStagingProvider), Microsoft.Azure.Batch.IFileStagingArtifact)
  name.vb: StageFilesAsync(List(Of IFileStagingProvider), IFileStagingArtifact)
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact
  commentId: M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact
  id: CreateStagingArtifact
  parent: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  langs:
  - csharp
  - vb
  name: CreateStagingArtifact()
  nameWithType: IFileStagingProvider.CreateStagingArtifact()
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/IFileStagingProvider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateStagingArtifact
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/IFileStagingProvider.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nReturns an instance of IFileStagingArtifact with whatever values the implementation requires.\nThis will be called during file staging whenever a staging artifact has not been otherwise provided.\n"
  example: []
  syntax:
    content: IFileStagingArtifact CreateStagingArtifact()
    content.vb: Function CreateStagingArtifact As IFileStagingArtifact
    return:
      type: Microsoft.Azure.Batch.IFileStagingArtifact
      description: An instance of IFileStagingArtifact with whatever values the implementation requires.
  overload: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact*
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate
  commentId: M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: IFileStagingProvider.Validate()
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/IFileStagingProvider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/IFileStagingProvider.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nPerforms client-side validation on the current object.\n"
  example: []
  syntax:
    content: void Validate()
    content.vb: Sub Validate
  overload: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate*
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles
  commentId: P:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles
  id: StagedFiles
  parent: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  langs:
  - csharp
  - vb
  name: StagedFiles
  nameWithType: IFileStagingProvider.StagedFiles
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/IFileStagingProvider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StagedFiles
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/IFileStagingProvider.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nThe collection of ResourceFile objects that are the result of file staging.   \nMust be set by the IFileStagingProvider.StageFilesAsync() method.\n"
  example: []
  syntax:
    content: IEnumerable<ResourceFile> StagedFiles { get; }
    content.vb: ReadOnly Property StagedFiles As IEnumerable(Of ResourceFile)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ResourceFile}
  overload: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch.FileStaging
  commentId: N:Microsoft.Azure.Batch.FileStaging
  isExternal: false
  name: Microsoft.Azure.Batch.FileStaging
  nameWithType: Microsoft.Azure.Batch.FileStaging
  fullName: Microsoft.Azure.Batch.FileStaging
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync
  isExternal: false
  name: StageFilesAsync
  nameWithType: IFileStagingProvider.StageFilesAsync
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync
- uid: System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider}
  commentId: T:System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IFileStagingProvider>
  nameWithType: List<IFileStagingProvider>
  fullName: System.Collections.Generic.List<Microsoft.Azure.Batch.FileStaging.IFileStagingProvider>
  nameWithType.vb: List(Of IFileStagingProvider)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.Azure.Batch.FileStaging.IFileStagingProvider)
  name.vb: List(Of IFileStagingProvider)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
    name: IFileStagingProvider
    nameWithType: IFileStagingProvider
    fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
    name: IFileStagingProvider
    nameWithType: IFileStagingProvider
    fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.IFileStagingArtifact
  commentId: T:Microsoft.Azure.Batch.IFileStagingArtifact
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IFileStagingArtifact
  nameWithType: IFileStagingArtifact
  fullName: Microsoft.Azure.Batch.IFileStagingArtifact
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact
  isExternal: false
  name: CreateStagingArtifact
  nameWithType: IFileStagingProvider.CreateStagingArtifact
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate
  isExternal: false
  name: Validate
  nameWithType: IFileStagingProvider.Validate
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles
  isExternal: false
  name: StagedFiles
  nameWithType: IFileStagingProvider.StagedFiles
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ResourceFile}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ResourceFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ResourceFile>
  nameWithType: IEnumerable<ResourceFile>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.ResourceFile>
  nameWithType.vb: IEnumerable(Of ResourceFile)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.ResourceFile)
  name.vb: IEnumerable(Of ResourceFile)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.ResourceFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.ResourceFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
