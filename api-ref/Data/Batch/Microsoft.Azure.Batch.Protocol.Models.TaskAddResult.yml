### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult
  id: TaskAddResult
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus,System.String,System.String,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.BatchError)
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Error
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.ETag
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.LastModified
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Location
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Status
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskId
  - Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Validate
  langs:
  - csharp
  - vb
  name: TaskAddResult
  nameWithType: TaskAddResult
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskAddResult
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nResult for a single task added as part of an add task collection\noperation.\n"
  example: []
  syntax:
    content: public class TaskAddResult
    content.vb: Public Class TaskAddResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult
  langs:
  - csharp
  - vb
  name: TaskAddResult()
  nameWithType: TaskAddResult.TaskAddResult()
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskAddResult()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the TaskAddResult class.\n"
  example: []
  syntax:
    content: public TaskAddResult()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus,System.String,System.String,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.BatchError)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus,System.String,System.String,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.BatchError)
  id: '#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus,System.String,System.String,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.BatchError)'
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult
  langs:
  - csharp
  - vb
  name: TaskAddResult(TaskAddStatus, String, String, Nullable<DateTime>, String, BatchError)
  nameWithType: TaskAddResult.TaskAddResult(TaskAddStatus, String, String, Nullable<DateTime>, String, BatchError)
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskAddResult(Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus, System.String, System.String, System.Nullable<System.DateTime>, System.String, Microsoft.Azure.Batch.Protocol.Models.BatchError)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the TaskAddResult class.\n"
  example: []
  syntax:
    content: public TaskAddResult(TaskAddStatus status, string taskId, string eTag = null, DateTime? lastModified = null, string location = null, BatchError error = null)
    content.vb: Public Sub New(status As TaskAddStatus, taskId As String, eTag As String = Nothing, lastModified As Date? = Nothing, location As String = Nothing, error As BatchError = Nothing)
    parameters:
    - id: status
      type: Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus
      description: The status of the add task request.
    - id: taskId
      type: System.String
      description: >-
        The id of the task for which this is the

        result.
    - id: eTag
      type: System.String
      description: >-
        The ETag of the task, if the task was

        successfully added.
    - id: lastModified
      type: System.Nullable{System.DateTime}
      description: >-
        The last modified time of the

        task.
    - id: location
      type: System.String
      description: >-
        The URL of the task, if the task was

        successfully added.
    - id: error
      type: Microsoft.Azure.Batch.Protocol.Models.BatchError
      description: >-
        The error encountered while attempting to add

        the task.
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor*
  nameWithType.vb: TaskAddResult.TaskAddResult(TaskAddStatus, String, String, Nullable(Of DateTime), String, BatchError)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskAddResult(Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus, System.String, System.String, System.Nullable(Of System.DateTime), System.String, Microsoft.Azure.Batch.Protocol.Models.BatchError)
  name.vb: TaskAddResult(TaskAddStatus, String, String, Nullable(Of DateTime), String, BatchError)
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Status
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Status
  id: Status
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: TaskAddResult.Status
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Status
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the status of the add task request.\n"
  remarks: "\nPossible values include: 'success', 'clienterror', 'servererror',\n'unmapped'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "status")]

      public TaskAddStatus Status { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="status")>

      Public Property Status As TaskAddStatus
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskId
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskId
  id: TaskId
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult
  langs:
  - csharp
  - vb
  name: TaskId
  nameWithType: TaskAddResult.TaskId
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the id of the task for which this is the result.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "taskId")]

      public string TaskId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="taskId")>

      Public Property TaskId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: taskId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.ETag
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.ETag
  id: ETag
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: TaskAddResult.ETag
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.ETag
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ETag
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the ETag of the task, if the task was successfully\nadded.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "eTag")]

      public string ETag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="eTag")>

      Public Property ETag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.ETag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: eTag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.LastModified
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.LastModified
  id: LastModified
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: TaskAddResult.LastModified
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.LastModified
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastModified
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the last modified time of the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lastModified")]

      public DateTime? LastModified { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="lastModified")>

      Public Property LastModified As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.LastModified*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lastModified
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Location
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Location
  id: Location
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: TaskAddResult.Location
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Location
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Location
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the URL of the task, if the task was successfully\nadded.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "location")]

      public string Location { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="location")>

      Public Property Location As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Location*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: location
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Error
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Error
  id: Error
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: TaskAddResult.Error
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Error
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Error
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the error encountered while attempting to add the\ntask.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "error")]

      public BatchError Error { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="error")>

      Public Property Error As BatchError
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.BatchError
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Error*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: error
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: TaskAddResult.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskAddResult.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor
  isExternal: false
  name: TaskAddResult
  nameWithType: TaskAddResult.TaskAddResult
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskAddResult
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskAddStatus
  nameWithType: TaskAddStatus
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.BatchError
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.BatchError
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: BatchError
  nameWithType: BatchError
  fullName: Microsoft.Azure.Batch.Protocol.Models.BatchError
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Status*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Status
  isExternal: false
  name: Status
  nameWithType: TaskAddResult.Status
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Status
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskId*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskId
  isExternal: false
  name: TaskId
  nameWithType: TaskAddResult.TaskId
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskId
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.ETag*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.ETag
  isExternal: false
  name: ETag
  nameWithType: TaskAddResult.ETag
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.ETag
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.LastModified*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.LastModified
  isExternal: false
  name: LastModified
  nameWithType: TaskAddResult.LastModified
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.LastModified
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Location*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Location
  isExternal: false
  name: Location
  nameWithType: TaskAddResult.Location
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Location
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Error*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Error
  isExternal: false
  name: Error
  nameWithType: TaskAddResult.Error
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Error
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Validate
  isExternal: false
  name: Validate
  nameWithType: TaskAddResult.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Validate
