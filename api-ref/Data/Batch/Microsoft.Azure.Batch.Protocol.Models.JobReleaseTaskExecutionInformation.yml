### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  id: JobReleaseTaskExecutionInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor(System.DateTime,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError)
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.EndTime
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.ExitCode
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.SchedulingError
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.StartTime
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.State
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectory
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.Validate
  langs:
  - csharp
  - vb
  name: JobReleaseTaskExecutionInformation
  nameWithType: JobReleaseTaskExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobReleaseTaskExecutionInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nContains information about the execution of a Job Release task on a\ncompute node.\n"
  example: []
  syntax:
    content: public class JobReleaseTaskExecutionInformation
    content.vb: Public Class JobReleaseTaskExecutionInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: JobReleaseTaskExecutionInformation()
  nameWithType: JobReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the\nJobReleaseTaskExecutionInformation class.\n"
  example: []
  syntax:
    content: public JobReleaseTaskExecutionInformation()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor(System.DateTime,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor(System.DateTime,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError)
  id: '#ctor(System.DateTime,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError)'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: JobReleaseTaskExecutionInformation(DateTime, JobReleaseTaskState, Nullable<DateTime>, String, String, Nullable<Int32>, TaskSchedulingError)
  nameWithType: JobReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation(DateTime, JobReleaseTaskState, Nullable<DateTime>, String, String, Nullable<Int32>, TaskSchedulingError)
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation(System.DateTime, Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState, System.Nullable<System.DateTime>, System.String, System.String, System.Nullable<System.Int32>, Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the\nJobReleaseTaskExecutionInformation class.\n"
  example: []
  syntax:
    content: public JobReleaseTaskExecutionInformation(DateTime startTime, JobReleaseTaskState state, DateTime? endTime = null, string taskRootDirectory = null, string taskRootDirectoryUrl = null, int ? exitCode = null, TaskSchedulingError schedulingError = null)
    content.vb: Public Sub New(startTime As Date, state As JobReleaseTaskState, endTime As Date? = Nothing, taskRootDirectory As String = Nothing, taskRootDirectoryUrl As String = Nothing, exitCode As Integer? = Nothing, schedulingError As TaskSchedulingError = Nothing)
    parameters:
    - id: startTime
      type: System.DateTime
      description: >-
        The time at which the task started

        running. Note that every time the task is restarted, this value

        is updated.
    - id: state
      type: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState
      description: >-
        The current state of the Job Release

        task.
    - id: endTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the Job Release task

        completed.
    - id: taskRootDirectory
      type: System.String
      description: >-
        The root directory of the Job

        Release task on the compute node. You can use this path to

        retrieve files created by the task, such as log files.
    - id: taskRootDirectoryUrl
      type: System.String
      description: >-
        The URL to the root directory

        of the Job Release task on the compute node.
    - id: exitCode
      type: System.Nullable{System.Int32}
      description: >-
        The exit code of the program specified on

        the task command line.
    - id: schedulingError
      type: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
      description: >-
        The scheduling error encountered by

        the Batch service when starting the task.
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor*
  nameWithType.vb: JobReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation(DateTime, JobReleaseTaskState, Nullable(Of DateTime), String, String, Nullable(Of Int32), TaskSchedulingError)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation(System.DateTime, Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState, System.Nullable(Of System.DateTime), System.String, System.String, System.Nullable(Of System.Int32), Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError)
  name.vb: JobReleaseTaskExecutionInformation(DateTime, JobReleaseTaskState, Nullable(Of DateTime), String, String, Nullable(Of Int32), TaskSchedulingError)
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.StartTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.StartTime
  id: StartTime
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: JobReleaseTaskExecutionInformation.StartTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.StartTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the task started running. Note that\nevery time the task is restarted, this value is updated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startTime")]

      public DateTime StartTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="startTime")>

      Public Property StartTime As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.StartTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.EndTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.EndTime
  id: EndTime
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: JobReleaseTaskExecutionInformation.EndTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.EndTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the Job Release task completed.\n"
  remarks: "\nThis property is set only if the task is in the Completed state.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "endTime")]

      public DateTime? EndTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="endTime")>

      Public Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.EndTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: endTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.State
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.State
  id: State
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: State
  nameWithType: JobReleaseTaskExecutionInformation.State
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.State
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the current state of the Job Release task.\n"
  remarks: "\nPossible values include: 'running', 'completed'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "state")]

      public JobReleaseTaskState State { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="state")>

      Public Property State As JobReleaseTaskState
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.State*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: state
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectory
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectory
  id: TaskRootDirectory
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: TaskRootDirectory
  nameWithType: JobReleaseTaskExecutionInformation.TaskRootDirectory
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectory
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskRootDirectory
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the root directory of the Job Release task on the\ncompute node. You can use this path to retrieve files created by\nthe task, such as log files.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "taskRootDirectory")]

      public string TaskRootDirectory { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="taskRootDirectory")>

      Public Property TaskRootDirectory As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectory*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: taskRootDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl
  id: TaskRootDirectoryUrl
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: TaskRootDirectoryUrl
  nameWithType: JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskRootDirectoryUrl
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
    startLine: 102
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the URL to the root directory of the Job Release task\non the compute node.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "taskRootDirectoryUrl")]

      public string TaskRootDirectoryUrl { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="taskRootDirectoryUrl")>

      Public Property TaskRootDirectoryUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: taskRootDirectoryUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.ExitCode
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.ExitCode
  id: ExitCode
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: ExitCode
  nameWithType: JobReleaseTaskExecutionInformation.ExitCode
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.ExitCode
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExitCode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the exit code of the program specified on the task\ncommand line.\n"
  remarks: "\nThis parameter is returned only if the task is in the completed\nstate. The exit code for a process reflects the specific\nconvention implemented by the application developer for that\nprocess. If you use the exit code value to make decisions in your\ncode, be sure that you know the exit code convention used by the\napplication process. Note that the exit code may also be\ngenerated by the compute node operating system, such as when a\nprocess is forcibly terminated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "exitCode")]

      public int ? ExitCode { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="exitCode")>

      Public Property ExitCode As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.ExitCode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: exitCode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.SchedulingError
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.SchedulingError
  id: SchedulingError
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: SchedulingError
  nameWithType: JobReleaseTaskExecutionInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.SchedulingError
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SchedulingError
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the scheduling error encountered by the Batch service\nwhen starting the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "schedulingError")]

      public TaskSchedulingError SchedulingError { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="schedulingError")>

      Public Property SchedulingError As TaskSchedulingError
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.SchedulingError*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: schedulingError
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: JobReleaseTaskExecutionInformation.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTaskExecutionInformation.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor
  isExternal: false
  name: JobReleaseTaskExecutionInformation
  nameWithType: JobReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobReleaseTaskState
  nameWithType: JobReleaseTaskState
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskSchedulingError
  nameWithType: TaskSchedulingError
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.StartTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.StartTime
  isExternal: false
  name: StartTime
  nameWithType: JobReleaseTaskExecutionInformation.StartTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.StartTime
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.EndTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.EndTime
  isExternal: false
  name: EndTime
  nameWithType: JobReleaseTaskExecutionInformation.EndTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.EndTime
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.State*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.State
  isExternal: false
  name: State
  nameWithType: JobReleaseTaskExecutionInformation.State
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.State
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectory*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectory
  isExternal: false
  name: TaskRootDirectory
  nameWithType: JobReleaseTaskExecutionInformation.TaskRootDirectory
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectory
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl
  isExternal: false
  name: TaskRootDirectoryUrl
  nameWithType: JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.ExitCode*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.ExitCode
  isExternal: false
  name: ExitCode
  nameWithType: JobReleaseTaskExecutionInformation.ExitCode
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.ExitCode
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.SchedulingError*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.SchedulingError
  isExternal: false
  name: SchedulingError
  nameWithType: JobReleaseTaskExecutionInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.SchedulingError
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.Validate
  isExternal: false
  name: Validate
  nameWithType: JobReleaseTaskExecutionInformation.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.Validate
