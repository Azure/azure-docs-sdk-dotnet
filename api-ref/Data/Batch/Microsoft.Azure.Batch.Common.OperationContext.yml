### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Common.OperationContext
  commentId: T:Microsoft.Azure.Batch.Common.OperationContext
  id: OperationContext
  parent: Microsoft.Azure.Batch.Common
  children:
  - Microsoft.Azure.Batch.Common.OperationContext.#ctor
  - Microsoft.Azure.Batch.Common.OperationContext.RequestResults
  langs:
  - csharp
  - vb
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.Azure.Batch.Common.OperationContext
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Common/OperationContext.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OperationContext
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Common/OperationContext.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Common
  summary: "\nRepresents the context for a request to the Batch service and provides additional information about its execution.\n"
  example: []
  syntax:
    content: public sealed class OperationContext
    content.vb: Public NotInheritable Class OperationContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Batch.Common.OperationContext.#ctor
  commentId: M:Microsoft.Azure.Batch.Common.OperationContext.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Common.OperationContext
  langs:
  - csharp
  - vb
  name: OperationContext()
  nameWithType: OperationContext.OperationContext()
  fullName: Microsoft.Azure.Batch.Common.OperationContext.OperationContext()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Common/OperationContext.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Common/OperationContext.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Common
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.Common.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OperationContext()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Common.OperationContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Common.OperationContext.RequestResults
  commentId: P:Microsoft.Azure.Batch.Common.OperationContext.RequestResults
  id: RequestResults
  parent: Microsoft.Azure.Batch.Common.OperationContext
  langs:
  - csharp
  - vb
  name: RequestResults
  nameWithType: OperationContext.RequestResults
  fullName: Microsoft.Azure.Batch.Common.OperationContext.RequestResults
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Common/OperationContext.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RequestResults
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Common/OperationContext.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Common
  summary: "\nGets or sets the list of request results for the current operation.  Each <xref href=\"Microsoft.Azure.Batch.Common.RequestResult\" data-throw-if-not-resolved=\"false\"></xref> corresponds to one\nrequest sent to the server.  There may be more than one item in this list in the case of retries.\n"
  example: []
  syntax:
    content: public IList<RequestResult> RequestResults { get; }
    content.vb: Public ReadOnly Property RequestResults As IList(Of RequestResult)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Common.RequestResult}
      description: An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> object that contains <xref href="Microsoft.Azure.Batch.Common.RequestResult" data-throw-if-not-resolved="false"></xref> objects that represent the request results created by the current operation.
  overload: Microsoft.Azure.Batch.Common.OperationContext.RequestResults*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch.Common
  commentId: N:Microsoft.Azure.Batch.Common
  isExternal: false
  name: Microsoft.Azure.Batch.Common
  nameWithType: Microsoft.Azure.Batch.Common
  fullName: Microsoft.Azure.Batch.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Common.OperationContext
  commentId: T:Microsoft.Azure.Batch.Common.OperationContext
  parent: Microsoft.Azure.Batch.Common
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.Azure.Batch.Common.OperationContext
- uid: Microsoft.Azure.Batch.Common.OperationContext.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Common.OperationContext.#ctor
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext.OperationContext
  fullName: Microsoft.Azure.Batch.Common.OperationContext.OperationContext
- uid: Microsoft.Azure.Batch.Common.RequestResult
  commentId: T:Microsoft.Azure.Batch.Common.RequestResult
  isExternal: false
  name: RequestResult
  nameWithType: RequestResult
  fullName: Microsoft.Azure.Batch.Common.RequestResult
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
- uid: Microsoft.Azure.Batch.Common.OperationContext.RequestResults*
  commentId: Overload:Microsoft.Azure.Batch.Common.OperationContext.RequestResults
  isExternal: false
  name: RequestResults
  nameWithType: OperationContext.RequestResults
  fullName: Microsoft.Azure.Batch.Common.OperationContext.RequestResults
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Common.RequestResult}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Common.RequestResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<RequestResult>
  nameWithType: IList<RequestResult>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Common.RequestResult>
  nameWithType.vb: IList(Of RequestResult)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Common.RequestResult)
  name.vb: IList(Of RequestResult)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.RequestResult
    name: RequestResult
    nameWithType: RequestResult
    fullName: Microsoft.Azure.Batch.Common.RequestResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.RequestResult
    name: RequestResult
    nameWithType: RequestResult
    fullName: Microsoft.Azure.Batch.Common.RequestResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
