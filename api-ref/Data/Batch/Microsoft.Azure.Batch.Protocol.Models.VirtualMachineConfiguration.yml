### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
  id: VirtualMachineConfiguration
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor(Microsoft.Azure.Batch.Protocol.Models.ImageReference,System.String,Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration)
  - Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.ImageReference
  - Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.NodeAgentSKUId
  - Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.Validate
  - Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.WindowsConfiguration
  langs:
  - csharp
  - vb
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nThe configuration for compute nodes in a pool based on the Azure\nVirtual Machines infrastructure.\n"
  example: []
  syntax:
    content: public class VirtualMachineConfiguration
    content.vb: Public Class VirtualMachineConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
  langs:
  - csharp
  - vb
  name: VirtualMachineConfiguration()
  nameWithType: VirtualMachineConfiguration.VirtualMachineConfiguration()
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.VirtualMachineConfiguration()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the VirtualMachineConfiguration\nclass.\n"
  example: []
  syntax:
    content: public VirtualMachineConfiguration()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor(Microsoft.Azure.Batch.Protocol.Models.ImageReference,System.String,Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor(Microsoft.Azure.Batch.Protocol.Models.ImageReference,System.String,Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration)
  id: '#ctor(Microsoft.Azure.Batch.Protocol.Models.ImageReference,System.String,Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration)'
  parent: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
  langs:
  - csharp
  - vb
  name: VirtualMachineConfiguration(ImageReference, String, WindowsConfiguration)
  nameWithType: VirtualMachineConfiguration.VirtualMachineConfiguration(ImageReference, String, WindowsConfiguration)
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.VirtualMachineConfiguration(Microsoft.Azure.Batch.Protocol.Models.ImageReference, System.String, Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the VirtualMachineConfiguration\nclass.\n"
  example: []
  syntax:
    content: public VirtualMachineConfiguration(ImageReference imageReference, string nodeAgentSKUId, WindowsConfiguration windowsConfiguration = null)
    content.vb: Public Sub New(imageReference As ImageReference, nodeAgentSKUId As String, windowsConfiguration As WindowsConfiguration = Nothing)
    parameters:
    - id: imageReference
      type: Microsoft.Azure.Batch.Protocol.Models.ImageReference
      description: >-
        A reference to the Azure Virtual

        Machines Marketplace image to use.
    - id: nodeAgentSKUId
      type: System.String
      description: >-
        The SKU of Batch Node Agent to be

        provisioned on the compute node.
    - id: windowsConfiguration
      type: Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration
      description: >-
        Windows operating system

        settings on the virtual machine.
  overload: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.ImageReference
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.ImageReference
  id: ImageReference
  parent: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
  langs:
  - csharp
  - vb
  name: ImageReference
  nameWithType: VirtualMachineConfiguration.ImageReference
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.ImageReference
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImageReference
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a reference to the Azure Virtual Machines Marketplace\nimage to use.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "imageReference")]

      public ImageReference ImageReference { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="imageReference")>

      Public Property ImageReference As ImageReference
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.ImageReference
  overload: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.ImageReference*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: imageReference
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.NodeAgentSKUId
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.NodeAgentSKUId
  id: NodeAgentSKUId
  parent: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
  langs:
  - csharp
  - vb
  name: NodeAgentSKUId
  nameWithType: VirtualMachineConfiguration.NodeAgentSKUId
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.NodeAgentSKUId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NodeAgentSKUId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the SKU of Batch Node Agent to be provisioned on the\ncompute node.\n"
  remarks: "\nThe Batch node agent is a program that runs on each node in the\npool, and provides the command-and-control interface between the\nnode and the Batch service. There are different implementations\nof the node agent, known as SKUs, for different operating systems.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "nodeAgentSKUId")]

      public string NodeAgentSKUId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="nodeAgentSKUId")>

      Public Property NodeAgentSKUId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.NodeAgentSKUId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: nodeAgentSKUId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.WindowsConfiguration
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.WindowsConfiguration
  id: WindowsConfiguration
  parent: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
  langs:
  - csharp
  - vb
  name: WindowsConfiguration
  nameWithType: VirtualMachineConfiguration.WindowsConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.WindowsConfiguration
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WindowsConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets windows operating system settings on the virtual\nmachine.\n"
  remarks: "\nThis property must not be specified if the imageReference property\nspecifies a Linux OS image.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "windowsConfiguration")]

      public WindowsConfiguration WindowsConfiguration { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="windowsConfiguration")>

      Public Property WindowsConfiguration As WindowsConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration
  overload: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.WindowsConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: windowsConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: VirtualMachineConfiguration.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/VirtualMachineConfiguration.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor
  isExternal: false
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration.VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.VirtualMachineConfiguration
- uid: Microsoft.Azure.Batch.Protocol.Models.ImageReference
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.ImageReference
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: ImageReference
  nameWithType: ImageReference
  fullName: Microsoft.Azure.Batch.Protocol.Models.ImageReference
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: WindowsConfiguration
  nameWithType: WindowsConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.ImageReference*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.ImageReference
  isExternal: false
  name: ImageReference
  nameWithType: VirtualMachineConfiguration.ImageReference
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.ImageReference
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.NodeAgentSKUId*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.NodeAgentSKUId
  isExternal: false
  name: NodeAgentSKUId
  nameWithType: VirtualMachineConfiguration.NodeAgentSKUId
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.NodeAgentSKUId
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.WindowsConfiguration*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.WindowsConfiguration
  isExternal: false
  name: WindowsConfiguration
  nameWithType: VirtualMachineConfiguration.WindowsConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.WindowsConfiguration
- uid: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.Validate
  isExternal: false
  name: Validate
  nameWithType: VirtualMachineConfiguration.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.Validate
