### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku
  id: NodeAgentSku
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ImageReference},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OSType})
  - Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.Id
  - Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.OsType
  - Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.VerifiedImageReferences
  langs:
  - csharp
  - vb
  name: NodeAgentSku
  nameWithType: NodeAgentSku
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeAgentSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NodeAgentSku
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeAgentSku.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nA node agent SKU supported by the Batch service.\n"
  remarks: "\nThe Batch node agent is a program that runs on each node in the pool,\nand provides the command-and-control interface between the node and\nthe Batch service. There are different implementations of the node\nagent, known as SKUs, for different operating systems.\n"
  example: []
  syntax:
    content: public class NodeAgentSku
    content.vb: Public Class NodeAgentSku
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku
  langs:
  - csharp
  - vb
  name: NodeAgentSku()
  nameWithType: NodeAgentSku.NodeAgentSku()
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.NodeAgentSku()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeAgentSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeAgentSku.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the NodeAgentSku class.\n"
  example: []
  syntax:
    content: public NodeAgentSku()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ImageReference},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OSType})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ImageReference},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OSType})
  id: '#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ImageReference},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OSType})'
  parent: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku
  langs:
  - csharp
  - vb
  name: NodeAgentSku(String, IList<ImageReference>, Nullable<OSType>)
  nameWithType: NodeAgentSku.NodeAgentSku(String, IList<ImageReference>, Nullable<OSType>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.NodeAgentSku(System.String, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ImageReference>, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.OSType>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeAgentSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeAgentSku.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the NodeAgentSku class.\n"
  example: []
  syntax:
    content: public NodeAgentSku(string id = null, IList<ImageReference> verifiedImageReferences = null, OSType? osType = null)
    content.vb: Public Sub New(id As String = Nothing, verifiedImageReferences As IList(Of ImageReference) = Nothing, osType As OSType? = Nothing)
    parameters:
    - id: id
      type: System.String
      description: The node agent SKU id.
    - id: verifiedImageReferences
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ImageReference}
      description: >-
        The list of images verified

        to be compatible with this node agent SKU.
    - id: osType
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OSType}
      description: >-
        The type of operating system compatible with

        the node agent SKU.
  overload: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor*
  nameWithType.vb: NodeAgentSku.NodeAgentSku(String, IList(Of ImageReference), Nullable(Of OSType))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.NodeAgentSku(System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ImageReference), System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.OSType))
  name.vb: NodeAgentSku(String, IList(Of ImageReference), Nullable(Of OSType))
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.Id
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.Id
  id: Id
  parent: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: NodeAgentSku.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeAgentSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeAgentSku.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the node agent SKU id.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.VerifiedImageReferences
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.VerifiedImageReferences
  id: VerifiedImageReferences
  parent: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku
  langs:
  - csharp
  - vb
  name: VerifiedImageReferences
  nameWithType: NodeAgentSku.VerifiedImageReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.VerifiedImageReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeAgentSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VerifiedImageReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeAgentSku.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the list of images verified to be compatible with\nthis node agent SKU.\n"
  remarks: "\nThis collection is not exhaustive (the node agent may be\ncompatible with other images).\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "verifiedImageReferences")]

      public IList<ImageReference> VerifiedImageReferences { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="verifiedImageReferences")>

      Public Property VerifiedImageReferences As IList(Of ImageReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ImageReference}
  overload: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.VerifiedImageReferences*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: verifiedImageReferences
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.OsType
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.OsType
  id: OsType
  parent: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku
  langs:
  - csharp
  - vb
  name: OsType
  nameWithType: NodeAgentSku.OsType
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.OsType
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeAgentSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OsType
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeAgentSku.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the type of operating system compatible with the node\nagent SKU.\n"
  remarks: "\nPossible values include: 'linux', 'windows', 'unmapped'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "osType")]

      public OSType? OsType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="osType")>

      Public Property OsType As OSType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OSType}
  overload: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.OsType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: osType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor
  isExternal: false
  name: NodeAgentSku
  nameWithType: NodeAgentSku.NodeAgentSku
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.NodeAgentSku
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ImageReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ImageReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ImageReference>
  nameWithType: IList<ImageReference>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ImageReference>
  nameWithType.vb: IList(Of ImageReference)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ImageReference)
  name.vb: IList(Of ImageReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ImageReference
    name: ImageReference
    nameWithType: ImageReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.ImageReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ImageReference
    name: ImageReference
    nameWithType: ImageReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.ImageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OSType}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OSType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<OSType>
  nameWithType: Nullable<OSType>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.OSType>
  nameWithType.vb: Nullable(Of OSType)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.OSType)
  name.vb: Nullable(Of OSType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.OSType
    name: OSType
    nameWithType: OSType
    fullName: Microsoft.Azure.Batch.Protocol.Models.OSType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.OSType
    name: OSType
    nameWithType: OSType
    fullName: Microsoft.Azure.Batch.Protocol.Models.OSType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.Id*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.Id
  isExternal: false
  name: Id
  nameWithType: NodeAgentSku.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.Id
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.VerifiedImageReferences*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.VerifiedImageReferences
  isExternal: false
  name: VerifiedImageReferences
  nameWithType: NodeAgentSku.VerifiedImageReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.VerifiedImageReferences
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.OsType*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.OsType
  isExternal: false
  name: OsType
  nameWithType: NodeAgentSku.OsType
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.OsType
