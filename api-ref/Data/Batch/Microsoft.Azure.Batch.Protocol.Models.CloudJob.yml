### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CloudJob
  id: CloudJob
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,Microsoft.Azure.Batch.Protocol.Models.JobManagerTask,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.JobStatistics)
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.CommonEnvironmentSettings
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.Constraints
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.CreationTime
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.DisplayName
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.ETag
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.ExecutionInfo
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.Id
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobManagerTask
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobPreparationTask
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobReleaseTask
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.LastModified
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.Metadata
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnAllTasksComplete
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnTaskFailure
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.PoolInfo
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousState
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousStateTransitionTime
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.Priority
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.State
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.StateTransitionTime
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.Stats
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.Url
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.UsesTaskDependencies
  - Microsoft.Azure.Batch.Protocol.Models.CloudJob.Validate
  langs:
  - csharp
  - vb
  name: CloudJob
  nameWithType: CloudJob
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloudJob
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nAn Azure Batch job.\n"
  example: []
  syntax:
    content: public class CloudJob
    content.vb: Public Class CloudJob
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: CloudJob()
  nameWithType: CloudJob.CloudJob()
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CloudJob()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the CloudJob class.\n"
  example: []
  syntax:
    content: public CloudJob()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,Microsoft.Azure.Batch.Protocol.Models.JobManagerTask,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.JobStatistics)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,Microsoft.Azure.Batch.Protocol.Models.JobManagerTask,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.JobStatistics)
  id: '#ctor(System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,Microsoft.Azure.Batch.Protocol.Models.JobManagerTask,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.JobStatistics)'
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: CloudJob(String, String, Nullable<Boolean>, String, String, Nullable<DateTime>, Nullable<DateTime>, Nullable<JobState>, Nullable<DateTime>, Nullable<JobState>, Nullable<DateTime>, Nullable<Int32>, JobConstraints, JobManagerTask, JobPreparationTask, JobReleaseTask, IList<EnvironmentSetting>, PoolInformation, Nullable<OnAllTasksComplete>, Nullable<OnTaskFailure>, IList<MetadataItem>, JobExecutionInformation, JobStatistics)
  nameWithType: CloudJob.CloudJob(String, String, Nullable<Boolean>, String, String, Nullable<DateTime>, Nullable<DateTime>, Nullable<JobState>, Nullable<DateTime>, Nullable<JobState>, Nullable<DateTime>, Nullable<Int32>, JobConstraints, JobManagerTask, JobPreparationTask, JobReleaseTask, IList<EnvironmentSetting>, PoolInformation, Nullable<OnAllTasksComplete>, Nullable<OnTaskFailure>, IList<MetadataItem>, JobExecutionInformation, JobStatistics)
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CloudJob(System.String, System.String, System.Nullable<System.Boolean>, System.String, System.String, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.JobState>, System.Nullable<System.DateTime>, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.JobState>, System.Nullable<System.DateTime>, System.Nullable<System.Int32>, Microsoft.Azure.Batch.Protocol.Models.JobConstraints, Microsoft.Azure.Batch.Protocol.Models.JobManagerTask, Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask, Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>, Microsoft.Azure.Batch.Protocol.Models.PoolInformation, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete>, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure>, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.MetadataItem>, Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation, Microsoft.Azure.Batch.Protocol.Models.JobStatistics)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the CloudJob class.\n"
  example: []
  syntax:
    content: public CloudJob(string id = null, string displayName = null, bool ? usesTaskDependencies = null, string url = null, string eTag = null, DateTime? lastModified = null, DateTime? creationTime = null, JobState? state = null, DateTime? stateTransitionTime = null, JobState? previousState = null, DateTime? previousStateTransitionTime = null, int ? priority = null, JobConstraints constraints = null, JobManagerTask jobManagerTask = null, JobPreparationTask jobPreparationTask = null, JobReleaseTask jobReleaseTask = null, IList<EnvironmentSetting> commonEnvironmentSettings = null, PoolInformation poolInfo = null, OnAllTasksComplete? onAllTasksComplete = null, OnTaskFailure? onTaskFailure = null, IList<MetadataItem> metadata = null, JobExecutionInformation executionInfo = null, JobStatistics stats = null)
    content.vb: Public Sub New(id As String = Nothing, displayName As String = Nothing, usesTaskDependencies As Boolean? = Nothing, url As String = Nothing, eTag As String = Nothing, lastModified As Date? = Nothing, creationTime As Date? = Nothing, state As JobState? = Nothing, stateTransitionTime As Date? = Nothing, previousState As JobState? = Nothing, previousStateTransitionTime As Date? = Nothing, priority As Integer? = Nothing, constraints As JobConstraints = Nothing, jobManagerTask As JobManagerTask = Nothing, jobPreparationTask As JobPreparationTask = Nothing, jobReleaseTask As JobReleaseTask = Nothing, commonEnvironmentSettings As IList(Of EnvironmentSetting) = Nothing, poolInfo As PoolInformation = Nothing, onAllTasksComplete As OnAllTasksComplete? = Nothing, onTaskFailure As OnTaskFailure? = Nothing, metadata As IList(Of MetadataItem) = Nothing, executionInfo As JobExecutionInformation = Nothing, stats As JobStatistics = Nothing)
    parameters:
    - id: id
      type: System.String
      description: >-
        A string that uniquely identifies the job within

        the account.
    - id: displayName
      type: System.String
      description: The display name for the job.
    - id: usesTaskDependencies
      type: System.Nullable{System.Boolean}
      description: >-
        The flag that determines if

        this job will use tasks with dependencies.
    - id: url
      type: System.String
      description: The URL of the job.
    - id: eTag
      type: System.String
      description: The ETag of the job.
    - id: lastModified
      type: System.Nullable{System.DateTime}
      description: >-
        The last modified time of the

        job.
    - id: creationTime
      type: System.Nullable{System.DateTime}
      description: The creation time of the job.
    - id: state
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState}
      description: The current state of the job.
    - id: stateTransitionTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the job

        entered its current state.
    - id: previousState
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState}
      description: The previous state of the job.
    - id: previousStateTransitionTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the

        job entered its previous state.
    - id: priority
      type: System.Nullable{System.Int32}
      description: The priority of the job.
    - id: constraints
      type: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
      description: >-
        The execution constraints for the

        job.
    - id: jobManagerTask
      type: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
      description: >-
        Details of a Job Manager task to be

        launched when the job is started.
    - id: jobPreparationTask
      type: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
      description: The Job Preparation task.
    - id: jobReleaseTask
      type: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
      description: The Job Release task.
    - id: commonEnvironmentSettings
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
      description: >-
        The list of common

        environment variable settings. These environment variables are

        set for all tasks in the job (including the Job Manager, Job

        Preparation and Job Release tasks).
    - id: poolInfo
      type: Microsoft.Azure.Batch.Protocol.Models.PoolInformation
      description: >-
        The pool on which the Batch service runs

        the job's tasks.
    - id: onAllTasksComplete
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete}
      description: >-
        The action the Batch service

        should take when all tasks in the job are in the completed state.

        Possible values include: 'noAction', 'terminateJob'
    - id: onTaskFailure
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure}
      description: >-
        The action the Batch service should

        take when any task in the job fails. A task is considered to have

        failed if it completes with a non-zero exit code and has

        exhausted its retry count, or if it had a scheduling error.

        Possible values include: 'noAction',

        'performExitOptionsJobAction'
    - id: metadata
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
      description: >-
        A list of name-value pairs associated with

        the job as metadata.
    - id: executionInfo
      type: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
      description: >-
        The execution information for the

        job.
    - id: stats
      type: Microsoft.Azure.Batch.Protocol.Models.JobStatistics
      description: >-
        Resource usage statistics for the entire

        lifetime of the job.
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor*
  nameWithType.vb: CloudJob.CloudJob(String, String, Nullable(Of Boolean), String, String, Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of JobState), Nullable(Of DateTime), Nullable(Of JobState), Nullable(Of DateTime), Nullable(Of Int32), JobConstraints, JobManagerTask, JobPreparationTask, JobReleaseTask, IList(Of EnvironmentSetting), PoolInformation, Nullable(Of OnAllTasksComplete), Nullable(Of OnTaskFailure), IList(Of MetadataItem), JobExecutionInformation, JobStatistics)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CloudJob(System.String, System.String, System.Nullable(Of System.Boolean), System.String, System.String, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.JobState), System.Nullable(Of System.DateTime), System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.JobState), System.Nullable(Of System.DateTime), System.Nullable(Of System.Int32), Microsoft.Azure.Batch.Protocol.Models.JobConstraints, Microsoft.Azure.Batch.Protocol.Models.JobManagerTask, Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask, Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting), Microsoft.Azure.Batch.Protocol.Models.PoolInformation, System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete), System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure), System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.MetadataItem), Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation, Microsoft.Azure.Batch.Protocol.Models.JobStatistics)
  name.vb: CloudJob(String, String, Nullable(Of Boolean), String, String, Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of JobState), Nullable(Of DateTime), Nullable(Of JobState), Nullable(Of DateTime), Nullable(Of Int32), JobConstraints, JobManagerTask, JobPreparationTask, JobReleaseTask, IList(Of EnvironmentSetting), PoolInformation, Nullable(Of OnAllTasksComplete), Nullable(Of OnTaskFailure), IList(Of MetadataItem), JobExecutionInformation, JobStatistics)
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Id
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Id
  id: Id
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CloudJob.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a string that uniquely identifies the job within the\naccount.\n"
  remarks: "\nThe id can contain any combination of alphanumeric characters\nincluding hyphens and underscores, and cannot contain more than\n64 characters. It is common to use a GUID for the id.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.DisplayName
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: CloudJob.DisplayName
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.DisplayName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the display name for the job.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "displayName")]

      public string DisplayName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="displayName")>

      Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.DisplayName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: displayName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.UsesTaskDependencies
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.UsesTaskDependencies
  id: UsesTaskDependencies
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: UsesTaskDependencies
  nameWithType: CloudJob.UsesTaskDependencies
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.UsesTaskDependencies
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UsesTaskDependencies
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 128
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the flag that determines if this job will use tasks\nwith dependencies.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "usesTaskDependencies")]

      public bool ? UsesTaskDependencies { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="usesTaskDependencies")>

      Public Property UsesTaskDependencies As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.UsesTaskDependencies*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: usesTaskDependencies
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Url
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Url
  id: Url
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: CloudJob.Url
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Url
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Url
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the URL of the job.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "url")]

      public string Url { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="url")>

      Public Property Url As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Url*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: url
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.ETag
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.ETag
  id: ETag
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: CloudJob.ETag
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.ETag
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ETag
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the ETag of the job.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "eTag")]

      public string ETag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="eTag")>

      Public Property ETag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.ETag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: eTag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.LastModified
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.LastModified
  id: LastModified
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: CloudJob.LastModified
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.LastModified
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastModified
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 146
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the last modified time of the job.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lastModified")]

      public DateTime? LastModified { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="lastModified")>

      Public Property LastModified As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.LastModified*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lastModified
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CreationTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.CreationTime
  id: CreationTime
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: CreationTime
  nameWithType: CloudJob.CreationTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CreationTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreationTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 152
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the creation time of the job.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "creationTime")]

      public DateTime? CreationTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="creationTime")>

      Public Property CreationTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CreationTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: creationTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.State
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.State
  id: State
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: State
  nameWithType: CloudJob.State
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.State
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 162
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the current state of the job.\n"
  remarks: "\nPossible values include: 'active', 'disabling', 'disabled',\n'enabling', 'terminating', 'completed', 'deleting'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "state")]

      public JobState? State { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="state")>

      Public Property State As JobState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.State*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: state
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.StateTransitionTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.StateTransitionTime
  id: StateTransitionTime
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: StateTransitionTime
  nameWithType: CloudJob.StateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.StateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 168
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the job entered its current state.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "stateTransitionTime")]

      public DateTime? StateTransitionTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="stateTransitionTime")>

      Public Property StateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.StateTransitionTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: stateTransitionTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousState
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousState
  id: PreviousState
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: PreviousState
  nameWithType: CloudJob.PreviousState
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousState
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreviousState
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 179
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the previous state of the job.\n"
  remarks: "\nThis property is not set if the job is in its initial Active\nstate. Possible values include: 'active', 'disabling',\n'disabled', 'enabling', 'terminating', 'completed', 'deleting'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "previousState")]

      public JobState? PreviousState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="previousState")>

      Public Property PreviousState As JobState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: previousState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousStateTransitionTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousStateTransitionTime
  id: PreviousStateTransitionTime
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: PreviousStateTransitionTime
  nameWithType: CloudJob.PreviousStateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousStateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreviousStateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 188
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the job entered its previous state.\n"
  remarks: "\nThis property is not set if the job is in its initial Active state.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "previousStateTransitionTime")]

      public DateTime? PreviousStateTransitionTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="previousStateTransitionTime")>

      Public Property PreviousStateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousStateTransitionTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: previousStateTransitionTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Priority
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Priority
  id: Priority
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: CloudJob.Priority
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Priority
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Priority
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 199
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the priority of the job.\n"
  remarks: "\nPriority values can range from -1000 to 1000, with -1000 being\nthe lowest priority and 1000 being the highest priority. The\ndefault value is 0.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "priority")]

      public int ? Priority { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="priority")>

      Public Property Priority As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Priority*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: priority
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Constraints
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Constraints
  id: Constraints
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: CloudJob.Constraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Constraints
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Constraints
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 205
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the execution constraints for the job.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "constraints")]

      public JobConstraints Constraints { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="constraints")>

      Public Property Constraints As JobConstraints
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Constraints*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: constraints
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobManagerTask
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobManagerTask
  id: JobManagerTask
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: JobManagerTask
  nameWithType: CloudJob.JobManagerTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobManagerTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobManagerTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 212
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets details of a Job Manager task to be launched when the\njob is started.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "jobManagerTask")]

      public JobManagerTask JobManagerTask { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="jobManagerTask")>

      Public Property JobManagerTask As JobManagerTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobManagerTask*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: jobManagerTask
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobPreparationTask
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobPreparationTask
  id: JobPreparationTask
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: JobPreparationTask
  nameWithType: CloudJob.JobPreparationTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobPreparationTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobPreparationTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 218
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the Job Preparation task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "jobPreparationTask")]

      public JobPreparationTask JobPreparationTask { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="jobPreparationTask")>

      Public Property JobPreparationTask As JobPreparationTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobPreparationTask*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: jobPreparationTask
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobReleaseTask
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobReleaseTask
  id: JobReleaseTask
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: JobReleaseTask
  nameWithType: CloudJob.JobReleaseTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobReleaseTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobReleaseTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 224
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the Job Release task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "jobReleaseTask")]

      public JobReleaseTask JobReleaseTask { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="jobReleaseTask")>

      Public Property JobReleaseTask As JobReleaseTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobReleaseTask*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: jobReleaseTask
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CommonEnvironmentSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.CommonEnvironmentSettings
  id: CommonEnvironmentSettings
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: CommonEnvironmentSettings
  nameWithType: CloudJob.CommonEnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CommonEnvironmentSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommonEnvironmentSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 233
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the list of common environment variable settings.\nThese environment variables are set for all tasks in the job\n(including the Job Manager, Job Preparation and Job Release\ntasks).\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "commonEnvironmentSettings")]

      public IList<EnvironmentSetting> CommonEnvironmentSettings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="commonEnvironmentSettings")>

      Public Property CommonEnvironmentSettings As IList(Of EnvironmentSetting)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CommonEnvironmentSettings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: commonEnvironmentSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PoolInfo
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PoolInfo
  id: PoolInfo
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: PoolInfo
  nameWithType: CloudJob.PoolInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PoolInfo
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolInfo
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 240
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the pool on which the Batch service runs the job's\ntasks.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "poolInfo")]

      public PoolInformation PoolInfo { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="poolInfo")>

      Public Property PoolInfo As PoolInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.PoolInformation
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PoolInfo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: poolInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnAllTasksComplete
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnAllTasksComplete
  id: OnAllTasksComplete
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: OnAllTasksComplete
  nameWithType: CloudJob.OnAllTasksComplete
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnAllTasksComplete
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OnAllTasksComplete
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 248
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the action the Batch service should take when all\ntasks in the job are in the completed state. Possible values\ninclude: 'noAction', 'terminateJob'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "onAllTasksComplete")]

      public OnAllTasksComplete? OnAllTasksComplete { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="onAllTasksComplete")>

      Public Property OnAllTasksComplete As OnAllTasksComplete?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnAllTasksComplete*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: onAllTasksComplete
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnTaskFailure
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnTaskFailure
  id: OnTaskFailure
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: OnTaskFailure
  nameWithType: CloudJob.OnTaskFailure
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnTaskFailure
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OnTaskFailure
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 258
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the action the Batch service should take when any\ntask in the job fails. A task is considered to have failed if it\ncompletes with a non-zero exit code and has exhausted its retry\ncount, or if it had a scheduling error. Possible values include:\n'noAction', 'performExitOptionsJobAction'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "onTaskFailure")]

      public OnTaskFailure? OnTaskFailure { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="onTaskFailure")>

      Public Property OnTaskFailure As OnTaskFailure?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnTaskFailure*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: onTaskFailure
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Metadata
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Metadata
  id: Metadata
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: CloudJob.Metadata
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Metadata
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Metadata
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 265
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of name-value pairs associated with the job as\nmetadata.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "metadata")]

      public IList<MetadataItem> Metadata { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="metadata")>

      Public Property Metadata As IList(Of MetadataItem)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Metadata*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: metadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.ExecutionInfo
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.ExecutionInfo
  id: ExecutionInfo
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: ExecutionInfo
  nameWithType: CloudJob.ExecutionInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.ExecutionInfo
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExecutionInfo
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 271
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the execution information for the job.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "executionInfo")]

      public JobExecutionInformation ExecutionInfo { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="executionInfo")>

      Public Property ExecutionInfo As JobExecutionInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.ExecutionInfo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: executionInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Stats
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Stats
  id: Stats
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: Stats
  nameWithType: CloudJob.Stats
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Stats
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Stats
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 278
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets resource usage statistics for the entire lifetime of\nthe job.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "stats")]

      public JobStatistics Stats { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="stats")>

      Public Property Stats As JobStatistics
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobStatistics
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Stats*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: stats
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudJob
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CloudJob.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudJob.cs
    startLine: 287
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor
  isExternal: false
  name: CloudJob
  nameWithType: CloudJob.CloudJob
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CloudJob
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<JobState>
  nameWithType: Nullable<JobState>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.JobState>
  nameWithType.vb: Nullable(Of JobState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.JobState)
  name.vb: Nullable(Of JobState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobState
    name: JobState
    nameWithType: JobState
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.JobState
    name: JobState
    nameWithType: JobState
    fullName: Microsoft.Azure.Batch.Protocol.Models.JobState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobConstraints
  nameWithType: JobConstraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
- uid: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobManagerTask
  nameWithType: JobManagerTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobManagerTask
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobPreparationTask
  nameWithType: JobPreparationTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobReleaseTask
  nameWithType: JobReleaseTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EnvironmentSetting>
  nameWithType: IList<EnvironmentSetting>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>
  nameWithType.vb: IList(Of EnvironmentSetting)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting)
  name.vb: IList(Of EnvironmentSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: PoolInformation
  nameWithType: PoolInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolInformation
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete}
  parent: System
  definition: System.Nullable`1
  name: Nullable<OnAllTasksComplete>
  nameWithType: Nullable<OnAllTasksComplete>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete>
  nameWithType.vb: Nullable(Of OnAllTasksComplete)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete)
  name.vb: Nullable(Of OnAllTasksComplete)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete
    name: OnAllTasksComplete
    nameWithType: OnAllTasksComplete
    fullName: Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete
    name: OnAllTasksComplete
    nameWithType: OnAllTasksComplete
    fullName: Microsoft.Azure.Batch.Protocol.Models.OnAllTasksComplete
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure}
  parent: System
  definition: System.Nullable`1
  name: Nullable<OnTaskFailure>
  nameWithType: Nullable<OnTaskFailure>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure>
  nameWithType.vb: Nullable(Of OnTaskFailure)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure)
  name.vb: Nullable(Of OnTaskFailure)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure
    name: OnTaskFailure
    nameWithType: OnTaskFailure
    fullName: Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure
    name: OnTaskFailure
    nameWithType: OnTaskFailure
    fullName: Microsoft.Azure.Batch.Protocol.Models.OnTaskFailure
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MetadataItem>
  nameWithType: IList<MetadataItem>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.MetadataItem>
  nameWithType.vb: IList(Of MetadataItem)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.MetadataItem)
  name.vb: IList(Of MetadataItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobExecutionInformation
  nameWithType: JobExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
- uid: Microsoft.Azure.Batch.Protocol.Models.JobStatistics
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobStatistics
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobStatistics
  nameWithType: JobStatistics
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobStatistics
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Id*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Id
  isExternal: false
  name: Id
  nameWithType: CloudJob.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Id
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.DisplayName*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: CloudJob.DisplayName
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.DisplayName
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.UsesTaskDependencies*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.UsesTaskDependencies
  isExternal: false
  name: UsesTaskDependencies
  nameWithType: CloudJob.UsesTaskDependencies
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.UsesTaskDependencies
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Url*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Url
  isExternal: false
  name: Url
  nameWithType: CloudJob.Url
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Url
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.ETag*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.ETag
  isExternal: false
  name: ETag
  nameWithType: CloudJob.ETag
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.ETag
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.LastModified*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.LastModified
  isExternal: false
  name: LastModified
  nameWithType: CloudJob.LastModified
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.LastModified
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CreationTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.CreationTime
  isExternal: false
  name: CreationTime
  nameWithType: CloudJob.CreationTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CreationTime
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.State*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.State
  isExternal: false
  name: State
  nameWithType: CloudJob.State
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.State
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.StateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.StateTransitionTime
  isExternal: false
  name: StateTransitionTime
  nameWithType: CloudJob.StateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.StateTransitionTime
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousState*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousState
  isExternal: false
  name: PreviousState
  nameWithType: CloudJob.PreviousState
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousState
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousStateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousStateTransitionTime
  isExternal: false
  name: PreviousStateTransitionTime
  nameWithType: CloudJob.PreviousStateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousStateTransitionTime
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Priority*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Priority
  isExternal: false
  name: Priority
  nameWithType: CloudJob.Priority
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Priority
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Constraints*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Constraints
  isExternal: false
  name: Constraints
  nameWithType: CloudJob.Constraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Constraints
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobManagerTask*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobManagerTask
  isExternal: false
  name: JobManagerTask
  nameWithType: CloudJob.JobManagerTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobManagerTask
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobPreparationTask*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobPreparationTask
  isExternal: false
  name: JobPreparationTask
  nameWithType: CloudJob.JobPreparationTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobPreparationTask
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobReleaseTask*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobReleaseTask
  isExternal: false
  name: JobReleaseTask
  nameWithType: CloudJob.JobReleaseTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobReleaseTask
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CommonEnvironmentSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.CommonEnvironmentSettings
  isExternal: false
  name: CommonEnvironmentSettings
  nameWithType: CloudJob.CommonEnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.CommonEnvironmentSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PoolInfo*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PoolInfo
  isExternal: false
  name: PoolInfo
  nameWithType: CloudJob.PoolInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.PoolInfo
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnAllTasksComplete*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnAllTasksComplete
  isExternal: false
  name: OnAllTasksComplete
  nameWithType: CloudJob.OnAllTasksComplete
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnAllTasksComplete
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnTaskFailure*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnTaskFailure
  isExternal: false
  name: OnTaskFailure
  nameWithType: CloudJob.OnTaskFailure
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.OnTaskFailure
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Metadata*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Metadata
  isExternal: false
  name: Metadata
  nameWithType: CloudJob.Metadata
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Metadata
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.ExecutionInfo*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.ExecutionInfo
  isExternal: false
  name: ExecutionInfo
  nameWithType: CloudJob.ExecutionInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.ExecutionInfo
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Stats*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Stats
  isExternal: false
  name: Stats
  nameWithType: CloudJob.Stats
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Stats
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Validate
  isExternal: false
  name: Validate
  nameWithType: CloudJob.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudJob.Validate
