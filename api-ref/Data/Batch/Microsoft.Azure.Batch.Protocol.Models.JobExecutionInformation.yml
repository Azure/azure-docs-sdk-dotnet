### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  id: JobExecutionInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor(System.DateTime,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError,System.String)
  - Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.EndTime
  - Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.PoolId
  - Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.SchedulingError
  - Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.StartTime
  - Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.TerminateReason
  - Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.Validate
  langs:
  - csharp
  - vb
  name: JobExecutionInformation
  nameWithType: JobExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobExecutionInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nContains information about the execution of a job in the Azure Batch\nservice.\n"
  example: []
  syntax:
    content: public class JobExecutionInformation
    content.vb: Public Class JobExecutionInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  langs:
  - csharp
  - vb
  name: JobExecutionInformation()
  nameWithType: JobExecutionInformation.JobExecutionInformation()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.JobExecutionInformation()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobExecutionInformation class.\n"
  example: []
  syntax:
    content: public JobExecutionInformation()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor(System.DateTime,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError,System.String)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor(System.DateTime,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError,System.String)
  id: '#ctor(System.DateTime,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError,System.String)'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  langs:
  - csharp
  - vb
  name: JobExecutionInformation(DateTime, Nullable<DateTime>, String, JobSchedulingError, String)
  nameWithType: JobExecutionInformation.JobExecutionInformation(DateTime, Nullable<DateTime>, String, JobSchedulingError, String)
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.JobExecutionInformation(System.DateTime, System.Nullable<System.DateTime>, System.String, Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobExecutionInformation class.\n"
  example: []
  syntax:
    content: public JobExecutionInformation(DateTime startTime, DateTime? endTime = null, string poolId = null, JobSchedulingError schedulingError = null, string terminateReason = null)
    content.vb: Public Sub New(startTime As Date, endTime As Date? = Nothing, poolId As String = Nothing, schedulingError As JobSchedulingError = Nothing, terminateReason As String = Nothing)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start time of the job.
    - id: endTime
      type: System.Nullable{System.DateTime}
      description: The completion time of the job.
    - id: poolId
      type: System.String
      description: >-
        The id of the pool to which this job is

        assigned.
    - id: schedulingError
      type: Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError
      description: >-
        Details of any error encountered by

        the service in starting the job.
    - id: terminateReason
      type: System.String
      description: >-
        A string describing the reason the

        job ended.
  overload: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor*
  nameWithType.vb: JobExecutionInformation.JobExecutionInformation(DateTime, Nullable(Of DateTime), String, JobSchedulingError, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.JobExecutionInformation(System.DateTime, System.Nullable(Of System.DateTime), System.String, Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError, System.String)
  name.vb: JobExecutionInformation(DateTime, Nullable(Of DateTime), String, JobSchedulingError, String)
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.StartTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.StartTime
  id: StartTime
  parent: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: JobExecutionInformation.StartTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.StartTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the start time of the job.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startTime")]

      public DateTime StartTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="startTime")>

      Public Property StartTime As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.StartTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.EndTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.EndTime
  id: EndTime
  parent: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: JobExecutionInformation.EndTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.EndTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the completion time of the job.\n"
  remarks: "\nThis property is set only if the job is in the completed state.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "endTime")]

      public DateTime? EndTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="endTime")>

      Public Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.EndTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: endTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.PoolId
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.PoolId
  id: PoolId
  parent: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  langs:
  - csharp
  - vb
  name: PoolId
  nameWithType: JobExecutionInformation.PoolId
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.PoolId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the id of the pool to which this job is assigned.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "poolId")]

      public string PoolId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="poolId")>

      Public Property PoolId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.PoolId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: poolId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.SchedulingError
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.SchedulingError
  id: SchedulingError
  parent: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  langs:
  - csharp
  - vb
  name: SchedulingError
  nameWithType: JobExecutionInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.SchedulingError
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SchedulingError
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets details of any error encountered by the service in\nstarting the job.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "schedulingError")]

      public JobSchedulingError SchedulingError { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="schedulingError")>

      Public Property SchedulingError As JobSchedulingError
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError
  overload: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.SchedulingError*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: schedulingError
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.TerminateReason
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.TerminateReason
  id: TerminateReason
  parent: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  langs:
  - csharp
  - vb
  name: TerminateReason
  nameWithType: JobExecutionInformation.TerminateReason
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.TerminateReason
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TerminateReason
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a string describing the reason the job ended.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "terminateReason")]

      public string TerminateReason { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="terminateReason")>

      Public Property TerminateReason As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.TerminateReason*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: terminateReason
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: JobExecutionInformation.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobExecutionInformation.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor
  isExternal: false
  name: JobExecutionInformation
  nameWithType: JobExecutionInformation.JobExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.JobExecutionInformation
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobSchedulingError
  nameWithType: JobSchedulingError
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.StartTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.StartTime
  isExternal: false
  name: StartTime
  nameWithType: JobExecutionInformation.StartTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.StartTime
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.EndTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.EndTime
  isExternal: false
  name: EndTime
  nameWithType: JobExecutionInformation.EndTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.EndTime
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.PoolId*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.PoolId
  isExternal: false
  name: PoolId
  nameWithType: JobExecutionInformation.PoolId
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.PoolId
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.SchedulingError*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.SchedulingError
  isExternal: false
  name: SchedulingError
  nameWithType: JobExecutionInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.SchedulingError
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.TerminateReason*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.TerminateReason
  isExternal: false
  name: TerminateReason
  nameWithType: JobExecutionInformation.TerminateReason
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.TerminateReason
- uid: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.Validate
  isExternal: false
  name: Validate
  nameWithType: JobExecutionInformation.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.Validate
