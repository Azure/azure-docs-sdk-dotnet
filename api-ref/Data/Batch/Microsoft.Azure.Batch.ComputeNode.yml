### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.ComputeNode
  commentId: T:Microsoft.Azure.Batch.ComputeNode
  id: ComputeNode
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.ComputeNode.AffinityId
  - Microsoft.Azure.Batch.ComputeNode.AllocationTime
  - Microsoft.Azure.Batch.ComputeNode.CertificateReferences
  - Microsoft.Azure.Batch.ComputeNode.CreateComputeNodeUser
  - Microsoft.Azure.Batch.ComputeNode.CustomBehaviors
  - Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUser(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUserAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNode.DisableScheduling(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNode.EnableScheduling(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNode.EnableSchedulingAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNode.Errors
  - Microsoft.Azure.Batch.ComputeNode.GetNodeFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNode.GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettings(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNode.Id
  - Microsoft.Azure.Batch.ComputeNode.IPAddress
  - Microsoft.Azure.Batch.ComputeNode.LastBootTime
  - Microsoft.Azure.Batch.ComputeNode.ListNodeFiles(System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNode.Reboot(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNode.RebootAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNode.RecentTasks
  - Microsoft.Azure.Batch.ComputeNode.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNode.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNode.Reimage(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNode.ReimageAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNode.RemoveFromPool(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.ComputeNode.RemoveFromPoolAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.ComputeNode.RunningTasksCount
  - Microsoft.Azure.Batch.ComputeNode.SchedulingState
  - Microsoft.Azure.Batch.ComputeNode.StartTask
  - Microsoft.Azure.Batch.ComputeNode.StartTaskInformation
  - Microsoft.Azure.Batch.ComputeNode.State
  - Microsoft.Azure.Batch.ComputeNode.StateTransitionTime
  - Microsoft.Azure.Batch.ComputeNode.TotalTasksRun
  - Microsoft.Azure.Batch.ComputeNode.TotalTasksSucceeded
  - Microsoft.Azure.Batch.ComputeNode.Url
  - Microsoft.Azure.Batch.ComputeNode.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: ComputeNode
  nameWithType: ComputeNode
  fullName: Microsoft.Azure.Batch.ComputeNode
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ComputeNode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nSummarizes the state of a compute node.\n"
  example: []
  syntax:
    content: 'public class ComputeNode : IRefreshable, IInheritedBehaviors, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class ComputeNode
          Implements IRefreshable, IInheritedBehaviors, IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Batch.IRefreshable
  - Microsoft.Azure.Batch.IInheritedBehaviors
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.ComputeNode.CreateComputeNodeUser
  commentId: M:Microsoft.Azure.Batch.ComputeNode.CreateComputeNodeUser
  id: CreateComputeNodeUser
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: CreateComputeNodeUser()
  nameWithType: ComputeNode.CreateComputeNodeUser()
  fullName: Microsoft.Azure.Batch.ComputeNode.CreateComputeNodeUser()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateComputeNodeUser
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 36
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInstantiates an unbound ComputeNodeUser object to be populated by the caller and used to create a user account on the compute node in the Azure Batch service.\n"
  example: []
  syntax:
    content: public ComputeNodeUser CreateComputeNodeUser()
    content.vb: Public Function CreateComputeNodeUser As ComputeNodeUser
    return:
      type: Microsoft.Azure.Batch.ComputeNodeUser
      description: An <xref href="Microsoft.Azure.Batch.ComputeNodeUser" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.Azure.Batch.ComputeNode.CreateComputeNodeUser*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUserAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUserAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: DeleteComputeNodeUserAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: DeleteComputeNodeUserAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNode.DeleteComputeNodeUserAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUserAsync(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteComputeNodeUserAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBegins an asynchronous call to delete the specified ComputeNodeUser.\n"
  example: []
  syntax:
    content: public Task DeleteComputeNodeUserAsync(string userName, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function DeleteComputeNodeUserAsync(userName As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: userName
      type: System.String
      description: The name of the ComputeNodeUser to be deleted.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUserAsync*
  nameWithType.vb: ComputeNode.DeleteComputeNodeUserAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUserAsync(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: DeleteComputeNodeUserAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUser(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUser(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: DeleteComputeNodeUser(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: DeleteComputeNodeUser(String, IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNode.DeleteComputeNodeUser(String, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUser(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteComputeNodeUser
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBlocking call to delete the specified ComputeNodeUser.\n"
  example: []
  syntax:
    content: public void DeleteComputeNodeUser(string userName, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub DeleteComputeNodeUser(userName As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: userName
      type: System.String
      description: The name of the ComputeNodeUser to be deleted.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
  overload: Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUser*
  nameWithType.vb: ComputeNode.DeleteComputeNodeUser(String, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUser(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: DeleteComputeNodeUser(String, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: GetRDPFileAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: GetRDPFileAsync(Stream, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNode.GetRDPFileAsync(Stream, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.IO.Stream, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetRDPFileAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBegins an asynchronous call to get RDP file data targeting the compute node of the current instance and write them to a specified Stream.\n"
  example: []
  syntax:
    content: public Task GetRDPFileAsync(Stream rdpStream, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetRDPFileAsync(rdpStream As Stream, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: rdpStream
      type: System.IO.Stream
      description: The Stream into which the RDP file data will be written.  This stream will not be closed or rewound by this call.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync*
  nameWithType.vb: ComputeNode.GetRDPFileAsync(Stream, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.IO.Stream, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: GetRDPFileAsync(Stream, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: GetRDPFile(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: GetRDPFile(Stream, IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNode.GetRDPFile(Stream, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.IO.Stream, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetRDPFile
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBlocking call to get RDP file data targeting the compute node of the current instance and write them to a specified Stream.\n"
  example: []
  syntax:
    content: public void GetRDPFile(Stream rdpStream, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub GetRDPFile(rdpStream As Stream, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: rdpStream
      type: System.IO.Stream
      description: The Stream into which the RDP file data will be written.  This stream will not be closed or rewound by this call.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
  overload: Microsoft.Azure.Batch.ComputeNode.GetRDPFile*
  nameWithType.vb: ComputeNode.GetRDPFile(Stream, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.IO.Stream, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: GetRDPFile(Stream, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: GetRDPFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: GetRDPFileAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNode.GetRDPFileAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetRDPFileAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 114
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBegins an asynchronous call to get RDP file data targeting the compute node of the current instance and write them to a file with the specified name.\n"
  example: []
  syntax:
    content: public Task GetRDPFileAsync(string rdpFileNameToCreate, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetRDPFileAsync(rdpFileNameToCreate As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: rdpFileNameToCreate
      type: System.String
      description: The name of the RDP file to be created.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync*
  nameWithType.vb: ComputeNode.GetRDPFileAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: GetRDPFileAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: GetRDPFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: GetRDPFile(String, IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNode.GetRDPFile(String, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetRDPFile
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBlocking call to get RDP file data targeting the compute node of the current instance and write them to a file with the specified name.\n"
  example: []
  syntax:
    content: public void GetRDPFile(string rdpFileNameToCreate, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub GetRDPFile(rdpFileNameToCreate As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: rdpFileNameToCreate
      type: System.String
      description: The name of the RDP file to be created.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
  overload: Microsoft.Azure.Batch.ComputeNode.GetRDPFile*
  nameWithType.vb: ComputeNode.GetRDPFile(String, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: GetRDPFile(String, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: GetRemoteLoginSettingsAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNode.GetRemoteLoginSettingsAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetRemoteLoginSettingsAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 152
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the settings required for remote login to a compute node.\n"
  remarks: "\n<p>The get remote login settings operation runs asynchronously.</p>\n<p>This method can be invoked only if the pool is created with a <xref href=\"Microsoft.Azure.Batch.VirtualMachineConfiguration\" data-throw-if-not-resolved=\"false\"></xref> property. \nIf this method is invoked on pools created with <xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration\" data-throw-if-not-resolved=\"false\"></xref>, then Batch service returns 409 (Conflict). \nFor pools with a <xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration\" data-throw-if-not-resolved=\"false\"></xref> property, one of the GetRDPFileAsync/GetRDPFile methods must be used.</p>\n"
  example: []
  syntax:
    content: public Task<RemoteLoginSettings> GetRemoteLoginSettingsAsync(IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetRemoteLoginSettingsAsync(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of RemoteLoginSettings)
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.ComputeNode.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.RemoteLoginSettings}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync*
  nameWithType.vb: ComputeNode.GetRemoteLoginSettingsAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: GetRemoteLoginSettingsAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettings(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettings(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: GetRemoteLoginSettings(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: GetRemoteLoginSettings(IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNode.GetRemoteLoginSettings(IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettings(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetRemoteLoginSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 176
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the settings required for remote login to a compute node.\n"
  remarks: "\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method can be invoked only if the pool is created with a <xref href=\"Microsoft.Azure.Batch.VirtualMachineConfiguration\" data-throw-if-not-resolved=\"false\"></xref> property. \nIf this method is invoked on pools created with <xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration\" data-throw-if-not-resolved=\"false\"></xref>, then Batch service returns 409 (Conflict). \nFor pools with a <xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration\" data-throw-if-not-resolved=\"false\"></xref> property, one of the GetRDPFileAsync/GetRDPFile methods must be used.</p>\n"
  example: []
  syntax:
    content: public RemoteLoginSettings GetRemoteLoginSettings(IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function GetRemoteLoginSettings(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As RemoteLoginSettings
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.ComputeNode.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Azure.Batch.RemoteLoginSettings
  overload: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettings*
  nameWithType.vb: ComputeNode.GetRemoteLoginSettings(IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettings(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: GetRemoteLoginSettings(IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNode.RemoveFromPoolAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.RemoveFromPoolAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: RemoveFromPoolAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: RemoveFromPoolAsync(Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNode.RemoveFromPoolAsync(Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNode.RemoveFromPoolAsync(System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveFromPoolAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 194
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBegins an asynchronous call to remove the compute node from the pool.\n"
  example: []
  syntax:
    content: public Task RemoveFromPoolAsync(ComputeNodeDeallocationOption? deallocationOption = null, TimeSpan? resizeTimeout = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function RemoveFromPoolAsync(deallocationOption As ComputeNodeDeallocationOption? = Nothing, resizeTimeout As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: deallocationOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
      description: The deallocation option to use when removing the compute node from the pool.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: The maximum amount of time which the RemoveFromPool operation can take before being terminated by the Azure Batch system.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.ComputeNode.RemoveFromPoolAsync*
  nameWithType.vb: ComputeNode.RemoveFromPoolAsync(Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.RemoveFromPoolAsync(System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption), System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RemoveFromPoolAsync(Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.RemoveFromPool(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.RemoveFromPool(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: RemoveFromPool(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: RemoveFromPool(Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNode.RemoveFromPool(Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNode.RemoveFromPool(System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveFromPool
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 216
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBlocking call to remove the compute node from the pool.\n"
  example: []
  syntax:
    content: public void RemoveFromPool(ComputeNodeDeallocationOption? deallocationOption = null, TimeSpan? resizeTimeout = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub RemoveFromPool(deallocationOption As ComputeNodeDeallocationOption? = Nothing, resizeTimeout As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: deallocationOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
      description: The deallocation option to use when removing the compute node from the pool.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: The maximum amount of time which the RemoveFromPool operation can take before being terminated by the Azure Batch system.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
  overload: Microsoft.Azure.Batch.ComputeNode.RemoveFromPool*
  nameWithType.vb: ComputeNode.RemoveFromPool(Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.RemoveFromPool(System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption), System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: RemoveFromPool(Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNode.RebootAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.RebootAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: RebootAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: RebootAsync(Nullable<ComputeNodeRebootOption>, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNode.RebootAsync(Nullable<ComputeNodeRebootOption>, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNode.RebootAsync(System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeRebootOption>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RebootAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 231
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBegins an asynchronous call to reboot the compute node.\n"
  example: []
  syntax:
    content: public Task RebootAsync(ComputeNodeRebootOption? rebootOption = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function RebootAsync(rebootOption As ComputeNodeRebootOption? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: rebootOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption}
      description: The reboot option associated with the reboot.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.ComputeNode.RebootAsync*
  nameWithType.vb: ComputeNode.RebootAsync(Nullable(Of ComputeNodeRebootOption), IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.RebootAsync(System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeRebootOption), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RebootAsync(Nullable(Of ComputeNodeRebootOption), IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.Reboot(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.Reboot(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Reboot(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: Reboot(Nullable<ComputeNodeRebootOption>, IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNode.Reboot(Nullable<ComputeNodeRebootOption>, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNode.Reboot(System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeRebootOption>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Reboot
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 249
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBlocking call to reboot the compute node.\n"
  example: []
  syntax:
    content: public void Reboot(ComputeNodeRebootOption? rebootOption = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Reboot(rebootOption As ComputeNodeRebootOption? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: rebootOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption}
      description: The reboot option associated with the reboot.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
  overload: Microsoft.Azure.Batch.ComputeNode.Reboot*
  nameWithType.vb: ComputeNode.Reboot(Nullable(Of ComputeNodeRebootOption), IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.Reboot(System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeRebootOption), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Reboot(Nullable(Of ComputeNodeRebootOption), IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNode.ReimageAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.ReimageAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: ReimageAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: ReimageAsync(Nullable<ComputeNodeReimageOption>, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNode.ReimageAsync(Nullable<ComputeNodeReimageOption>, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNode.ReimageAsync(System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeReimageOption>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReimageAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 264
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBegins an asynchronous call to reimage the compute node.\n"
  example: []
  syntax:
    content: public Task ReimageAsync(ComputeNodeReimageOption? reimageOption = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function ReimageAsync(reimageOption As ComputeNodeReimageOption? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: reimageOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption}
      description: The reimage option associated with the reimage.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.ComputeNode.ReimageAsync*
  nameWithType.vb: ComputeNode.ReimageAsync(Nullable(Of ComputeNodeReimageOption), IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.ReimageAsync(System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeReimageOption), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: ReimageAsync(Nullable(Of ComputeNodeReimageOption), IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.Reimage(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.Reimage(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Reimage(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: Reimage(Nullable<ComputeNodeReimageOption>, IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNode.Reimage(Nullable<ComputeNodeReimageOption>, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNode.Reimage(System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeReimageOption>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Reimage
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 282
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBlocking call to reimage the compute node.\n"
  example: []
  syntax:
    content: public void Reimage(ComputeNodeReimageOption? reimageOption = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Reimage(reimageOption As ComputeNodeReimageOption? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: reimageOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption}
      description: The reimage option associated with the reimage.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
  overload: Microsoft.Azure.Batch.ComputeNode.Reimage*
  nameWithType.vb: ComputeNode.Reimage(Nullable(Of ComputeNodeReimageOption), IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.Reimage(System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeReimageOption), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Reimage(Nullable(Of ComputeNodeReimageOption), IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNode.GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: GetNodeFileAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNode.GetNodeFileAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNode.GetNodeFileAsync(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetNodeFileAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 297
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBegins an asynchronous request to get the specified NodeFile.\n"
  example: []
  syntax:
    content: public Task<NodeFile> GetNodeFileAsync(string fileName, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetNodeFileAsync(fileName As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of NodeFile)
    parameters:
    - id: fileName
      type: System.String
      description: The name of the NodeFile.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.NodeFile}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.ComputeNode.GetNodeFileAsync*
  nameWithType.vb: ComputeNode.GetNodeFileAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.GetNodeFileAsync(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: GetNodeFileAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.GetNodeFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.GetNodeFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: GetNodeFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: GetNodeFile(String, IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNode.GetNodeFile(String, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNode.GetNodeFile(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetNodeFile
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 316
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBlocking call to get the specified NodeFile.\n"
  example: []
  syntax:
    content: public NodeFile GetNodeFile(string fileName, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function GetNodeFile(fileName As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As NodeFile
    parameters:
    - id: fileName
      type: System.String
      description: The name of the NodeFile.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.
    return:
      type: Microsoft.Azure.Batch.NodeFile
      description: A bound <xref href="Microsoft.Azure.Batch.NodeFile" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.Azure.Batch.ComputeNode.GetNodeFile*
  nameWithType.vb: ComputeNode.GetNodeFile(String, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.GetNodeFile(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: GetNodeFile(String, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNode.ListNodeFiles(System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.ListNodeFiles(System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: ListNodeFiles(System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: ListNodeFiles(Nullable<Boolean>, DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNode.ListNodeFiles(Nullable<Boolean>, DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNode.ListNodeFiles(System.Nullable<System.Boolean>, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNodeFiles
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 331
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nExposes synchronous and asynchronous enumeration of the files for the node.\n"
  example: []
  syntax:
    content: public IPagedEnumerable<NodeFile> ListNodeFiles(bool ? recursive = null, DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function ListNodeFiles(recursive As Boolean? = Nothing, detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As IPagedEnumerable(Of NodeFile)
    parameters:
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: If true, performs a recursive list of all files of the node. If false, returns only the files at the node directory root.
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: Controls the detail level of the data returned by a call to the Azure Batch Service.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object and after the behavior implementing the DetailLevel.
    return:
      type: Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.NodeFile}
      description: An instance of IPagedEnumerable that can be used to enumerate objects using either synchronous or asynchronous patterns.
  overload: Microsoft.Azure.Batch.ComputeNode.ListNodeFiles*
  nameWithType.vb: ComputeNode.ListNodeFiles(Nullable(Of Boolean), DetailLevel, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.ListNodeFiles(System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: ListNodeFiles(Nullable(Of Boolean), DetailLevel, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNode.EnableSchedulingAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.EnableSchedulingAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: EnableSchedulingAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: EnableSchedulingAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNode.EnableSchedulingAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNode.EnableSchedulingAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableSchedulingAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 348
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nEnables task scheduling on the compute node.\n"
  remarks: This operation runs asynchronously.
  example: []
  syntax:
    content: public Task EnableSchedulingAsync(IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function EnableSchedulingAsync(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.ComputeNode.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.ComputeNode.EnableSchedulingAsync*
  nameWithType.vb: ComputeNode.EnableSchedulingAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.EnableSchedulingAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: EnableSchedulingAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.EnableScheduling(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.EnableScheduling(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: EnableScheduling(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: EnableScheduling(IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNode.EnableScheduling(IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNode.EnableScheduling(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableScheduling
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 362
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nEnables task scheduling on the compute node.\n"
  remarks: This is a blocking operation. For a non-blocking equivalent, see <xref href="Microsoft.Azure.Batch.ComputeNode.EnableScheduling(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void EnableScheduling(IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub EnableScheduling(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.ComputeNode.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.ComputeNode.EnableScheduling*
  nameWithType.vb: ComputeNode.EnableScheduling(IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.EnableScheduling(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: EnableScheduling(IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: DisableSchedulingAsync(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: DisableSchedulingAsync(Nullable<DisableComputeNodeSchedulingOption>, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNode.DisableSchedulingAsync(Nullable<DisableComputeNodeSchedulingOption>, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync(System.Nullable<Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisableSchedulingAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 378
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDisables task scheduling on the compute node.\n"
  remarks: This operation runs asynchronously.
  example: []
  syntax:
    content: public Task DisableSchedulingAsync(DisableComputeNodeSchedulingOption? disableComputeNodeSchedulingOption, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function DisableSchedulingAsync(disableComputeNodeSchedulingOption As DisableComputeNodeSchedulingOption?, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: disableComputeNodeSchedulingOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption}
      description: Specifies what to do with currently running tasks. The default is <xref href="Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue" data-throw-if-not-resolved="false"></xref>.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.ComputeNode.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync*
  nameWithType.vb: ComputeNode.DisableSchedulingAsync(Nullable(Of DisableComputeNodeSchedulingOption), IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync(System.Nullable(Of Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: DisableSchedulingAsync(Nullable(Of DisableComputeNodeSchedulingOption), IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.DisableScheduling(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.DisableScheduling(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: DisableScheduling(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: DisableScheduling(Nullable<DisableComputeNodeSchedulingOption>, IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNode.DisableScheduling(Nullable<DisableComputeNodeSchedulingOption>, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNode.DisableScheduling(System.Nullable<Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisableScheduling
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 394
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDisables task scheduling on the compute node.\n"
  remarks: This is a blocking operation. For a non-blocking equivalent, see <xref href="Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync(System.Nullable%7bMicrosoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void DisableScheduling(DisableComputeNodeSchedulingOption? disableComputeNodeSchedulingOption, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub DisableScheduling(disableComputeNodeSchedulingOption As DisableComputeNodeSchedulingOption?, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: disableComputeNodeSchedulingOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption}
      description: Specifies what to do with currently running tasks. The default is <xref href="Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue" data-throw-if-not-resolved="false"></xref>.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.ComputeNode.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.ComputeNode.DisableScheduling*
  nameWithType.vb: ComputeNode.DisableScheduling(Nullable(Of DisableComputeNodeSchedulingOption), IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.DisableScheduling(System.Nullable(Of Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: DisableScheduling(Nullable(Of DisableComputeNodeSchedulingOption), IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNode.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: ComputeNode.RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.ComputeNode.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RefreshAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 415
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRefreshes the current <xref href=\"Microsoft.Azure.Batch.ComputeNode\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task RefreshAsync(DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function RefreshAsync(detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: The detail level for the refresh. If a detail level which omits the <xref href="Microsoft.Azure.Batch.ComputeNode.Id" data-throw-if-not-resolved="false"></xref> property is specified, refresh will fail.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.ComputeNode.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous refresh operation.
  overload: Microsoft.Azure.Batch.ComputeNode.RefreshAsync*
  implements:
  - Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  nameWithType.vb: ComputeNode.RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: ComputeNode.Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.ComputeNode.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Refresh
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ComputeNode.cs
    startLine: 436
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRefreshes the <xref href=\"Microsoft.Azure.Batch.ComputeNode\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Refresh(DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Refresh(detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: The detail level for the refresh. If a detail level which omits the <xref href="Microsoft.Azure.Batch.ComputeNode.Id" data-throw-if-not-resolved="false"></xref> property is specified, refresh will fail.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.ComputeNode.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.ComputeNode.Refresh*
  implements:
  - Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  nameWithType.vb: ComputeNode.Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ComputeNode.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.ComputeNode.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors
  id: CustomBehaviors
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: CustomBehaviors
  nameWithType: ComputeNode.CustomBehaviors
  fullName: Microsoft.Azure.Batch.ComputeNode.CustomBehaviors
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomBehaviors
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 171
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of behaviors that modify or customize requests to the Batch service\nmade via this <xref href=\"Microsoft.Azure.Batch.ComputeNode\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>These behaviors are inherited by child objects.</p>\n<p>Modifications are applied in the order of the collection. The last write wins.</p>\n"
  example: []
  syntax:
    content: public IList<BatchClientBehavior> CustomBehaviors { get; set; }
    content.vb: Public Property CustomBehaviors As IList(Of BatchClientBehavior)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  overload: Microsoft.Azure.Batch.ComputeNode.CustomBehaviors*
  implements:
  - Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ComputeNode.AffinityId
  commentId: P:Microsoft.Azure.Batch.ComputeNode.AffinityId
  id: AffinityId
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: AffinityId
  nameWithType: ComputeNode.AffinityId
  fullName: Microsoft.Azure.Batch.ComputeNode.AffinityId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AffinityId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 180
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets an opaque string that contains information about the location of the compute node.\n"
  example: []
  syntax:
    content: public string AffinityId { get; }
    content.vb: Public ReadOnly Property AffinityId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ComputeNode.AffinityId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.AllocationTime
  commentId: P:Microsoft.Azure.Batch.ComputeNode.AllocationTime
  id: AllocationTime
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: AllocationTime
  nameWithType: ComputeNode.AllocationTime
  fullName: Microsoft.Azure.Batch.ComputeNode.AllocationTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllocationTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 188
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which this compute node was allocated to the pool.\n"
  example: []
  syntax:
    content: public DateTime? AllocationTime { get; }
    content.vb: Public ReadOnly Property AllocationTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.ComputeNode.AllocationTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.CertificateReferences
  commentId: P:Microsoft.Azure.Batch.ComputeNode.CertificateReferences
  id: CertificateReferences
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: CertificateReferences
  nameWithType: ComputeNode.CertificateReferences
  fullName: Microsoft.Azure.Batch.ComputeNode.CertificateReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 196
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the list of certificates installed on this compute node. \n"
  example: []
  syntax:
    content: public IReadOnlyList<CertificateReference> CertificateReferences { get; }
    content.vb: Public ReadOnly Property CertificateReferences As IReadOnlyList(Of CertificateReference)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.CertificateReference}
  overload: Microsoft.Azure.Batch.ComputeNode.CertificateReferences*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.Errors
  commentId: P:Microsoft.Azure.Batch.ComputeNode.Errors
  id: Errors
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: ComputeNode.Errors
  fullName: Microsoft.Azure.Batch.ComputeNode.Errors
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Errors
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 204
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the list of errors that are currently being encountered by the compute node.\n"
  example: []
  syntax:
    content: public IReadOnlyList<ComputeNodeError> Errors { get; }
    content.vb: Public ReadOnly Property Errors As IReadOnlyList(Of ComputeNodeError)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.ComputeNodeError}
  overload: Microsoft.Azure.Batch.ComputeNode.Errors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.Id
  commentId: P:Microsoft.Azure.Batch.ComputeNode.Id
  id: Id
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ComputeNode.Id
  fullName: Microsoft.Azure.Batch.ComputeNode.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 212
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the id of compute node.\n"
  example: []
  syntax:
    content: public string Id { get; }
    content.vb: Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ComputeNode.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.IPAddress
  commentId: P:Microsoft.Azure.Batch.ComputeNode.IPAddress
  id: IPAddress
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: IPAddress
  nameWithType: ComputeNode.IPAddress
  fullName: Microsoft.Azure.Batch.ComputeNode.IPAddress
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IPAddress
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 220
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the IP address associated with the compute node.\n"
  example: []
  syntax:
    content: public string IPAddress { get; }
    content.vb: Public ReadOnly Property IPAddress As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ComputeNode.IPAddress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.LastBootTime
  commentId: P:Microsoft.Azure.Batch.ComputeNode.LastBootTime
  id: LastBootTime
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: LastBootTime
  nameWithType: ComputeNode.LastBootTime
  fullName: Microsoft.Azure.Batch.ComputeNode.LastBootTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastBootTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 228
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the compute node was started.\n"
  example: []
  syntax:
    content: public DateTime? LastBootTime { get; }
    content.vb: Public ReadOnly Property LastBootTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.ComputeNode.LastBootTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.RecentTasks
  commentId: P:Microsoft.Azure.Batch.ComputeNode.RecentTasks
  id: RecentTasks
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: RecentTasks
  nameWithType: ComputeNode.RecentTasks
  fullName: Microsoft.Azure.Batch.ComputeNode.RecentTasks
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RecentTasks
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 238
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the execution information for the most recent tasks that ran on this compute node. Note that this element \nis only returned if at least one task was run on this compute node since the time it was assigned to its current \npool.\n"
  example: []
  syntax:
    content: public IReadOnlyList<TaskInformation> RecentTasks { get; }
    content.vb: Public ReadOnly Property RecentTasks As IReadOnlyList(Of TaskInformation)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.TaskInformation}
  overload: Microsoft.Azure.Batch.ComputeNode.RecentTasks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.RunningTasksCount
  commentId: P:Microsoft.Azure.Batch.ComputeNode.RunningTasksCount
  id: RunningTasksCount
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: RunningTasksCount
  nameWithType: ComputeNode.RunningTasksCount
  fullName: Microsoft.Azure.Batch.ComputeNode.RunningTasksCount
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RunningTasksCount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 247
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the total number of currently running tasks on the compute node. This includes Job Preparation, Job Release, \nand Job Manager tasks, but not the pool start task.\n"
  example: []
  syntax:
    content: public int ? RunningTasksCount { get; }
    content.vb: Public ReadOnly Property RunningTasksCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.ComputeNode.RunningTasksCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.SchedulingState
  commentId: P:Microsoft.Azure.Batch.ComputeNode.SchedulingState
  id: SchedulingState
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: SchedulingState
  nameWithType: ComputeNode.SchedulingState
  fullName: Microsoft.Azure.Batch.ComputeNode.SchedulingState
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SchedulingState
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 255
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets whether the node is available for task scheduling.\n"
  example: []
  syntax:
    content: public SchedulingState? SchedulingState { get; }
    content.vb: Public ReadOnly Property SchedulingState As SchedulingState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.SchedulingState}
  overload: Microsoft.Azure.Batch.ComputeNode.SchedulingState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.StartTask
  commentId: P:Microsoft.Azure.Batch.ComputeNode.StartTask
  id: StartTask
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: StartTask
  nameWithType: ComputeNode.StartTask
  fullName: Microsoft.Azure.Batch.ComputeNode.StartTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 263
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the start task associated with all compute nodes in this pool.\n"
  example: []
  syntax:
    content: public StartTask StartTask { get; }
    content.vb: Public ReadOnly Property StartTask As StartTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.StartTask
  overload: Microsoft.Azure.Batch.ComputeNode.StartTask*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.StartTaskInformation
  commentId: P:Microsoft.Azure.Batch.ComputeNode.StartTaskInformation
  id: StartTaskInformation
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: StartTaskInformation
  nameWithType: ComputeNode.StartTaskInformation
  fullName: Microsoft.Azure.Batch.ComputeNode.StartTaskInformation
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTaskInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 272
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the detailed runtime information of the start task, including current state, error details, exit code, start \ntime, end time, etc.\n"
  example: []
  syntax:
    content: public StartTaskInformation StartTaskInformation { get; }
    content.vb: Public ReadOnly Property StartTaskInformation As StartTaskInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.StartTaskInformation
  overload: Microsoft.Azure.Batch.ComputeNode.StartTaskInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.State
  commentId: P:Microsoft.Azure.Batch.ComputeNode.State
  id: State
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: State
  nameWithType: ComputeNode.State
  fullName: Microsoft.Azure.Batch.ComputeNode.State
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 280
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the current state of the compute node.\n"
  example: []
  syntax:
    content: public ComputeNodeState? State { get; }
    content.vb: Public ReadOnly Property State As ComputeNodeState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeState}
  overload: Microsoft.Azure.Batch.ComputeNode.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.StateTransitionTime
  commentId: P:Microsoft.Azure.Batch.ComputeNode.StateTransitionTime
  id: StateTransitionTime
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: StateTransitionTime
  nameWithType: ComputeNode.StateTransitionTime
  fullName: Microsoft.Azure.Batch.ComputeNode.StateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 288
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the compute node entered the current state.\n"
  example: []
  syntax:
    content: public DateTime? StateTransitionTime { get; }
    content.vb: Public ReadOnly Property StateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.ComputeNode.StateTransitionTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.TotalTasksRun
  commentId: P:Microsoft.Azure.Batch.ComputeNode.TotalTasksRun
  id: TotalTasksRun
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: TotalTasksRun
  nameWithType: ComputeNode.TotalTasksRun
  fullName: Microsoft.Azure.Batch.ComputeNode.TotalTasksRun
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TotalTasksRun
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 297
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the number of tasks that have been run on this compute node from the time it was allocated to this pool. \nThis includes Job Preparation, Job Release, and Job Manager tasks, but not the pool start task.\n"
  example: []
  syntax:
    content: public int ? TotalTasksRun { get; }
    content.vb: Public ReadOnly Property TotalTasksRun As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.ComputeNode.TotalTasksRun*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.TotalTasksSucceeded
  commentId: P:Microsoft.Azure.Batch.ComputeNode.TotalTasksSucceeded
  id: TotalTasksSucceeded
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: TotalTasksSucceeded
  nameWithType: ComputeNode.TotalTasksSucceeded
  fullName: Microsoft.Azure.Batch.ComputeNode.TotalTasksSucceeded
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TotalTasksSucceeded
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 306
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the total number of tasks which completed successfully (with exitCode 0) on the compute node. This includes \nJob Preparation, Job Release, and Job Manager tasks, but not the pool start task.\n"
  example: []
  syntax:
    content: public int ? TotalTasksSucceeded { get; }
    content.vb: Public ReadOnly Property TotalTasksSucceeded As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.ComputeNode.TotalTasksSucceeded*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.Url
  commentId: P:Microsoft.Azure.Batch.ComputeNode.Url
  id: Url
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: ComputeNode.Url
  fullName: Microsoft.Azure.Batch.ComputeNode.Url
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Url
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 314
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the URL of compute node.\n"
  example: []
  syntax:
    content: public string Url { get; }
    content.vb: Public ReadOnly Property Url As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ComputeNode.Url*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ComputeNode.VirtualMachineSize
  commentId: P:Microsoft.Azure.Batch.ComputeNode.VirtualMachineSize
  id: VirtualMachineSize
  parent: Microsoft.Azure.Batch.ComputeNode
  langs:
  - csharp
  - vb
  name: VirtualMachineSize
  nameWithType: ComputeNode.VirtualMachineSize
  fullName: Microsoft.Azure.Batch.ComputeNode.VirtualMachineSize
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ComputeNode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineSize
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ComputeNode.cs
    startLine: 322
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the size of the virtual machine hosting the compute node.\n"
  example: []
  syntax:
    content: public string VirtualMachineSize { get; }
    content.vb: Public ReadOnly Property VirtualMachineSize As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ComputeNode.VirtualMachineSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Batch.IRefreshable
  commentId: T:Microsoft.Azure.Batch.IRefreshable
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IRefreshable
  nameWithType: IRefreshable
  fullName: Microsoft.Azure.Batch.IRefreshable
- uid: Microsoft.Azure.Batch.IInheritedBehaviors
  commentId: T:Microsoft.Azure.Batch.IInheritedBehaviors
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IInheritedBehaviors
  nameWithType: IInheritedBehaviors
  fullName: Microsoft.Azure.Batch.IInheritedBehaviors
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.ComputeNodeUser
  commentId: T:Microsoft.Azure.Batch.ComputeNodeUser
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ComputeNodeUser
  nameWithType: ComputeNodeUser
  fullName: Microsoft.Azure.Batch.ComputeNodeUser
- uid: Microsoft.Azure.Batch.ComputeNode.CreateComputeNodeUser*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.CreateComputeNodeUser
  isExternal: false
  name: CreateComputeNodeUser
  nameWithType: ComputeNode.CreateComputeNodeUser
  fullName: Microsoft.Azure.Batch.ComputeNode.CreateComputeNodeUser
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUserAsync*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUserAsync
  isExternal: false
  name: DeleteComputeNodeUserAsync
  nameWithType: ComputeNode.DeleteComputeNodeUserAsync
  fullName: Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUserAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BatchClientBehavior>
  nameWithType: IEnumerable<BatchClientBehavior>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>
  nameWithType.vb: IEnumerable(Of BatchClientBehavior)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior)
  name.vb: IEnumerable(Of BatchClientBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUser*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUser
  isExternal: false
  name: DeleteComputeNodeUser
  nameWithType: ComputeNode.DeleteComputeNodeUser
  fullName: Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUser
- uid: Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync
  isExternal: false
  name: GetRDPFileAsync
  nameWithType: ComputeNode.GetRDPFileAsync
  fullName: Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.Azure.Batch.ComputeNode.GetRDPFile*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.GetRDPFile
  isExternal: false
  name: GetRDPFile
  nameWithType: ComputeNode.GetRDPFile
  fullName: Microsoft.Azure.Batch.ComputeNode.GetRDPFile
- uid: Microsoft.Azure.Batch.BatchClientBehavior
  commentId: T:Microsoft.Azure.Batch.BatchClientBehavior
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: BatchClientBehavior
  nameWithType: BatchClientBehavior
  fullName: Microsoft.Azure.Batch.BatchClientBehavior
- uid: Microsoft.Azure.Batch.ComputeNode.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration
  commentId: T:Microsoft.Azure.Batch.VirtualMachineConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration
  commentId: T:Microsoft.Azure.Batch.CloudServiceConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration
- uid: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync
  isExternal: false
  name: GetRemoteLoginSettingsAsync
  nameWithType: ComputeNode.GetRemoteLoginSettingsAsync
  fullName: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.RemoteLoginSettings}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.RemoteLoginSettings}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RemoteLoginSettings>
  nameWithType: Task<RemoteLoginSettings>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.RemoteLoginSettings>
  nameWithType.vb: Task(Of RemoteLoginSettings)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.RemoteLoginSettings)
  name.vb: Task(Of RemoteLoginSettings)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.RemoteLoginSettings
    name: RemoteLoginSettings
    nameWithType: RemoteLoginSettings
    fullName: Microsoft.Azure.Batch.RemoteLoginSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.RemoteLoginSettings
    name: RemoteLoginSettings
    nameWithType: RemoteLoginSettings
    fullName: Microsoft.Azure.Batch.RemoteLoginSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettings*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettings
  isExternal: false
  name: GetRemoteLoginSettings
  nameWithType: ComputeNode.GetRemoteLoginSettings
  fullName: Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettings
- uid: Microsoft.Azure.Batch.RemoteLoginSettings
  commentId: T:Microsoft.Azure.Batch.RemoteLoginSettings
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: RemoteLoginSettings
  nameWithType: RemoteLoginSettings
  fullName: Microsoft.Azure.Batch.RemoteLoginSettings
- uid: Microsoft.Azure.Batch.ComputeNode.RemoveFromPoolAsync*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.RemoveFromPoolAsync
  isExternal: false
  name: RemoveFromPoolAsync
  nameWithType: ComputeNode.RemoveFromPoolAsync
  fullName: Microsoft.Azure.Batch.ComputeNode.RemoveFromPoolAsync
- uid: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ComputeNodeDeallocationOption>
  nameWithType: Nullable<ComputeNodeDeallocationOption>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>
  nameWithType.vb: Nullable(Of ComputeNodeDeallocationOption)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption)
  name.vb: Nullable(Of ComputeNodeDeallocationOption)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption
    name: ComputeNodeDeallocationOption
    nameWithType: ComputeNodeDeallocationOption
    fullName: Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption
    name: ComputeNodeDeallocationOption
    nameWithType: ComputeNodeDeallocationOption
    fullName: Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.RemoveFromPool*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.RemoveFromPool
  isExternal: false
  name: RemoveFromPool
  nameWithType: ComputeNode.RemoveFromPool
  fullName: Microsoft.Azure.Batch.ComputeNode.RemoveFromPool
- uid: Microsoft.Azure.Batch.ComputeNode.RebootAsync*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.RebootAsync
  isExternal: false
  name: RebootAsync
  nameWithType: ComputeNode.RebootAsync
  fullName: Microsoft.Azure.Batch.ComputeNode.RebootAsync
- uid: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ComputeNodeRebootOption>
  nameWithType: Nullable<ComputeNodeRebootOption>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeRebootOption>
  nameWithType.vb: Nullable(Of ComputeNodeRebootOption)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeRebootOption)
  name.vb: Nullable(Of ComputeNodeRebootOption)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.ComputeNodeRebootOption
    name: ComputeNodeRebootOption
    nameWithType: ComputeNodeRebootOption
    fullName: Microsoft.Azure.Batch.Common.ComputeNodeRebootOption
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.ComputeNodeRebootOption
    name: ComputeNodeRebootOption
    nameWithType: ComputeNodeRebootOption
    fullName: Microsoft.Azure.Batch.Common.ComputeNodeRebootOption
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.Reboot*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.Reboot
  isExternal: false
  name: Reboot
  nameWithType: ComputeNode.Reboot
  fullName: Microsoft.Azure.Batch.ComputeNode.Reboot
- uid: Microsoft.Azure.Batch.ComputeNode.ReimageAsync*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.ReimageAsync
  isExternal: false
  name: ReimageAsync
  nameWithType: ComputeNode.ReimageAsync
  fullName: Microsoft.Azure.Batch.ComputeNode.ReimageAsync
- uid: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ComputeNodeReimageOption>
  nameWithType: Nullable<ComputeNodeReimageOption>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeReimageOption>
  nameWithType.vb: Nullable(Of ComputeNodeReimageOption)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeReimageOption)
  name.vb: Nullable(Of ComputeNodeReimageOption)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.ComputeNodeReimageOption
    name: ComputeNodeReimageOption
    nameWithType: ComputeNodeReimageOption
    fullName: Microsoft.Azure.Batch.Common.ComputeNodeReimageOption
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.ComputeNodeReimageOption
    name: ComputeNodeReimageOption
    nameWithType: ComputeNodeReimageOption
    fullName: Microsoft.Azure.Batch.Common.ComputeNodeReimageOption
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.Reimage*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.Reimage
  isExternal: false
  name: Reimage
  nameWithType: ComputeNode.Reimage
  fullName: Microsoft.Azure.Batch.ComputeNode.Reimage
- uid: Microsoft.Azure.Batch.ComputeNode.GetNodeFileAsync*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.GetNodeFileAsync
  isExternal: false
  name: GetNodeFileAsync
  nameWithType: ComputeNode.GetNodeFileAsync
  fullName: Microsoft.Azure.Batch.ComputeNode.GetNodeFileAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.NodeFile}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.NodeFile}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<NodeFile>
  nameWithType: Task<NodeFile>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.NodeFile>
  nameWithType.vb: Task(Of NodeFile)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.NodeFile)
  name.vb: Task(Of NodeFile)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.NodeFile
    name: NodeFile
    nameWithType: NodeFile
    fullName: Microsoft.Azure.Batch.NodeFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.NodeFile
    name: NodeFile
    nameWithType: NodeFile
    fullName: Microsoft.Azure.Batch.NodeFile
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.NodeFile
  commentId: T:Microsoft.Azure.Batch.NodeFile
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: NodeFile
  nameWithType: NodeFile
  fullName: Microsoft.Azure.Batch.NodeFile
- uid: Microsoft.Azure.Batch.ComputeNode.GetNodeFile*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.GetNodeFile
  isExternal: false
  name: GetNodeFile
  nameWithType: ComputeNode.GetNodeFile
  fullName: Microsoft.Azure.Batch.ComputeNode.GetNodeFile
- uid: Microsoft.Azure.Batch.ComputeNode.ListNodeFiles*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.ListNodeFiles
  isExternal: false
  name: ListNodeFiles
  nameWithType: ComputeNode.ListNodeFiles
  fullName: Microsoft.Azure.Batch.ComputeNode.ListNodeFiles
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.DetailLevel
  commentId: T:Microsoft.Azure.Batch.DetailLevel
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: DetailLevel
  nameWithType: DetailLevel
  fullName: Microsoft.Azure.Batch.DetailLevel
- uid: Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.NodeFile}
  commentId: T:Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.NodeFile}
  parent: Microsoft.Azure.Batch
  definition: Microsoft.Azure.Batch.IPagedEnumerable`1
  name: IPagedEnumerable<NodeFile>
  nameWithType: IPagedEnumerable<NodeFile>
  fullName: Microsoft.Azure.Batch.IPagedEnumerable<Microsoft.Azure.Batch.NodeFile>
  nameWithType.vb: IPagedEnumerable(Of NodeFile)
  fullname.vb: Microsoft.Azure.Batch.IPagedEnumerable(Of Microsoft.Azure.Batch.NodeFile)
  name.vb: IPagedEnumerable(Of NodeFile)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.NodeFile
    name: NodeFile
    nameWithType: NodeFile
    fullName: Microsoft.Azure.Batch.NodeFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.NodeFile
    name: NodeFile
    nameWithType: NodeFile
    fullName: Microsoft.Azure.Batch.NodeFile
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.IPagedEnumerable`1
  commentId: T:Microsoft.Azure.Batch.IPagedEnumerable`1
  isExternal: false
  name: IPagedEnumerable<T>
  nameWithType: IPagedEnumerable<T>
  fullName: Microsoft.Azure.Batch.IPagedEnumerable<T>
  nameWithType.vb: IPagedEnumerable(Of T)
  fullname.vb: Microsoft.Azure.Batch.IPagedEnumerable(Of T)
  name.vb: IPagedEnumerable(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.EnableSchedulingAsync*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.EnableSchedulingAsync
  isExternal: false
  name: EnableSchedulingAsync
  nameWithType: ComputeNode.EnableSchedulingAsync
  fullName: Microsoft.Azure.Batch.ComputeNode.EnableSchedulingAsync
- uid: Microsoft.Azure.Batch.ComputeNode.EnableScheduling(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.ComputeNode.EnableScheduling(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.ComputeNode.EnableScheduling*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.EnableScheduling
  isExternal: false
  name: EnableScheduling
  nameWithType: ComputeNode.EnableScheduling
  fullName: Microsoft.Azure.Batch.ComputeNode.EnableScheduling
- uid: Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue
  commentId: F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue
- uid: Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync
  isExternal: false
  name: DisableSchedulingAsync
  nameWithType: ComputeNode.DisableSchedulingAsync
  fullName: Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync
- uid: System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DisableComputeNodeSchedulingOption>
  nameWithType: Nullable<DisableComputeNodeSchedulingOption>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption>
  nameWithType.vb: Nullable(Of DisableComputeNodeSchedulingOption)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption)
  name.vb: Nullable(Of DisableComputeNodeSchedulingOption)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption
    name: DisableComputeNodeSchedulingOption
    nameWithType: DisableComputeNodeSchedulingOption
    fullName: Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption
    name: DisableComputeNodeSchedulingOption
    nameWithType: DisableComputeNodeSchedulingOption
    fullName: Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.ComputeNode.DisableScheduling*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.DisableScheduling
  isExternal: false
  name: DisableScheduling
  nameWithType: ComputeNode.DisableScheduling
  fullName: Microsoft.Azure.Batch.ComputeNode.DisableScheduling
- uid: Microsoft.Azure.Batch.ComputeNode
  commentId: T:Microsoft.Azure.Batch.ComputeNode
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ComputeNode
  nameWithType: ComputeNode
  fullName: Microsoft.Azure.Batch.ComputeNode
- uid: Microsoft.Azure.Batch.ComputeNode.Id
  commentId: P:Microsoft.Azure.Batch.ComputeNode.Id
- uid: Microsoft.Azure.Batch.ComputeNode.RefreshAsync*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.RefreshAsync
  isExternal: false
  name: RefreshAsync
  nameWithType: ComputeNode.RefreshAsync
  fullName: Microsoft.Azure.Batch.ComputeNode.RefreshAsync
- uid: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.IRefreshable
  isExternal: true
  name: RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: IRefreshable.RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  nameWithType.vb: IRefreshable.RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  fullname.vb: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
    name: RefreshAsync
    nameWithType: IRefreshable.RefreshAsync
    fullName: Microsoft.Azure.Batch.IRefreshable.RefreshAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
    name: RefreshAsync
    nameWithType: IRefreshable.RefreshAsync
    fullName: Microsoft.Azure.Batch.IRefreshable.RefreshAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.Refresh*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.Refresh
  isExternal: false
  name: Refresh
  nameWithType: ComputeNode.Refresh
  fullName: Microsoft.Azure.Batch.ComputeNode.Refresh
- uid: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.IRefreshable
  isExternal: true
  name: Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: IRefreshable.Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  nameWithType.vb: IRefreshable.Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
  fullname.vb: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
    name: Refresh
    nameWithType: IRefreshable.Refresh
    fullName: Microsoft.Azure.Batch.IRefreshable.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
    name: Refresh
    nameWithType: IRefreshable.Refresh
    fullName: Microsoft.Azure.Batch.IRefreshable.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.CustomBehaviors*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors
  isExternal: false
  name: CustomBehaviors
  nameWithType: ComputeNode.CustomBehaviors
  fullName: Microsoft.Azure.Batch.ComputeNode.CustomBehaviors
- uid: Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  parent: Microsoft.Azure.Batch.IInheritedBehaviors
  isExternal: false
  name: CustomBehaviors
  nameWithType: IInheritedBehaviors.CustomBehaviors
  fullName: Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<BatchClientBehavior>
  nameWithType: IList<BatchClientBehavior>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.BatchClientBehavior>
  nameWithType.vb: IList(Of BatchClientBehavior)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.BatchClientBehavior)
  name.vb: IList(Of BatchClientBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.AffinityId*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.AffinityId
  isExternal: false
  name: AffinityId
  nameWithType: ComputeNode.AffinityId
  fullName: Microsoft.Azure.Batch.ComputeNode.AffinityId
- uid: Microsoft.Azure.Batch.ComputeNode.AllocationTime*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.AllocationTime
  isExternal: false
  name: AllocationTime
  nameWithType: ComputeNode.AllocationTime
  fullName: Microsoft.Azure.Batch.ComputeNode.AllocationTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.CertificateReferences*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.CertificateReferences
  isExternal: false
  name: CertificateReferences
  nameWithType: ComputeNode.CertificateReferences
  fullName: Microsoft.Azure.Batch.ComputeNode.CertificateReferences
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.CertificateReference}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.CertificateReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<CertificateReference>
  nameWithType: IReadOnlyList<CertificateReference>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.Azure.Batch.CertificateReference>
  nameWithType.vb: IReadOnlyList(Of CertificateReference)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.Azure.Batch.CertificateReference)
  name.vb: IReadOnlyList(Of CertificateReference)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.CertificateReference
    name: CertificateReference
    nameWithType: CertificateReference
    fullName: Microsoft.Azure.Batch.CertificateReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.CertificateReference
    name: CertificateReference
    nameWithType: CertificateReference
    fullName: Microsoft.Azure.Batch.CertificateReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.Errors*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.Errors
  isExternal: false
  name: Errors
  nameWithType: ComputeNode.Errors
  fullName: Microsoft.Azure.Batch.ComputeNode.Errors
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.ComputeNodeError}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.ComputeNodeError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ComputeNodeError>
  nameWithType: IReadOnlyList<ComputeNodeError>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.Azure.Batch.ComputeNodeError>
  nameWithType.vb: IReadOnlyList(Of ComputeNodeError)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.Azure.Batch.ComputeNodeError)
  name.vb: IReadOnlyList(Of ComputeNodeError)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.ComputeNodeError
    name: ComputeNodeError
    nameWithType: ComputeNodeError
    fullName: Microsoft.Azure.Batch.ComputeNodeError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.ComputeNodeError
    name: ComputeNodeError
    nameWithType: ComputeNodeError
    fullName: Microsoft.Azure.Batch.ComputeNodeError
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.Id*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.Id
  isExternal: false
  name: Id
  nameWithType: ComputeNode.Id
  fullName: Microsoft.Azure.Batch.ComputeNode.Id
- uid: Microsoft.Azure.Batch.ComputeNode.IPAddress*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.IPAddress
  isExternal: false
  name: IPAddress
  nameWithType: ComputeNode.IPAddress
  fullName: Microsoft.Azure.Batch.ComputeNode.IPAddress
- uid: Microsoft.Azure.Batch.ComputeNode.LastBootTime*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.LastBootTime
  isExternal: false
  name: LastBootTime
  nameWithType: ComputeNode.LastBootTime
  fullName: Microsoft.Azure.Batch.ComputeNode.LastBootTime
- uid: Microsoft.Azure.Batch.ComputeNode.RecentTasks*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.RecentTasks
  isExternal: false
  name: RecentTasks
  nameWithType: ComputeNode.RecentTasks
  fullName: Microsoft.Azure.Batch.ComputeNode.RecentTasks
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.TaskInformation}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.TaskInformation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<TaskInformation>
  nameWithType: IReadOnlyList<TaskInformation>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.Azure.Batch.TaskInformation>
  nameWithType.vb: IReadOnlyList(Of TaskInformation)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.Azure.Batch.TaskInformation)
  name.vb: IReadOnlyList(Of TaskInformation)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.TaskInformation
    name: TaskInformation
    nameWithType: TaskInformation
    fullName: Microsoft.Azure.Batch.TaskInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.TaskInformation
    name: TaskInformation
    nameWithType: TaskInformation
    fullName: Microsoft.Azure.Batch.TaskInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.RunningTasksCount*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.RunningTasksCount
  isExternal: false
  name: RunningTasksCount
  nameWithType: ComputeNode.RunningTasksCount
  fullName: Microsoft.Azure.Batch.ComputeNode.RunningTasksCount
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.SchedulingState*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.SchedulingState
  isExternal: false
  name: SchedulingState
  nameWithType: ComputeNode.SchedulingState
  fullName: Microsoft.Azure.Batch.ComputeNode.SchedulingState
- uid: System.Nullable{Microsoft.Azure.Batch.Common.SchedulingState}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.SchedulingState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SchedulingState>
  nameWithType: Nullable<SchedulingState>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.SchedulingState>
  nameWithType.vb: Nullable(Of SchedulingState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.SchedulingState)
  name.vb: Nullable(Of SchedulingState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.SchedulingState
    name: SchedulingState
    nameWithType: SchedulingState
    fullName: Microsoft.Azure.Batch.Common.SchedulingState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.SchedulingState
    name: SchedulingState
    nameWithType: SchedulingState
    fullName: Microsoft.Azure.Batch.Common.SchedulingState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.StartTask*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.StartTask
  isExternal: false
  name: StartTask
  nameWithType: ComputeNode.StartTask
  fullName: Microsoft.Azure.Batch.ComputeNode.StartTask
- uid: Microsoft.Azure.Batch.StartTask
  commentId: T:Microsoft.Azure.Batch.StartTask
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: StartTask
  nameWithType: StartTask
  fullName: Microsoft.Azure.Batch.StartTask
- uid: Microsoft.Azure.Batch.ComputeNode.StartTaskInformation*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.StartTaskInformation
  isExternal: false
  name: StartTaskInformation
  nameWithType: ComputeNode.StartTaskInformation
  fullName: Microsoft.Azure.Batch.ComputeNode.StartTaskInformation
- uid: Microsoft.Azure.Batch.StartTaskInformation
  commentId: T:Microsoft.Azure.Batch.StartTaskInformation
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: StartTaskInformation
  nameWithType: StartTaskInformation
  fullName: Microsoft.Azure.Batch.StartTaskInformation
- uid: Microsoft.Azure.Batch.ComputeNode.State*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.State
  isExternal: false
  name: State
  nameWithType: ComputeNode.State
  fullName: Microsoft.Azure.Batch.ComputeNode.State
- uid: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeState}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ComputeNodeState>
  nameWithType: Nullable<ComputeNodeState>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeState>
  nameWithType.vb: Nullable(Of ComputeNodeState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeState)
  name.vb: Nullable(Of ComputeNodeState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.ComputeNodeState
    name: ComputeNodeState
    nameWithType: ComputeNodeState
    fullName: Microsoft.Azure.Batch.Common.ComputeNodeState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.ComputeNodeState
    name: ComputeNodeState
    nameWithType: ComputeNodeState
    fullName: Microsoft.Azure.Batch.Common.ComputeNodeState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ComputeNode.StateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.StateTransitionTime
  isExternal: false
  name: StateTransitionTime
  nameWithType: ComputeNode.StateTransitionTime
  fullName: Microsoft.Azure.Batch.ComputeNode.StateTransitionTime
- uid: Microsoft.Azure.Batch.ComputeNode.TotalTasksRun*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.TotalTasksRun
  isExternal: false
  name: TotalTasksRun
  nameWithType: ComputeNode.TotalTasksRun
  fullName: Microsoft.Azure.Batch.ComputeNode.TotalTasksRun
- uid: Microsoft.Azure.Batch.ComputeNode.TotalTasksSucceeded*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.TotalTasksSucceeded
  isExternal: false
  name: TotalTasksSucceeded
  nameWithType: ComputeNode.TotalTasksSucceeded
  fullName: Microsoft.Azure.Batch.ComputeNode.TotalTasksSucceeded
- uid: Microsoft.Azure.Batch.ComputeNode.Url*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.Url
  isExternal: false
  name: Url
  nameWithType: ComputeNode.Url
  fullName: Microsoft.Azure.Batch.ComputeNode.Url
- uid: Microsoft.Azure.Batch.ComputeNode.VirtualMachineSize*
  commentId: Overload:Microsoft.Azure.Batch.ComputeNode.VirtualMachineSize
  isExternal: false
  name: VirtualMachineSize
  nameWithType: ComputeNode.VirtualMachineSize
  fullName: Microsoft.Azure.Batch.ComputeNode.VirtualMachineSize
