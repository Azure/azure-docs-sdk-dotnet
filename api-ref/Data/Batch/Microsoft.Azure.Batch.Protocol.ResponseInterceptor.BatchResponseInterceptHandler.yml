### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler
  commentId: T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler
  id: ResponseInterceptor.BatchResponseInterceptHandler
  parent: Microsoft.Azure.Batch.Protocol
  children: []
  langs:
  - csharp
  - vb
  name: ResponseInterceptor.BatchResponseInterceptHandler
  nameWithType: ResponseInterceptor.BatchResponseInterceptHandler
  fullName: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler
  type: Delegate
  source:
    remote:
      path: src/Batch/Client/Src/Protocol/ResponseInterceptor.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BatchResponseInterceptHandler
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Protocol/ResponseInterceptor.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nA callback that can inspect and modify a BatchResponse.\n"
  example: []
  syntax:
    content: public delegate Task<IAzureOperationResponse> BatchResponseInterceptHandler(IAzureOperationResponse response, IBatchRequest request);
    content.vb: Public Delegate Function BatchResponseInterceptHandler(response As IAzureOperationResponse, request As IBatchRequest) As Task(Of IAzureOperationResponse)
    parameters:
    - id: response
      type: IAzureOperationResponse
      description: The response to be inspected and optionally modified.
    - id: request
      type: Microsoft.Azure.Batch.Protocol.IBatchRequest
      description: The request to which the <span class="paramref">response</span> is a response.
    return:
      type: System.Threading.Tasks.Task{IAzureOperationResponse}
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: IAzureOperationResponse
  commentId: '!:IAzureOperationResponse'
  isExternal: true
  name: IAzureOperationResponse
  nameWithType: IAzureOperationResponse
  fullName: IAzureOperationResponse
- uid: Microsoft.Azure.Batch.Protocol.IBatchRequest
  commentId: T:Microsoft.Azure.Batch.Protocol.IBatchRequest
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: IBatchRequest
  nameWithType: IBatchRequest
  fullName: Microsoft.Azure.Batch.Protocol.IBatchRequest
- uid: System.Threading.Tasks.Task{IAzureOperationResponse}
  commentId: T:System.Threading.Tasks.Task{IAzureOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IAzureOperationResponse>
  nameWithType: Task<IAzureOperationResponse>
  fullName: System.Threading.Tasks.Task<IAzureOperationResponse>
  nameWithType.vb: Task(Of IAzureOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of IAzureOperationResponse)
  name.vb: Task(Of IAzureOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IAzureOperationResponse
    name: IAzureOperationResponse
    nameWithType: IAzureOperationResponse
    fullName: IAzureOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IAzureOperationResponse
    name: IAzureOperationResponse
    nameWithType: IAzureOperationResponse
    fullName: IAzureOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
