### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  commentId: T:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  id: CertificateOperationsExtensions
  parent: Microsoft.Azure.Batch.Protocol
  children:
  - Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions)
  - Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions)
  - Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions)
  - Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions)
  - Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions)
  - Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions)
  - Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: CertificateOperationsExtensions
  nameWithType: CertificateOperationsExtensions
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateOperationsExtensions
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nExtension methods for CertificateOperations.\n"
  example: []
  syntax:
    content: public static class CertificateOperationsExtensions
    content.vb: Public Module CertificateOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions)
  id: Add(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: Add(ICertificateOperations, CertificateAddParameter, CertificateAddOptions)
  nameWithType: CertificateOperationsExtensions.Add(ICertificateOperations, CertificateAddParameter, CertificateAddOptions)
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICertificateOperations, Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter, Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Add
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nAdds a certificate to the specified account.\n"
  example: []
  syntax:
    content: public static CertificateAddHeaders Add(this ICertificateOperations operations, CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Add(operations As ICertificateOperations, certificate As CertificateAddParameter, certificateAddOptions As CertificateAddOptions = Nothing) As CertificateAddHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
      description: "\nThe operations group for this extension method.\n"
    - id: certificate
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
      description: "\nThe certificate to be added.\n"
    - id: certificateAddOptions
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders
  overload: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Threading.CancellationToken)
  id: AddAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: AddAsync(ICertificateOperations, CertificateAddParameter, CertificateAddOptions, CancellationToken)
  nameWithType: CertificateOperationsExtensions.AddAsync(ICertificateOperations, CertificateAddParameter, CertificateAddOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations, Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter, Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nAdds a certificate to the specified account.\n"
  example: []
  syntax:
    content: public static Task<CertificateAddHeaders> AddAsync(this ICertificateOperations operations, CertificateAddParameter certificate, CertificateAddOptions certificateAddOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAsync(operations As ICertificateOperations, certificate As CertificateAddParameter, certificateAddOptions As CertificateAddOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateAddHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
      description: "\nThe operations group for this extension method.\n"
    - id: certificate
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
      description: "\nThe certificate to be added.\n"
    - id: certificateAddOptions
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders}
  overload: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions)
  id: List(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(ICertificateOperations, CertificateListOptions)
  nameWithType: CertificateOperationsExtensions.List(ICertificateOperations, CertificateListOptions)
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICertificateOperations, Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the certificates that have been added to the specified\naccount.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<Certificate> List(this ICertificateOperations operations, CertificateListOptions certificateListOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As ICertificateOperations, certificateListOptions As CertificateListOptions = Nothing) As Rest.Azure.IPage(Of Certificate)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
      description: "\nThe operations group for this extension method.\n"
    - id: certificateListOptions
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.Certificate}
  overload: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(ICertificateOperations, CertificateListOptions, CancellationToken)
  nameWithType: CertificateOperationsExtensions.ListAsync(ICertificateOperations, CertificateListOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations, Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the certificates that have been added to the specified\naccount.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<Certificate>> ListAsync(this ICertificateOperations operations, CertificateListOptions certificateListOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As ICertificateOperations, certificateListOptions As CertificateListOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of Certificate))
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
      description: "\nThe operations group for this extension method.\n"
    - id: certificateListOptions
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.Certificate}}
  overload: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions)
  id: CancelDeletion(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: CancelDeletion(ICertificateOperations, String, String, CertificateCancelDeletionOptions)
  nameWithType: CertificateOperationsExtensions.CancelDeletion(ICertificateOperations, String, String, CertificateCancelDeletionOptions)
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion(Microsoft.Azure.Batch.Protocol.ICertificateOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CancelDeletion
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nCancels a failed deletion of a certificate from the specified account.\n"
  example: []
  syntax:
    content: public static CertificateCancelDeletionHeaders CancelDeletion(this ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CancelDeletion(operations As ICertificateOperations, thumbprintAlgorithm As String, thumbprint As String, certificateCancelDeletionOptions As CertificateCancelDeletionOptions = Nothing) As CertificateCancelDeletionHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
      description: "\nThe operations group for this extension method.\n"
    - id: thumbprintAlgorithm
      type: System.String
      description: "\nThe algorithm used to derive the thumbprint parameter. This must be sha1.\n"
    - id: thumbprint
      type: System.String
      description: "\nThe thumbprint of the certificate being deleted.\n"
    - id: certificateCancelDeletionOptions
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders
  overload: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Threading.CancellationToken)
  id: CancelDeletionAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: CancelDeletionAsync(ICertificateOperations, String, String, CertificateCancelDeletionOptions, CancellationToken)
  nameWithType: CertificateOperationsExtensions.CancelDeletionAsync(ICertificateOperations, String, String, CertificateCancelDeletionOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CancelDeletionAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 143
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nCancels a failed deletion of a certificate from the specified account.\n"
  example: []
  syntax:
    content: public static Task<CertificateCancelDeletionHeaders> CancelDeletionAsync(this ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, CertificateCancelDeletionOptions certificateCancelDeletionOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CancelDeletionAsync(operations As ICertificateOperations, thumbprintAlgorithm As String, thumbprint As String, certificateCancelDeletionOptions As CertificateCancelDeletionOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateCancelDeletionHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
      description: "\nThe operations group for this extension method.\n"
    - id: thumbprintAlgorithm
      type: System.String
      description: "\nThe algorithm used to derive the thumbprint parameter. This must be sha1.\n"
    - id: thumbprint
      type: System.String
      description: "\nThe thumbprint of the certificate being deleted.\n"
    - id: certificateCancelDeletionOptions
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders}
  overload: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions)
  id: Delete(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(ICertificateOperations, String, String, CertificateDeleteOptions)
  nameWithType: CertificateOperationsExtensions.Delete(ICertificateOperations, String, String, CertificateDeleteOptions)
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICertificateOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 166
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDeletes a certificate from the specified account.\n"
  example: []
  syntax:
    content: public static CertificateDeleteHeaders Delete(this ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, CertificateDeleteOptions certificateDeleteOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(operations As ICertificateOperations, thumbprintAlgorithm As String, thumbprint As String, certificateDeleteOptions As CertificateDeleteOptions = Nothing) As CertificateDeleteHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
      description: "\nThe operations group for this extension method.\n"
    - id: thumbprintAlgorithm
      type: System.String
      description: "\nThe algorithm used to derive the thumbprint parameter. This must be sha1.\n"
    - id: thumbprint
      type: System.String
      description: "\nThe thumbprint of the certificate to be deleted.\n"
    - id: certificateDeleteOptions
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders
  overload: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(ICertificateOperations, String, String, CertificateDeleteOptions, CancellationToken)
  nameWithType: CertificateOperationsExtensions.DeleteAsync(ICertificateOperations, String, String, CertificateDeleteOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 189
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDeletes a certificate from the specified account.\n"
  example: []
  syntax:
    content: public static Task<CertificateDeleteHeaders> DeleteAsync(this ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, CertificateDeleteOptions certificateDeleteOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As ICertificateOperations, thumbprintAlgorithm As String, thumbprint As String, certificateDeleteOptions As CertificateDeleteOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateDeleteHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
      description: "\nThe operations group for this extension method.\n"
    - id: thumbprintAlgorithm
      type: System.String
      description: "\nThe algorithm used to derive the thumbprint parameter. This must be sha1.\n"
    - id: thumbprint
      type: System.String
      description: "\nThe thumbprint of the certificate to be deleted.\n"
    - id: certificateDeleteOptions
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders}
  overload: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions)
  id: Get(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(ICertificateOperations, String, String, CertificateGetOptions)
  nameWithType: CertificateOperationsExtensions.Get(ICertificateOperations, String, String, CertificateGetOptions)
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICertificateOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 212
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets information about the specified certificate.\n"
  example: []
  syntax:
    content: public static Certificate Get(this ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, CertificateGetOptions certificateGetOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As ICertificateOperations, thumbprintAlgorithm As String, thumbprint As String, certificateGetOptions As CertificateGetOptions = Nothing) As Certificate
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
      description: "\nThe operations group for this extension method.\n"
    - id: thumbprintAlgorithm
      type: System.String
      description: "\nThe algorithm used to derive the thumbprint parameter. This must be sha1.\n"
    - id: thumbprint
      type: System.String
      description: "\nThe thumbprint of the certificate to get.\n"
    - id: certificateGetOptions
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.Certificate
  overload: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(ICertificateOperations, String, String, CertificateGetOptions, CancellationToken)
  nameWithType: CertificateOperationsExtensions.GetAsync(ICertificateOperations, String, String, CertificateGetOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 235
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets information about the specified certificate.\n"
  example: []
  syntax:
    content: public static Task<Certificate> GetAsync(this ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, CertificateGetOptions certificateGetOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As ICertificateOperations, thumbprintAlgorithm As String, thumbprint As String, certificateGetOptions As CertificateGetOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Certificate)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
      description: "\nThe operations group for this extension method.\n"
    - id: thumbprintAlgorithm
      type: System.String
      description: "\nThe algorithm used to derive the thumbprint parameter. This must be sha1.\n"
    - id: thumbprint
      type: System.String
      description: "\nThe thumbprint of the certificate to get.\n"
    - id: certificateGetOptions
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.Certificate}
  overload: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions)
  id: ListNext(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(ICertificateOperations, String, CertificateListNextOptions)
  nameWithType: CertificateOperationsExtensions.ListNext(ICertificateOperations, String, CertificateListNextOptions)
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICertificateOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 256
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the certificates that have been added to the specified\naccount.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<Certificate> ListNext(this ICertificateOperations operations, string nextPageLink, CertificateListNextOptions certificateListNextOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As ICertificateOperations, nextPageLink As String, certificateListNextOptions As CertificateListNextOptions = Nothing) As Rest.Azure.IPage(Of Certificate)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: certificateListNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.Certificate}
  overload: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(ICertificateOperations, String, CertificateListNextOptions, CancellationToken)
  nameWithType: CertificateOperationsExtensions.ListNextAsync(ICertificateOperations, String, CertificateListNextOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/CertificateOperationsExtensions.cs
    startLine: 277
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the certificates that have been added to the specified\naccount.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<Certificate>> ListNextAsync(this ICertificateOperations operations, string nextPageLink, CertificateListNextOptions certificateListNextOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As ICertificateOperations, nextPageLink As String, certificateListNextOptions As CertificateListNextOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of Certificate))
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.ICertificateOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: certificateListNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.Certificate}}
  overload: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add
  isExternal: false
  name: Add
  nameWithType: CertificateOperationsExtensions.Add
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add
- uid: Microsoft.Azure.Batch.Protocol.ICertificateOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.ICertificateOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: ICertificateOperations
  nameWithType: ICertificateOperations
  fullName: Microsoft.Azure.Batch.Protocol.ICertificateOperations
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CertificateAddParameter
  nameWithType: CertificateAddParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CertificateAddOptions
  nameWithType: CertificateAddOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CertificateAddHeaders
  nameWithType: CertificateAddHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync
  isExternal: false
  name: AddAsync
  nameWithType: CertificateOperationsExtensions.AddAsync
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CertificateAddHeaders>
  nameWithType: Task<CertificateAddHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders>
  nameWithType.vb: Task(Of CertificateAddHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders)
  name.vb: Task(Of CertificateAddHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders
    name: CertificateAddHeaders
    nameWithType: CertificateAddHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders
    name: CertificateAddHeaders
    nameWithType: CertificateAddHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List
  isExternal: false
  name: List
  nameWithType: CertificateOperationsExtensions.List
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CertificateListOptions
  nameWithType: CertificateListOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.Certificate}
  commentId: '!:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.Certificate}'
  definition: Microsoft.Rest.Azure.IPage`1
  name: Rest.Azure.IPage<Certificate>
  nameWithType: Rest.Azure.IPage<Certificate>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.Certificate>
  nameWithType.vb: Rest.Azure.IPage(Of Certificate)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.Certificate)
  name.vb: Rest.Azure.IPage(Of Certificate)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Microsoft.Azure.Batch.Protocol.Models.Certificate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Microsoft.Azure.Batch.Protocol.Models.Certificate
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage`1
  isExternal: true
  name: Rest.Azure.IPage<>
  nameWithType: Rest.Azure.IPage<>
  fullName: Microsoft.Rest.Azure.IPage<>
  nameWithType.vb: Rest.Azure.IPage(Of )
  fullname.vb: Microsoft.Rest.Azure.IPage(Of )
  name.vb: Rest.Azure.IPage(Of )
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync
  isExternal: false
  name: ListAsync
  nameWithType: CertificateOperationsExtensions.ListAsync
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.Certificate}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.Certificate}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Rest.Azure.IPage<Certificate>>
  nameWithType: Task<Rest.Azure.IPage<Certificate>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.Certificate>>
  nameWithType.vb: Task(Of Rest.Azure.IPage(Of Certificate))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.Certificate))
  name.vb: Task(Of Rest.Azure.IPage(Of Certificate))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Microsoft.Azure.Batch.Protocol.Models.Certificate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Microsoft.Azure.Batch.Protocol.Models.Certificate
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion
  isExternal: false
  name: CancelDeletion
  nameWithType: CertificateOperationsExtensions.CancelDeletion
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CertificateCancelDeletionOptions
  nameWithType: CertificateCancelDeletionOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CertificateCancelDeletionHeaders
  nameWithType: CertificateCancelDeletionHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync
  isExternal: false
  name: CancelDeletionAsync
  nameWithType: CertificateOperationsExtensions.CancelDeletionAsync
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CertificateCancelDeletionHeaders>
  nameWithType: Task<CertificateCancelDeletionHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders>
  nameWithType.vb: Task(Of CertificateCancelDeletionHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders)
  name.vb: Task(Of CertificateCancelDeletionHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders
    name: CertificateCancelDeletionHeaders
    nameWithType: CertificateCancelDeletionHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders
    name: CertificateCancelDeletionHeaders
    nameWithType: CertificateCancelDeletionHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete
  isExternal: false
  name: Delete
  nameWithType: CertificateOperationsExtensions.Delete
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CertificateDeleteOptions
  nameWithType: CertificateDeleteOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CertificateDeleteHeaders
  nameWithType: CertificateDeleteHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: CertificateOperationsExtensions.DeleteAsync
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CertificateDeleteHeaders>
  nameWithType: Task<CertificateDeleteHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders>
  nameWithType.vb: Task(Of CertificateDeleteHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders)
  name.vb: Task(Of CertificateDeleteHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders
    name: CertificateDeleteHeaders
    nameWithType: CertificateDeleteHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders
    name: CertificateDeleteHeaders
    nameWithType: CertificateDeleteHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: CertificateOperationsExtensions.Get
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CertificateGetOptions
  nameWithType: CertificateGetOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.Certificate
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.Certificate
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Certificate
  nameWithType: Certificate
  fullName: Microsoft.Azure.Batch.Protocol.Models.Certificate
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: CertificateOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.Certificate}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.Certificate}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Certificate>
  nameWithType: Task<Certificate>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.Certificate>
  nameWithType.vb: Task(Of Certificate)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.Certificate)
  name.vb: Task(Of Certificate)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Microsoft.Azure.Batch.Protocol.Models.Certificate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.Certificate
    name: Certificate
    nameWithType: Certificate
    fullName: Microsoft.Azure.Batch.Protocol.Models.Certificate
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext
  isExternal: false
  name: ListNext
  nameWithType: CertificateOperationsExtensions.ListNext
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: CertificateListNextOptions
  nameWithType: CertificateListNextOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions
- uid: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync
  isExternal: false
  name: ListNextAsync
  nameWithType: CertificateOperationsExtensions.ListNextAsync
  fullName: Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync
