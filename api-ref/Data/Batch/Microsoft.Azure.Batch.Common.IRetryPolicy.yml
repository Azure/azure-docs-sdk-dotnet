### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Common.IRetryPolicy
  commentId: T:Microsoft.Azure.Batch.Common.IRetryPolicy
  id: IRetryPolicy
  parent: Microsoft.Azure.Batch.Common
  children:
  - Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
  langs:
  - csharp
  - vb
  name: IRetryPolicy
  nameWithType: IRetryPolicy
  fullName: Microsoft.Azure.Batch.Common.IRetryPolicy
  type: Interface
  source:
    remote:
      path: src/Batch/Client/Src/Common/IRetryPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IRetryPolicy
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Common/IRetryPolicy.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Common
  summary: "\nRepresents a retry policy.\n"
  example: []
  syntax:
    content: public interface IRetryPolicy
    content.vb: Public Interface IRetryPolicy
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
  commentId: M:Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
  id: ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
  parent: Microsoft.Azure.Batch.Common.IRetryPolicy
  langs:
  - csharp
  - vb
  name: ShouldRetryAsync(Exception, OperationContext)
  nameWithType: IRetryPolicy.ShouldRetryAsync(Exception, OperationContext)
  fullName: Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception, Microsoft.Azure.Batch.Common.OperationContext)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Common/IRetryPolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ShouldRetryAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Common/IRetryPolicy.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Common
  summary: "\nDetermines if the operation should be retried and how long to wait until the next retry. \n"
  example: []
  syntax:
    content: Task<RetryDecision> ShouldRetryAsync(Exception exception, OperationContext operationContext)
    content.vb: Function ShouldRetryAsync(exception As Exception, operationContext As OperationContext) As Task(Of RetryDecision)
    parameters:
    - id: exception
      type: System.Exception
      description: An <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> object that represents the last exception encountered.
    - id: operationContext
      type: Microsoft.Azure.Batch.Common.OperationContext
      description: An <xref href="Microsoft.Azure.Batch.Common.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Common.RetryDecision}
      description: A <xref href="Microsoft.Azure.Batch.Common.RetryDecision" data-throw-if-not-resolved="false"></xref> object which specifies if a retry should be performed.
  overload: Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync*
references:
- uid: Microsoft.Azure.Batch.Common
  commentId: N:Microsoft.Azure.Batch.Common
  isExternal: false
  name: Microsoft.Azure.Batch.Common
  nameWithType: Microsoft.Azure.Batch.Common
  fullName: Microsoft.Azure.Batch.Common
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Azure.Batch.Common.OperationContext
  commentId: T:Microsoft.Azure.Batch.Common.OperationContext
  parent: Microsoft.Azure.Batch.Common
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.Azure.Batch.Common.OperationContext
- uid: Microsoft.Azure.Batch.Common.RetryDecision
  commentId: T:Microsoft.Azure.Batch.Common.RetryDecision
  parent: Microsoft.Azure.Batch.Common
  isExternal: false
  name: RetryDecision
  nameWithType: RetryDecision
  fullName: Microsoft.Azure.Batch.Common.RetryDecision
- uid: Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync*
  commentId: Overload:Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync
  isExternal: false
  name: ShouldRetryAsync
  nameWithType: IRetryPolicy.ShouldRetryAsync
  fullName: Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Common.RetryDecision}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Common.RetryDecision}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RetryDecision>
  nameWithType: Task<RetryDecision>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Common.RetryDecision>
  nameWithType.vb: Task(Of RetryDecision)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Common.RetryDecision)
  name.vb: Task(Of RetryDecision)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.RetryDecision
    name: RetryDecision
    nameWithType: RetryDecision
    fullName: Microsoft.Azure.Batch.Common.RetryDecision
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.RetryDecision
    name: RetryDecision
    nameWithType: RetryDecision
    fullName: Microsoft.Azure.Batch.Common.RetryDecision
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
