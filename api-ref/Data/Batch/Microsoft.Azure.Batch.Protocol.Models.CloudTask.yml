### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CloudTask
  id: CloudTask
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.ExitConditions,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.AffinityInformation,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation,Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings,Microsoft.Azure.Batch.Protocol.Models.TaskStatistics,Microsoft.Azure.Batch.Protocol.Models.TaskDependencies,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference})
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.AffinityInfo
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.ApplicationPackageReferences
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.CommandLine
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.Constraints
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.CreationTime
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.DependsOn
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.DisplayName
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.EnvironmentSettings
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.ETag
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExecutionInfo
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExitConditions
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.Id
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.LastModified
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.MultiInstanceSettings
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.NodeInfo
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousState
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousStateTransitionTime
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.ResourceFiles
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.RunElevated
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.State
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.StateTransitionTime
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.Stats
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.Url
  - Microsoft.Azure.Batch.Protocol.Models.CloudTask.Validate
  langs:
  - csharp
  - vb
  name: CloudTask
  nameWithType: CloudTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloudTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nAn Azure Batch task.\n"
  example: []
  syntax:
    content: public class CloudTask
    content.vb: Public Class CloudTask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: CloudTask()
  nameWithType: CloudTask.CloudTask()
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CloudTask()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the CloudTask class.\n"
  example: []
  syntax:
    content: public CloudTask()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.ExitConditions,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.AffinityInformation,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation,Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings,Microsoft.Azure.Batch.Protocol.Models.TaskStatistics,Microsoft.Azure.Batch.Protocol.Models.TaskDependencies,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.ExitConditions,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.AffinityInformation,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation,Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings,Microsoft.Azure.Batch.Protocol.Models.TaskStatistics,Microsoft.Azure.Batch.Protocol.Models.TaskDependencies,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference})
  id: '#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.ExitConditions,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.AffinityInformation,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation,Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings,Microsoft.Azure.Batch.Protocol.Models.TaskStatistics,Microsoft.Azure.Batch.Protocol.Models.TaskDependencies,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference})'
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: CloudTask(String, String, String, String, Nullable<DateTime>, Nullable<DateTime>, ExitConditions, Nullable<TaskState>, Nullable<DateTime>, Nullable<TaskState>, Nullable<DateTime>, String, IList<ResourceFile>, IList<EnvironmentSetting>, AffinityInformation, TaskConstraints, Nullable<Boolean>, TaskExecutionInformation, ComputeNodeInformation, MultiInstanceSettings, TaskStatistics, TaskDependencies, IList<ApplicationPackageReference>)
  nameWithType: CloudTask.CloudTask(String, String, String, String, Nullable<DateTime>, Nullable<DateTime>, ExitConditions, Nullable<TaskState>, Nullable<DateTime>, Nullable<TaskState>, Nullable<DateTime>, String, IList<ResourceFile>, IList<EnvironmentSetting>, AffinityInformation, TaskConstraints, Nullable<Boolean>, TaskExecutionInformation, ComputeNodeInformation, MultiInstanceSettings, TaskStatistics, TaskDependencies, IList<ApplicationPackageReference>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CloudTask(System.String, System.String, System.String, System.String, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, Microsoft.Azure.Batch.Protocol.Models.ExitConditions, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.TaskState>, System.Nullable<System.DateTime>, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.TaskState>, System.Nullable<System.DateTime>, System.String, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ResourceFile>, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>, Microsoft.Azure.Batch.Protocol.Models.AffinityInformation, Microsoft.Azure.Batch.Protocol.Models.TaskConstraints, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation, Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings, Microsoft.Azure.Batch.Protocol.Models.TaskStatistics, Microsoft.Azure.Batch.Protocol.Models.TaskDependencies, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the CloudTask class.\n"
  example: []
  syntax:
    content: public CloudTask(string id = null, string displayName = null, string url = null, string eTag = null, DateTime? lastModified = null, DateTime? creationTime = null, ExitConditions exitConditions = null, TaskState? state = null, DateTime? stateTransitionTime = null, TaskState? previousState = null, DateTime? previousStateTransitionTime = null, string commandLine = null, IList<ResourceFile> resourceFiles = null, IList<EnvironmentSetting> environmentSettings = null, AffinityInformation affinityInfo = null, TaskConstraints constraints = null, bool ? runElevated = null, TaskExecutionInformation executionInfo = null, ComputeNodeInformation nodeInfo = null, MultiInstanceSettings multiInstanceSettings = null, TaskStatistics stats = null, TaskDependencies dependsOn = null, IList<ApplicationPackageReference> applicationPackageReferences = null)
    content.vb: Public Sub New(id As String = Nothing, displayName As String = Nothing, url As String = Nothing, eTag As String = Nothing, lastModified As Date? = Nothing, creationTime As Date? = Nothing, exitConditions As ExitConditions = Nothing, state As TaskState? = Nothing, stateTransitionTime As Date? = Nothing, previousState As TaskState? = Nothing, previousStateTransitionTime As Date? = Nothing, commandLine As String = Nothing, resourceFiles As IList(Of ResourceFile) = Nothing, environmentSettings As IList(Of EnvironmentSetting) = Nothing, affinityInfo As AffinityInformation = Nothing, constraints As TaskConstraints = Nothing, runElevated As Boolean? = Nothing, executionInfo As TaskExecutionInformation = Nothing, nodeInfo As ComputeNodeInformation = Nothing, multiInstanceSettings As MultiInstanceSettings = Nothing, stats As TaskStatistics = Nothing, dependsOn As TaskDependencies = Nothing, applicationPackageReferences As IList(Of ApplicationPackageReference) = Nothing)
    parameters:
    - id: id
      type: System.String
      description: >-
        A string that uniquely identifies the task within

        the job.
    - id: displayName
      type: System.String
      description: A display name for the task.
    - id: url
      type: System.String
      description: The URL of the task.
    - id: eTag
      type: System.String
      description: The ETag of the task.
    - id: lastModified
      type: System.Nullable{System.DateTime}
      description: >-
        The last modified time of the

        task.
    - id: creationTime
      type: System.Nullable{System.DateTime}
      description: The creation time of the task.
    - id: exitConditions
      type: Microsoft.Azure.Batch.Protocol.Models.ExitConditions
      description: >-
        How the Batch service should respond

        when the task completes.
    - id: state
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState}
      description: The current state of the task.
    - id: stateTransitionTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the task

        entered its current state.
    - id: previousState
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState}
      description: The previous state of the task.
    - id: previousStateTransitionTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the

        task entered its previous state.
    - id: commandLine
      type: System.String
      description: The command line of the task.
    - id: resourceFiles
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
      description: >-
        A list of files that the Batch service

        will download to the compute node before running the command

        line.
    - id: environmentSettings
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
      description: >-
        A list of environment variable

        settings for the task.
    - id: affinityInfo
      type: Microsoft.Azure.Batch.Protocol.Models.AffinityInformation
      description: >-
        A locality hint that can be used by the

        Batch service to select a compute node on which to start the new

        task.
    - id: constraints
      type: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
      description: >-
        The execution constraints that apply to

        this task.
    - id: runElevated
      type: System.Nullable{System.Boolean}
      description: >-
        Whether to run the task in elevated

        mode.
    - id: executionInfo
      type: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
      description: >-
        Information about the execution of the

        task.
    - id: nodeInfo
      type: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation
      description: >-
        Information about the compute node on which

        the task ran.
    - id: multiInstanceSettings
      type: Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings
      description: >-
        Information about how to run

        the multi-instance task.
    - id: stats
      type: Microsoft.Azure.Batch.Protocol.Models.TaskStatistics
      description: Resource usage statistics for the task.
    - id: dependsOn
      type: Microsoft.Azure.Batch.Protocol.Models.TaskDependencies
      description: Any dependencies this task has.
    - id: applicationPackageReferences
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
      description: >-
        A list of application

        packages that the Batch service will deploy to the compute node

        before running the command line.
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor*
  nameWithType.vb: CloudTask.CloudTask(String, String, String, String, Nullable(Of DateTime), Nullable(Of DateTime), ExitConditions, Nullable(Of TaskState), Nullable(Of DateTime), Nullable(Of TaskState), Nullable(Of DateTime), String, IList(Of ResourceFile), IList(Of EnvironmentSetting), AffinityInformation, TaskConstraints, Nullable(Of Boolean), TaskExecutionInformation, ComputeNodeInformation, MultiInstanceSettings, TaskStatistics, TaskDependencies, IList(Of ApplicationPackageReference))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CloudTask(System.String, System.String, System.String, System.String, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), Microsoft.Azure.Batch.Protocol.Models.ExitConditions, System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.TaskState), System.Nullable(Of System.DateTime), System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.TaskState), System.Nullable(Of System.DateTime), System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ResourceFile), System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting), Microsoft.Azure.Batch.Protocol.Models.AffinityInformation, Microsoft.Azure.Batch.Protocol.Models.TaskConstraints, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation, Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings, Microsoft.Azure.Batch.Protocol.Models.TaskStatistics, Microsoft.Azure.Batch.Protocol.Models.TaskDependencies, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference))
  name.vb: CloudTask(String, String, String, String, Nullable(Of DateTime), Nullable(Of DateTime), ExitConditions, Nullable(Of TaskState), Nullable(Of DateTime), Nullable(Of TaskState), Nullable(Of DateTime), String, IList(Of ResourceFile), IList(Of EnvironmentSetting), AffinityInformation, TaskConstraints, Nullable(Of Boolean), TaskExecutionInformation, ComputeNodeInformation, MultiInstanceSettings, TaskStatistics, TaskDependencies, IList(Of ApplicationPackageReference))
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Id
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Id
  id: Id
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CloudTask.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a string that uniquely identifies the task within the\njob.\n"
  remarks: "\nThe id can contain any combination of alphanumeric characters\nincluding hyphens and underscores, and cannot contain more than\n64 characters. It is common to use a GUID for the id.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.DisplayName
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: CloudTask.DisplayName
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.DisplayName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 117
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a display name for the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "displayName")]

      public string DisplayName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="displayName")>

      Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.DisplayName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: displayName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Url
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Url
  id: Url
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: CloudTask.Url
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Url
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Url
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the URL of the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "url")]

      public string Url { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="url")>

      Public Property Url As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Url*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: url
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ETag
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ETag
  id: ETag
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: CloudTask.ETag
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ETag
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ETag
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 129
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the ETag of the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "eTag")]

      public string ETag { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="eTag")>

      Public Property ETag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ETag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: eTag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.LastModified
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.LastModified
  id: LastModified
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: CloudTask.LastModified
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.LastModified
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastModified
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the last modified time of the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lastModified")]

      public DateTime? LastModified { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="lastModified")>

      Public Property LastModified As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.LastModified*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lastModified
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CreationTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.CreationTime
  id: CreationTime
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: CreationTime
  nameWithType: CloudTask.CreationTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CreationTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreationTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 141
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the creation time of the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "creationTime")]

      public DateTime? CreationTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="creationTime")>

      Public Property CreationTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CreationTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: creationTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExitConditions
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExitConditions
  id: ExitConditions
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: ExitConditions
  nameWithType: CloudTask.ExitConditions
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExitConditions
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExitConditions
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 148
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets how the Batch service should respond when the task\ncompletes.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "exitConditions")]

      public ExitConditions ExitConditions { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="exitConditions")>

      Public Property ExitConditions As ExitConditions
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.ExitConditions
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExitConditions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: exitConditions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.State
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.State
  id: State
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: State
  nameWithType: CloudTask.State
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.State
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 158
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the current state of the task.\n"
  remarks: "\nPossible values include: 'active', 'preparing', 'running',\n'completed'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "state")]

      public TaskState? State { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="state")>

      Public Property State As TaskState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.State*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: state
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.StateTransitionTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.StateTransitionTime
  id: StateTransitionTime
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: StateTransitionTime
  nameWithType: CloudTask.StateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.StateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 164
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the task entered its current state.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "stateTransitionTime")]

      public DateTime? StateTransitionTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="stateTransitionTime")>

      Public Property StateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.StateTransitionTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: stateTransitionTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousState
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousState
  id: PreviousState
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: PreviousState
  nameWithType: CloudTask.PreviousState
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousState
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreviousState
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the previous state of the task.\n"
  remarks: "\nThis property is not set if the task is in its initial Active\nstate. Possible values include: 'active', 'preparing', 'running',\n'completed'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "previousState")]

      public TaskState? PreviousState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="previousState")>

      Public Property PreviousState As TaskState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: previousState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousStateTransitionTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousStateTransitionTime
  id: PreviousStateTransitionTime
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: PreviousStateTransitionTime
  nameWithType: CloudTask.PreviousStateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousStateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreviousStateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 185
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the task entered its previous state.\n"
  remarks: "\nThis property is not set if the task is in its initial Active\nstate.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "previousStateTransitionTime")]

      public DateTime? PreviousStateTransitionTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="previousStateTransitionTime")>

      Public Property PreviousStateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousStateTransitionTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: previousStateTransitionTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CommandLine
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.CommandLine
  id: CommandLine
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: CommandLine
  nameWithType: CloudTask.CommandLine
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CommandLine
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommandLine
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 201
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the command line of the task.\n"
  remarks: "\nFor multi-instance tasks, the command line is executed on the\nprimary subtask after all the subtasks have finished executing\nthe coordianation command line. The command line does not run\nunder a shell, and therefore cannot take advantage of shell\nfeatures such as environment variable expansion. If you want to\ntake advantage of such features, you should invoke the shell in\nthe command line, for example using \"cmd /c MyCommand\" in Windows\nor \"/bin/sh -c MyCommand\" in Linux.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "commandLine")]

      public string CommandLine { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="commandLine")>

      Public Property CommandLine As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CommandLine*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: commandLine
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ResourceFiles
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ResourceFiles
  id: ResourceFiles
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: ResourceFiles
  nameWithType: CloudTask.ResourceFiles
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ResourceFiles
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceFiles
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 213
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of files that the Batch service will download\nto the compute node before running the command line.\n"
  remarks: "\nFor multi-instance tasks, the resource files will only be\ndownloaded to the compute node on which the primary subtask is\nexecuted.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "resourceFiles")]

      public IList<ResourceFile> ResourceFiles { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="resourceFiles")>

      Public Property ResourceFiles As IList(Of ResourceFile)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ResourceFiles*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: resourceFiles
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.EnvironmentSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.EnvironmentSettings
  id: EnvironmentSettings
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: EnvironmentSettings
  nameWithType: CloudTask.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.EnvironmentSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 219
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of environment variable settings for the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "environmentSettings")]

      public IList<EnvironmentSetting> EnvironmentSettings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="environmentSettings")>

      Public Property EnvironmentSettings As IList(Of EnvironmentSetting)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.EnvironmentSettings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: environmentSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.AffinityInfo
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.AffinityInfo
  id: AffinityInfo
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: AffinityInfo
  nameWithType: CloudTask.AffinityInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.AffinityInfo
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AffinityInfo
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 226
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a locality hint that can be used by the Batch service\nto select a compute node on which to start the new task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "affinityInfo")]

      public AffinityInformation AffinityInfo { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="affinityInfo")>

      Public Property AffinityInfo As AffinityInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.AffinityInformation
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.AffinityInfo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: affinityInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Constraints
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Constraints
  id: Constraints
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: CloudTask.Constraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Constraints
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Constraints
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 232
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the execution constraints that apply to this task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "constraints")]

      public TaskConstraints Constraints { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="constraints")>

      Public Property Constraints As TaskConstraints
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Constraints*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: constraints
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.RunElevated
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.RunElevated
  id: RunElevated
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: RunElevated
  nameWithType: CloudTask.RunElevated
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.RunElevated
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RunElevated
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 238
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether to run the task in elevated mode.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "runElevated")]

      public bool ? RunElevated { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="runElevated")>

      Public Property RunElevated As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.RunElevated*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: runElevated
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExecutionInfo
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExecutionInfo
  id: ExecutionInfo
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: ExecutionInfo
  nameWithType: CloudTask.ExecutionInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExecutionInfo
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExecutionInfo
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 244
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets information about the execution of the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "executionInfo")]

      public TaskExecutionInformation ExecutionInfo { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="executionInfo")>

      Public Property ExecutionInfo As TaskExecutionInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExecutionInfo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: executionInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.NodeInfo
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.NodeInfo
  id: NodeInfo
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: NodeInfo
  nameWithType: CloudTask.NodeInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.NodeInfo
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NodeInfo
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 251
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets information about the compute node on which the task\nran.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "nodeInfo")]

      public ComputeNodeInformation NodeInfo { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="nodeInfo")>

      Public Property NodeInfo As ComputeNodeInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.NodeInfo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: nodeInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.MultiInstanceSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.MultiInstanceSettings
  id: MultiInstanceSettings
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: MultiInstanceSettings
  nameWithType: CloudTask.MultiInstanceSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.MultiInstanceSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MultiInstanceSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 257
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets information about how to run the multi-instance task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "multiInstanceSettings")]

      public MultiInstanceSettings MultiInstanceSettings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="multiInstanceSettings")>

      Public Property MultiInstanceSettings As MultiInstanceSettings
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.MultiInstanceSettings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: multiInstanceSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Stats
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Stats
  id: Stats
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: Stats
  nameWithType: CloudTask.Stats
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Stats
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Stats
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 263
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets resource usage statistics for the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "stats")]

      public TaskStatistics Stats { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="stats")>

      Public Property Stats As TaskStatistics
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskStatistics
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Stats*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: stats
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.DependsOn
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.DependsOn
  id: DependsOn
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: DependsOn
  nameWithType: CloudTask.DependsOn
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.DependsOn
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DependsOn
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 269
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets any dependencies this task has.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "dependsOn")]

      public TaskDependencies DependsOn { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="dependsOn")>

      Public Property DependsOn As TaskDependencies
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskDependencies
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.DependsOn*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: dependsOn
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ApplicationPackageReferences
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ApplicationPackageReferences
  id: ApplicationPackageReferences
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: ApplicationPackageReferences
  nameWithType: CloudTask.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ApplicationPackageReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationPackageReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 276
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of application packages that the Batch service\nwill deploy to the compute node before running the command line.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "applicationPackageReferences")]

      public IList<ApplicationPackageReference> ApplicationPackageReferences { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="applicationPackageReferences")>

      Public Property ApplicationPackageReferences As IList(Of ApplicationPackageReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ApplicationPackageReferences*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: applicationPackageReferences
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudTask
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CloudTask.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudTask.cs
    startLine: 285
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor
  isExternal: false
  name: CloudTask
  nameWithType: CloudTask.CloudTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CloudTask
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.ExitConditions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.ExitConditions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: ExitConditions
  nameWithType: ExitConditions
  fullName: Microsoft.Azure.Batch.Protocol.Models.ExitConditions
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TaskState>
  nameWithType: Nullable<TaskState>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.TaskState>
  nameWithType.vb: Nullable(Of TaskState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.TaskState)
  name.vb: Nullable(Of TaskState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskState
    name: TaskState
    nameWithType: TaskState
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskState
    name: TaskState
    nameWithType: TaskState
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ResourceFile>
  nameWithType: IList<ResourceFile>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ResourceFile>
  nameWithType.vb: IList(Of ResourceFile)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ResourceFile)
  name.vb: IList(Of ResourceFile)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EnvironmentSetting>
  nameWithType: IList<EnvironmentSetting>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>
  nameWithType.vb: IList(Of EnvironmentSetting)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting)
  name.vb: IList(Of EnvironmentSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.AffinityInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: AffinityInformation
  nameWithType: AffinityInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.AffinityInformation
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskConstraints
  nameWithType: TaskConstraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskConstraints
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskExecutionInformation
  nameWithType: TaskExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: ComputeNodeInformation
  nameWithType: ComputeNodeInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation
- uid: Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: MultiInstanceSettings
  nameWithType: MultiInstanceSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskStatistics
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskStatistics
  nameWithType: TaskStatistics
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskStatistics
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskDependencies
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskDependencies
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskDependencies
  nameWithType: TaskDependencies
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskDependencies
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ApplicationPackageReference>
  nameWithType: IList<ApplicationPackageReference>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference>
  nameWithType.vb: IList(Of ApplicationPackageReference)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference)
  name.vb: IList(Of ApplicationPackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Id*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Id
  isExternal: false
  name: Id
  nameWithType: CloudTask.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Id
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.DisplayName*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: CloudTask.DisplayName
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.DisplayName
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Url*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Url
  isExternal: false
  name: Url
  nameWithType: CloudTask.Url
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Url
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ETag*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ETag
  isExternal: false
  name: ETag
  nameWithType: CloudTask.ETag
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ETag
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.LastModified*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.LastModified
  isExternal: false
  name: LastModified
  nameWithType: CloudTask.LastModified
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.LastModified
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CreationTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.CreationTime
  isExternal: false
  name: CreationTime
  nameWithType: CloudTask.CreationTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CreationTime
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExitConditions*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExitConditions
  isExternal: false
  name: ExitConditions
  nameWithType: CloudTask.ExitConditions
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExitConditions
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.State*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.State
  isExternal: false
  name: State
  nameWithType: CloudTask.State
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.State
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.StateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.StateTransitionTime
  isExternal: false
  name: StateTransitionTime
  nameWithType: CloudTask.StateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.StateTransitionTime
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousState*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousState
  isExternal: false
  name: PreviousState
  nameWithType: CloudTask.PreviousState
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousState
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousStateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousStateTransitionTime
  isExternal: false
  name: PreviousStateTransitionTime
  nameWithType: CloudTask.PreviousStateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousStateTransitionTime
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CommandLine*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.CommandLine
  isExternal: false
  name: CommandLine
  nameWithType: CloudTask.CommandLine
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.CommandLine
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ResourceFiles*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ResourceFiles
  isExternal: false
  name: ResourceFiles
  nameWithType: CloudTask.ResourceFiles
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ResourceFiles
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.EnvironmentSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.EnvironmentSettings
  isExternal: false
  name: EnvironmentSettings
  nameWithType: CloudTask.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.EnvironmentSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.AffinityInfo*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.AffinityInfo
  isExternal: false
  name: AffinityInfo
  nameWithType: CloudTask.AffinityInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.AffinityInfo
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Constraints*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Constraints
  isExternal: false
  name: Constraints
  nameWithType: CloudTask.Constraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Constraints
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.RunElevated*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.RunElevated
  isExternal: false
  name: RunElevated
  nameWithType: CloudTask.RunElevated
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.RunElevated
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExecutionInfo*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExecutionInfo
  isExternal: false
  name: ExecutionInfo
  nameWithType: CloudTask.ExecutionInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExecutionInfo
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.NodeInfo*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.NodeInfo
  isExternal: false
  name: NodeInfo
  nameWithType: CloudTask.NodeInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.NodeInfo
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.MultiInstanceSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.MultiInstanceSettings
  isExternal: false
  name: MultiInstanceSettings
  nameWithType: CloudTask.MultiInstanceSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.MultiInstanceSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Stats*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Stats
  isExternal: false
  name: Stats
  nameWithType: CloudTask.Stats
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Stats
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.DependsOn*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.DependsOn
  isExternal: false
  name: DependsOn
  nameWithType: CloudTask.DependsOn
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.DependsOn
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ApplicationPackageReferences*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ApplicationPackageReferences
  isExternal: false
  name: ApplicationPackageReferences
  nameWithType: CloudTask.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.ApplicationPackageReferences
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Validate
  isExternal: false
  name: Validate
  nameWithType: CloudTask.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudTask.Validate
