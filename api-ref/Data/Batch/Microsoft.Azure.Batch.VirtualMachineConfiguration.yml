### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration
  commentId: T:Microsoft.Azure.Batch.VirtualMachineConfiguration
  id: VirtualMachineConfiguration
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.VirtualMachineConfiguration.#ctor(Microsoft.Azure.Batch.ImageReference,System.String,Microsoft.Azure.Batch.WindowsConfiguration)
  - Microsoft.Azure.Batch.VirtualMachineConfiguration.ImageReference
  - Microsoft.Azure.Batch.VirtualMachineConfiguration.NodeAgentSkuId
  - Microsoft.Azure.Batch.VirtualMachineConfiguration.WindowsConfiguration
  langs:
  - csharp
  - vb
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/VirtualMachineConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/VirtualMachineConfiguration.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nThe configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.\n"
  example: []
  syntax:
    content: 'public class VirtualMachineConfiguration : ITransportObjectProvider<VirtualMachineConfiguration>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class VirtualMachineConfiguration
          Implements ITransportObjectProvider(Of VirtualMachineConfiguration), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration.#ctor(Microsoft.Azure.Batch.ImageReference,System.String,Microsoft.Azure.Batch.WindowsConfiguration)
  commentId: M:Microsoft.Azure.Batch.VirtualMachineConfiguration.#ctor(Microsoft.Azure.Batch.ImageReference,System.String,Microsoft.Azure.Batch.WindowsConfiguration)
  id: '#ctor(Microsoft.Azure.Batch.ImageReference,System.String,Microsoft.Azure.Batch.WindowsConfiguration)'
  parent: Microsoft.Azure.Batch.VirtualMachineConfiguration
  langs:
  - csharp
  - vb
  name: VirtualMachineConfiguration(ImageReference, String, WindowsConfiguration)
  nameWithType: VirtualMachineConfiguration.VirtualMachineConfiguration(ImageReference, String, WindowsConfiguration)
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration.VirtualMachineConfiguration(Microsoft.Azure.Batch.ImageReference, System.String, Microsoft.Azure.Batch.WindowsConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/VirtualMachineConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/VirtualMachineConfiguration.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.VirtualMachineConfiguration\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public VirtualMachineConfiguration(ImageReference imageReference, string nodeAgentSkuId, WindowsConfiguration windowsConfiguration = null)
    content.vb: Public Sub New(imageReference As ImageReference, nodeAgentSkuId As String, windowsConfiguration As WindowsConfiguration = Nothing)
    parameters:
    - id: imageReference
      type: Microsoft.Azure.Batch.ImageReference
      description: A reference to the Azure Virtual Machines Marketplace image to use.
    - id: nodeAgentSkuId
      type: System.String
      description: The SKU of Batch Node Agent to be provisioned on the compute node.
    - id: windowsConfiguration
      type: Microsoft.Azure.Batch.WindowsConfiguration
      description: "Windows operating system settings on the virtual machine. This property must not be specified if the ImageReference \nproperty specifies a Linux OS image."
  overload: Microsoft.Azure.Batch.VirtualMachineConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration.ImageReference
  commentId: P:Microsoft.Azure.Batch.VirtualMachineConfiguration.ImageReference
  id: ImageReference
  parent: Microsoft.Azure.Batch.VirtualMachineConfiguration
  langs:
  - csharp
  - vb
  name: ImageReference
  nameWithType: VirtualMachineConfiguration.ImageReference
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration.ImageReference
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/VirtualMachineConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImageReference
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/VirtualMachineConfiguration.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a reference to the Azure Virtual Machines Marketplace image to use.\n"
  example: []
  syntax:
    content: public ImageReference ImageReference { get; set; }
    content.vb: Public Property ImageReference As ImageReference
    parameters: []
    return:
      type: Microsoft.Azure.Batch.ImageReference
  overload: Microsoft.Azure.Batch.VirtualMachineConfiguration.ImageReference*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration.NodeAgentSkuId
  commentId: P:Microsoft.Azure.Batch.VirtualMachineConfiguration.NodeAgentSkuId
  id: NodeAgentSkuId
  parent: Microsoft.Azure.Batch.VirtualMachineConfiguration
  langs:
  - csharp
  - vb
  name: NodeAgentSkuId
  nameWithType: VirtualMachineConfiguration.NodeAgentSkuId
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration.NodeAgentSkuId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/VirtualMachineConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NodeAgentSkuId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/VirtualMachineConfiguration.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the SKU of Batch Node Agent to be provisioned on the compute node.\n"
  remarks: "\nThe Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface \nbetween the node and the Batch service. There are different implementations of the node agent, known as SKUs, \nfor different operating systems.\n"
  example: []
  syntax:
    content: public string NodeAgentSkuId { get; set; }
    content.vb: Public Property NodeAgentSkuId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.VirtualMachineConfiguration.NodeAgentSkuId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration.WindowsConfiguration
  commentId: P:Microsoft.Azure.Batch.VirtualMachineConfiguration.WindowsConfiguration
  id: WindowsConfiguration
  parent: Microsoft.Azure.Batch.VirtualMachineConfiguration
  langs:
  - csharp
  - vb
  name: WindowsConfiguration
  nameWithType: VirtualMachineConfiguration.WindowsConfiguration
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration.WindowsConfiguration
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/VirtualMachineConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WindowsConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/VirtualMachineConfiguration.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets windows operating system settings on the virtual machine. This property must not be specified if \nthe ImageReference property specifies a Linux OS image.\n"
  example: []
  syntax:
    content: public WindowsConfiguration WindowsConfiguration { get; set; }
    content.vb: Public Property WindowsConfiguration As WindowsConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Batch.WindowsConfiguration
  overload: Microsoft.Azure.Batch.VirtualMachineConfiguration.WindowsConfiguration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration
  commentId: T:Microsoft.Azure.Batch.VirtualMachineConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.VirtualMachineConfiguration.#ctor
  isExternal: false
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration.VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration.VirtualMachineConfiguration
- uid: Microsoft.Azure.Batch.ImageReference
  commentId: T:Microsoft.Azure.Batch.ImageReference
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ImageReference
  nameWithType: ImageReference
  fullName: Microsoft.Azure.Batch.ImageReference
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.WindowsConfiguration
  commentId: T:Microsoft.Azure.Batch.WindowsConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: WindowsConfiguration
  nameWithType: WindowsConfiguration
  fullName: Microsoft.Azure.Batch.WindowsConfiguration
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration.ImageReference*
  commentId: Overload:Microsoft.Azure.Batch.VirtualMachineConfiguration.ImageReference
  isExternal: false
  name: ImageReference
  nameWithType: VirtualMachineConfiguration.ImageReference
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration.ImageReference
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration.NodeAgentSkuId*
  commentId: Overload:Microsoft.Azure.Batch.VirtualMachineConfiguration.NodeAgentSkuId
  isExternal: false
  name: NodeAgentSkuId
  nameWithType: VirtualMachineConfiguration.NodeAgentSkuId
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration.NodeAgentSkuId
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration.WindowsConfiguration*
  commentId: Overload:Microsoft.Azure.Batch.VirtualMachineConfiguration.WindowsConfiguration
  isExternal: false
  name: WindowsConfiguration
  nameWithType: VirtualMachineConfiguration.WindowsConfiguration
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration.WindowsConfiguration
