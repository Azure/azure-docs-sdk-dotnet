### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.BatchClient
  commentId: T:Microsoft.Azure.Batch.BatchClient
  id: BatchClient
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.BatchClient.ApplicationOperations
  - Microsoft.Azure.Batch.BatchClient.CertificateOperations
  - Microsoft.Azure.Batch.BatchClient.Close
  - Microsoft.Azure.Batch.BatchClient.CloseAsync
  - Microsoft.Azure.Batch.BatchClient.CustomBehaviors
  - Microsoft.Azure.Batch.BatchClient.Dispose
  - Microsoft.Azure.Batch.BatchClient.Dispose(System.Boolean)
  - Microsoft.Azure.Batch.BatchClient.JobOperations
  - Microsoft.Azure.Batch.BatchClient.JobScheduleOperations
  - Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)
  - Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Protocol.BatchServiceClient)
  - Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)
  - Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Protocol.BatchServiceClient)
  - Microsoft.Azure.Batch.BatchClient.PoolOperations
  - Microsoft.Azure.Batch.BatchClient.Utilities
  langs:
  - csharp
  - vb
  name: BatchClient
  nameWithType: BatchClient
  fullName: Microsoft.Azure.Batch.BatchClient
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BatchClient
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nA client for an Azure Batch account, used to access the Batch service.\n"
  example: []
  syntax:
    content: 'public class BatchClient : IDisposable'
    content.vb: >-
      Public Class BatchClient
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.BatchClient.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.BatchClient.CustomBehaviors
  id: CustomBehaviors
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: CustomBehaviors
  nameWithType: BatchClient.CustomBehaviors
  fullName: Microsoft.Azure.Batch.BatchClient.CustomBehaviors
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomBehaviors
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of behaviors that modify or customize requests to the Batch service.\n"
  remarks: "\n<p>These behaviors are inherited by child objects.</p>\n<p>Modifications are applied in the order of the collection. The last write wins.</p>\n"
  example: []
  syntax:
    content: public IList<BatchClientBehavior> CustomBehaviors { get; set; }
    content.vb: Public Property CustomBehaviors As IList(Of BatchClientBehavior)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  overload: Microsoft.Azure.Batch.BatchClient.CustomBehaviors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.BatchClient.ApplicationOperations
  commentId: P:Microsoft.Azure.Batch.BatchClient.ApplicationOperations
  id: ApplicationOperations
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: ApplicationOperations
  nameWithType: BatchClient.ApplicationOperations
  fullName: Microsoft.Azure.Batch.BatchClient.ApplicationOperations
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationOperations
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 161
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets an <xref href=\"Microsoft.Azure.Batch.BatchClient.ApplicationOperations\" data-throw-if-not-resolved=\"false\"></xref> for performing application-related operations on the associated account.\n"
  example: []
  syntax:
    content: public ApplicationOperations ApplicationOperations { get; }
    content.vb: Public ReadOnly Property ApplicationOperations As ApplicationOperations
    parameters: []
    return:
      type: Microsoft.Azure.Batch.ApplicationOperations
  overload: Microsoft.Azure.Batch.BatchClient.ApplicationOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.BatchClient.CertificateOperations
  commentId: P:Microsoft.Azure.Batch.BatchClient.CertificateOperations
  id: CertificateOperations
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: CertificateOperations
  nameWithType: BatchClient.CertificateOperations
  fullName: Microsoft.Azure.Batch.BatchClient.CertificateOperations
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateOperations
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 169
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets a <xref href=\"Microsoft.Azure.Batch.BatchClient.CertificateOperations\" data-throw-if-not-resolved=\"false\"></xref> for performing certificate-related operations on the associated account.\n"
  example: []
  syntax:
    content: public CertificateOperations CertificateOperations { get; }
    content.vb: Public ReadOnly Property CertificateOperations As CertificateOperations
    parameters: []
    return:
      type: Microsoft.Azure.Batch.CertificateOperations
  overload: Microsoft.Azure.Batch.BatchClient.CertificateOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.BatchClient.JobOperations
  commentId: P:Microsoft.Azure.Batch.BatchClient.JobOperations
  id: JobOperations
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: JobOperations
  nameWithType: BatchClient.JobOperations
  fullName: Microsoft.Azure.Batch.BatchClient.JobOperations
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobOperations
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 177
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets a <xref href=\"Microsoft.Azure.Batch.BatchClient.JobOperations\" data-throw-if-not-resolved=\"false\"></xref> for performing job-related operations on the associated account.\n"
  example: []
  syntax:
    content: public JobOperations JobOperations { get; }
    content.vb: Public ReadOnly Property JobOperations As JobOperations
    parameters: []
    return:
      type: Microsoft.Azure.Batch.JobOperations
  overload: Microsoft.Azure.Batch.BatchClient.JobOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.BatchClient.JobScheduleOperations
  commentId: P:Microsoft.Azure.Batch.BatchClient.JobScheduleOperations
  id: JobScheduleOperations
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: JobScheduleOperations
  nameWithType: BatchClient.JobScheduleOperations
  fullName: Microsoft.Azure.Batch.BatchClient.JobScheduleOperations
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobScheduleOperations
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 185
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets a <xref href=\"Microsoft.Azure.Batch.BatchClient.JobScheduleOperations\" data-throw-if-not-resolved=\"false\"></xref> for performing job schedule-related operations on the associated account.\n"
  example: []
  syntax:
    content: public JobScheduleOperations JobScheduleOperations { get; }
    content.vb: Public ReadOnly Property JobScheduleOperations As JobScheduleOperations
    parameters: []
    return:
      type: Microsoft.Azure.Batch.JobScheduleOperations
  overload: Microsoft.Azure.Batch.BatchClient.JobScheduleOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.BatchClient.PoolOperations
  commentId: P:Microsoft.Azure.Batch.BatchClient.PoolOperations
  id: PoolOperations
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: PoolOperations
  nameWithType: BatchClient.PoolOperations
  fullName: Microsoft.Azure.Batch.BatchClient.PoolOperations
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolOperations
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 193
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets a <xref href=\"Microsoft.Azure.Batch.BatchClient.PoolOperations\" data-throw-if-not-resolved=\"false\"></xref> for performing pool-related operations on the associated account.\n"
  example: []
  syntax:
    content: public PoolOperations PoolOperations { get; }
    content.vb: Public ReadOnly Property PoolOperations As PoolOperations
    parameters: []
    return:
      type: Microsoft.Azure.Batch.PoolOperations
  overload: Microsoft.Azure.Batch.BatchClient.PoolOperations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.BatchClient.Utilities
  commentId: P:Microsoft.Azure.Batch.BatchClient.Utilities
  id: Utilities
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: Utilities
  nameWithType: BatchClient.Utilities
  fullName: Microsoft.Azure.Batch.BatchClient.Utilities
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Utilities
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 201
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets a <xref href=\"Microsoft.Azure.Batch.BatchClient.Utilities\" data-throw-if-not-resolved=\"false\"></xref> object containing utility methods for orchestrating multiple Batch operations.\n"
  example: []
  syntax:
    content: public Utilities Utilities { get; }
    content.vb: Public ReadOnly Property Utilities As Utilities
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Utilities
  overload: Microsoft.Azure.Batch.BatchClient.Utilities*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)
  commentId: M:Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)
  id: OpenAsync(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: OpenAsync(BatchSharedKeyCredentials)
  nameWithType: BatchClient.OpenAsync(BatchSharedKeyCredentials)
  fullName: Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OpenAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 211
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCreates an instance of <xref href=\"Microsoft.Azure.Batch.BatchClient\" data-throw-if-not-resolved=\"false\"></xref> associated with the specified credentials.\n"
  example: []
  syntax:
    content: public static Task<BatchClient> OpenAsync(BatchSharedKeyCredentials credentials)
    content.vb: Public Shared Function OpenAsync(credentials As BatchSharedKeyCredentials) As Task(Of BatchClient)
    parameters:
    - id: credentials
      type: Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials
      description: The Batch account credentials.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.BatchClient}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.BatchClient.OpenAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Protocol.BatchServiceClient)
  commentId: M:Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Protocol.BatchServiceClient)
  id: OpenAsync(Microsoft.Azure.Batch.Protocol.BatchServiceClient)
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: OpenAsync(BatchServiceClient)
  nameWithType: BatchClient.OpenAsync(BatchServiceClient)
  fullName: Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Protocol.BatchServiceClient)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OpenAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 229
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCreates an instance of <xref href=\"Microsoft.Azure.Batch.BatchClient\" data-throw-if-not-resolved=\"false\"></xref> associated with the specified <xref href=\"Microsoft.Azure.Batch.Protocol.BatchServiceClient\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Task<BatchClient> OpenAsync(BatchServiceClient restClient)
    content.vb: Public Shared Function OpenAsync(restClient As BatchServiceClient) As Task(Of BatchClient)
    parameters:
    - id: restClient
      type: Microsoft.Azure.Batch.Protocol.BatchServiceClient
      description: The instance of <xref href="Microsoft.Azure.Batch.Protocol.BatchServiceClient" data-throw-if-not-resolved="false"></xref> to use for all calls made to the Batch Service. It will not be disposed when BatchClient is disposed.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.BatchClient}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.BatchClient.OpenAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)
  commentId: M:Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)
  id: Open(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: Open(BatchSharedKeyCredentials)
  nameWithType: BatchClient.Open(BatchSharedKeyCredentials)
  fullName: Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Open
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 247
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBlocking call that creates an instance of <xref href=\"Microsoft.Azure.Batch.BatchClient\" data-throw-if-not-resolved=\"false\"></xref> associated with the specified credentials.\n"
  example: []
  syntax:
    content: public static BatchClient Open(BatchSharedKeyCredentials credentials)
    content.vb: Public Shared Function Open(credentials As BatchSharedKeyCredentials) As BatchClient
    parameters:
    - id: credentials
      type: Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials
      description: The Batch account credentials.
    return:
      type: Microsoft.Azure.Batch.BatchClient
      description: An instance of <xref href="Microsoft.Azure.Batch.Protocol.BatchServiceClient" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.BatchClient.Open*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Protocol.BatchServiceClient)
  commentId: M:Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Protocol.BatchServiceClient)
  id: Open(Microsoft.Azure.Batch.Protocol.BatchServiceClient)
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: Open(BatchServiceClient)
  nameWithType: BatchClient.Open(BatchServiceClient)
  fullName: Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Protocol.BatchServiceClient)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Open
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 263
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nBlocking call that creates an instance of <xref href=\"Microsoft.Azure.Batch.BatchClient\" data-throw-if-not-resolved=\"false\"></xref> associated with the specified <xref href=\"Microsoft.Azure.Batch.Protocol.BatchServiceClient\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static BatchClient Open(BatchServiceClient restClient)
    content.vb: Public Shared Function Open(restClient As BatchServiceClient) As BatchClient
    parameters:
    - id: restClient
      type: Microsoft.Azure.Batch.Protocol.BatchServiceClient
      description: The instance of <xref href="Microsoft.Azure.Batch.Protocol.BatchServiceClient" data-throw-if-not-resolved="false"></xref> to use for all calls made to the Batch Service. It will not be disposed when BatchClient is disposed.
    return:
      type: Microsoft.Azure.Batch.BatchClient
      description: An instance of <xref href="Microsoft.Azure.Batch.Protocol.BatchServiceClient" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.BatchClient.Open*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.BatchClient.CloseAsync
  commentId: M:Microsoft.Azure.Batch.BatchClient.CloseAsync
  id: CloseAsync
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: CloseAsync()
  nameWithType: BatchClient.CloseAsync()
  fullName: Microsoft.Azure.Batch.BatchClient.CloseAsync()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloseAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 281
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nStarts an asynchronous operation to close the current instance of <xref href=\"Microsoft.Azure.Batch.BatchClient\" data-throw-if-not-resolved=\"false\"></xref>.  \nClosed instances of <xref href=\"Microsoft.Azure.Batch.BatchClient\" data-throw-if-not-resolved=\"false\"></xref> are unable to make calls to the Batch Service and the behavior and values of any other methods or properties are undefined. \nThese restrictions also apply immediately to any objects that can trace instantation back to this <xref href=\"Microsoft.Azure.Batch.BatchClient\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method is threadsafe and can be called any number of times.\n"
  example: []
  syntax:
    content: public Task CloseAsync()
    content.vb: Public Function CloseAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.BatchClient.CloseAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.BatchClient.Close
  commentId: M:Microsoft.Azure.Batch.BatchClient.Close
  id: Close
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: BatchClient.Close()
  fullName: Microsoft.Azure.Batch.BatchClient.Close()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Close
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 303
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCloses the current instance of <xref href=\"Microsoft.Azure.Batch.BatchClient\" data-throw-if-not-resolved=\"false\"></xref>.  \nClosed instances of <xref href=\"Microsoft.Azure.Batch.BatchClient\" data-throw-if-not-resolved=\"false\"></xref> are unable to make calls to the Batch Service and the behavior and values of any other methods or properties are undefined. \nThese restrictions also apply immediately to any objects that can trace instantation back to this <xref href=\"Microsoft.Azure.Batch.BatchClient\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method is threadsafe and can be called any number of times.\n"
  example: []
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: Microsoft.Azure.Batch.BatchClient.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.BatchClient.Dispose
  commentId: M:Microsoft.Azure.Batch.BatchClient.Dispose
  id: Dispose
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: BatchClient.Dispose()
  fullName: Microsoft.Azure.Batch.BatchClient.Dispose()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Dispose
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 319
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCalls <xref href=\"Microsoft.Azure.Batch.BatchClient.Close\" data-throw-if-not-resolved=\"false\"></xref> and releases the unmanaged resources and disposes of the managed resources used by the <xref href=\"Microsoft.Azure.Batch.BatchClient\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Azure.Batch.BatchClient.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.BatchClient.Dispose(System.Boolean)
  commentId: M:Microsoft.Azure.Batch.BatchClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.Azure.Batch.BatchClient
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: BatchClient.Dispose(Boolean)
  fullName: Microsoft.Azure.Batch.BatchClient.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/BatchClient.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Dispose
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClient.cs
    startLine: 332
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nReleases unmanaged resources used by the <xref href=\"Microsoft.Azure.Batch.BatchClient\" data-throw-if-not-resolved=\"false\"></xref>, and optionally disposes of managed resources.\n"
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: >-
        Indicates whether the object is being disposed or finalized.  If true, the object is

        being disposed and can dispose managed resource.  If false, the object is being finalized and should only

        release unmanaged resources.
  overload: Microsoft.Azure.Batch.BatchClient.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.BatchClient.CustomBehaviors*
  commentId: Overload:Microsoft.Azure.Batch.BatchClient.CustomBehaviors
  isExternal: false
  name: CustomBehaviors
  nameWithType: BatchClient.CustomBehaviors
  fullName: Microsoft.Azure.Batch.BatchClient.CustomBehaviors
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<BatchClientBehavior>
  nameWithType: IList<BatchClientBehavior>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.BatchClientBehavior>
  nameWithType.vb: IList(Of BatchClientBehavior)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.BatchClientBehavior)
  name.vb: IList(Of BatchClientBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.BatchClient.ApplicationOperations
  commentId: P:Microsoft.Azure.Batch.BatchClient.ApplicationOperations
- uid: Microsoft.Azure.Batch.BatchClient.ApplicationOperations*
  commentId: Overload:Microsoft.Azure.Batch.BatchClient.ApplicationOperations
  isExternal: false
  name: ApplicationOperations
  nameWithType: BatchClient.ApplicationOperations
  fullName: Microsoft.Azure.Batch.BatchClient.ApplicationOperations
- uid: Microsoft.Azure.Batch.ApplicationOperations
  commentId: T:Microsoft.Azure.Batch.ApplicationOperations
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ApplicationOperations
  nameWithType: ApplicationOperations
  fullName: Microsoft.Azure.Batch.ApplicationOperations
- uid: Microsoft.Azure.Batch.BatchClient.CertificateOperations
  commentId: P:Microsoft.Azure.Batch.BatchClient.CertificateOperations
- uid: Microsoft.Azure.Batch.BatchClient.CertificateOperations*
  commentId: Overload:Microsoft.Azure.Batch.BatchClient.CertificateOperations
  isExternal: false
  name: CertificateOperations
  nameWithType: BatchClient.CertificateOperations
  fullName: Microsoft.Azure.Batch.BatchClient.CertificateOperations
- uid: Microsoft.Azure.Batch.CertificateOperations
  commentId: T:Microsoft.Azure.Batch.CertificateOperations
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CertificateOperations
  nameWithType: CertificateOperations
  fullName: Microsoft.Azure.Batch.CertificateOperations
- uid: Microsoft.Azure.Batch.BatchClient.JobOperations
  commentId: P:Microsoft.Azure.Batch.BatchClient.JobOperations
- uid: Microsoft.Azure.Batch.BatchClient.JobOperations*
  commentId: Overload:Microsoft.Azure.Batch.BatchClient.JobOperations
  isExternal: false
  name: JobOperations
  nameWithType: BatchClient.JobOperations
  fullName: Microsoft.Azure.Batch.BatchClient.JobOperations
- uid: Microsoft.Azure.Batch.JobOperations
  commentId: T:Microsoft.Azure.Batch.JobOperations
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobOperations
  nameWithType: JobOperations
  fullName: Microsoft.Azure.Batch.JobOperations
- uid: Microsoft.Azure.Batch.BatchClient.JobScheduleOperations
  commentId: P:Microsoft.Azure.Batch.BatchClient.JobScheduleOperations
- uid: Microsoft.Azure.Batch.BatchClient.JobScheduleOperations*
  commentId: Overload:Microsoft.Azure.Batch.BatchClient.JobScheduleOperations
  isExternal: false
  name: JobScheduleOperations
  nameWithType: BatchClient.JobScheduleOperations
  fullName: Microsoft.Azure.Batch.BatchClient.JobScheduleOperations
- uid: Microsoft.Azure.Batch.JobScheduleOperations
  commentId: T:Microsoft.Azure.Batch.JobScheduleOperations
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobScheduleOperations
  nameWithType: JobScheduleOperations
  fullName: Microsoft.Azure.Batch.JobScheduleOperations
- uid: Microsoft.Azure.Batch.BatchClient.PoolOperations
  commentId: P:Microsoft.Azure.Batch.BatchClient.PoolOperations
- uid: Microsoft.Azure.Batch.BatchClient.PoolOperations*
  commentId: Overload:Microsoft.Azure.Batch.BatchClient.PoolOperations
  isExternal: false
  name: PoolOperations
  nameWithType: BatchClient.PoolOperations
  fullName: Microsoft.Azure.Batch.BatchClient.PoolOperations
- uid: Microsoft.Azure.Batch.PoolOperations
  commentId: T:Microsoft.Azure.Batch.PoolOperations
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: PoolOperations
  nameWithType: PoolOperations
  fullName: Microsoft.Azure.Batch.PoolOperations
- uid: Microsoft.Azure.Batch.BatchClient.Utilities
  commentId: P:Microsoft.Azure.Batch.BatchClient.Utilities
- uid: Microsoft.Azure.Batch.BatchClient.Utilities*
  commentId: Overload:Microsoft.Azure.Batch.BatchClient.Utilities
  isExternal: false
  name: Utilities
  nameWithType: BatchClient.Utilities
  fullName: Microsoft.Azure.Batch.BatchClient.Utilities
- uid: Microsoft.Azure.Batch.Utilities
  commentId: T:Microsoft.Azure.Batch.Utilities
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: Microsoft.Azure.Batch.Utilities
- uid: Microsoft.Azure.Batch.BatchClient
  commentId: T:Microsoft.Azure.Batch.BatchClient
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: BatchClient
  nameWithType: BatchClient
  fullName: Microsoft.Azure.Batch.BatchClient
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Batch.BatchClient.OpenAsync*
  commentId: Overload:Microsoft.Azure.Batch.BatchClient.OpenAsync
  isExternal: false
  name: OpenAsync
  nameWithType: BatchClient.OpenAsync
  fullName: Microsoft.Azure.Batch.BatchClient.OpenAsync
- uid: Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials
  commentId: T:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials
  parent: Microsoft.Azure.Batch.Auth
  isExternal: false
  name: BatchSharedKeyCredentials
  nameWithType: BatchSharedKeyCredentials
  fullName: Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.BatchClient}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.BatchClient}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BatchClient>
  nameWithType: Task<BatchClient>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.BatchClient>
  nameWithType.vb: Task(Of BatchClient)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.BatchClient)
  name.vb: Task(Of BatchClient)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClient
    name: BatchClient
    nameWithType: BatchClient
    fullName: Microsoft.Azure.Batch.BatchClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClient
    name: BatchClient
    nameWithType: BatchClient
    fullName: Microsoft.Azure.Batch.BatchClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Batch.Auth
  commentId: N:Microsoft.Azure.Batch.Auth
  isExternal: false
  name: Microsoft.Azure.Batch.Auth
  nameWithType: Microsoft.Azure.Batch.Auth
  fullName: Microsoft.Azure.Batch.Auth
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.BatchServiceClient
  commentId: T:Microsoft.Azure.Batch.Protocol.BatchServiceClient
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: BatchServiceClient
  nameWithType: BatchServiceClient
  fullName: Microsoft.Azure.Batch.Protocol.BatchServiceClient
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: Microsoft.Azure.Batch.BatchClient.Open*
  commentId: Overload:Microsoft.Azure.Batch.BatchClient.Open
  isExternal: false
  name: Open
  nameWithType: BatchClient.Open
  fullName: Microsoft.Azure.Batch.BatchClient.Open
- uid: Microsoft.Azure.Batch.BatchClient.CloseAsync*
  commentId: Overload:Microsoft.Azure.Batch.BatchClient.CloseAsync
  isExternal: false
  name: CloseAsync
  nameWithType: BatchClient.CloseAsync
  fullName: Microsoft.Azure.Batch.BatchClient.CloseAsync
- uid: Microsoft.Azure.Batch.BatchClient.Close*
  commentId: Overload:Microsoft.Azure.Batch.BatchClient.Close
  isExternal: false
  name: Close
  nameWithType: BatchClient.Close
  fullName: Microsoft.Azure.Batch.BatchClient.Close
- uid: Microsoft.Azure.Batch.BatchClient.Close
  commentId: M:Microsoft.Azure.Batch.BatchClient.Close
- uid: Microsoft.Azure.Batch.BatchClient.Dispose*
  commentId: Overload:Microsoft.Azure.Batch.BatchClient.Dispose
  isExternal: false
  name: Dispose
  nameWithType: BatchClient.Dispose
  fullName: Microsoft.Azure.Batch.BatchClient.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
