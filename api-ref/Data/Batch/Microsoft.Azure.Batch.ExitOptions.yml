### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.ExitOptions
  commentId: T:Microsoft.Azure.Batch.ExitOptions
  id: ExitOptions
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.ExitOptions.#ctor
  - Microsoft.Azure.Batch.ExitOptions.JobAction
  langs:
  - csharp
  - vb
  name: ExitOptions
  nameWithType: ExitOptions
  fullName: Microsoft.Azure.Batch.ExitOptions
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ExitOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExitOptions
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ExitOptions.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nHow the Batch service should respond to a particular exit condition.\n"
  example: []
  syntax:
    content: 'public class ExitOptions : ITransportObjectProvider<ExitOptions>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class ExitOptions
          Implements ITransportObjectProvider(Of ExitOptions), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.ExitOptions.#ctor
  commentId: M:Microsoft.Azure.Batch.ExitOptions.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.ExitOptions
  langs:
  - csharp
  - vb
  name: ExitOptions()
  nameWithType: ExitOptions.ExitOptions()
  fullName: Microsoft.Azure.Batch.ExitOptions.ExitOptions()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ExitOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ExitOptions.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.ExitOptions\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ExitOptions()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.ExitOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ExitOptions.JobAction
  commentId: P:Microsoft.Azure.Batch.ExitOptions.JobAction
  id: JobAction
  parent: Microsoft.Azure.Batch.ExitOptions
  langs:
  - csharp
  - vb
  name: JobAction
  nameWithType: ExitOptions.JobAction
  fullName: Microsoft.Azure.Batch.ExitOptions.JobAction
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ExitOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobAction
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ExitOptions.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets an action to take on the job containing the task, if the task completes with the given exit condition \nand the job's <xref href=\"Microsoft.Azure.Batch.CloudJob.OnTaskFailure\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"Microsoft.Azure.Batch.Common.OnTaskFailure.PerformExitOptionsJobAction\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public JobAction? JobAction { get; set; }
    content.vb: Public Property JobAction As JobAction?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.JobAction}
  overload: Microsoft.Azure.Batch.ExitOptions.JobAction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.ExitOptions
  commentId: T:Microsoft.Azure.Batch.ExitOptions
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ExitOptions
  nameWithType: ExitOptions
  fullName: Microsoft.Azure.Batch.ExitOptions
- uid: Microsoft.Azure.Batch.ExitOptions.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.ExitOptions.#ctor
  isExternal: false
  name: ExitOptions
  nameWithType: ExitOptions.ExitOptions
  fullName: Microsoft.Azure.Batch.ExitOptions.ExitOptions
- uid: Microsoft.Azure.Batch.CloudJob.OnTaskFailure
  commentId: P:Microsoft.Azure.Batch.CloudJob.OnTaskFailure
- uid: Microsoft.Azure.Batch.Common.OnTaskFailure.PerformExitOptionsJobAction
  commentId: F:Microsoft.Azure.Batch.Common.OnTaskFailure.PerformExitOptionsJobAction
- uid: Microsoft.Azure.Batch.ExitOptions.JobAction*
  commentId: Overload:Microsoft.Azure.Batch.ExitOptions.JobAction
  isExternal: false
  name: JobAction
  nameWithType: ExitOptions.JobAction
  fullName: Microsoft.Azure.Batch.ExitOptions.JobAction
- uid: System.Nullable{Microsoft.Azure.Batch.Common.JobAction}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.JobAction}
  parent: System
  definition: System.Nullable`1
  name: Nullable<JobAction>
  nameWithType: Nullable<JobAction>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.JobAction>
  nameWithType.vb: Nullable(Of JobAction)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.JobAction)
  name.vb: Nullable(Of JobAction)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.JobAction
    name: JobAction
    nameWithType: JobAction
    fullName: Microsoft.Azure.Batch.Common.JobAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.JobAction
    name: JobAction
    nameWithType: JobAction
    fullName: Microsoft.Azure.Batch.Common.JobAction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
