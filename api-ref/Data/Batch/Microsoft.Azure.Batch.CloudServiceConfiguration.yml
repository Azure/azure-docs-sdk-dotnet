### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration
  commentId: T:Microsoft.Azure.Batch.CloudServiceConfiguration
  id: CloudServiceConfiguration
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.CloudServiceConfiguration.#ctor(System.String,System.String)
  - Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion
  - Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily
  - Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion
  langs:
  - csharp
  - vb
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudServiceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloudServiceConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudServiceConfiguration.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nThe configuration for compute nodes in a pool based on the Azure Cloud Services platform.\n"
  example: []
  syntax:
    content: 'public class CloudServiceConfiguration : ITransportObjectProvider<CloudServiceConfiguration>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class CloudServiceConfiguration
          Implements ITransportObjectProvider(Of CloudServiceConfiguration), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.Batch.CloudServiceConfiguration.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.Batch.CloudServiceConfiguration
  langs:
  - csharp
  - vb
  name: CloudServiceConfiguration(String, String)
  nameWithType: CloudServiceConfiguration.CloudServiceConfiguration(String, String)
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration.CloudServiceConfiguration(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudServiceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudServiceConfiguration.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CloudServiceConfiguration(string osFamily, string targetOSVersion = null)
    content.vb: Public Sub New(osFamily As String, targetOSVersion As String = Nothing)
    parameters:
    - id: osFamily
      type: System.String
      description: The Azure Guest OS family to be installed on the virtual machines in the pool.
    - id: targetOSVersion
      type: System.String
      description: "The Azure Guest OS version to be installed on the virtual machines in the pool. If no value is provided, the \nBatch service will default to \"'*\", which specifies the latest operating system version for the <xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily\" data-throw-if-not-resolved=\"false\"></xref>."
  overload: Microsoft.Azure.Batch.CloudServiceConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion
  commentId: P:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion
  id: CurrentOSVersion
  parent: Microsoft.Azure.Batch.CloudServiceConfiguration
  langs:
  - csharp
  - vb
  name: CurrentOSVersion
  nameWithType: CloudServiceConfiguration.CurrentOSVersion
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudServiceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CurrentOSVersion
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudServiceConfiguration.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the Azure Guest OS version currently installed on the virtual machines in the pool. This may differ from \n<xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion\" data-throw-if-not-resolved=\"false\"></xref> if the pool state is <xref href=\"Microsoft.Azure.Batch.Common.PoolState.Upgrading\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string CurrentOSVersion { get; }
    content.vb: Public ReadOnly Property CurrentOSVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily
  commentId: P:Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily
  id: OSFamily
  parent: Microsoft.Azure.Batch.CloudServiceConfiguration
  langs:
  - csharp
  - vb
  name: OSFamily
  nameWithType: CloudServiceConfiguration.OSFamily
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudServiceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OSFamily
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudServiceConfiguration.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.\n"
  remarks: "\nFor more information about Guest OS families, see https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/.\n"
  example: []
  syntax:
    content: public string OSFamily { get; set; }
    content.vb: Public Property OSFamily As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion
  commentId: P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion
  id: TargetOSVersion
  parent: Microsoft.Azure.Batch.CloudServiceConfiguration
  langs:
  - csharp
  - vb
  name: TargetOSVersion
  nameWithType: CloudServiceConfiguration.TargetOSVersion
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudServiceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TargetOSVersion
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudServiceConfiguration.cs
    startLine: 118
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the Azure Guest OS version to be installed on the virtual machines in the pool. If no value is provided, \nthe Batch service will default to \"'*\", which specifies the latest operating system version for the <xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string TargetOSVersion { get; set; }
    content.vb: Public Property TargetOSVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration
  commentId: T:Microsoft.Azure.Batch.CloudServiceConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily
  commentId: P:Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.CloudServiceConfiguration.#ctor
  isExternal: false
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration.CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration.CloudServiceConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion
  commentId: P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion
- uid: Microsoft.Azure.Batch.Common.PoolState.Upgrading
  commentId: F:Microsoft.Azure.Batch.Common.PoolState.Upgrading
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion*
  commentId: Overload:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion
  isExternal: false
  name: CurrentOSVersion
  nameWithType: CloudServiceConfiguration.CurrentOSVersion
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily*
  commentId: Overload:Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily
  isExternal: false
  name: OSFamily
  nameWithType: CloudServiceConfiguration.OSFamily
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion*
  commentId: Overload:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion
  isExternal: false
  name: TargetOSVersion
  nameWithType: CloudServiceConfiguration.TargetOSVersion
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion
