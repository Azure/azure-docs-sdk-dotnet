### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  id: CertificateReference
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation},System.String,System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility}})
  - Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreLocation
  - Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreName
  - Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Thumbprint
  - Microsoft.Azure.Batch.Protocol.Models.CertificateReference.ThumbprintAlgorithm
  - Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Validate
  - Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Visibility
  langs:
  - csharp
  - vb
  name: CertificateReference
  nameWithType: CertificateReference
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateReference
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nA reference to a certificate to be installed on compute nodes in a\npool.\n"
  example: []
  syntax:
    content: public class CertificateReference
    content.vb: Public Class CertificateReference
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  langs:
  - csharp
  - vb
  name: CertificateReference()
  nameWithType: CertificateReference.CertificateReference()
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.CertificateReference()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the CertificateReference class.\n"
  example: []
  syntax:
    content: public CertificateReference()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation},System.String,System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility}})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation},System.String,System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility}})
  id: '#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation},System.String,System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility}})'
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  langs:
  - csharp
  - vb
  name: CertificateReference(String, String, Nullable<CertificateStoreLocation>, String, IList<Nullable<CertificateVisibility>>)
  nameWithType: CertificateReference.CertificateReference(String, String, Nullable<CertificateStoreLocation>, String, IList<Nullable<CertificateVisibility>>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.CertificateReference(System.String, System.String, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation>, System.String, System.Collections.Generic.IList<System.Nullable<Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility>>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the CertificateReference class.\n"
  example: []
  syntax:
    content: public CertificateReference(string thumbprint, string thumbprintAlgorithm, CertificateStoreLocation? storeLocation = null, string storeName = null, IList<CertificateVisibility? > visibility = null)
    content.vb: Public Sub New(thumbprint As String, thumbprintAlgorithm As String, storeLocation As CertificateStoreLocation? = Nothing, storeName As String = Nothing, visibility As IList(Of CertificateVisibility?) = Nothing)
    parameters:
    - id: thumbprint
      type: System.String
      description: The thumbprint of the certificate.
    - id: thumbprintAlgorithm
      type: System.String
      description: >-
        The algorithm with which the

        thumbprint is associated. This must be sha1.
    - id: storeLocation
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation}
      description: >-
        The location of the certificate store

        on the compute node into which to install the certificate.
    - id: storeName
      type: System.String
      description: >-
        The name of the certificate store on the

        compute node into which to install the certificate.
    - id: visibility
      type: System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility}}
      description: >-
        Which user accounts on the compute node

        should have access to the private data of the certificate.
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor*
  nameWithType.vb: CertificateReference.CertificateReference(String, String, Nullable(Of CertificateStoreLocation), String, IList(Of Nullable(Of CertificateVisibility)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.CertificateReference(System.String, System.String, System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation), System.String, System.Collections.Generic.IList(Of System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility)))
  name.vb: CertificateReference(String, String, Nullable(Of CertificateStoreLocation), String, IList(Of Nullable(Of CertificateVisibility)))
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Thumbprint
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Thumbprint
  id: Thumbprint
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  langs:
  - csharp
  - vb
  name: Thumbprint
  nameWithType: CertificateReference.Thumbprint
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Thumbprint
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Thumbprint
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the thumbprint of the certificate.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "thumbprint")]

      public string Thumbprint { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="thumbprint")>

      Public Property Thumbprint As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Thumbprint*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: thumbprint
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.ThumbprintAlgorithm
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.ThumbprintAlgorithm
  id: ThumbprintAlgorithm
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  langs:
  - csharp
  - vb
  name: ThumbprintAlgorithm
  nameWithType: CertificateReference.ThumbprintAlgorithm
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.ThumbprintAlgorithm
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ThumbprintAlgorithm
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the algorithm with which the thumbprint is\nassociated. This must be sha1.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "thumbprintAlgorithm")]

      public string ThumbprintAlgorithm { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="thumbprintAlgorithm")>

      Public Property ThumbprintAlgorithm As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.ThumbprintAlgorithm*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: thumbprintAlgorithm
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreLocation
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreLocation
  id: StoreLocation
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  langs:
  - csharp
  - vb
  name: StoreLocation
  nameWithType: CertificateReference.StoreLocation
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreLocation
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StoreLocation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the location of the certificate store on the compute\nnode into which to install the certificate.\n"
  remarks: "\nThe default value is CurrentUser. Possible values include:\n'currentuser', 'localmachine', 'unmapped'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "storeLocation")]

      public CertificateStoreLocation? StoreLocation { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="storeLocation")>

      Public Property StoreLocation As CertificateStoreLocation?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation}
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreLocation*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: storeLocation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreName
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreName
  id: StoreName
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  langs:
  - csharp
  - vb
  name: StoreName
  nameWithType: CertificateReference.StoreName
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StoreName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the name of the certificate store on the compute node\ninto which to install the certificate.\n"
  remarks: "\nThe default value is My.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "storeName")]

      public string StoreName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="storeName")>

      Public Property StoreName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: storeName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Visibility
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Visibility
  id: Visibility
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: CertificateReference.Visibility
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Visibility
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Visibility
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets which user accounts on the compute node should have\naccess to the private data of the certificate.\n"
  remarks: "\nThe default is all accounts.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "visibility")]

      public IList<CertificateVisibility? > Visibility { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="visibility")>

      Public Property Visibility As IList(Of CertificateVisibility?)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility}}
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Visibility*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: visibility
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CertificateReference.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateReference.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor
  isExternal: false
  name: CertificateReference
  nameWithType: CertificateReference.CertificateReference
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.CertificateReference
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CertificateStoreLocation>
  nameWithType: Nullable<CertificateStoreLocation>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation>
  nameWithType.vb: Nullable(Of CertificateStoreLocation)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation)
  name.vb: Nullable(Of CertificateStoreLocation)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation
    name: CertificateStoreLocation
    nameWithType: CertificateStoreLocation
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation
    name: CertificateStoreLocation
    nameWithType: CertificateStoreLocation
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility}}
  commentId: T:System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Nullable<CertificateVisibility>>
  nameWithType: IList<Nullable<CertificateVisibility>>
  fullName: System.Collections.Generic.IList<System.Nullable<Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility>>
  nameWithType.vb: IList(Of Nullable(Of CertificateVisibility))
  fullname.vb: System.Collections.Generic.IList(Of System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility))
  name.vb: IList(Of Nullable(Of CertificateVisibility))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility
    name: CertificateVisibility
    nameWithType: CertificateVisibility
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility
    name: CertificateVisibility
    nameWithType: CertificateVisibility
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Thumbprint*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Thumbprint
  isExternal: false
  name: Thumbprint
  nameWithType: CertificateReference.Thumbprint
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Thumbprint
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.ThumbprintAlgorithm*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.ThumbprintAlgorithm
  isExternal: false
  name: ThumbprintAlgorithm
  nameWithType: CertificateReference.ThumbprintAlgorithm
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.ThumbprintAlgorithm
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreLocation*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreLocation
  isExternal: false
  name: StoreLocation
  nameWithType: CertificateReference.StoreLocation
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreLocation
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreName*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreName
  isExternal: false
  name: StoreName
  nameWithType: CertificateReference.StoreName
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreName
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Visibility*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Visibility
  isExternal: false
  name: Visibility
  nameWithType: CertificateReference.Visibility
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Visibility
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Validate
  isExternal: false
  name: Validate
  nameWithType: CertificateReference.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Validate
