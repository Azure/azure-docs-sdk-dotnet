### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskInformation
  id: TaskInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskState,System.String,System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation)
  - Microsoft.Azure.Batch.Protocol.Models.TaskInformation.ExecutionInfo
  - Microsoft.Azure.Batch.Protocol.Models.TaskInformation.JobId
  - Microsoft.Azure.Batch.Protocol.Models.TaskInformation.SubtaskId
  - Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskId
  - Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskState
  - Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskUrl
  - Microsoft.Azure.Batch.Protocol.Models.TaskInformation.Validate
  langs:
  - csharp
  - vb
  name: TaskInformation
  nameWithType: TaskInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInformation about a task running on a compute node.\n"
  example: []
  syntax:
    content: public class TaskInformation
    content.vb: Public Class TaskInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskInformation
  langs:
  - csharp
  - vb
  name: TaskInformation()
  nameWithType: TaskInformation.TaskInformation()
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskInformation()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the TaskInformation class.\n"
  example: []
  syntax:
    content: public TaskInformation()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskState,System.String,System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskState,System.String,System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation)
  id: '#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskState,System.String,System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation)'
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskInformation
  langs:
  - csharp
  - vb
  name: TaskInformation(TaskState, String, String, String, Nullable<Int32>, TaskExecutionInformation)
  nameWithType: TaskInformation.TaskInformation(TaskState, String, String, String, Nullable<Int32>, TaskExecutionInformation)
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskInformation(Microsoft.Azure.Batch.Protocol.Models.TaskState, System.String, System.String, System.String, System.Nullable<System.Int32>, Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the TaskInformation class.\n"
  example: []
  syntax:
    content: public TaskInformation(TaskState taskState, string taskUrl = null, string jobId = null, string taskId = null, int ? subtaskId = null, TaskExecutionInformation executionInfo = null)
    content.vb: Public Sub New(taskState As TaskState, taskUrl As String = Nothing, jobId As String = Nothing, taskId As String = Nothing, subtaskId As Integer? = Nothing, executionInfo As TaskExecutionInformation = Nothing)
    parameters:
    - id: taskState
      type: Microsoft.Azure.Batch.Protocol.Models.TaskState
      description: The current state of the task.
    - id: taskUrl
      type: System.String
      description: The URL of the task.
    - id: jobId
      type: System.String
      description: >-
        The id of the job to which the task

        belongs.
    - id: taskId
      type: System.String
      description: The id of the task.
    - id: subtaskId
      type: System.Nullable{System.Int32}
      description: >-
        The id of the subtask if the task is a

        multi-instance task.
    - id: executionInfo
      type: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
      description: >-
        Information about the execution of the

        task.
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor*
  nameWithType.vb: TaskInformation.TaskInformation(TaskState, String, String, String, Nullable(Of Int32), TaskExecutionInformation)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskInformation(Microsoft.Azure.Batch.Protocol.Models.TaskState, System.String, System.String, System.String, System.Nullable(Of System.Int32), Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation)
  name.vb: TaskInformation(TaskState, String, String, String, Nullable(Of Int32), TaskExecutionInformation)
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskUrl
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskUrl
  id: TaskUrl
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskInformation
  langs:
  - csharp
  - vb
  name: TaskUrl
  nameWithType: TaskInformation.TaskUrl
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskUrl
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskUrl
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the URL of the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "taskUrl")]

      public string TaskUrl { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="taskUrl")>

      Public Property TaskUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: taskUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.JobId
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.JobId
  id: JobId
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskInformation
  langs:
  - csharp
  - vb
  name: JobId
  nameWithType: TaskInformation.JobId
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.JobId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the id of the job to which the task belongs.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "jobId")]

      public string JobId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="jobId")>

      Public Property JobId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.JobId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: jobId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskId
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskId
  id: TaskId
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskInformation
  langs:
  - csharp
  - vb
  name: TaskId
  nameWithType: TaskInformation.TaskId
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the id of the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "taskId")]

      public string TaskId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="taskId")>

      Public Property TaskId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: taskId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.SubtaskId
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.SubtaskId
  id: SubtaskId
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskInformation
  langs:
  - csharp
  - vb
  name: SubtaskId
  nameWithType: TaskInformation.SubtaskId
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.SubtaskId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubtaskId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the id of the subtask if the task is a multi-instance\ntask.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "subtaskId")]

      public int ? SubtaskId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="subtaskId")>

      Public Property SubtaskId As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.SubtaskId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: subtaskId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskState
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskState
  id: TaskState
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskInformation
  langs:
  - csharp
  - vb
  name: TaskState
  nameWithType: TaskInformation.TaskState
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskState
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskState
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the current state of the task.\n"
  remarks: "\nPossible values include: 'active', 'preparing', 'running',\n'completed'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "taskState")]

      public TaskState TaskState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="taskState")>

      Public Property TaskState As TaskState
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskState
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: taskState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.ExecutionInfo
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.ExecutionInfo
  id: ExecutionInfo
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskInformation
  langs:
  - csharp
  - vb
  name: ExecutionInfo
  nameWithType: TaskInformation.ExecutionInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.ExecutionInfo
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExecutionInfo
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets information about the execution of the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "executionInfo")]

      public TaskExecutionInformation ExecutionInfo { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="executionInfo")>

      Public Property ExecutionInfo As TaskExecutionInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.ExecutionInfo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: executionInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskInformation
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: TaskInformation.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskInformation.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor
  isExternal: false
  name: TaskInformation
  nameWithType: TaskInformation.TaskInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskInformation
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskState
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskState
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskState
  nameWithType: TaskState
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskState
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskExecutionInformation
  nameWithType: TaskExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskUrl*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskUrl
  isExternal: false
  name: TaskUrl
  nameWithType: TaskInformation.TaskUrl
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskUrl
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.JobId*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.JobId
  isExternal: false
  name: JobId
  nameWithType: TaskInformation.JobId
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.JobId
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskId*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskId
  isExternal: false
  name: TaskId
  nameWithType: TaskInformation.TaskId
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskId
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.SubtaskId*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.SubtaskId
  isExternal: false
  name: SubtaskId
  nameWithType: TaskInformation.SubtaskId
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.SubtaskId
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskState*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskState
  isExternal: false
  name: TaskState
  nameWithType: TaskInformation.TaskState
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskState
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.ExecutionInfo*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.ExecutionInfo
  isExternal: false
  name: ExecutionInfo
  nameWithType: TaskInformation.ExecutionInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.ExecutionInfo
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.Validate
  isExternal: false
  name: Validate
  nameWithType: TaskInformation.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskInformation.Validate
