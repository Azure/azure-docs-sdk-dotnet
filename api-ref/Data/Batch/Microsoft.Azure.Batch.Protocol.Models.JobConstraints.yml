### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  id: JobConstraints
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})
  - Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxTaskRetryCount
  - Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxWallClockTime
  langs:
  - csharp
  - vb
  name: JobConstraints
  nameWithType: JobConstraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobConstraints.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobConstraints
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobConstraints.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nSpecifies the execution constraints for jobs created on a schedule.\n"
  example: []
  syntax:
    content: public class JobConstraints
    content.vb: Public Class JobConstraints
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  langs:
  - csharp
  - vb
  name: JobConstraints()
  nameWithType: JobConstraints.JobConstraints()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.JobConstraints()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobConstraints.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobConstraints.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobConstraints class.\n"
  example: []
  syntax:
    content: public JobConstraints()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})
  id: '#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  langs:
  - csharp
  - vb
  name: JobConstraints(Nullable<TimeSpan>, Nullable<Int32>)
  nameWithType: JobConstraints.JobConstraints(Nullable<TimeSpan>, Nullable<Int32>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.JobConstraints(System.Nullable<System.TimeSpan>, System.Nullable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobConstraints.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobConstraints.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobConstraints class.\n"
  example: []
  syntax:
    content: public JobConstraints(TimeSpan? maxWallClockTime = null, int ? maxTaskRetryCount = null)
    content.vb: Public Sub New(maxWallClockTime As TimeSpan? = Nothing, maxTaskRetryCount As Integer? = Nothing)
    parameters:
    - id: maxWallClockTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        The maximum elapsed time that the

        job may run, measured from the time the job starts. If the job

        does not complete within the time limit, the Batch service

        terminates it and any tasks that are still running.
    - id: maxTaskRetryCount
      type: System.Nullable{System.Int32}
      description: >-
        The maximum number of times each

        task may be retried. The Batch service retries a task if its exit

        code is nonzero.
  overload: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor*
  nameWithType.vb: JobConstraints.JobConstraints(Nullable(Of TimeSpan), Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.JobConstraints(System.Nullable(Of System.TimeSpan), System.Nullable(Of System.Int32))
  name.vb: JobConstraints(Nullable(Of TimeSpan), Nullable(Of Int32))
- uid: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxWallClockTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxWallClockTime
  id: MaxWallClockTime
  parent: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  langs:
  - csharp
  - vb
  name: MaxWallClockTime
  nameWithType: JobConstraints.MaxWallClockTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxWallClockTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobConstraints.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxWallClockTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobConstraints.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the maximum elapsed time that the job may run,\nmeasured from the time the job starts. If the job does not\ncomplete within the time limit, the Batch service terminates it\nand any tasks that are still running.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "maxWallClockTime")]

      public TimeSpan? MaxWallClockTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="maxWallClockTime")>

      Public Property MaxWallClockTime As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxWallClockTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: maxWallClockTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxTaskRetryCount
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxTaskRetryCount
  id: MaxTaskRetryCount
  parent: Microsoft.Azure.Batch.Protocol.Models.JobConstraints
  langs:
  - csharp
  - vb
  name: MaxTaskRetryCount
  nameWithType: JobConstraints.MaxTaskRetryCount
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxTaskRetryCount
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobConstraints.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxTaskRetryCount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobConstraints.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the maximum number of times each task may be retried.\nThe Batch service retries a task if its exit code is nonzero.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "maxTaskRetryCount")]

      public int ? MaxTaskRetryCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="maxTaskRetryCount")>

      Public Property MaxTaskRetryCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxTaskRetryCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: maxTaskRetryCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor
  isExternal: false
  name: JobConstraints
  nameWithType: JobConstraints.JobConstraints
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.JobConstraints
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxWallClockTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxWallClockTime
  isExternal: false
  name: MaxWallClockTime
  nameWithType: JobConstraints.MaxWallClockTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxWallClockTime
- uid: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxTaskRetryCount*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxTaskRetryCount
  isExternal: false
  name: MaxTaskRetryCount
  nameWithType: JobConstraints.MaxTaskRetryCount
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxTaskRetryCount
