### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation
  commentId: T:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation
  id: JobPreparationTaskExecutionInformation
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.EndTime
  - Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.ExitCode
  - Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.LastRetryTime
  - Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount
  - Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.SchedulingError
  - Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.StartTime
  - Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.State
  - Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectory
  - Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl
  langs:
  - csharp
  - vb
  name: JobPreparationTaskExecutionInformation
  nameWithType: JobPreparationTaskExecutionInformation
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobPreparationTaskExecutionInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDetails about the execution of a <xref href=\"Microsoft.Azure.Batch.CloudJob.JobPreparationTask\" data-throw-if-not-resolved=\"false\"></xref> on a compute \nnode.\n"
  example: []
  syntax:
    content: 'public class JobPreparationTaskExecutionInformation : IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class JobPreparationTaskExecutionInformation
          Implements IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.EndTime
  commentId: P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.EndTime
  id: EndTime
  parent: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: JobPreparationTaskExecutionInformation.EndTime
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.EndTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the task completed.\n"
  remarks: "\nThis property is only returned if the task is in the <xref href=\"Microsoft.Azure.Batch.Common.JobPreparationTaskState.Completed\" data-throw-if-not-resolved=\"false\"></xref> state.\n"
  example: []
  syntax:
    content: public DateTime? EndTime { get; }
    content.vb: Public ReadOnly Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.EndTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.ExitCode
  commentId: P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.ExitCode
  id: ExitCode
  parent: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: ExitCode
  nameWithType: JobPreparationTaskExecutionInformation.ExitCode
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.ExitCode
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExitCode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the exit code of the program specified on the task command line.\n"
  remarks: "\nThis property is only returned if the task is in the <xref href=\"Microsoft.Azure.Batch.Common.JobPreparationTaskState.Completed\" data-throw-if-not-resolved=\"false\"></xref> state. \nThe exit code for a process reflects the specific convention implemented by the application developer for that \nprocess. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention \nused by the application process. Note that the exit code may also be generated by the compute node operating \nsystem, such as when a process is forcibly terminated.\n"
  example: []
  syntax:
    content: public int ? ExitCode { get; }
    content.vb: Public ReadOnly Property ExitCode As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.ExitCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.LastRetryTime
  commentId: P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.LastRetryTime
  id: LastRetryTime
  parent: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: LastRetryTime
  nameWithType: JobPreparationTaskExecutionInformation.LastRetryTime
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.LastRetryTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastRetryTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the most recent time at which this task's execution was retried by the Batch service.\n"
  remarks: "\nThis is only returned if the <xref href=\"Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount\" data-throw-if-not-resolved=\"false\"></xref> is not 0.\n"
  example: []
  syntax:
    content: public DateTime? LastRetryTime { get; }
    content.vb: Public ReadOnly Property LastRetryTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.LastRetryTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount
  commentId: P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount
  id: RetryCount
  parent: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: RetryCount
  nameWithType: JobPreparationTaskExecutionInformation.RetryCount
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RetryCount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
    startLine: 107
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the number of times the task has been retried by the Batch service. Every time the task exits with a non-zero \nexit code, it is deemed a task failure. The Batch service will retry the task up to the limit specified by the \n<xref href=\"Microsoft.Azure.Batch.JobPreparationTask.Constraints\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public int RetryCount { get; }
    content.vb: Public ReadOnly Property RetryCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.SchedulingError
  commentId: P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.SchedulingError
  id: SchedulingError
  parent: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: SchedulingError
  nameWithType: JobPreparationTaskExecutionInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.SchedulingError
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SchedulingError
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the TaskSchedulingError encountered by the service when starting the task.\n"
  remarks: "\nThis property is only returned if there was an error when scheduling the task, and it is now in the <xref href=\"Microsoft.Azure.Batch.Common.JobPreparationTaskState.Completed\" data-throw-if-not-resolved=\"false\"></xref> \nstate.\n"
  example: []
  syntax:
    content: public TaskSchedulingError SchedulingError { get; }
    content.vb: Public ReadOnly Property SchedulingError As TaskSchedulingError
    parameters: []
    return:
      type: Microsoft.Azure.Batch.TaskSchedulingError
  overload: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.SchedulingError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.StartTime
  commentId: P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.StartTime
  id: StartTime
  parent: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: JobPreparationTaskExecutionInformation.StartTime
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.StartTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the task started running. Note that every time the task is restarted, this value is updated.\n"
  example: []
  syntax:
    content: public DateTime StartTime { get; }
    content.vb: Public ReadOnly Property StartTime As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.StartTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.State
  commentId: P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.State
  id: State
  parent: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: State
  nameWithType: JobPreparationTaskExecutionInformation.State
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.State
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the current state of the task.\n"
  remarks: "\nRunning means the task is currently running. Completed means the task has completed. The Completed state includes \nthe case where the task exits successfully with exit code 0 and the cases where the system fails to start the \ntask process due to scheduling errors or the retry limit has reached after numerous task failures.\n"
  example: []
  syntax:
    content: public JobPreparationTaskState State { get; }
    content.vb: Public ReadOnly Property State As JobPreparationTaskState
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Common.JobPreparationTaskState
  overload: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectory
  commentId: P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectory
  id: TaskRootDirectory
  parent: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: TaskRootDirectory
  nameWithType: JobPreparationTaskExecutionInformation.TaskRootDirectory
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectory
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskRootDirectory
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
    startLine: 149
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the root directory of the Job Preparation task on the compute node. You can use this path to retrieve files \ncreated by the task, such as log files.\n"
  example: []
  syntax:
    content: public string TaskRootDirectory { get; }
    content.vb: Public ReadOnly Property TaskRootDirectory As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl
  commentId: P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl
  id: TaskRootDirectoryUrl
  parent: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: TaskRootDirectoryUrl
  nameWithType: JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskRootDirectoryUrl
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/JobPreparationTaskExecutionInformation.cs
    startLine: 157
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the URL to the root directory of the Job Preparation task on the compute node.\n"
  example: []
  syntax:
    content: public string TaskRootDirectoryUrl { get; }
    content.vb: Public ReadOnly Property TaskRootDirectoryUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch.CloudJob.JobPreparationTask
  commentId: P:Microsoft.Azure.Batch.CloudJob.JobPreparationTask
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Common.JobPreparationTaskState.Completed
  commentId: F:Microsoft.Azure.Batch.Common.JobPreparationTaskState.Completed
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.EndTime*
  commentId: Overload:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.EndTime
  isExternal: false
  name: EndTime
  nameWithType: JobPreparationTaskExecutionInformation.EndTime
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.EndTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.ExitCode*
  commentId: Overload:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.ExitCode
  isExternal: false
  name: ExitCode
  nameWithType: JobPreparationTaskExecutionInformation.ExitCode
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.ExitCode
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount
  commentId: P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.LastRetryTime*
  commentId: Overload:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.LastRetryTime
  isExternal: false
  name: LastRetryTime
  nameWithType: JobPreparationTaskExecutionInformation.LastRetryTime
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.LastRetryTime
- uid: Microsoft.Azure.Batch.JobPreparationTask.Constraints
  commentId: P:Microsoft.Azure.Batch.JobPreparationTask.Constraints
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount*
  commentId: Overload:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount
  isExternal: false
  name: RetryCount
  nameWithType: JobPreparationTaskExecutionInformation.RetryCount
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.SchedulingError*
  commentId: Overload:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.SchedulingError
  isExternal: false
  name: SchedulingError
  nameWithType: JobPreparationTaskExecutionInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.SchedulingError
- uid: Microsoft.Azure.Batch.TaskSchedulingError
  commentId: T:Microsoft.Azure.Batch.TaskSchedulingError
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: TaskSchedulingError
  nameWithType: TaskSchedulingError
  fullName: Microsoft.Azure.Batch.TaskSchedulingError
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.StartTime*
  commentId: Overload:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.StartTime
  isExternal: false
  name: StartTime
  nameWithType: JobPreparationTaskExecutionInformation.StartTime
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.StartTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.State*
  commentId: Overload:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.State
  isExternal: false
  name: State
  nameWithType: JobPreparationTaskExecutionInformation.State
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.State
- uid: Microsoft.Azure.Batch.Common.JobPreparationTaskState
  commentId: T:Microsoft.Azure.Batch.Common.JobPreparationTaskState
  parent: Microsoft.Azure.Batch.Common
  isExternal: false
  name: JobPreparationTaskState
  nameWithType: JobPreparationTaskState
  fullName: Microsoft.Azure.Batch.Common.JobPreparationTaskState
- uid: Microsoft.Azure.Batch.Common
  commentId: N:Microsoft.Azure.Batch.Common
  isExternal: false
  name: Microsoft.Azure.Batch.Common
  nameWithType: Microsoft.Azure.Batch.Common
  fullName: Microsoft.Azure.Batch.Common
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectory*
  commentId: Overload:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectory
  isExternal: false
  name: TaskRootDirectory
  nameWithType: JobPreparationTaskExecutionInformation.TaskRootDirectory
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl*
  commentId: Overload:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl
  isExternal: false
  name: TaskRootDirectoryUrl
  nameWithType: JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl
  fullName: Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl
