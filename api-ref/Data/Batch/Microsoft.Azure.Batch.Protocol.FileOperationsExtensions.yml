### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  commentId: T:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  id: FileOperationsExtensions
  parent: Microsoft.Azure.Batch.Protocol
  children:
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions)
  - Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: FileOperationsExtensions
  nameWithType: FileOperationsExtensions
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FileOperationsExtensions
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nExtension methods for FileOperations.\n"
  example: []
  syntax:
    content: public static class FileOperationsExtensions
    content.vb: Public Module FileOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions)
  id: DeleteFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteFromTask(IFileOperations, String, String, String, Nullable<Boolean>, FileDeleteFromTaskOptions)
  nameWithType: FileOperationsExtensions.DeleteFromTask(IFileOperations, String, String, String, Nullable<Boolean>, FileDeleteFromTaskOptions)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteFromTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDeletes the specified task file from the compute node where the task ran.\n"
  example: []
  syntax:
    content: public static FileDeleteFromTaskHeaders DeleteFromTask(this IFileOperations operations, string jobId, string taskId, string fileName, bool ? recursive = null, FileDeleteFromTaskOptions fileDeleteFromTaskOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteFromTask(operations As IFileOperations, jobId As String, taskId As String, fileName As String, recursive As Boolean? = Nothing, fileDeleteFromTaskOptions As FileDeleteFromTaskOptions = Nothing) As FileDeleteFromTaskHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job that contains the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task whose file you want to delete.\n"
    - id: fileName
      type: System.String
      description: "\nThe path to the task file that you want to delete.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nWhether to delete children of a directory. If the fileName parameter\nrepresents a directory instead of a file, you can set Recursive to true\nto delete the directory and all of the files and subdirectories in it. If\nRecursive is false then the directory must be empty or deletion will fail.\n"
    - id: fileDeleteFromTaskOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask*
  nameWithType.vb: FileOperationsExtensions.DeleteFromTask(IFileOperations, String, String, String, Nullable(Of Boolean), FileDeleteFromTaskOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions)
  name.vb: DeleteFromTask(IFileOperations, String, String, String, Nullable(Of Boolean), FileDeleteFromTaskOptions)
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions,System.Threading.CancellationToken)
  id: DeleteFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteFromTaskAsync(IFileOperations, String, String, String, Nullable<Boolean>, FileDeleteFromTaskOptions, CancellationToken)
  nameWithType: FileOperationsExtensions.DeleteFromTaskAsync(IFileOperations, String, String, String, Nullable<Boolean>, FileDeleteFromTaskOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteFromTaskAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDeletes the specified task file from the compute node where the task ran.\n"
  example: []
  syntax:
    content: public static Task<FileDeleteFromTaskHeaders> DeleteFromTaskAsync(this IFileOperations operations, string jobId, string taskId, string fileName, bool ? recursive = null, FileDeleteFromTaskOptions fileDeleteFromTaskOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteFromTaskAsync(operations As IFileOperations, jobId As String, taskId As String, fileName As String, recursive As Boolean? = Nothing, fileDeleteFromTaskOptions As FileDeleteFromTaskOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of FileDeleteFromTaskHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job that contains the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task whose file you want to delete.\n"
    - id: fileName
      type: System.String
      description: "\nThe path to the task file that you want to delete.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nWhether to delete children of a directory. If the fileName parameter\nrepresents a directory instead of a file, you can set Recursive to true\nto delete the directory and all of the files and subdirectories in it. If\nRecursive is false then the directory must be empty or deletion will fail.\n"
    - id: fileDeleteFromTaskOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync*
  nameWithType.vb: FileOperationsExtensions.DeleteFromTaskAsync(IFileOperations, String, String, String, Nullable(Of Boolean), FileDeleteFromTaskOptions, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions, System.Threading.CancellationToken)
  name.vb: DeleteFromTaskAsync(IFileOperations, String, String, String, Nullable(Of Boolean), FileDeleteFromTaskOptions, CancellationToken)
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions)
  id: GetFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetFromTask(IFileOperations, String, String, String, FileGetFromTaskOptions)
  nameWithType: FileOperationsExtensions.GetFromTask(IFileOperations, String, String, String, FileGetFromTaskOptions)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetFromTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nReturns the content of the specified task file.\n"
  example: []
  syntax:
    content: public static Stream GetFromTask(this IFileOperations operations, string jobId, string taskId, string fileName, FileGetFromTaskOptions fileGetFromTaskOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFromTask(operations As IFileOperations, jobId As String, taskId As String, fileName As String, fileGetFromTaskOptions As FileGetFromTaskOptions = Nothing) As Stream
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job that contains the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task whose file you want to retrieve.\n"
    - id: fileName
      type: System.String
      description: "\nThe path to the task file that you want to get the content of.\n"
    - id: fileGetFromTaskOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: System.IO.Stream
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions,System.Threading.CancellationToken)
  id: GetFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetFromTaskAsync(IFileOperations, String, String, String, FileGetFromTaskOptions, CancellationToken)
  nameWithType: FileOperationsExtensions.GetFromTaskAsync(IFileOperations, String, String, String, FileGetFromTaskOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetFromTaskAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 137
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nReturns the content of the specified task file.\n"
  example: []
  syntax:
    content: public static Task<Stream> GetFromTaskAsync(this IFileOperations operations, string jobId, string taskId, string fileName, FileGetFromTaskOptions fileGetFromTaskOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFromTaskAsync(operations As IFileOperations, jobId As String, taskId As String, fileName As String, fileGetFromTaskOptions As FileGetFromTaskOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job that contains the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task whose file you want to retrieve.\n"
    - id: fileName
      type: System.String
      description: "\nThe path to the task file that you want to get the content of.\n"
    - id: fileGetFromTaskOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions)
  id: GetNodeFilePropertiesFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetNodeFilePropertiesFromTask(IFileOperations, String, String, String, FileGetNodeFilePropertiesFromTaskOptions)
  nameWithType: FileOperationsExtensions.GetNodeFilePropertiesFromTask(IFileOperations, String, String, String, FileGetNodeFilePropertiesFromTaskOptions)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetNodeFilePropertiesFromTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 162
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the properties of the specified task file.\n"
  example: []
  syntax:
    content: public static FileGetNodeFilePropertiesFromTaskHeaders GetNodeFilePropertiesFromTask(this IFileOperations operations, string jobId, string taskId, string fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetNodeFilePropertiesFromTask(operations As IFileOperations, jobId As String, taskId As String, fileName As String, fileGetNodeFilePropertiesFromTaskOptions As FileGetNodeFilePropertiesFromTaskOptions = Nothing) As FileGetNodeFilePropertiesFromTaskHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job that contains the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task whose file you want to get the properties of.\n"
    - id: fileName
      type: System.String
      description: "\nThe path to the task file that you want to get the properties of.\n"
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTask*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions,System.Threading.CancellationToken)
  id: GetNodeFilePropertiesFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetNodeFilePropertiesFromTaskAsync(IFileOperations, String, String, String, FileGetNodeFilePropertiesFromTaskOptions, CancellationToken)
  nameWithType: FileOperationsExtensions.GetNodeFilePropertiesFromTaskAsync(IFileOperations, String, String, String, FileGetNodeFilePropertiesFromTaskOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetNodeFilePropertiesFromTaskAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 188
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the properties of the specified task file.\n"
  example: []
  syntax:
    content: public static Task<FileGetNodeFilePropertiesFromTaskHeaders> GetNodeFilePropertiesFromTaskAsync(this IFileOperations operations, string jobId, string taskId, string fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetNodeFilePropertiesFromTaskAsync(operations As IFileOperations, jobId As String, taskId As String, fileName As String, fileGetNodeFilePropertiesFromTaskOptions As FileGetNodeFilePropertiesFromTaskOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of FileGetNodeFilePropertiesFromTaskHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job that contains the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task whose file you want to get the properties of.\n"
    - id: fileName
      type: System.String
      description: "\nThe path to the task file that you want to get the properties of.\n"
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTaskAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions)
  id: DeleteFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteFromComputeNode(IFileOperations, String, String, String, Nullable<Boolean>, FileDeleteFromComputeNodeOptions)
  nameWithType: FileOperationsExtensions.DeleteFromComputeNode(IFileOperations, String, String, String, Nullable<Boolean>, FileDeleteFromComputeNodeOptions)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteFromComputeNode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 220
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDeletes the specified task file from the compute node.\n"
  example: []
  syntax:
    content: public static FileDeleteFromComputeNodeHeaders DeleteFromComputeNode(this IFileOperations operations, string poolId, string nodeId, string fileName, bool ? recursive = null, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteFromComputeNode(operations As IFileOperations, poolId As String, nodeId As String, fileName As String, recursive As Boolean? = Nothing, fileDeleteFromComputeNodeOptions As FileDeleteFromComputeNodeOptions = Nothing) As FileDeleteFromComputeNodeHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool that contains the compute node.\n"
    - id: nodeId
      type: System.String
      description: "\nThe id of the compute node from which you want to delete the file.\n"
    - id: fileName
      type: System.String
      description: "\nThe path to the file that you want to delete.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nWhether to delete children of a directory. If the fileName parameter\nrepresents a directory instead of a file, you can set Recursive to true\nto delete the directory and all of the files and subdirectories in it. If\nRecursive is false then the directory must be empty or deletion will fail.\n"
    - id: fileDeleteFromComputeNodeOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode*
  nameWithType.vb: FileOperationsExtensions.DeleteFromComputeNode(IFileOperations, String, String, String, Nullable(Of Boolean), FileDeleteFromComputeNodeOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions)
  name.vb: DeleteFromComputeNode(IFileOperations, String, String, String, Nullable(Of Boolean), FileDeleteFromComputeNodeOptions)
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions,System.Threading.CancellationToken)
  id: DeleteFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteFromComputeNodeAsync(IFileOperations, String, String, String, Nullable<Boolean>, FileDeleteFromComputeNodeOptions, CancellationToken)
  nameWithType: FileOperationsExtensions.DeleteFromComputeNodeAsync(IFileOperations, String, String, String, Nullable<Boolean>, FileDeleteFromComputeNodeOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteFromComputeNodeAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 252
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDeletes the specified task file from the compute node.\n"
  example: []
  syntax:
    content: public static Task<FileDeleteFromComputeNodeHeaders> DeleteFromComputeNodeAsync(this IFileOperations operations, string poolId, string nodeId, string fileName, bool ? recursive = null, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteFromComputeNodeAsync(operations As IFileOperations, poolId As String, nodeId As String, fileName As String, recursive As Boolean? = Nothing, fileDeleteFromComputeNodeOptions As FileDeleteFromComputeNodeOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of FileDeleteFromComputeNodeHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool that contains the compute node.\n"
    - id: nodeId
      type: System.String
      description: "\nThe id of the compute node from which you want to delete the file.\n"
    - id: fileName
      type: System.String
      description: "\nThe path to the file that you want to delete.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nWhether to delete children of a directory. If the fileName parameter\nrepresents a directory instead of a file, you can set Recursive to true\nto delete the directory and all of the files and subdirectories in it. If\nRecursive is false then the directory must be empty or deletion will fail.\n"
    - id: fileDeleteFromComputeNodeOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync*
  nameWithType.vb: FileOperationsExtensions.DeleteFromComputeNodeAsync(IFileOperations, String, String, String, Nullable(Of Boolean), FileDeleteFromComputeNodeOptions, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions, System.Threading.CancellationToken)
  name.vb: DeleteFromComputeNodeAsync(IFileOperations, String, String, String, Nullable(Of Boolean), FileDeleteFromComputeNodeOptions, CancellationToken)
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions)
  id: GetFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetFromComputeNode(IFileOperations, String, String, String, FileGetFromComputeNodeOptions)
  nameWithType: FileOperationsExtensions.GetFromComputeNode(IFileOperations, String, String, String, FileGetFromComputeNodeOptions)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetFromComputeNode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 278
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nReturns the content of the specified task file.\n"
  example: []
  syntax:
    content: public static Stream GetFromComputeNode(this IFileOperations operations, string poolId, string nodeId, string fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFromComputeNode(operations As IFileOperations, poolId As String, nodeId As String, fileName As String, fileGetFromComputeNodeOptions As FileGetFromComputeNodeOptions = Nothing) As Stream
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool that contains the compute node.\n"
    - id: nodeId
      type: System.String
      description: "\nThe id of the compute node that contains the file.\n"
    - id: fileName
      type: System.String
      description: "\nThe path to the task file that you want to get the content of.\n"
    - id: fileGetFromComputeNodeOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: System.IO.Stream
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions,System.Threading.CancellationToken)
  id: GetFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetFromComputeNodeAsync(IFileOperations, String, String, String, FileGetFromComputeNodeOptions, CancellationToken)
  nameWithType: FileOperationsExtensions.GetFromComputeNodeAsync(IFileOperations, String, String, String, FileGetFromComputeNodeOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetFromComputeNodeAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 304
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nReturns the content of the specified task file.\n"
  example: []
  syntax:
    content: public static Task<Stream> GetFromComputeNodeAsync(this IFileOperations operations, string poolId, string nodeId, string fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFromComputeNodeAsync(operations As IFileOperations, poolId As String, nodeId As String, fileName As String, fileGetFromComputeNodeOptions As FileGetFromComputeNodeOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool that contains the compute node.\n"
    - id: nodeId
      type: System.String
      description: "\nThe id of the compute node that contains the file.\n"
    - id: fileName
      type: System.String
      description: "\nThe path to the task file that you want to get the content of.\n"
    - id: fileGetFromComputeNodeOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions)
  id: GetNodeFilePropertiesFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetNodeFilePropertiesFromComputeNode(IFileOperations, String, String, String, FileGetNodeFilePropertiesFromComputeNodeOptions)
  nameWithType: FileOperationsExtensions.GetNodeFilePropertiesFromComputeNode(IFileOperations, String, String, String, FileGetNodeFilePropertiesFromComputeNodeOptions)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetNodeFilePropertiesFromComputeNode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 329
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the properties of the specified compute node file.\n"
  example: []
  syntax:
    content: public static FileGetNodeFilePropertiesFromComputeNodeHeaders GetNodeFilePropertiesFromComputeNode(this IFileOperations operations, string poolId, string nodeId, string fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetNodeFilePropertiesFromComputeNode(operations As IFileOperations, poolId As String, nodeId As String, fileName As String, fileGetNodeFilePropertiesFromComputeNodeOptions As FileGetNodeFilePropertiesFromComputeNodeOptions = Nothing) As FileGetNodeFilePropertiesFromComputeNodeHeaders
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool that contains the compute node.\n"
    - id: nodeId
      type: System.String
      description: "\nThe id of the compute node that contains the file.\n"
    - id: fileName
      type: System.String
      description: "\nThe path to the compute node file that you want to get the properties of.\n"
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions,System.Threading.CancellationToken)
  id: GetNodeFilePropertiesFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetNodeFilePropertiesFromComputeNodeAsync(IFileOperations, String, String, String, FileGetNodeFilePropertiesFromComputeNodeOptions, CancellationToken)
  nameWithType: FileOperationsExtensions.GetNodeFilePropertiesFromComputeNodeAsync(IFileOperations, String, String, String, FileGetNodeFilePropertiesFromComputeNodeOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetNodeFilePropertiesFromComputeNodeAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 355
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets the properties of the specified compute node file.\n"
  example: []
  syntax:
    content: public static Task<FileGetNodeFilePropertiesFromComputeNodeHeaders> GetNodeFilePropertiesFromComputeNodeAsync(this IFileOperations operations, string poolId, string nodeId, string fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetNodeFilePropertiesFromComputeNodeAsync(operations As IFileOperations, poolId As String, nodeId As String, fileName As String, fileGetNodeFilePropertiesFromComputeNodeOptions As FileGetNodeFilePropertiesFromComputeNodeOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of FileGetNodeFilePropertiesFromComputeNodeHeaders)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool that contains the compute node.\n"
    - id: nodeId
      type: System.String
      description: "\nThe id of the compute node that contains the file.\n"
    - id: fileName
      type: System.String
      description: "\nThe path to the compute node file that you want to get the properties of.\n"
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNodeAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions)
  id: ListFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFromTask(IFileOperations, String, String, Nullable<Boolean>, FileListFromTaskOptions)
  nameWithType: FileOperationsExtensions.ListFromTask(IFileOperations, String, String, Nullable<Boolean>, FileListFromTaskOptions)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFromTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 381
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the files in a task's directory on its compute node.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<NodeFile> ListFromTask(this IFileOperations operations, string jobId, string taskId, bool ? recursive = null, FileListFromTaskOptions fileListFromTaskOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFromTask(operations As IFileOperations, jobId As String, taskId As String, recursive As Boolean? = Nothing, fileListFromTaskOptions As FileListFromTaskOptions = Nothing) As Rest.Azure.IPage(Of NodeFile)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job that contains the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task whose files you want to list.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nWhether to list children of a directory.\n"
    - id: fileListFromTaskOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.NodeFile}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask*
  nameWithType.vb: FileOperationsExtensions.ListFromTask(IFileOperations, String, String, Nullable(Of Boolean), FileListFromTaskOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions)
  name.vb: ListFromTask(IFileOperations, String, String, Nullable(Of Boolean), FileListFromTaskOptions)
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions,System.Threading.CancellationToken)
  id: ListFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFromTaskAsync(IFileOperations, String, String, Nullable<Boolean>, FileListFromTaskOptions, CancellationToken)
  nameWithType: FileOperationsExtensions.ListFromTaskAsync(IFileOperations, String, String, Nullable<Boolean>, FileListFromTaskOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFromTaskAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 407
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the files in a task's directory on its compute node.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<NodeFile>> ListFromTaskAsync(this IFileOperations operations, string jobId, string taskId, bool ? recursive = null, FileListFromTaskOptions fileListFromTaskOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFromTaskAsync(operations As IFileOperations, jobId As String, taskId As String, recursive As Boolean? = Nothing, fileListFromTaskOptions As FileListFromTaskOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of NodeFile))
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: jobId
      type: System.String
      description: "\nThe id of the job that contains the task.\n"
    - id: taskId
      type: System.String
      description: "\nThe id of the task whose files you want to list.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nWhether to list children of a directory.\n"
    - id: fileListFromTaskOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.NodeFile}}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync*
  nameWithType.vb: FileOperationsExtensions.ListFromTaskAsync(IFileOperations, String, String, Nullable(Of Boolean), FileListFromTaskOptions, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions, System.Threading.CancellationToken)
  name.vb: ListFromTaskAsync(IFileOperations, String, String, Nullable(Of Boolean), FileListFromTaskOptions, CancellationToken)
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions)
  id: ListFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFromComputeNode(IFileOperations, String, String, Nullable<Boolean>, FileListFromComputeNodeOptions)
  nameWithType: FileOperationsExtensions.ListFromComputeNode(IFileOperations, String, String, Nullable<Boolean>, FileListFromComputeNodeOptions)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFromComputeNode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 433
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the files in task directories on the specified compute node.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<NodeFile> ListFromComputeNode(this IFileOperations operations, string poolId, string nodeId, bool ? recursive = null, FileListFromComputeNodeOptions fileListFromComputeNodeOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFromComputeNode(operations As IFileOperations, poolId As String, nodeId As String, recursive As Boolean? = Nothing, fileListFromComputeNodeOptions As FileListFromComputeNodeOptions = Nothing) As Rest.Azure.IPage(Of NodeFile)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool that contains the compute node.\n"
    - id: nodeId
      type: System.String
      description: "\nThe id of the compute node whose files you want to list.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nWhether to list children of a directory.\n"
    - id: fileListFromComputeNodeOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.NodeFile}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode*
  nameWithType.vb: FileOperationsExtensions.ListFromComputeNode(IFileOperations, String, String, Nullable(Of Boolean), FileListFromComputeNodeOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions)
  name.vb: ListFromComputeNode(IFileOperations, String, String, Nullable(Of Boolean), FileListFromComputeNodeOptions)
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions,System.Threading.CancellationToken)
  id: ListFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFromComputeNodeAsync(IFileOperations, String, String, Nullable<Boolean>, FileListFromComputeNodeOptions, CancellationToken)
  nameWithType: FileOperationsExtensions.ListFromComputeNodeAsync(IFileOperations, String, String, Nullable<Boolean>, FileListFromComputeNodeOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFromComputeNodeAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 459
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the files in task directories on the specified compute node.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<NodeFile>> ListFromComputeNodeAsync(this IFileOperations operations, string poolId, string nodeId, bool ? recursive = null, FileListFromComputeNodeOptions fileListFromComputeNodeOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFromComputeNodeAsync(operations As IFileOperations, poolId As String, nodeId As String, recursive As Boolean? = Nothing, fileListFromComputeNodeOptions As FileListFromComputeNodeOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of NodeFile))
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: poolId
      type: System.String
      description: "\nThe id of the pool that contains the compute node.\n"
    - id: nodeId
      type: System.String
      description: "\nThe id of the compute node whose files you want to list.\n"
    - id: recursive
      type: System.Nullable{System.Boolean}
      description: "\nWhether to list children of a directory.\n"
    - id: fileListFromComputeNodeOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.NodeFile}}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync*
  nameWithType.vb: FileOperationsExtensions.ListFromComputeNodeAsync(IFileOperations, String, String, Nullable(Of Boolean), FileListFromComputeNodeOptions, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, System.String, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions, System.Threading.CancellationToken)
  name.vb: ListFromComputeNodeAsync(IFileOperations, String, String, Nullable(Of Boolean), FileListFromComputeNodeOptions, CancellationToken)
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions)
  id: ListFromTaskNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFromTaskNext(IFileOperations, String, FileListFromTaskNextOptions)
  nameWithType: FileOperationsExtensions.ListFromTaskNext(IFileOperations, String, FileListFromTaskNextOptions)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFromTaskNext
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 479
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the files in a task's directory on its compute node.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<NodeFile> ListFromTaskNext(this IFileOperations operations, string nextPageLink, FileListFromTaskNextOptions fileListFromTaskNextOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFromTaskNext(operations As IFileOperations, nextPageLink As String, fileListFromTaskNextOptions As FileListFromTaskNextOptions = Nothing) As Rest.Azure.IPage(Of NodeFile)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: fileListFromTaskNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.NodeFile}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions,System.Threading.CancellationToken)
  id: ListFromTaskNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFromTaskNextAsync(IFileOperations, String, FileListFromTaskNextOptions, CancellationToken)
  nameWithType: FileOperationsExtensions.ListFromTaskNextAsync(IFileOperations, String, FileListFromTaskNextOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFromTaskNextAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 499
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists the files in a task's directory on its compute node.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<NodeFile>> ListFromTaskNextAsync(this IFileOperations operations, string nextPageLink, FileListFromTaskNextOptions fileListFromTaskNextOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFromTaskNextAsync(operations As IFileOperations, nextPageLink As String, fileListFromTaskNextOptions As FileListFromTaskNextOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of NodeFile))
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: fileListFromTaskNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.NodeFile}}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions)
  id: ListFromComputeNodeNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFromComputeNodeNext(IFileOperations, String, FileListFromComputeNodeNextOptions)
  nameWithType: FileOperationsExtensions.ListFromComputeNodeNext(IFileOperations, String, FileListFromComputeNodeNextOptions)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFromComputeNodeNext
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 519
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the files in task directories on the specified compute node.\n"
  example: []
  syntax:
    content: public static Rest.Azure.IPage<NodeFile> ListFromComputeNodeNext(this IFileOperations operations, string nextPageLink, FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFromComputeNodeNext(operations As IFileOperations, nextPageLink As String, fileListFromComputeNodeNextOptions As FileListFromComputeNodeNextOptions = Nothing) As Rest.Azure.IPage(Of NodeFile)
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: fileListFromComputeNodeNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.NodeFile}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions,System.Threading.CancellationToken)
  id: ListFromComputeNodeNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListFromComputeNodeNextAsync(IFileOperations, String, FileListFromComputeNodeNextOptions, CancellationToken)
  nameWithType: FileOperationsExtensions.ListFromComputeNodeNextAsync(IFileOperations, String, FileListFromComputeNodeNextOptions, CancellationToken)
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations, System.String, Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListFromComputeNodeNextAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/FileOperationsExtensions.cs
    startLine: 539
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nLists all of the files in task directories on the specified compute node.\n"
  example: []
  syntax:
    content: public static Task<Rest.Azure.IPage<NodeFile>> ListFromComputeNodeNextAsync(this IFileOperations operations, string nextPageLink, FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListFromComputeNodeNextAsync(operations As IFileOperations, nextPageLink As String, fileListFromComputeNodeNextOptions As FileListFromComputeNodeNextOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Rest.Azure.IPage(Of NodeFile))
    parameters:
    - id: operations
      type: Microsoft.Azure.Batch.Protocol.IFileOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: fileListFromComputeNodeNextOptions
      type: Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.NodeFile}}
  overload: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask
  isExternal: false
  name: DeleteFromTask
  nameWithType: FileOperationsExtensions.DeleteFromTask
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask
- uid: Microsoft.Azure.Batch.Protocol.IFileOperations
  commentId: T:Microsoft.Azure.Batch.Protocol.IFileOperations
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: IFileOperations
  nameWithType: IFileOperations
  fullName: Microsoft.Azure.Batch.Protocol.IFileOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileDeleteFromTaskOptions
  nameWithType: FileDeleteFromTaskOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileDeleteFromTaskHeaders
  nameWithType: FileDeleteFromTaskHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync
  isExternal: false
  name: DeleteFromTaskAsync
  nameWithType: FileOperationsExtensions.DeleteFromTaskAsync
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileDeleteFromTaskHeaders>
  nameWithType: Task<FileDeleteFromTaskHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders>
  nameWithType.vb: Task(Of FileDeleteFromTaskHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders)
  name.vb: Task(Of FileDeleteFromTaskHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders
    name: FileDeleteFromTaskHeaders
    nameWithType: FileDeleteFromTaskHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders
    name: FileDeleteFromTaskHeaders
    nameWithType: FileDeleteFromTaskHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask
  isExternal: false
  name: GetFromTask
  nameWithType: FileOperationsExtensions.GetFromTask
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask
- uid: Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileGetFromTaskOptions
  nameWithType: FileGetFromTaskOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync
  isExternal: false
  name: GetFromTaskAsync
  nameWithType: FileOperationsExtensions.GetFromTaskAsync
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTask*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTask
  isExternal: false
  name: GetNodeFilePropertiesFromTask
  nameWithType: FileOperationsExtensions.GetNodeFilePropertiesFromTask
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTask
- uid: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileGetNodeFilePropertiesFromTaskOptions
  nameWithType: FileGetNodeFilePropertiesFromTaskOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileGetNodeFilePropertiesFromTaskHeaders
  nameWithType: FileGetNodeFilePropertiesFromTaskHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTaskAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTaskAsync
  isExternal: false
  name: GetNodeFilePropertiesFromTaskAsync
  nameWithType: FileOperationsExtensions.GetNodeFilePropertiesFromTaskAsync
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTaskAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileGetNodeFilePropertiesFromTaskHeaders>
  nameWithType: Task<FileGetNodeFilePropertiesFromTaskHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders>
  nameWithType.vb: Task(Of FileGetNodeFilePropertiesFromTaskHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders)
  name.vb: Task(Of FileGetNodeFilePropertiesFromTaskHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders
    name: FileGetNodeFilePropertiesFromTaskHeaders
    nameWithType: FileGetNodeFilePropertiesFromTaskHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders
    name: FileGetNodeFilePropertiesFromTaskHeaders
    nameWithType: FileGetNodeFilePropertiesFromTaskHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode
  isExternal: false
  name: DeleteFromComputeNode
  nameWithType: FileOperationsExtensions.DeleteFromComputeNode
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode
- uid: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileDeleteFromComputeNodeOptions
  nameWithType: FileDeleteFromComputeNodeOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileDeleteFromComputeNodeHeaders
  nameWithType: FileDeleteFromComputeNodeHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync
  isExternal: false
  name: DeleteFromComputeNodeAsync
  nameWithType: FileOperationsExtensions.DeleteFromComputeNodeAsync
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileDeleteFromComputeNodeHeaders>
  nameWithType: Task<FileDeleteFromComputeNodeHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders>
  nameWithType.vb: Task(Of FileDeleteFromComputeNodeHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders)
  name.vb: Task(Of FileDeleteFromComputeNodeHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders
    name: FileDeleteFromComputeNodeHeaders
    nameWithType: FileDeleteFromComputeNodeHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders
    name: FileDeleteFromComputeNodeHeaders
    nameWithType: FileDeleteFromComputeNodeHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode
  isExternal: false
  name: GetFromComputeNode
  nameWithType: FileOperationsExtensions.GetFromComputeNode
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode
- uid: Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileGetFromComputeNodeOptions
  nameWithType: FileGetFromComputeNodeOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync
  isExternal: false
  name: GetFromComputeNodeAsync
  nameWithType: FileOperationsExtensions.GetFromComputeNodeAsync
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNode*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNode
  isExternal: false
  name: GetNodeFilePropertiesFromComputeNode
  nameWithType: FileOperationsExtensions.GetNodeFilePropertiesFromComputeNode
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNode
- uid: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileGetNodeFilePropertiesFromComputeNodeOptions
  nameWithType: FileGetNodeFilePropertiesFromComputeNodeOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions
- uid: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileGetNodeFilePropertiesFromComputeNodeHeaders
  nameWithType: FileGetNodeFilePropertiesFromComputeNodeHeaders
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNodeAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNodeAsync
  isExternal: false
  name: GetNodeFilePropertiesFromComputeNodeAsync
  nameWithType: FileOperationsExtensions.GetNodeFilePropertiesFromComputeNodeAsync
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNodeAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileGetNodeFilePropertiesFromComputeNodeHeaders>
  nameWithType: Task<FileGetNodeFilePropertiesFromComputeNodeHeaders>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders>
  nameWithType.vb: Task(Of FileGetNodeFilePropertiesFromComputeNodeHeaders)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders)
  name.vb: Task(Of FileGetNodeFilePropertiesFromComputeNodeHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders
    name: FileGetNodeFilePropertiesFromComputeNodeHeaders
    nameWithType: FileGetNodeFilePropertiesFromComputeNodeHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders
    name: FileGetNodeFilePropertiesFromComputeNodeHeaders
    nameWithType: FileGetNodeFilePropertiesFromComputeNodeHeaders
    fullName: Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask
  isExternal: false
  name: ListFromTask
  nameWithType: FileOperationsExtensions.ListFromTask
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask
- uid: Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileListFromTaskOptions
  nameWithType: FileListFromTaskOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.NodeFile}
  commentId: '!:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.NodeFile}'
  definition: Microsoft.Rest.Azure.IPage`1
  name: Rest.Azure.IPage<NodeFile>
  nameWithType: Rest.Azure.IPage<NodeFile>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.NodeFile>
  nameWithType.vb: Rest.Azure.IPage(Of NodeFile)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.NodeFile)
  name.vb: Rest.Azure.IPage(Of NodeFile)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile
    name: NodeFile
    nameWithType: NodeFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile
    name: NodeFile
    nameWithType: NodeFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage`1
  isExternal: true
  name: Rest.Azure.IPage<>
  nameWithType: Rest.Azure.IPage<>
  fullName: Microsoft.Rest.Azure.IPage<>
  nameWithType.vb: Rest.Azure.IPage(Of )
  fullname.vb: Microsoft.Rest.Azure.IPage(Of )
  name.vb: Rest.Azure.IPage(Of )
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync
  isExternal: false
  name: ListFromTaskAsync
  nameWithType: FileOperationsExtensions.ListFromTaskAsync
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.NodeFile}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Batch.Protocol.Models.NodeFile}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Rest.Azure.IPage<NodeFile>>
  nameWithType: Task<Rest.Azure.IPage<NodeFile>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Batch.Protocol.Models.NodeFile>>
  nameWithType.vb: Task(Of Rest.Azure.IPage(Of NodeFile))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Batch.Protocol.Models.NodeFile))
  name.vb: Task(Of Rest.Azure.IPage(Of NodeFile))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile
    name: NodeFile
    nameWithType: NodeFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: Rest.Azure.IPage
    nameWithType: Rest.Azure.IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile
    name: NodeFile
    nameWithType: NodeFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode
  isExternal: false
  name: ListFromComputeNode
  nameWithType: FileOperationsExtensions.ListFromComputeNode
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode
- uid: Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileListFromComputeNodeOptions
  nameWithType: FileListFromComputeNodeOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync
  isExternal: false
  name: ListFromComputeNodeAsync
  nameWithType: FileOperationsExtensions.ListFromComputeNodeAsync
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext
  isExternal: false
  name: ListFromTaskNext
  nameWithType: FileOperationsExtensions.ListFromTaskNext
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext
- uid: Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileListFromTaskNextOptions
  nameWithType: FileListFromTaskNextOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync
  isExternal: false
  name: ListFromTaskNextAsync
  nameWithType: FileOperationsExtensions.ListFromTaskNextAsync
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext
  isExternal: false
  name: ListFromComputeNodeNext
  nameWithType: FileOperationsExtensions.ListFromComputeNodeNext
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext
- uid: Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileListFromComputeNodeNextOptions
  nameWithType: FileListFromComputeNodeNextOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions
- uid: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync
  isExternal: false
  name: ListFromComputeNodeNextAsync
  nameWithType: FileOperationsExtensions.ListFromComputeNodeNextAsync
  fullName: Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync
