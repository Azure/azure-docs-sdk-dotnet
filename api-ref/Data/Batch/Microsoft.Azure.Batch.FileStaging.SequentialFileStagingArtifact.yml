### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact
  commentId: T:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact
  id: SequentialFileStagingArtifact
  parent: Microsoft.Azure.Batch.FileStaging
  children:
  - Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated
  - Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.NamingFragment
  langs:
  - csharp
  - vb
  name: SequentialFileStagingArtifact
  nameWithType: SequentialFileStagingArtifact
  fullName: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/SequentialFileStagingArtifact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SequentialFileStagingArtifact
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/SequentialFileStagingArtifact.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nThe file staging artifact payload for this file staging provider\n"
  example: []
  syntax:
    content: 'public sealed class SequentialFileStagingArtifact : IFileStagingArtifact'
    content.vb: >-
      Public NotInheritable Class SequentialFileStagingArtifact
          Implements IFileStagingArtifact
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Batch.IFileStagingArtifact
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated
  commentId: P:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated
  id: BlobContainerCreated
  parent: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact
  langs:
  - csharp
  - vb
  name: BlobContainerCreated
  nameWithType: SequentialFileStagingArtifact.BlobContainerCreated
  fullName: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/SequentialFileStagingArtifact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BlobContainerCreated
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/SequentialFileStagingArtifact.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nThe name of any blob container created.  \n\nA blob container is created if there is at least one file \nto be uploaded that does not have an explicit container specified.\n"
  example: []
  syntax:
    content: public string BlobContainerCreated { get; }
    content.vb: Public ReadOnly Property BlobContainerCreated As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.NamingFragment
  commentId: P:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.NamingFragment
  id: NamingFragment
  parent: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact
  langs:
  - csharp
  - vb
  name: NamingFragment
  nameWithType: SequentialFileStagingArtifact.NamingFragment
  fullName: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.NamingFragment
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/SequentialFileStagingArtifact.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NamingFragment
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/SequentialFileStagingArtifact.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nOptionally set by caller.  Optionally used by implementation. A name fragment that can be used when constructing default names.\n\nCan only be set once.\n"
  example: []
  syntax:
    content: public string NamingFragment { get; set; }
    content.vb: Public Property NamingFragment As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.NamingFragment*
  implements:
  - Microsoft.Azure.Batch.IFileStagingArtifact.NamingFragment
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.FileStaging
  commentId: N:Microsoft.Azure.Batch.FileStaging
  isExternal: false
  name: Microsoft.Azure.Batch.FileStaging
  nameWithType: Microsoft.Azure.Batch.FileStaging
  fullName: Microsoft.Azure.Batch.FileStaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Batch.IFileStagingArtifact
  commentId: T:Microsoft.Azure.Batch.IFileStagingArtifact
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IFileStagingArtifact
  nameWithType: IFileStagingArtifact
  fullName: Microsoft.Azure.Batch.IFileStagingArtifact
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated
  isExternal: false
  name: BlobContainerCreated
  nameWithType: SequentialFileStagingArtifact.BlobContainerCreated
  fullName: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.NamingFragment*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.NamingFragment
  isExternal: false
  name: NamingFragment
  nameWithType: SequentialFileStagingArtifact.NamingFragment
  fullName: Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.NamingFragment
- uid: Microsoft.Azure.Batch.IFileStagingArtifact.NamingFragment
  commentId: P:Microsoft.Azure.Batch.IFileStagingArtifact.NamingFragment
  parent: Microsoft.Azure.Batch.IFileStagingArtifact
  isExternal: false
  name: NamingFragment
  nameWithType: IFileStagingArtifact.NamingFragment
  fullName: Microsoft.Azure.Batch.IFileStagingArtifact.NamingFragment
