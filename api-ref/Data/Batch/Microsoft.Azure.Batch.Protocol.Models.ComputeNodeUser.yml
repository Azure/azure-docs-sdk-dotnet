### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser
  id: ComputeNodeUser
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String)
  - Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ExpiryTime
  - Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.IsAdmin
  - Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Name
  - Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Password
  - Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.SshPublicKey
  - Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Validate
  langs:
  - csharp
  - vb
  name: ComputeNodeUser
  nameWithType: ComputeNodeUser
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ComputeNodeUser
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nAn user account on a compute node.\n"
  example: []
  syntax:
    content: public class ComputeNodeUser
    content.vb: Public Class ComputeNodeUser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: ComputeNodeUser()
  nameWithType: ComputeNodeUser.ComputeNodeUser()
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ComputeNodeUser()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the ComputeNodeUser class.\n"
  example: []
  syntax:
    content: public ComputeNodeUser()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String)
  id: '#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String)'
  parent: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: ComputeNodeUser(String, Nullable<Boolean>, Nullable<DateTime>, String, String)
  nameWithType: ComputeNodeUser.ComputeNodeUser(String, Nullable<Boolean>, Nullable<DateTime>, String, String)
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ComputeNodeUser(System.String, System.Nullable<System.Boolean>, System.Nullable<System.DateTime>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the ComputeNodeUser class.\n"
  example: []
  syntax:
    content: public ComputeNodeUser(string name, bool ? isAdmin = null, DateTime? expiryTime = null, string password = null, string sshPublicKey = null)
    content.vb: Public Sub New(name As String, isAdmin As Boolean? = Nothing, expiryTime As Date? = Nothing, password As String = Nothing, sshPublicKey As String = Nothing)
    parameters:
    - id: name
      type: System.String
      description: The user name of the account.
    - id: isAdmin
      type: System.Nullable{System.Boolean}
      description: >-
        Whether the account should be an

        administrator on the compute node.
    - id: expiryTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the account should

        expire.
    - id: password
      type: System.String
      description: The password of the account.
    - id: sshPublicKey
      type: System.String
      description: >-
        The SSH public key that can be used for

        remote login to the compute node.
  overload: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor*
  nameWithType.vb: ComputeNodeUser.ComputeNodeUser(String, Nullable(Of Boolean), Nullable(Of DateTime), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ComputeNodeUser(System.String, System.Nullable(Of System.Boolean), System.Nullable(Of System.DateTime), System.String, System.String)
  name.vb: ComputeNodeUser(String, Nullable(Of Boolean), Nullable(Of DateTime), String, String)
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Name
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Name
  id: Name
  parent: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ComputeNodeUser.Name
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Name
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the user name of the account.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.IsAdmin
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.IsAdmin
  id: IsAdmin
  parent: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: IsAdmin
  nameWithType: ComputeNodeUser.IsAdmin
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.IsAdmin
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsAdmin
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether the account should be an administrator on the\ncompute node.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "isAdmin")]

      public bool ? IsAdmin { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="isAdmin")>

      Public Property IsAdmin As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.IsAdmin*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: isAdmin
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ExpiryTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ExpiryTime
  id: ExpiryTime
  parent: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: ExpiryTime
  nameWithType: ComputeNodeUser.ExpiryTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ExpiryTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExpiryTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the account should expire.\n"
  remarks: "\nIf omitted, the default is 1 day from the current time.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "expiryTime")]

      public DateTime? ExpiryTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="expiryTime")>

      Public Property ExpiryTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ExpiryTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: expiryTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Password
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Password
  id: Password
  parent: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: ComputeNodeUser.Password
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Password
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Password
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the password of the account.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "password")]

      public string Password { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="password")>

      Public Property Password As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Password*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: password
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.SshPublicKey
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.SshPublicKey
  id: SshPublicKey
  parent: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: SshPublicKey
  nameWithType: ComputeNodeUser.SshPublicKey
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.SshPublicKey
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SshPublicKey
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the SSH public key that can be used for remote login\nto the compute node.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sshPublicKey")]

      public string SshPublicKey { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sshPublicKey")>

      Public Property SshPublicKey As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.SshPublicKey*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sshPublicKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ComputeNodeUser.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ComputeNodeUser.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor
  isExternal: false
  name: ComputeNodeUser
  nameWithType: ComputeNodeUser.ComputeNodeUser
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ComputeNodeUser
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Name*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Name
  isExternal: false
  name: Name
  nameWithType: ComputeNodeUser.Name
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Name
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.IsAdmin*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.IsAdmin
  isExternal: false
  name: IsAdmin
  nameWithType: ComputeNodeUser.IsAdmin
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.IsAdmin
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ExpiryTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ExpiryTime
  isExternal: false
  name: ExpiryTime
  nameWithType: ComputeNodeUser.ExpiryTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ExpiryTime
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Password*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Password
  isExternal: false
  name: Password
  nameWithType: ComputeNodeUser.Password
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Password
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.SshPublicKey*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.SshPublicKey
  isExternal: false
  name: SshPublicKey
  nameWithType: ComputeNodeUser.SshPublicKey
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.SshPublicKey
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Validate
  isExternal: false
  name: Validate
  nameWithType: ComputeNodeUser.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Validate
