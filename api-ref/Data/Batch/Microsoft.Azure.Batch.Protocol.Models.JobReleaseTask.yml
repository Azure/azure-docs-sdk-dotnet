### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  id: JobReleaseTask
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean})
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.CommandLine
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.EnvironmentSettings
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Id
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.MaxWallClockTime
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.ResourceFiles
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RetentionTime
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RunElevated
  - Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Validate
  langs:
  - csharp
  - vb
  name: JobReleaseTask
  nameWithType: JobReleaseTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobReleaseTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nA Job Release task to run on job completion on any compute node where\nthe job has run.\n"
  example: []
  syntax:
    content: public class JobReleaseTask
    content.vb: Public Class JobReleaseTask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  langs:
  - csharp
  - vb
  name: JobReleaseTask()
  nameWithType: JobReleaseTask.JobReleaseTask()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.JobReleaseTask()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobReleaseTask class.\n"
  example: []
  syntax:
    content: public JobReleaseTask()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean})'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  langs:
  - csharp
  - vb
  name: JobReleaseTask(String, String, IList<ResourceFile>, IList<EnvironmentSetting>, Nullable<TimeSpan>, Nullable<TimeSpan>, Nullable<Boolean>)
  nameWithType: JobReleaseTask.JobReleaseTask(String, String, IList<ResourceFile>, IList<EnvironmentSetting>, Nullable<TimeSpan>, Nullable<TimeSpan>, Nullable<Boolean>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.JobReleaseTask(System.String, System.String, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ResourceFile>, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>, System.Nullable<System.TimeSpan>, System.Nullable<System.TimeSpan>, System.Nullable<System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobReleaseTask class.\n"
  example: []
  syntax:
    content: public JobReleaseTask(string commandLine, string id = null, IList<ResourceFile> resourceFiles = null, IList<EnvironmentSetting> environmentSettings = null, TimeSpan? maxWallClockTime = null, TimeSpan? retentionTime = null, bool ? runElevated = null)
    content.vb: Public Sub New(commandLine As String, id As String = Nothing, resourceFiles As IList(Of ResourceFile) = Nothing, environmentSettings As IList(Of EnvironmentSetting) = Nothing, maxWallClockTime As TimeSpan? = Nothing, retentionTime As TimeSpan? = Nothing, runElevated As Boolean? = Nothing)
    parameters:
    - id: commandLine
      type: System.String
      description: >-
        The command line of the Job Release

        task.
    - id: id
      type: System.String
      description: >-
        A string that uniquely identifies the Job Release

        task within the job.
    - id: resourceFiles
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
      description: >-
        A list of files that the Batch service

        will download to the compute node before running the command

        line.
    - id: environmentSettings
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
      description: >-
        A list of environment variable

        settings for the Job Release task.
    - id: maxWallClockTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        The maximum elapsed time that the

        Job Release task may run on a given compute node, measured from

        the time the task starts. If the task does not complete within

        the time limit, the Batch service terminates it. The default

        value is 15 minutes.
    - id: retentionTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        The minimum time to retain the working

        directory for the Job Release task on the compute node. After

        this time, the Batch service may delete the working directory and

        all its contents.
    - id: runElevated
      type: System.Nullable{System.Boolean}
      description: >-
        Whether to run the Job Release task in

        elevated mode.
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor*
  nameWithType.vb: JobReleaseTask.JobReleaseTask(String, String, IList(Of ResourceFile), IList(Of EnvironmentSetting), Nullable(Of TimeSpan), Nullable(Of TimeSpan), Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.JobReleaseTask(System.String, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ResourceFile), System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting), System.Nullable(Of System.TimeSpan), System.Nullable(Of System.TimeSpan), System.Nullable(Of System.Boolean))
  name.vb: JobReleaseTask(String, String, IList(Of ResourceFile), IList(Of EnvironmentSetting), Nullable(Of TimeSpan), Nullable(Of TimeSpan), Nullable(Of Boolean))
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Id
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Id
  id: Id
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: JobReleaseTask.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a string that uniquely identifies the Job Release\ntask within the job.\n"
  remarks: "\nThe id can contain any combination of alphanumeric characters\nincluding hyphens and underscores and cannot contain more than 64\ncharacters.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.CommandLine
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.CommandLine
  id: CommandLine
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  langs:
  - csharp
  - vb
  name: CommandLine
  nameWithType: JobReleaseTask.CommandLine
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.CommandLine
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommandLine
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the command line of the Job Release task.\n"
  remarks: "\nThe command line does not run under a shell, and therefore cannot\ntake advantage of shell features such as environment variable\nexpansion. If you want to take advantage of such features, you\nshould invoke the shell in the command line, for example using\n\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "commandLine")]

      public string CommandLine { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="commandLine")>

      Public Property CommandLine As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.CommandLine*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: commandLine
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.ResourceFiles
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.ResourceFiles
  id: ResourceFiles
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  langs:
  - csharp
  - vb
  name: ResourceFiles
  nameWithType: JobReleaseTask.ResourceFiles
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.ResourceFiles
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceFiles
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of files that the Batch service will download\nto the compute node before running the command line.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "resourceFiles")]

      public IList<ResourceFile> ResourceFiles { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="resourceFiles")>

      Public Property ResourceFiles As IList(Of ResourceFile)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.ResourceFiles*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: resourceFiles
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.EnvironmentSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.EnvironmentSettings
  id: EnvironmentSettings
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  langs:
  - csharp
  - vb
  name: EnvironmentSettings
  nameWithType: JobReleaseTask.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.EnvironmentSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of environment variable settings for the Job\nRelease task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "environmentSettings")]

      public IList<EnvironmentSetting> EnvironmentSettings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="environmentSettings")>

      Public Property EnvironmentSettings As IList(Of EnvironmentSetting)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.EnvironmentSettings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: environmentSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.MaxWallClockTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.MaxWallClockTime
  id: MaxWallClockTime
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  langs:
  - csharp
  - vb
  name: MaxWallClockTime
  nameWithType: JobReleaseTask.MaxWallClockTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.MaxWallClockTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxWallClockTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the maximum elapsed time that the Job Release task\nmay run on a given compute node, measured from the time the task\nstarts. If the task does not complete within the time limit, the\nBatch service terminates it. The default value is 15 minutes.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "maxWallClockTime")]

      public TimeSpan? MaxWallClockTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="maxWallClockTime")>

      Public Property MaxWallClockTime As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.MaxWallClockTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: maxWallClockTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RetentionTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RetentionTime
  id: RetentionTime
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  langs:
  - csharp
  - vb
  name: RetentionTime
  nameWithType: JobReleaseTask.RetentionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RetentionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RetentionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
    startLine: 124
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the minimum time to retain the working directory for\nthe Job Release task on the compute node. After this time, the\nBatch service may delete the working directory and all its\ncontents.\n"
  remarks: "\nThe default is infinite.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "retentionTime")]

      public TimeSpan? RetentionTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="retentionTime")>

      Public Property RetentionTime As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RetentionTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: retentionTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RunElevated
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RunElevated
  id: RunElevated
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  langs:
  - csharp
  - vb
  name: RunElevated
  nameWithType: JobReleaseTask.RunElevated
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RunElevated
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RunElevated
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether to run the Job Release task in elevated mode.\n"
  remarks: "\nThe default value is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "runElevated")]

      public bool ? RunElevated { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="runElevated")>

      Public Property RunElevated As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RunElevated*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: runElevated
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: JobReleaseTask.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobReleaseTask.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor
  isExternal: false
  name: JobReleaseTask
  nameWithType: JobReleaseTask.JobReleaseTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.JobReleaseTask
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ResourceFile>
  nameWithType: IList<ResourceFile>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ResourceFile>
  nameWithType.vb: IList(Of ResourceFile)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ResourceFile)
  name.vb: IList(Of ResourceFile)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EnvironmentSetting>
  nameWithType: IList<EnvironmentSetting>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>
  nameWithType.vb: IList(Of EnvironmentSetting)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting)
  name.vb: IList(Of EnvironmentSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Id*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Id
  isExternal: false
  name: Id
  nameWithType: JobReleaseTask.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Id
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.CommandLine*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.CommandLine
  isExternal: false
  name: CommandLine
  nameWithType: JobReleaseTask.CommandLine
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.CommandLine
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.ResourceFiles*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.ResourceFiles
  isExternal: false
  name: ResourceFiles
  nameWithType: JobReleaseTask.ResourceFiles
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.ResourceFiles
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.EnvironmentSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.EnvironmentSettings
  isExternal: false
  name: EnvironmentSettings
  nameWithType: JobReleaseTask.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.EnvironmentSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.MaxWallClockTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.MaxWallClockTime
  isExternal: false
  name: MaxWallClockTime
  nameWithType: JobReleaseTask.MaxWallClockTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.MaxWallClockTime
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RetentionTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RetentionTime
  isExternal: false
  name: RetentionTime
  nameWithType: JobReleaseTask.RetentionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RetentionTime
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RunElevated*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RunElevated
  isExternal: false
  name: RunElevated
  nameWithType: JobReleaseTask.RunElevated
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RunElevated
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Validate
  isExternal: false
  name: Validate
  nameWithType: JobReleaseTask.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Validate
