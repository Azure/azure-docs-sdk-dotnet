### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.BatchError
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.BatchError
  id: BatchError
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.ErrorMessage,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail})
  - Microsoft.Azure.Batch.Protocol.Models.BatchError.Code
  - Microsoft.Azure.Batch.Protocol.Models.BatchError.Message
  - Microsoft.Azure.Batch.Protocol.Models.BatchError.Values
  langs:
  - csharp
  - vb
  name: BatchError
  nameWithType: BatchError
  fullName: Microsoft.Azure.Batch.Protocol.Models.BatchError
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/BatchError.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BatchError
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/BatchError.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nAn error response received from the Azure Batch service.\n"
  example: []
  syntax:
    content: public class BatchError
    content.vb: Public Class BatchError
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.BatchError
  langs:
  - csharp
  - vb
  name: BatchError()
  nameWithType: BatchError.BatchError()
  fullName: Microsoft.Azure.Batch.Protocol.Models.BatchError.BatchError()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/BatchError.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/BatchError.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the BatchError class.\n"
  example: []
  syntax:
    content: public BatchError()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.ErrorMessage,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.ErrorMessage,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail})
  id: '#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.ErrorMessage,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail})'
  parent: Microsoft.Azure.Batch.Protocol.Models.BatchError
  langs:
  - csharp
  - vb
  name: BatchError(String, ErrorMessage, IList<BatchErrorDetail>)
  nameWithType: BatchError.BatchError(String, ErrorMessage, IList<BatchErrorDetail>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.BatchError.BatchError(System.String, Microsoft.Azure.Batch.Protocol.Models.ErrorMessage, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/BatchError.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/BatchError.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the BatchError class.\n"
  example: []
  syntax:
    content: public BatchError(string code = null, ErrorMessage message = null, IList<BatchErrorDetail> values = null)
    content.vb: Public Sub New(code As String = Nothing, message As ErrorMessage = Nothing, values As IList(Of BatchErrorDetail) = Nothing)
    parameters:
    - id: code
      type: System.String
      description: >-
        An identifier for the error. Codes are

        invariant and are intended to be consumed

        programmatically.
    - id: message
      type: Microsoft.Azure.Batch.Protocol.Models.ErrorMessage
      description: >-
        A message describing the error, intended to

        be suitable for display in a user interface.
    - id: values
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail}
      description: >-
        A collection of key-value pairs containing

        additional details about the error.
  overload: Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor*
  nameWithType.vb: BatchError.BatchError(String, ErrorMessage, IList(Of BatchErrorDetail))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.BatchError.BatchError(System.String, Microsoft.Azure.Batch.Protocol.Models.ErrorMessage, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail))
  name.vb: BatchError(String, ErrorMessage, IList(Of BatchErrorDetail))
- uid: Microsoft.Azure.Batch.Protocol.Models.BatchError.Code
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.BatchError.Code
  id: Code
  parent: Microsoft.Azure.Batch.Protocol.Models.BatchError
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: BatchError.Code
  fullName: Microsoft.Azure.Batch.Protocol.Models.BatchError.Code
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/BatchError.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Code
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/BatchError.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets an identifier for the error. Codes are invariant and\nare intended to be consumed programmatically.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "code")]

      public string Code { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="code")>

      Public Property Code As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.BatchError.Code*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: code
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.BatchError.Message
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.BatchError.Message
  id: Message
  parent: Microsoft.Azure.Batch.Protocol.Models.BatchError
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: BatchError.Message
  fullName: Microsoft.Azure.Batch.Protocol.Models.BatchError.Message
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/BatchError.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Message
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/BatchError.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a message describing the error, intended to be\nsuitable for display in a user interface.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "message")]

      public ErrorMessage Message { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="message")>

      Public Property Message As ErrorMessage
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.ErrorMessage
  overload: Microsoft.Azure.Batch.Protocol.Models.BatchError.Message*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: message
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.BatchError.Values
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.BatchError.Values
  id: Values
  parent: Microsoft.Azure.Batch.Protocol.Models.BatchError
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: BatchError.Values
  fullName: Microsoft.Azure.Batch.Protocol.Models.BatchError.Values
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/BatchError.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Values
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/BatchError.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a collection of key-value pairs containing additional\ndetails about the error.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "values")]

      public IList<BatchErrorDetail> Values { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="values")>

      Public Property Values As IList(Of BatchErrorDetail)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail}
  overload: Microsoft.Azure.Batch.Protocol.Models.BatchError.Values*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: values
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor
  isExternal: false
  name: BatchError
  nameWithType: BatchError.BatchError
  fullName: Microsoft.Azure.Batch.Protocol.Models.BatchError.BatchError
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.Models.ErrorMessage
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: ErrorMessage
  nameWithType: ErrorMessage
  fullName: Microsoft.Azure.Batch.Protocol.Models.ErrorMessage
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<BatchErrorDetail>
  nameWithType: IList<BatchErrorDetail>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail>
  nameWithType.vb: IList(Of BatchErrorDetail)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail)
  name.vb: IList(Of BatchErrorDetail)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail
    name: BatchErrorDetail
    nameWithType: BatchErrorDetail
    fullName: Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail
    name: BatchErrorDetail
    nameWithType: BatchErrorDetail
    fullName: Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.Protocol.Models.BatchError.Code*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.BatchError.Code
  isExternal: false
  name: Code
  nameWithType: BatchError.Code
  fullName: Microsoft.Azure.Batch.Protocol.Models.BatchError.Code
- uid: Microsoft.Azure.Batch.Protocol.Models.BatchError.Message*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.BatchError.Message
  isExternal: false
  name: Message
  nameWithType: BatchError.Message
  fullName: Microsoft.Azure.Batch.Protocol.Models.BatchError.Message
- uid: Microsoft.Azure.Batch.Protocol.Models.BatchError.Values*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.BatchError.Values
  isExternal: false
  name: Values
  nameWithType: BatchError.Values
  fullName: Microsoft.Azure.Batch.Protocol.Models.BatchError.Values
