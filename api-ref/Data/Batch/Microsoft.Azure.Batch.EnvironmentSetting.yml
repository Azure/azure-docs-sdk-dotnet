### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.EnvironmentSetting
  commentId: T:Microsoft.Azure.Batch.EnvironmentSetting
  id: EnvironmentSetting
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.EnvironmentSetting.#ctor(System.String,System.String)
  - Microsoft.Azure.Batch.EnvironmentSetting.Name
  - Microsoft.Azure.Batch.EnvironmentSetting.Value
  langs:
  - csharp
  - vb
  name: EnvironmentSetting
  nameWithType: EnvironmentSetting
  fullName: Microsoft.Azure.Batch.EnvironmentSetting
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/EnvironmentSetting.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentSetting
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/EnvironmentSetting.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nAn environment variable to be set on a task process, such as a job task, start task, job manager task, or job preparation \nor release task.\n"
  example: []
  syntax:
    content: 'public class EnvironmentSetting : ITransportObjectProvider<EnvironmentSetting>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class EnvironmentSetting
          Implements ITransportObjectProvider(Of EnvironmentSetting), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.EnvironmentSetting.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.Batch.EnvironmentSetting.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.Batch.EnvironmentSetting
  langs:
  - csharp
  - vb
  name: EnvironmentSetting(String, String)
  nameWithType: EnvironmentSetting.EnvironmentSetting(String, String)
  fullName: Microsoft.Azure.Batch.EnvironmentSetting.EnvironmentSetting(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/EnvironmentSetting.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/EnvironmentSetting.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.EnvironmentSetting\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public EnvironmentSetting(string name, string value)
    content.vb: Public Sub New(name As String, value As String)
    parameters:
    - id: name
      type: System.String
      description: The name of the environment variable.
    - id: value
      type: System.String
      description: The value of the environment variable.
  overload: Microsoft.Azure.Batch.EnvironmentSetting.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.EnvironmentSetting.Name
  commentId: P:Microsoft.Azure.Batch.EnvironmentSetting.Name
  id: Name
  parent: Microsoft.Azure.Batch.EnvironmentSetting
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EnvironmentSetting.Name
  fullName: Microsoft.Azure.Batch.EnvironmentSetting.Name
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/EnvironmentSetting.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/EnvironmentSetting.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the name of the environment variable.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.EnvironmentSetting.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.EnvironmentSetting.Value
  commentId: P:Microsoft.Azure.Batch.EnvironmentSetting.Value
  id: Value
  parent: Microsoft.Azure.Batch.EnvironmentSetting
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: EnvironmentSetting.Value
  fullName: Microsoft.Azure.Batch.EnvironmentSetting.Value
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/EnvironmentSetting.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Value
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/EnvironmentSetting.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the value of the environment variable.\n"
  example: []
  syntax:
    content: public string Value { get; }
    content.vb: Public ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.EnvironmentSetting.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.EnvironmentSetting
  commentId: T:Microsoft.Azure.Batch.EnvironmentSetting
  isExternal: false
  name: EnvironmentSetting
  nameWithType: EnvironmentSetting
  fullName: Microsoft.Azure.Batch.EnvironmentSetting
- uid: Microsoft.Azure.Batch.EnvironmentSetting.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.EnvironmentSetting.#ctor
  isExternal: false
  name: EnvironmentSetting
  nameWithType: EnvironmentSetting.EnvironmentSetting
  fullName: Microsoft.Azure.Batch.EnvironmentSetting.EnvironmentSetting
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.EnvironmentSetting.Name*
  commentId: Overload:Microsoft.Azure.Batch.EnvironmentSetting.Name
  isExternal: false
  name: Name
  nameWithType: EnvironmentSetting.Name
  fullName: Microsoft.Azure.Batch.EnvironmentSetting.Name
- uid: Microsoft.Azure.Batch.EnvironmentSetting.Value*
  commentId: Overload:Microsoft.Azure.Batch.EnvironmentSetting.Value
  isExternal: false
  name: Value
  nameWithType: EnvironmentSetting.Value
  fullName: Microsoft.Azure.Batch.EnvironmentSetting.Value
