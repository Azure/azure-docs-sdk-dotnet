### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  id: CertificateAddParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateFormat},System.String)
  - Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateFormat
  - Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Data
  - Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Password
  - Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Thumbprint
  - Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.ThumbprintAlgorithm
  - Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Validate
  langs:
  - csharp
  - vb
  name: CertificateAddParameter
  nameWithType: CertificateAddParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateAddParameter
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nA certificate that can be installed on compute nodes and can be used\nto authenticate operations on the machine.\n"
  example: []
  syntax:
    content: public class CertificateAddParameter
    content.vb: Public Class CertificateAddParameter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  langs:
  - csharp
  - vb
  name: CertificateAddParameter()
  nameWithType: CertificateAddParameter.CertificateAddParameter()
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateAddParameter()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the CertificateAddParameter class.\n"
  example: []
  syntax:
    content: public CertificateAddParameter()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateFormat},System.String)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateFormat},System.String)
  id: '#ctor(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateFormat},System.String)'
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  langs:
  - csharp
  - vb
  name: CertificateAddParameter(String, String, String, Nullable<CertificateFormat>, String)
  nameWithType: CertificateAddParameter.CertificateAddParameter(String, String, String, Nullable<CertificateFormat>, String)
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateAddParameter(System.String, System.String, System.String, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.CertificateFormat>, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the CertificateAddParameter class.\n"
  example: []
  syntax:
    content: public CertificateAddParameter(string thumbprint, string thumbprintAlgorithm, string data, CertificateFormat? certificateFormat = null, string password = null)
    content.vb: Public Sub New(thumbprint As String, thumbprintAlgorithm As String, data As String, certificateFormat As CertificateFormat? = Nothing, password As String = Nothing)
    parameters:
    - id: thumbprint
      type: System.String
      description: >-
        The X.509 thumbprint of the certificate.

        This is a sequence of up to 40 hex digits (it may include spaces

        but these are removed).
    - id: thumbprintAlgorithm
      type: System.String
      description: >-
        The algorithm used to derive the

        thumbprint. This must be sha1.
    - id: data
      type: System.String
      description: >-
        The base64-encoded contents of the certificate.

        The maximum size is 10KB.
    - id: certificateFormat
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateFormat}
      description: >-
        The format of the certificate

        data.
    - id: password
      type: System.String
      description: >-
        The password to access the certificate's

        private key.
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor*
  nameWithType.vb: CertificateAddParameter.CertificateAddParameter(String, String, String, Nullable(Of CertificateFormat), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateAddParameter(System.String, System.String, System.String, System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.CertificateFormat), System.String)
  name.vb: CertificateAddParameter(String, String, String, Nullable(Of CertificateFormat), String)
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Thumbprint
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Thumbprint
  id: Thumbprint
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  langs:
  - csharp
  - vb
  name: Thumbprint
  nameWithType: CertificateAddParameter.Thumbprint
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Thumbprint
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Thumbprint
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the X.509 thumbprint of the certificate. This is a\nsequence of up to 40 hex digits (it may include spaces but these\nare removed).\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "thumbprint")]

      public string Thumbprint { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="thumbprint")>

      Public Property Thumbprint As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Thumbprint*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: thumbprint
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.ThumbprintAlgorithm
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.ThumbprintAlgorithm
  id: ThumbprintAlgorithm
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  langs:
  - csharp
  - vb
  name: ThumbprintAlgorithm
  nameWithType: CertificateAddParameter.ThumbprintAlgorithm
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.ThumbprintAlgorithm
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ThumbprintAlgorithm
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the algorithm used to derive the thumbprint. This\nmust be sha1.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "thumbprintAlgorithm")]

      public string ThumbprintAlgorithm { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="thumbprintAlgorithm")>

      Public Property ThumbprintAlgorithm As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.ThumbprintAlgorithm*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: thumbprintAlgorithm
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Data
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Data
  id: Data
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: CertificateAddParameter.Data
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Data
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Data
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the base64-encoded contents of the certificate. The\nmaximum size is 10KB.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "data")]

      public string Data { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="data")>

      Public Property Data As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Data*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: data
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateFormat
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateFormat
  id: CertificateFormat
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  langs:
  - csharp
  - vb
  name: CertificateFormat
  nameWithType: CertificateAddParameter.CertificateFormat
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateFormat
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateFormat
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the format of the certificate data.\n"
  remarks: "\nPossible values include: 'pfx', 'cer', 'unmapped'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "certificateFormat")]

      public CertificateFormat? CertificateFormat { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="certificateFormat")>

      Public Property CertificateFormat As CertificateFormat?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateFormat}
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateFormat*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: certificateFormat
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Password
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Password
  id: Password
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: CertificateAddParameter.Password
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Password
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Password
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the password to access the certificate's private key.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "password")]

      public string Password { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="password")>

      Public Property Password As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Password*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: password
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CertificateAddParameter.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CertificateAddParameter.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor
  isExternal: false
  name: CertificateAddParameter
  nameWithType: CertificateAddParameter.CertificateAddParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateAddParameter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateFormat}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateFormat}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CertificateFormat>
  nameWithType: Nullable<CertificateFormat>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.CertificateFormat>
  nameWithType.vb: Nullable(Of CertificateFormat)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.CertificateFormat)
  name.vb: Nullable(Of CertificateFormat)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateFormat
    name: CertificateFormat
    nameWithType: CertificateFormat
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateFormat
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateFormat
    name: CertificateFormat
    nameWithType: CertificateFormat
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Thumbprint*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Thumbprint
  isExternal: false
  name: Thumbprint
  nameWithType: CertificateAddParameter.Thumbprint
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Thumbprint
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.ThumbprintAlgorithm*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.ThumbprintAlgorithm
  isExternal: false
  name: ThumbprintAlgorithm
  nameWithType: CertificateAddParameter.ThumbprintAlgorithm
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.ThumbprintAlgorithm
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Data*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Data
  isExternal: false
  name: Data
  nameWithType: CertificateAddParameter.Data
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Data
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateFormat*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateFormat
  isExternal: false
  name: CertificateFormat
  nameWithType: CertificateAddParameter.CertificateFormat
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateFormat
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Password*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Password
  isExternal: false
  name: Password
  nameWithType: CertificateAddParameter.Password
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Password
- uid: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Validate
  isExternal: false
  name: Validate
  nameWithType: CertificateAddParameter.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Validate
