### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount
  commentId: T:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount
  id: StagingStorageAccount
  parent: Microsoft.Azure.Batch.FileStaging
  children:
  - Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.#ctor(System.String,System.String,System.String)
  - Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.BlobEndpoint
  - Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccount
  - Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccountKey
  langs:
  - csharp
  - vb
  name: StagingStorageAccount
  nameWithType: StagingStorageAccount
  fullName: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/StagingStorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StagingStorageAccount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/StagingStorageAccount.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nHolds storage account information.\n"
  example: []
  syntax:
    content: public class StagingStorageAccount
    content.vb: Public Class StagingStorageAccount
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccount
  commentId: P:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccount
  id: StorageAccount
  parent: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount
  langs:
  - csharp
  - vb
  name: StorageAccount
  nameWithType: StagingStorageAccount.StorageAccount
  fullName: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccount
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/StagingStorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageAccount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/StagingStorageAccount.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nSpecifies the storage account to be used.\n"
  example: []
  syntax:
    content: public string StorageAccount { get; }
    content.vb: Public ReadOnly Property StorageAccount As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccountKey
  commentId: P:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccountKey
  id: StorageAccountKey
  parent: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount
  langs:
  - csharp
  - vb
  name: StorageAccountKey
  nameWithType: StagingStorageAccount.StorageAccountKey
  fullName: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccountKey
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/StagingStorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageAccountKey
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/StagingStorageAccount.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nSpecifies the storage account key to be used.\n"
  example: []
  syntax:
    content: public string StorageAccountKey { get; }
    content.vb: Public ReadOnly Property StorageAccountKey As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccountKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.BlobEndpoint
  commentId: P:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.BlobEndpoint
  id: BlobEndpoint
  parent: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount
  langs:
  - csharp
  - vb
  name: BlobEndpoint
  nameWithType: StagingStorageAccount.BlobEndpoint
  fullName: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.BlobEndpoint
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/StagingStorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BlobEndpoint
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/StagingStorageAccount.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nThe serviced endpoint for blob storage.\n"
  example: []
  syntax:
    content: public string BlobEndpoint { get; }
    content.vb: Public ReadOnly Property BlobEndpoint As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.BlobEndpoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount
  langs:
  - csharp
  - vb
  name: StagingStorageAccount(String, String, String)
  nameWithType: StagingStorageAccount.StagingStorageAccount(String, String, String)
  fullName: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StagingStorageAccount(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/StagingStorageAccount.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/StagingStorageAccount.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nInitializes a new instance of the StagingStorageAccount class using the specified credentials and service endpoint.\n"
  example: []
  syntax:
    content: public StagingStorageAccount(string storageAccount, string storageAccountKey, string blobEndpoint)
    content.vb: Public Sub New(storageAccount As String, storageAccountKey As String, blobEndpoint As String)
    parameters:
    - id: storageAccount
      type: System.String
      description: A string specifying the storage account to be used.
    - id: storageAccountKey
      type: System.String
      description: A string specifying the storage account key to be used.
    - id: blobEndpoint
      type: System.String
      description: A string specifying the primary Blob service endpoint.
  overload: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.FileStaging
  commentId: N:Microsoft.Azure.Batch.FileStaging
  isExternal: false
  name: Microsoft.Azure.Batch.FileStaging
  nameWithType: Microsoft.Azure.Batch.FileStaging
  fullName: Microsoft.Azure.Batch.FileStaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccount*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccount
  isExternal: false
  name: StorageAccount
  nameWithType: StagingStorageAccount.StorageAccount
  fullName: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccount
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccountKey*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccountKey
  isExternal: false
  name: StorageAccountKey
  nameWithType: StagingStorageAccount.StorageAccountKey
  fullName: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccountKey
- uid: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.BlobEndpoint*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.BlobEndpoint
  isExternal: false
  name: BlobEndpoint
  nameWithType: StagingStorageAccount.BlobEndpoint
  fullName: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.BlobEndpoint
- uid: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.#ctor
  isExternal: false
  name: StagingStorageAccount
  nameWithType: StagingStorageAccount.StagingStorageAccount
  fullName: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StagingStorageAccount
