### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.ImageReference
  commentId: T:Microsoft.Azure.Batch.ImageReference
  id: ImageReference
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.ImageReference.#ctor(System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Batch.ImageReference.Offer
  - Microsoft.Azure.Batch.ImageReference.Publisher
  - Microsoft.Azure.Batch.ImageReference.Sku
  - Microsoft.Azure.Batch.ImageReference.SkuId
  - Microsoft.Azure.Batch.ImageReference.Version
  langs:
  - csharp
  - vb
  name: ImageReference
  nameWithType: ImageReference
  fullName: Microsoft.Azure.Batch.ImageReference
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ImageReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImageReference
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ImageReference.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nA reference to an Azure Virtual Machines Marketplace image. To retrieve a list of images supported by the Batch service, \nsee <xref href=\"Microsoft.Azure.Batch.PoolOperations.ListNodeAgentSkus(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class ImageReference : ITransportObjectProvider<ImageReference>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class ImageReference
          Implements ITransportObjectProvider(Of ImageReference), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.ImageReference.SkuId
  commentId: P:Microsoft.Azure.Batch.ImageReference.SkuId
  id: SkuId
  parent: Microsoft.Azure.Batch.ImageReference
  langs:
  - csharp
  - vb
  name: SkuId
  nameWithType: ImageReference.SkuId
  fullName: Microsoft.Azure.Batch.ImageReference.SkuId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/ImageReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SkuId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ImageReference.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the sku of the image.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Sku instead.")]

      public string SkuId { get; }
    content.vb: >-
      <Obsolete("Use Sku instead.")>

      Public ReadOnly Property SkuId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ImageReference.SkuId*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Sku instead.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ImageReference.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Batch.ImageReference.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Batch.ImageReference
  langs:
  - csharp
  - vb
  name: ImageReference(String, String, String, String)
  nameWithType: ImageReference.ImageReference(String, String, String, String)
  fullName: Microsoft.Azure.Batch.ImageReference.ImageReference(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ImageReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ImageReference.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.ImageReference\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ImageReference(string offer, string publisher, string sku, string version = null)
    content.vb: Public Sub New(offer As String, publisher As String, sku As String, version As String = Nothing)
    parameters:
    - id: offer
      type: System.String
      description: The offer type of the Azure Virtual Machines Marketplace image.
    - id: publisher
      type: System.String
      description: The publisher of the Azure Virtual Machines Marketplace image.
    - id: sku
      type: System.String
      description: The SKU of the Azure Virtual Machines Marketplace image.
    - id: version
      type: System.String
      description: The version of the Azure Virtual Machines Marketplace image.
  overload: Microsoft.Azure.Batch.ImageReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ImageReference.Offer
  commentId: P:Microsoft.Azure.Batch.ImageReference.Offer
  id: Offer
  parent: Microsoft.Azure.Batch.ImageReference
  langs:
  - csharp
  - vb
  name: Offer
  nameWithType: ImageReference.Offer
  fullName: Microsoft.Azure.Batch.ImageReference.Offer
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ImageReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Offer
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ImageReference.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the offer type of the Azure Virtual Machines Marketplace image.\n"
  remarks: "\nFor example, UbuntuServer or WindowsServer.\n"
  example: []
  syntax:
    content: public string Offer { get; }
    content.vb: Public ReadOnly Property Offer As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ImageReference.Offer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ImageReference.Publisher
  commentId: P:Microsoft.Azure.Batch.ImageReference.Publisher
  id: Publisher
  parent: Microsoft.Azure.Batch.ImageReference
  langs:
  - csharp
  - vb
  name: Publisher
  nameWithType: ImageReference.Publisher
  fullName: Microsoft.Azure.Batch.ImageReference.Publisher
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ImageReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Publisher
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ImageReference.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the publisher of the Azure Virtual Machines Marketplace image.\n"
  remarks: "\nFor example, Canonical or MicrosoftWindowsServer.\n"
  example: []
  syntax:
    content: public string Publisher { get; }
    content.vb: Public ReadOnly Property Publisher As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ImageReference.Publisher*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ImageReference.Sku
  commentId: P:Microsoft.Azure.Batch.ImageReference.Sku
  id: Sku
  parent: Microsoft.Azure.Batch.ImageReference
  langs:
  - csharp
  - vb
  name: Sku
  nameWithType: ImageReference.Sku
  fullName: Microsoft.Azure.Batch.ImageReference.Sku
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ImageReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Sku
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ImageReference.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the SKU of the Azure Virtual Machines Marketplace image.\n"
  remarks: "\nFor example, 14.04.0-LTS or 2012-R2-Datacenter.\n"
  example: []
  syntax:
    content: public string Sku { get; }
    content.vb: Public ReadOnly Property Sku As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ImageReference.Sku*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.ImageReference.Version
  commentId: P:Microsoft.Azure.Batch.ImageReference.Version
  id: Version
  parent: Microsoft.Azure.Batch.ImageReference
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ImageReference.Version
  fullName: Microsoft.Azure.Batch.ImageReference.Version
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/ImageReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Version
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/ImageReference.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the version of the Azure Virtual Machines Marketplace image.\n"
  remarks: "\nIf this property is not specified, it defaults to 'latest', which is the latest version of the image.\n"
  example: []
  syntax:
    content: public string Version { get; }
    content.vb: Public ReadOnly Property Version As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ImageReference.Version*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch.PoolOperations.ListNodeAgentSkus(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.PoolOperations.ListNodeAgentSkus(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences
  commentId: P:Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.ImageReference.SkuId*
  commentId: Overload:Microsoft.Azure.Batch.ImageReference.SkuId
  isExternal: false
  name: SkuId
  nameWithType: ImageReference.SkuId
  fullName: Microsoft.Azure.Batch.ImageReference.SkuId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.ImageReference
  commentId: T:Microsoft.Azure.Batch.ImageReference
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ImageReference
  nameWithType: ImageReference
  fullName: Microsoft.Azure.Batch.ImageReference
- uid: Microsoft.Azure.Batch.ImageReference.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.ImageReference.#ctor
  isExternal: false
  name: ImageReference
  nameWithType: ImageReference.ImageReference
  fullName: Microsoft.Azure.Batch.ImageReference.ImageReference
- uid: Microsoft.Azure.Batch.ImageReference.Offer*
  commentId: Overload:Microsoft.Azure.Batch.ImageReference.Offer
  isExternal: false
  name: Offer
  nameWithType: ImageReference.Offer
  fullName: Microsoft.Azure.Batch.ImageReference.Offer
- uid: Microsoft.Azure.Batch.ImageReference.Publisher*
  commentId: Overload:Microsoft.Azure.Batch.ImageReference.Publisher
  isExternal: false
  name: Publisher
  nameWithType: ImageReference.Publisher
  fullName: Microsoft.Azure.Batch.ImageReference.Publisher
- uid: Microsoft.Azure.Batch.ImageReference.Sku*
  commentId: Overload:Microsoft.Azure.Batch.ImageReference.Sku
  isExternal: false
  name: Sku
  nameWithType: ImageReference.Sku
  fullName: Microsoft.Azure.Batch.ImageReference.Sku
- uid: Microsoft.Azure.Batch.ImageReference.Version*
  commentId: Overload:Microsoft.Azure.Batch.ImageReference.Version
  isExternal: false
  name: Version
  nameWithType: ImageReference.Version
  fullName: Microsoft.Azure.Batch.ImageReference.Version
