### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.CertificateReference
  commentId: T:Microsoft.Azure.Batch.CertificateReference
  id: CertificateReference
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.CertificateReference.#ctor
  - Microsoft.Azure.Batch.CertificateReference.#ctor(Microsoft.Azure.Batch.Certificate)
  - Microsoft.Azure.Batch.CertificateReference.StoreLocation
  - Microsoft.Azure.Batch.CertificateReference.StoreName
  - Microsoft.Azure.Batch.CertificateReference.Thumbprint
  - Microsoft.Azure.Batch.CertificateReference.ThumbprintAlgorithm
  - Microsoft.Azure.Batch.CertificateReference.Visibility
  langs:
  - csharp
  - vb
  name: CertificateReference
  nameWithType: CertificateReference
  fullName: Microsoft.Azure.Batch.CertificateReference
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateReference
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CertificateReference.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRepresents a certificate object of the Azure Batch service.\n"
  example: []
  syntax:
    content: 'public class CertificateReference : ITransportObjectProvider<CertificateReference>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class CertificateReference
          Implements ITransportObjectProvider(Of CertificateReference), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.CertificateReference.#ctor(Microsoft.Azure.Batch.Certificate)
  commentId: M:Microsoft.Azure.Batch.CertificateReference.#ctor(Microsoft.Azure.Batch.Certificate)
  id: '#ctor(Microsoft.Azure.Batch.Certificate)'
  parent: Microsoft.Azure.Batch.CertificateReference
  langs:
  - csharp
  - vb
  name: CertificateReference(Certificate)
  nameWithType: CertificateReference.CertificateReference(Certificate)
  fullName: Microsoft.Azure.Batch.CertificateReference.CertificateReference(Microsoft.Azure.Batch.Certificate)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CertificateReference.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInstantiates an instance of CertificateReference with default property values.  \nValues for the Thumbprint and ThumbprintAlgorithm properties are taken from the provided base certificate.\n"
  example: []
  syntax:
    content: public CertificateReference(Certificate baseCertificate)
    content.vb: Public Sub New(baseCertificate As Certificate)
    parameters:
    - id: baseCertificate
      type: Microsoft.Azure.Batch.Certificate
      description: Provides initial values for the CertificateReference properties Thumbprint and ThumbprintAlgorithm.
  overload: Microsoft.Azure.Batch.CertificateReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CertificateReference.#ctor
  commentId: M:Microsoft.Azure.Batch.CertificateReference.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.CertificateReference
  langs:
  - csharp
  - vb
  name: CertificateReference()
  nameWithType: CertificateReference.CertificateReference()
  fullName: Microsoft.Azure.Batch.CertificateReference.CertificateReference()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CertificateReference.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.CertificateReference\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CertificateReference()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.CertificateReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CertificateReference.StoreLocation
  commentId: P:Microsoft.Azure.Batch.CertificateReference.StoreLocation
  id: StoreLocation
  parent: Microsoft.Azure.Batch.CertificateReference
  langs:
  - csharp
  - vb
  name: StoreLocation
  nameWithType: CertificateReference.StoreLocation
  fullName: Microsoft.Azure.Batch.CertificateReference.StoreLocation
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StoreLocation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CertificateReference.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the <xref href=\"Microsoft.Azure.Batch.Common.CertStoreLocation\" data-throw-if-not-resolved=\"false\"></xref> for the certificate.\n"
  example: []
  syntax:
    content: public CertStoreLocation? StoreLocation { get; set; }
    content.vb: Public Property StoreLocation As CertStoreLocation?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.CertStoreLocation}
  overload: Microsoft.Azure.Batch.CertificateReference.StoreLocation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CertificateReference.StoreName
  commentId: P:Microsoft.Azure.Batch.CertificateReference.StoreName
  id: StoreName
  parent: Microsoft.Azure.Batch.CertificateReference
  langs:
  - csharp
  - vb
  name: StoreName
  nameWithType: CertificateReference.StoreName
  fullName: Microsoft.Azure.Batch.CertificateReference.StoreName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StoreName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CertificateReference.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the name of the name of the certificate store. Besides <xref href=\"System.Security.Cryptography.X509Certificates.StoreName\" data-throw-if-not-resolved=\"false\"></xref> \nthe value can have a custom store name.\n"
  example: []
  syntax:
    content: public string StoreName { get; set; }
    content.vb: Public Property StoreName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CertificateReference.StoreName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CertificateReference.Thumbprint
  commentId: P:Microsoft.Azure.Batch.CertificateReference.Thumbprint
  id: Thumbprint
  parent: Microsoft.Azure.Batch.CertificateReference
  langs:
  - csharp
  - vb
  name: Thumbprint
  nameWithType: CertificateReference.Thumbprint
  fullName: Microsoft.Azure.Batch.CertificateReference.Thumbprint
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Thumbprint
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CertificateReference.cs
    startLine: 120
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the certificate thumbprint property of the certificate.\n"
  example: []
  syntax:
    content: public string Thumbprint { get; set; }
    content.vb: Public Property Thumbprint As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CertificateReference.Thumbprint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CertificateReference.ThumbprintAlgorithm
  commentId: P:Microsoft.Azure.Batch.CertificateReference.ThumbprintAlgorithm
  id: ThumbprintAlgorithm
  parent: Microsoft.Azure.Batch.CertificateReference
  langs:
  - csharp
  - vb
  name: ThumbprintAlgorithm
  nameWithType: CertificateReference.ThumbprintAlgorithm
  fullName: Microsoft.Azure.Batch.CertificateReference.ThumbprintAlgorithm
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ThumbprintAlgorithm
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CertificateReference.cs
    startLine: 129
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the certificate thumbprint algorithm. Currently sha1 is the only supported algorithm.\n"
  example: []
  syntax:
    content: public string ThumbprintAlgorithm { get; set; }
    content.vb: Public Property ThumbprintAlgorithm As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CertificateReference.ThumbprintAlgorithm*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CertificateReference.Visibility
  commentId: P:Microsoft.Azure.Batch.CertificateReference.Visibility
  id: Visibility
  parent: Microsoft.Azure.Batch.CertificateReference
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: CertificateReference.Visibility
  fullName: Microsoft.Azure.Batch.CertificateReference.Visibility
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CertificateReference.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Visibility
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CertificateReference.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the set of users that can get to the private data of the installed certificate. \n"
  example: []
  syntax:
    content: public CertificateVisibility? Visibility { get; set; }
    content.vb: Public Property Visibility As CertificateVisibility?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.CertificateVisibility}
  overload: Microsoft.Azure.Batch.CertificateReference.Visibility*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.CertificateReference.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.CertificateReference.#ctor
  isExternal: false
  name: CertificateReference
  nameWithType: CertificateReference.CertificateReference
  fullName: Microsoft.Azure.Batch.CertificateReference.CertificateReference
- uid: Microsoft.Azure.Batch.Certificate
  commentId: T:Microsoft.Azure.Batch.Certificate
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: Certificate
  nameWithType: Certificate
  fullName: Microsoft.Azure.Batch.Certificate
- uid: Microsoft.Azure.Batch.CertificateReference
  commentId: T:Microsoft.Azure.Batch.CertificateReference
  isExternal: false
  name: CertificateReference
  nameWithType: CertificateReference
  fullName: Microsoft.Azure.Batch.CertificateReference
- uid: Microsoft.Azure.Batch.Common.CertStoreLocation
  commentId: T:Microsoft.Azure.Batch.Common.CertStoreLocation
  parent: Microsoft.Azure.Batch.Common
  isExternal: false
  name: CertStoreLocation
  nameWithType: CertStoreLocation
  fullName: Microsoft.Azure.Batch.Common.CertStoreLocation
- uid: Microsoft.Azure.Batch.CertificateReference.StoreLocation*
  commentId: Overload:Microsoft.Azure.Batch.CertificateReference.StoreLocation
  isExternal: false
  name: StoreLocation
  nameWithType: CertificateReference.StoreLocation
  fullName: Microsoft.Azure.Batch.CertificateReference.StoreLocation
- uid: System.Nullable{Microsoft.Azure.Batch.Common.CertStoreLocation}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.CertStoreLocation}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CertStoreLocation>
  nameWithType: Nullable<CertStoreLocation>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.CertStoreLocation>
  nameWithType.vb: Nullable(Of CertStoreLocation)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.CertStoreLocation)
  name.vb: Nullable(Of CertStoreLocation)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.CertStoreLocation
    name: CertStoreLocation
    nameWithType: CertStoreLocation
    fullName: Microsoft.Azure.Batch.Common.CertStoreLocation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.CertStoreLocation
    name: CertStoreLocation
    nameWithType: CertStoreLocation
    fullName: Microsoft.Azure.Batch.Common.CertStoreLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Common
  commentId: N:Microsoft.Azure.Batch.Common
  isExternal: false
  name: Microsoft.Azure.Batch.Common
  nameWithType: Microsoft.Azure.Batch.Common
  fullName: Microsoft.Azure.Batch.Common
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.StoreName
  commentId: T:System.Security.Cryptography.X509Certificates.StoreName
- uid: Microsoft.Azure.Batch.CertificateReference.StoreName*
  commentId: Overload:Microsoft.Azure.Batch.CertificateReference.StoreName
  isExternal: false
  name: StoreName
  nameWithType: CertificateReference.StoreName
  fullName: Microsoft.Azure.Batch.CertificateReference.StoreName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.CertificateReference.Thumbprint*
  commentId: Overload:Microsoft.Azure.Batch.CertificateReference.Thumbprint
  isExternal: false
  name: Thumbprint
  nameWithType: CertificateReference.Thumbprint
  fullName: Microsoft.Azure.Batch.CertificateReference.Thumbprint
- uid: Microsoft.Azure.Batch.CertificateReference.ThumbprintAlgorithm*
  commentId: Overload:Microsoft.Azure.Batch.CertificateReference.ThumbprintAlgorithm
  isExternal: false
  name: ThumbprintAlgorithm
  nameWithType: CertificateReference.ThumbprintAlgorithm
  fullName: Microsoft.Azure.Batch.CertificateReference.ThumbprintAlgorithm
- uid: Microsoft.Azure.Batch.CertificateReference.Visibility*
  commentId: Overload:Microsoft.Azure.Batch.CertificateReference.Visibility
  isExternal: false
  name: Visibility
  nameWithType: CertificateReference.Visibility
  fullName: Microsoft.Azure.Batch.CertificateReference.Visibility
- uid: System.Nullable{Microsoft.Azure.Batch.Common.CertificateVisibility}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.CertificateVisibility}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CertificateVisibility>
  nameWithType: Nullable<CertificateVisibility>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.CertificateVisibility>
  nameWithType.vb: Nullable(Of CertificateVisibility)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.CertificateVisibility)
  name.vb: Nullable(Of CertificateVisibility)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.CertificateVisibility
    name: CertificateVisibility
    nameWithType: CertificateVisibility
    fullName: Microsoft.Azure.Batch.Common.CertificateVisibility
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.CertificateVisibility
    name: CertificateVisibility
    nameWithType: CertificateVisibility
    fullName: Microsoft.Azure.Batch.Common.CertificateVisibility
  - name: )
    nameWithType: )
    fullName: )
