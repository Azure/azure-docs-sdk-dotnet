### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.BatchError
  commentId: T:Microsoft.Azure.Batch.BatchError
  id: BatchError
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.BatchError.Code
  - Microsoft.Azure.Batch.BatchError.Message
  - Microsoft.Azure.Batch.BatchError.Values
  langs:
  - csharp
  - vb
  name: BatchError
  nameWithType: BatchError
  fullName: Microsoft.Azure.Batch.BatchError
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/BatchError.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BatchError
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/BatchError.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nAn error received from the Azure Batch service.\n"
  example: []
  syntax:
    content: 'public class BatchError : IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class BatchError
          Implements IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.BatchError.Code
  commentId: P:Microsoft.Azure.Batch.BatchError.Code
  id: Code
  parent: Microsoft.Azure.Batch.BatchError
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: BatchError.Code
  fullName: Microsoft.Azure.Batch.BatchError.Code
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/BatchError.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Code
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/BatchError.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets a code for the error. See <xref href=\"Microsoft.Azure.Batch.Common.BatchErrorCodeStrings\" data-throw-if-not-resolved=\"false\"></xref> for possible values.\n"
  example: []
  syntax:
    content: public string Code { get; }
    content.vb: Public ReadOnly Property Code As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.BatchError.Code*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.BatchError.Message
  commentId: P:Microsoft.Azure.Batch.BatchError.Message
  id: Message
  parent: Microsoft.Azure.Batch.BatchError
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: BatchError.Message
  fullName: Microsoft.Azure.Batch.BatchError.Message
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/BatchError.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Message
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/BatchError.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets a message describing the error, intended to be suitable for display in a user interface.\n"
  example: []
  syntax:
    content: public ErrorMessage Message { get; }
    content.vb: Public ReadOnly Property Message As ErrorMessage
    parameters: []
    return:
      type: Microsoft.Azure.Batch.ErrorMessage
  overload: Microsoft.Azure.Batch.BatchError.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.BatchError.Values
  commentId: P:Microsoft.Azure.Batch.BatchError.Values
  id: Values
  parent: Microsoft.Azure.Batch.BatchError
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: BatchError.Values
  fullName: Microsoft.Azure.Batch.BatchError.Values
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/BatchError.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Values
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/BatchError.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets a collection of key-value pairs containing additional details about the error.\n"
  example: []
  syntax:
    content: public IReadOnlyList<BatchErrorDetail> Values { get; }
    content.vb: Public ReadOnly Property Values As IReadOnlyList(Of BatchErrorDetail)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.BatchErrorDetail}
  overload: Microsoft.Azure.Batch.BatchError.Values*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Common.BatchErrorCodeStrings
  commentId: T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings
  isExternal: false
  name: BatchErrorCodeStrings
  nameWithType: BatchErrorCodeStrings
  fullName: Microsoft.Azure.Batch.Common.BatchErrorCodeStrings
- uid: Microsoft.Azure.Batch.BatchError.Code*
  commentId: Overload:Microsoft.Azure.Batch.BatchError.Code
  isExternal: false
  name: Code
  nameWithType: BatchError.Code
  fullName: Microsoft.Azure.Batch.BatchError.Code
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.BatchError.Message*
  commentId: Overload:Microsoft.Azure.Batch.BatchError.Message
  isExternal: false
  name: Message
  nameWithType: BatchError.Message
  fullName: Microsoft.Azure.Batch.BatchError.Message
- uid: Microsoft.Azure.Batch.ErrorMessage
  commentId: T:Microsoft.Azure.Batch.ErrorMessage
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ErrorMessage
  nameWithType: ErrorMessage
  fullName: Microsoft.Azure.Batch.ErrorMessage
- uid: Microsoft.Azure.Batch.BatchError.Values*
  commentId: Overload:Microsoft.Azure.Batch.BatchError.Values
  isExternal: false
  name: Values
  nameWithType: BatchError.Values
  fullName: Microsoft.Azure.Batch.BatchError.Values
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.BatchErrorDetail}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.BatchErrorDetail}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<BatchErrorDetail>
  nameWithType: IReadOnlyList<BatchErrorDetail>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.Azure.Batch.BatchErrorDetail>
  nameWithType.vb: IReadOnlyList(Of BatchErrorDetail)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.Azure.Batch.BatchErrorDetail)
  name.vb: IReadOnlyList(Of BatchErrorDetail)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchErrorDetail
    name: BatchErrorDetail
    nameWithType: BatchErrorDetail
    fullName: Microsoft.Azure.Batch.BatchErrorDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchErrorDetail
    name: BatchErrorDetail
    nameWithType: BatchErrorDetail
    fullName: Microsoft.Azure.Batch.BatchErrorDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
