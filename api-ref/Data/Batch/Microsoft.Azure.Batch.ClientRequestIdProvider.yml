### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.ClientRequestIdProvider
  commentId: T:Microsoft.Azure.Batch.ClientRequestIdProvider
  id: ClientRequestIdProvider
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.ClientRequestIdProvider.#ctor(System.Func{Microsoft.Azure.Batch.Protocol.IBatchRequest,System.Guid})
  langs:
  - csharp
  - vb
  name: ClientRequestIdProvider
  nameWithType: ClientRequestIdProvider
  fullName: Microsoft.Azure.Batch.ClientRequestIdProvider
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/ClientRequestIdProvider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ClientRequestIdProvider
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ClientRequestIdProvider.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInterceptor which contains a function used to generate a client request id to set as <xref href=\"Microsoft.Azure.Batch.Protocol.Models.IOptions.ClientRequestId\" data-throw-if-not-resolved=\"false\"></xref>.\nIf there are multiple instances of this then the last set wins.\n"
  example: []
  syntax:
    content: 'public class ClientRequestIdProvider : RequestInterceptor'
    content.vb: >-
      Public Class ClientRequestIdProvider
          Inherits RequestInterceptor
  inheritance:
  - System.Object
  - Microsoft.Azure.Batch.BatchClientBehavior
  - Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor
  - Microsoft.Azure.Batch.Protocol.RequestInterceptor
  inheritedMembers:
  - Microsoft.Azure.Batch.Protocol.RequestInterceptor.ModificationInterceptHandler
  - Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.ClientRequestIdProvider.#ctor(System.Func{Microsoft.Azure.Batch.Protocol.IBatchRequest,System.Guid})
  commentId: M:Microsoft.Azure.Batch.ClientRequestIdProvider.#ctor(System.Func{Microsoft.Azure.Batch.Protocol.IBatchRequest,System.Guid})
  id: '#ctor(System.Func{Microsoft.Azure.Batch.Protocol.IBatchRequest,System.Guid})'
  parent: Microsoft.Azure.Batch.ClientRequestIdProvider
  langs:
  - csharp
  - vb
  name: ClientRequestIdProvider(Func<IBatchRequest, Guid>)
  nameWithType: ClientRequestIdProvider.ClientRequestIdProvider(Func<IBatchRequest, Guid>)
  fullName: Microsoft.Azure.Batch.ClientRequestIdProvider.ClientRequestIdProvider(System.Func<Microsoft.Azure.Batch.Protocol.IBatchRequest, System.Guid>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/ClientRequestIdProvider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ClientRequestIdProvider.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new <xref href=\"Microsoft.Azure.Batch.ClientRequestIdProvider\" data-throw-if-not-resolved=\"false\"></xref> for use in setting the client request id of a request.\n"
  example: []
  syntax:
    content: public ClientRequestIdProvider(Func<IBatchRequest, Guid> generateClientRequestIdFunc)
    content.vb: Public Sub New(generateClientRequestIdFunc As Func(Of IBatchRequest, Guid))
    parameters:
    - id: generateClientRequestIdFunc
      type: System.Func{Microsoft.Azure.Batch.Protocol.IBatchRequest,System.Guid}
      description: "\nA function used to generate the client request id.  This function may be called more than once for any\ngiven operation due to retries.\n"
  overload: Microsoft.Azure.Batch.ClientRequestIdProvider.#ctor*
  nameWithType.vb: ClientRequestIdProvider.ClientRequestIdProvider(Func(Of IBatchRequest, Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.ClientRequestIdProvider.ClientRequestIdProvider(System.Func(Of Microsoft.Azure.Batch.Protocol.IBatchRequest, System.Guid))
  name.vb: ClientRequestIdProvider(Func(Of IBatchRequest, Guid))
references:
- uid: Microsoft.Azure.Batch.Protocol.Models.IOptions.ClientRequestId
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.IOptions.ClientRequestId
  parent: Microsoft.Azure.Batch.Protocol.Models.IOptions
  isExternal: false
  name: ClientRequestId
  nameWithType: IOptions.ClientRequestId
  fullName: Microsoft.Azure.Batch.Protocol.Models.IOptions.ClientRequestId
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Batch.BatchClientBehavior
  commentId: T:Microsoft.Azure.Batch.BatchClientBehavior
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: BatchClientBehavior
  nameWithType: BatchClientBehavior
  fullName: Microsoft.Azure.Batch.BatchClientBehavior
- uid: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor
  commentId: T:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: RequestReplacementInterceptor
  nameWithType: RequestReplacementInterceptor
  fullName: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor
- uid: Microsoft.Azure.Batch.Protocol.RequestInterceptor
  commentId: T:Microsoft.Azure.Batch.Protocol.RequestInterceptor
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: RequestInterceptor
  nameWithType: RequestInterceptor
  fullName: Microsoft.Azure.Batch.Protocol.RequestInterceptor
- uid: Microsoft.Azure.Batch.Protocol.RequestInterceptor.ModificationInterceptHandler
  commentId: P:Microsoft.Azure.Batch.Protocol.RequestInterceptor.ModificationInterceptHandler
  parent: Microsoft.Azure.Batch.Protocol.RequestInterceptor
  isExternal: false
  name: ModificationInterceptHandler
  nameWithType: RequestInterceptor.ModificationInterceptHandler
  fullName: Microsoft.Azure.Batch.Protocol.RequestInterceptor.ModificationInterceptHandler
- uid: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler
  commentId: P:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler
  parent: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor
  isExternal: false
  name: ReplacementInterceptHandler
  nameWithType: RequestReplacementInterceptor.ReplacementInterceptHandler
  fullName: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.IOptions
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.IOptions
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: IOptions
  nameWithType: IOptions
  fullName: Microsoft.Azure.Batch.Protocol.Models.IOptions
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: Microsoft.Azure.Batch.ClientRequestIdProvider
  commentId: T:Microsoft.Azure.Batch.ClientRequestIdProvider
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ClientRequestIdProvider
  nameWithType: ClientRequestIdProvider
  fullName: Microsoft.Azure.Batch.ClientRequestIdProvider
- uid: Microsoft.Azure.Batch.ClientRequestIdProvider.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.ClientRequestIdProvider.#ctor
  isExternal: false
  name: ClientRequestIdProvider
  nameWithType: ClientRequestIdProvider.ClientRequestIdProvider
  fullName: Microsoft.Azure.Batch.ClientRequestIdProvider.ClientRequestIdProvider
- uid: System.Func{Microsoft.Azure.Batch.Protocol.IBatchRequest,System.Guid}
  commentId: T:System.Func{Microsoft.Azure.Batch.Protocol.IBatchRequest,System.Guid}
  parent: System
  definition: System.Func`2
  name: Func<IBatchRequest, Guid>
  nameWithType: Func<IBatchRequest, Guid>
  fullName: System.Func<Microsoft.Azure.Batch.Protocol.IBatchRequest, System.Guid>
  nameWithType.vb: Func(Of IBatchRequest, Guid)
  fullname.vb: System.Func(Of Microsoft.Azure.Batch.Protocol.IBatchRequest, System.Guid)
  name.vb: Func(Of IBatchRequest, Guid)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.IBatchRequest
    name: IBatchRequest
    nameWithType: IBatchRequest
    fullName: Microsoft.Azure.Batch.Protocol.IBatchRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.IBatchRequest
    name: IBatchRequest
    nameWithType: IBatchRequest
    fullName: Microsoft.Azure.Batch.Protocol.IBatchRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
