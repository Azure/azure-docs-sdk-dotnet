### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.ODATADetailLevel
  commentId: T:Microsoft.Azure.Batch.ODATADetailLevel
  id: ODATADetailLevel
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.ODATADetailLevel.#ctor
  - Microsoft.Azure.Batch.ODATADetailLevel.#ctor(System.String,System.String,System.String)
  - Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause
  - Microsoft.Azure.Batch.ODATADetailLevel.FilterClause
  - Microsoft.Azure.Batch.ODATADetailLevel.SelectClause
  langs:
  - csharp
  - vb
  name: ODATADetailLevel
  nameWithType: ODATADetailLevel
  fullName: Microsoft.Azure.Batch.ODATADetailLevel
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/ODATADetailLevel.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ODATADetailLevel
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ODATADetailLevel.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nControls the amount of detail requested from the Azure Batch service when listing or\nretrieving resources, using OData query clauses.\n"
  remarks: "\n<p>Azure Batch supports OData queries, which allow the client to gain finer control over query\nperformance by controlling which resources are returned in List operations (<xref href=\"Microsoft.Azure.Batch.ODATADetailLevel.FilterClause\" data-throw-if-not-resolved=\"false\"></xref>),\nand which properties of each resource are returned in List, Get or Refresh operations\n(<xref href=\"Microsoft.Azure.Batch.ODATADetailLevel.SelectClause\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n<p>By default, if you do not pass a <xref href=\"Microsoft.Azure.Batch.DetailLevel\" data-throw-if-not-resolved=\"false\"></xref> to a List, Get or Refresh operation,\nthe Batch client specifies no filter (all records are returned), no select clause (all simple properties are\nreturned) and no expand clause (associated entities are not returned).  Consequently, by default, associated entity\nproperties are null, rather than being populated like other properties.  Refer to individual class\ndocumentation to find out which properties are considered associated entities and need to be expanded\nto be populated.</p>\n<p>Because the OData queries are passed directly to the REST API, clause strings must use the JSON attribute\nnames from the REST API, which are not always the same as .NET property names.  For example, the\n.NET <xref href=\"Microsoft.Azure.Batch.CloudPool.VirtualMachineSize\" data-throw-if-not-resolved=\"false\"></xref> property corresponds to\nthe vmSize attribute in the REST API; therefore, to filter a pool list operations by VM size, you would\nneed to write vmSize rather than VirtualMachineSize in your filter string.  Refer to the REST API\ndocumentation to find out the JSON attribute name corresponding to a .NET property.</p>\n<p>For additional information about using OData to efficiently query the Azure Batch service, see\n<a href=\"https://azure.microsoft.com/en-us/documentation/articles/batch-efficient-list-queries/\">Efficient List Queries</a> on MSDN.</p>\n"
  example:
  - "\nThis sample shows how to specify an ODataDetailLevel that lists only active <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref>,\nand retrieves only the <xref href=\"Microsoft.Azure.Batch.CloudPool.Id\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Azure.Batch.CloudPool.DisplayName\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.Azure.Batch.CloudPool.Statistics\" data-throw-if-not-resolved=\"false\"></xref>\nfor each pool (for example, for display in a reporting user interface).\n<pre><code>var detailLevel = new ODATADetailLevel(\n    filterClause: \"state eq 'active'\",\n    selectClause: \"id,displayName,stats\",\n    expandClause: \"stats\"\n);\n\nvar pools = batchClient.PoolOperations.ListPools(detailLevel);</code></pre>\n"
  syntax:
    content: 'public class ODATADetailLevel : DetailLevel'
    content.vb: >-
      Public Class ODATADetailLevel
          Inherits DetailLevel
  inheritance:
  - System.Object
  - Microsoft.Azure.Batch.DetailLevel
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.ODATADetailLevel.FilterClause
  commentId: P:Microsoft.Azure.Batch.ODATADetailLevel.FilterClause
  id: FilterClause
  parent: Microsoft.Azure.Batch.ODATADetailLevel
  langs:
  - csharp
  - vb
  name: FilterClause
  nameWithType: ODATADetailLevel.FilterClause
  fullName: Microsoft.Azure.Batch.ODATADetailLevel.FilterClause
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/ODATADetailLevel.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FilterClause
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ODATADetailLevel.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the OData filter clause. Used to restrict a list operation to items that match specified criteria.\n"
  remarks: "\n<p>This is an optional OData $filter expression string\n<a href=\"http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398094\">(see the OData specification)</a>.\nFor example, you can restrict a <xref href=\"Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref> operation to return\nonly active pools with the expression <code>state eq 'active'</code>.</p>\n<p>Filters must be specified using REST API attribute names, not .NET property names.</p>\n<p>The default is no filter expression, which means all resources are returned.</p>\n"
  example: []
  syntax:
    content: public string FilterClause { get; set; }
    content.vb: Public Property FilterClause As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ODATADetailLevel.FilterClause*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ODATADetailLevel.SelectClause
  commentId: P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause
  id: SelectClause
  parent: Microsoft.Azure.Batch.ODATADetailLevel
  langs:
  - csharp
  - vb
  name: SelectClause
  nameWithType: ODATADetailLevel.SelectClause
  fullName: Microsoft.Azure.Batch.ODATADetailLevel.SelectClause
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/ODATADetailLevel.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SelectClause
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ODATADetailLevel.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the OData select clause. Used to retrieve only specific properties instead of all object properties.\n"
  remarks: "\n<p>This is an optional OData $select expression string\n<a href=\"http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398163\">(see the OData specification)</a>.\nIf you provide a SelectClause, then <strong>only</strong> the properties listed in that clause are populated; other properties\nhave their default values (typically null).  For example, if you perform a <xref href=\"Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>\noperation with a SelectClause of <code>id,displayName</code>, then each <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref> will have its\n<xref href=\"Microsoft.Azure.Batch.CloudPool.Id\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.Azure.Batch.CloudPool.DisplayName\" data-throw-if-not-resolved=\"false\"></xref> properties\npopulated, but other properties such as <xref href=\"Microsoft.Azure.Batch.CloudPool.State\" data-throw-if-not-resolved=\"false\"></xref> will not be retrieved and therefore\nwill have their default values (typically null).</p>\n<p>If, when an entity was retrieved (via a List, Get or Refresh), you specifed a SelectClause which did not include\nthe property or properties that uniquely identify the object\n(usually the Id property, but for <xref href=\"Microsoft.Azure.Batch.Certificate\" data-throw-if-not-resolved=\"false\"></xref> the Thumbprint and ThumbprintAlgorithm properties,\nthen any methods that access the Batch service to retrieve data or perform operations will fail.\nThis includes most methods on the object, including <xref href=\"Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\nYou can still access properties (though only properties included in the SelectClause will be populated).</p>\n<p>Selections must be specified using REST API attribute names, not .NET property names.</p>\n<p>The default is no select expression, which means all properties are returned.</p>\n"
  example: []
  syntax:
    content: public string SelectClause { get; set; }
    content.vb: Public Property SelectClause As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ODATADetailLevel.SelectClause*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause
  commentId: P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause
  id: ExpandClause
  parent: Microsoft.Azure.Batch.ODATADetailLevel
  langs:
  - csharp
  - vb
  name: ExpandClause
  nameWithType: ODATADetailLevel.ExpandClause
  fullName: Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/ODATADetailLevel.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExpandClause
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ODATADetailLevel.cs
    startLine: 116
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the OData expand clause. Used to retrieve associated entities of the main entity being retrieved.\n"
  remarks: "\n<p>This is an optional OData $expand expression string\n<a href=\"http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398162\">(see the OData specification)</a>.\nProperties containing associated entities will be null unless included in an ExpandClause.\nSpecifically, if you perform a List, Get or Refresh and do not specify an ExpandClause, then all associated\nentity properties will be null.  For example, if you perform a <xref href=\"Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>\noperation without an ExpandClause then the <xref href=\"Microsoft.Azure.Batch.CloudPool.Statistics\" data-throw-if-not-resolved=\"false\"></xref> property will be null.  To populate\nthe Statistics property you must supply an ExpandClause of <code>stats</code>.  Refer to individual class\ndocumentation to find out which properties are considered associated entities.</p>\n<p>If you specify both an ExpandClause and a <xref href=\"Microsoft.Azure.Batch.ODATADetailLevel.SelectClause\" data-throw-if-not-resolved=\"false\"></xref>, then properties listed in the\nExpandClause must be repeated in the SelectClause (because only properties listed in the SelectClause are\nincluded in the service response).  (This requirement does not arise if you do not specify a SelectClause, because that\nmeans 'include all properties in the response.')</p>\n<p>Expansions must be specified using REST API attribute names, not .NET property names.</p>\n<p>The default is no expand expression, which means no associated objects are returned (and the\ncorresponding properties are null).</p>\n"
  example: []
  syntax:
    content: public string ExpandClause { get; set; }
    content.vb: Public Property ExpandClause As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ODATADetailLevel.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Batch.ODATADetailLevel.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Azure.Batch.ODATADetailLevel
  langs:
  - csharp
  - vb
  name: ODATADetailLevel(String, String, String)
  nameWithType: ODATADetailLevel.ODATADetailLevel(String, String, String)
  fullName: Microsoft.Azure.Batch.ODATADetailLevel.ODATADetailLevel(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/ODATADetailLevel.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ODATADetailLevel.cs
    startLine: 124
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.ODATADetailLevel\" data-throw-if-not-resolved=\"false\"></xref> class with the specified clauses.\n"
  example: []
  syntax:
    content: public ODATADetailLevel(string filterClause = null, string selectClause = null, string expandClause = null)
    content.vb: Public Sub New(filterClause As String = Nothing, selectClause As String = Nothing, expandClause As String = Nothing)
    parameters:
    - id: filterClause
      type: System.String
      description: The filter clause.
    - id: selectClause
      type: System.String
      description: The select clause.
    - id: expandClause
      type: System.String
      description: The expand clause.
  overload: Microsoft.Azure.Batch.ODATADetailLevel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.ODATADetailLevel.#ctor
  commentId: M:Microsoft.Azure.Batch.ODATADetailLevel.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.ODATADetailLevel
  langs:
  - csharp
  - vb
  name: ODATADetailLevel()
  nameWithType: ODATADetailLevel.ODATADetailLevel()
  fullName: Microsoft.Azure.Batch.ODATADetailLevel.ODATADetailLevel()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/ODATADetailLevel.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/ODATADetailLevel.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.ODATADetailLevel\" data-throw-if-not-resolved=\"false\"></xref> class with empty clauses.\n"
  example: []
  syntax:
    content: public ODATADetailLevel()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.ODATADetailLevel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.ODATADetailLevel.FilterClause
  commentId: P:Microsoft.Azure.Batch.ODATADetailLevel.FilterClause
- uid: Microsoft.Azure.Batch.ODATADetailLevel.SelectClause
  commentId: P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause
- uid: Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause
  commentId: P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause
- uid: Microsoft.Azure.Batch.DetailLevel
  commentId: T:Microsoft.Azure.Batch.DetailLevel
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: DetailLevel
  nameWithType: DetailLevel
  fullName: Microsoft.Azure.Batch.DetailLevel
- uid: Microsoft.Azure.Batch.CloudPool.VirtualMachineSize
  commentId: P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize
- uid: Microsoft.Azure.Batch.CloudPool
  commentId: T:Microsoft.Azure.Batch.CloudPool
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudPool
  nameWithType: CloudPool
  fullName: Microsoft.Azure.Batch.CloudPool
- uid: Microsoft.Azure.Batch.CloudPool.Id
  commentId: P:Microsoft.Azure.Batch.CloudPool.Id
- uid: Microsoft.Azure.Batch.CloudPool.DisplayName
  commentId: P:Microsoft.Azure.Batch.CloudPool.DisplayName
- uid: Microsoft.Azure.Batch.CloudPool.Statistics
  commentId: P:Microsoft.Azure.Batch.CloudPool.Statistics
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.ODATADetailLevel.FilterClause*
  commentId: Overload:Microsoft.Azure.Batch.ODATADetailLevel.FilterClause
  isExternal: false
  name: FilterClause
  nameWithType: ODATADetailLevel.FilterClause
  fullName: Microsoft.Azure.Batch.ODATADetailLevel.FilterClause
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.CloudPool.State
  commentId: P:Microsoft.Azure.Batch.CloudPool.State
- uid: Microsoft.Azure.Batch.Certificate
  commentId: T:Microsoft.Azure.Batch.Certificate
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: Certificate
  nameWithType: Certificate
  fullName: Microsoft.Azure.Batch.Certificate
- uid: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.IRefreshable
  isExternal: true
  name: Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: IRefreshable.Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  nameWithType.vb: IRefreshable.Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
  fullname.vb: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
    name: Refresh
    nameWithType: IRefreshable.Refresh
    fullName: Microsoft.Azure.Batch.IRefreshable.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
    name: Refresh
    nameWithType: IRefreshable.Refresh
    fullName: Microsoft.Azure.Batch.IRefreshable.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.IRefreshable
  isExternal: true
  name: RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: IRefreshable.RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  nameWithType.vb: IRefreshable.RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  fullname.vb: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
    name: RefreshAsync
    nameWithType: IRefreshable.RefreshAsync
    fullName: Microsoft.Azure.Batch.IRefreshable.RefreshAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
    name: RefreshAsync
    nameWithType: IRefreshable.RefreshAsync
    fullName: Microsoft.Azure.Batch.IRefreshable.RefreshAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.ODATADetailLevel.SelectClause*
  commentId: Overload:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause
  isExternal: false
  name: SelectClause
  nameWithType: ODATADetailLevel.SelectClause
  fullName: Microsoft.Azure.Batch.ODATADetailLevel.SelectClause
- uid: Microsoft.Azure.Batch.IRefreshable
  commentId: T:Microsoft.Azure.Batch.IRefreshable
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IRefreshable
  nameWithType: IRefreshable
  fullName: Microsoft.Azure.Batch.IRefreshable
- uid: Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause*
  commentId: Overload:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause
  isExternal: false
  name: ExpandClause
  nameWithType: ODATADetailLevel.ExpandClause
  fullName: Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause
- uid: Microsoft.Azure.Batch.ODATADetailLevel
  commentId: T:Microsoft.Azure.Batch.ODATADetailLevel
  isExternal: false
  name: ODATADetailLevel
  nameWithType: ODATADetailLevel
  fullName: Microsoft.Azure.Batch.ODATADetailLevel
- uid: Microsoft.Azure.Batch.ODATADetailLevel.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.ODATADetailLevel.#ctor
  isExternal: false
  name: ODATADetailLevel
  nameWithType: ODATADetailLevel.ODATADetailLevel
  fullName: Microsoft.Azure.Batch.ODATADetailLevel.ODATADetailLevel
