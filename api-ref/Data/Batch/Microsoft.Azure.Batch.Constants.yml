### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Constants
  commentId: T:Microsoft.Azure.Batch.Constants
  id: Constants
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.Constants.DefaultConveniencePrefix
  - Microsoft.Azure.Batch.Constants.DefaultSingleRestRequestClientTimeout
  - Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest
  - Microsoft.Azure.Batch.Constants.StandardErrorFileName
  - Microsoft.Azure.Batch.Constants.StandardOutFileName
  langs:
  - csharp
  - vb
  name: Constants
  nameWithType: Constants
  fullName: Microsoft.Azure.Batch.Constants
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Constants.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Constants
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Constants.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nContains constants for interacting with the Azure Batch service.\n"
  example: []
  syntax:
    content: public static class Constants
    content.vb: Public Module Constants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Batch.Constants.DefaultConveniencePrefix
  commentId: F:Microsoft.Azure.Batch.Constants.DefaultConveniencePrefix
  id: DefaultConveniencePrefix
  parent: Microsoft.Azure.Batch.Constants
  langs:
  - csharp
  - vb
  name: DefaultConveniencePrefix
  nameWithType: Constants.DefaultConveniencePrefix
  fullName: Microsoft.Azure.Batch.Constants.DefaultConveniencePrefix
  type: Field
  source:
    remote:
      path: src/Batch/Client/Src/Constants.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultConveniencePrefix
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Constants.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nThe prefix used when creating automatically named containers or blobs as part of file staging.\n"
  example: []
  syntax:
    content: public const string DefaultConveniencePrefix = "mab-"
    content.vb: Public Const DefaultConveniencePrefix As String = "mab-"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Batch.Constants.StandardOutFileName
  commentId: F:Microsoft.Azure.Batch.Constants.StandardOutFileName
  id: StandardOutFileName
  parent: Microsoft.Azure.Batch.Constants
  langs:
  - csharp
  - vb
  name: StandardOutFileName
  nameWithType: Constants.StandardOutFileName
  fullName: Microsoft.Azure.Batch.Constants.StandardOutFileName
  type: Field
  source:
    remote:
      path: src/Batch/Client/Src/Constants.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StandardOutFileName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Constants.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nThe name of the standard output file generated by a task or start task on a compute node.\n"
  example: []
  syntax:
    content: public const string StandardOutFileName = "stdout.txt"
    content.vb: Public Const StandardOutFileName As String = "stdout.txt"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Batch.Constants.StandardErrorFileName
  commentId: F:Microsoft.Azure.Batch.Constants.StandardErrorFileName
  id: StandardErrorFileName
  parent: Microsoft.Azure.Batch.Constants
  langs:
  - csharp
  - vb
  name: StandardErrorFileName
  nameWithType: Constants.StandardErrorFileName
  fullName: Microsoft.Azure.Batch.Constants.StandardErrorFileName
  type: Field
  source:
    remote:
      path: src/Batch/Client/Src/Constants.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StandardErrorFileName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Constants.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nThe name of the standard error file generated by a task or start task on a compute node.\n"
  example: []
  syntax:
    content: public const string StandardErrorFileName = "stderr.txt"
    content.vb: Public Const StandardErrorFileName As String = "stderr.txt"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest
  commentId: F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest
  id: MaxTasksInSingleAddTaskCollectionRequest
  parent: Microsoft.Azure.Batch.Constants
  langs:
  - csharp
  - vb
  name: MaxTasksInSingleAddTaskCollectionRequest
  nameWithType: Constants.MaxTasksInSingleAddTaskCollectionRequest
  fullName: Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest
  type: Field
  source:
    remote:
      path: src/Batch/Client/Src/Constants.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxTasksInSingleAddTaskCollectionRequest
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Constants.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nThe maximum number of tasks that the client will include in a single AddTaskCollection request,\nwhen adding multiple tasks to a job.\n"
  example: []
  syntax:
    content: public const int MaxTasksInSingleAddTaskCollectionRequest = 100
    content.vb: Public Const MaxTasksInSingleAddTaskCollectionRequest As Integer = 100
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Batch.Constants.DefaultSingleRestRequestClientTimeout
  commentId: F:Microsoft.Azure.Batch.Constants.DefaultSingleRestRequestClientTimeout
  id: DefaultSingleRestRequestClientTimeout
  parent: Microsoft.Azure.Batch.Constants
  langs:
  - csharp
  - vb
  name: DefaultSingleRestRequestClientTimeout
  nameWithType: Constants.DefaultSingleRestRequestClientTimeout
  fullName: Microsoft.Azure.Batch.Constants.DefaultSingleRestRequestClientTimeout
  type: Field
  source:
    remote:
      path: src/Batch/Client/Src/Constants.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DefaultSingleRestRequestClientTimeout
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Constants.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nThe default amount of time to wait for a response from the Batch service before automatically cancelling the \nrequest.\n"
  example: []
  syntax:
    content: public static readonly TimeSpan DefaultSingleRestRequestClientTimeout
    content.vb: Public Shared ReadOnly DefaultSingleRestRequestClientTimeout As TimeSpan
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
