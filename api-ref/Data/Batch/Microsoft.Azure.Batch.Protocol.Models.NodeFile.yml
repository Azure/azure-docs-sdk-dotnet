### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.NodeFile
  id: NodeFile
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileProperties)
  - Microsoft.Azure.Batch.Protocol.Models.NodeFile.IsDirectory
  - Microsoft.Azure.Batch.Protocol.Models.NodeFile.Name
  - Microsoft.Azure.Batch.Protocol.Models.NodeFile.Properties
  - Microsoft.Azure.Batch.Protocol.Models.NodeFile.Url
  - Microsoft.Azure.Batch.Protocol.Models.NodeFile.Validate
  langs:
  - csharp
  - vb
  name: NodeFile
  nameWithType: NodeFile
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NodeFile
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInformation about a file or directory on a compute node.\n"
  example: []
  syntax:
    content: public class NodeFile
    content.vb: Public Class NodeFile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  langs:
  - csharp
  - vb
  name: NodeFile()
  nameWithType: NodeFile.NodeFile()
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.NodeFile()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the NodeFile class.\n"
  example: []
  syntax:
    content: public NodeFile()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileProperties)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileProperties)
  id: '#ctor(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileProperties)'
  parent: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  langs:
  - csharp
  - vb
  name: NodeFile(String, String, Nullable<Boolean>, FileProperties)
  nameWithType: NodeFile.NodeFile(String, String, Nullable<Boolean>, FileProperties)
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.NodeFile(System.String, System.String, System.Nullable<System.Boolean>, Microsoft.Azure.Batch.Protocol.Models.FileProperties)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the NodeFile class.\n"
  example: []
  syntax:
    content: public NodeFile(string name = null, string url = null, bool ? isDirectory = null, FileProperties properties = null)
    content.vb: Public Sub New(name As String = Nothing, url As String = Nothing, isDirectory As Boolean? = Nothing, properties As FileProperties = Nothing)
    parameters:
    - id: name
      type: System.String
      description: The file path.
    - id: url
      type: System.String
      description: The URL of the file.
    - id: isDirectory
      type: System.Nullable{System.Boolean}
      description: >-
        Whether the object represents a

        directory.
    - id: properties
      type: Microsoft.Azure.Batch.Protocol.Models.FileProperties
      description: The file properties.
  overload: Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor*
  nameWithType.vb: NodeFile.NodeFile(String, String, Nullable(Of Boolean), FileProperties)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.NodeFile.NodeFile(System.String, System.String, System.Nullable(Of System.Boolean), Microsoft.Azure.Batch.Protocol.Models.FileProperties)
  name.vb: NodeFile(String, String, Nullable(Of Boolean), FileProperties)
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Name
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Name
  id: Name
  parent: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NodeFile.Name
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Name
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the file path.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Url
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Url
  id: Url
  parent: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: NodeFile.Url
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Url
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Url
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the URL of the file.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "url")]

      public string Url { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="url")>

      Public Property Url As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Url*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: url
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.IsDirectory
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.IsDirectory
  id: IsDirectory
  parent: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  langs:
  - csharp
  - vb
  name: IsDirectory
  nameWithType: NodeFile.IsDirectory
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.IsDirectory
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsDirectory
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether the object represents a directory.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "isDirectory")]

      public bool ? IsDirectory { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="isDirectory")>

      Public Property IsDirectory As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.Protocol.Models.NodeFile.IsDirectory*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: isDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Properties
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Properties
  id: Properties
  parent: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: NodeFile.Properties
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Properties
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Properties
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the file properties.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties")]

      public FileProperties Properties { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties")>

      Public Property Properties As FileProperties
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.FileProperties
  overload: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Properties*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.NodeFile
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: NodeFile.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/NodeFile.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor
  isExternal: false
  name: NodeFile
  nameWithType: NodeFile.NodeFile
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.NodeFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.FileProperties
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.FileProperties
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: FileProperties
  nameWithType: FileProperties
  fullName: Microsoft.Azure.Batch.Protocol.Models.FileProperties
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Name*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Name
  isExternal: false
  name: Name
  nameWithType: NodeFile.Name
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Name
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Url*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Url
  isExternal: false
  name: Url
  nameWithType: NodeFile.Url
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Url
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.IsDirectory*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.NodeFile.IsDirectory
  isExternal: false
  name: IsDirectory
  nameWithType: NodeFile.IsDirectory
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.IsDirectory
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Properties*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Properties
  isExternal: false
  name: Properties
  nameWithType: NodeFile.Properties
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Properties
- uid: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Validate
  isExternal: false
  name: Validate
  nameWithType: NodeFile.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.NodeFile.Validate
