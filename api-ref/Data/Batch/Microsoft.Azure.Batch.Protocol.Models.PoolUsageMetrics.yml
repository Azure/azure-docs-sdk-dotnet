### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  id: PoolUsageMetrics
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor(System.String,System.DateTime,System.DateTime,System.String,System.Double,System.Double,System.Double)
  - Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataEgressGiB
  - Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataIngressGiB
  - Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.EndTime
  - Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolId
  - Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.StartTime
  - Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.TotalCoreHours
  - Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.Validate
  - Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.VmSize
  langs:
  - csharp
  - vb
  name: PoolUsageMetrics
  nameWithType: PoolUsageMetrics
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolUsageMetrics
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nUsage metrics for a pool across an aggregation interval.\n"
  example: []
  syntax:
    content: public class PoolUsageMetrics
    content.vb: Public Class PoolUsageMetrics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: PoolUsageMetrics()
  nameWithType: PoolUsageMetrics.PoolUsageMetrics()
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolUsageMetrics()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the PoolUsageMetrics class.\n"
  example: []
  syntax:
    content: public PoolUsageMetrics()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor(System.String,System.DateTime,System.DateTime,System.String,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor(System.String,System.DateTime,System.DateTime,System.String,System.Double,System.Double,System.Double)
  id: '#ctor(System.String,System.DateTime,System.DateTime,System.String,System.Double,System.Double,System.Double)'
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: PoolUsageMetrics(String, DateTime, DateTime, String, Double, Double, Double)
  nameWithType: PoolUsageMetrics.PoolUsageMetrics(String, DateTime, DateTime, String, Double, Double, Double)
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolUsageMetrics(System.String, System.DateTime, System.DateTime, System.String, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the PoolUsageMetrics class.\n"
  example: []
  syntax:
    content: public PoolUsageMetrics(string poolId, DateTime startTime, DateTime endTime, string vmSize, double totalCoreHours, double dataIngressGiB, double dataEgressGiB)
    content.vb: Public Sub New(poolId As String, startTime As Date, endTime As Date, vmSize As String, totalCoreHours As Double, dataIngressGiB As Double, dataEgressGiB As Double)
    parameters:
    - id: poolId
      type: System.String
      description: >-
        The id of the pool whose metrics are being

        aggregated.
    - id: startTime
      type: System.DateTime
      description: >-
        The start time of the aggregation

        interval.
    - id: endTime
      type: System.DateTime
      description: >-
        The end time of the aggregation

        interval.
    - id: vmSize
      type: System.String
      description: >-
        The size of virtual machines in the pool. All

        VMs in a pool are the same size.
    - id: totalCoreHours
      type: System.Double
      description: >-
        The total core hours used in the pool

        during this aggregation interval.
    - id: dataIngressGiB
      type: System.Double
      description: >-
        The cross data center network ingress

        in GiB to the pool during this interval.
    - id: dataEgressGiB
      type: System.Double
      description: >-
        The cross data center network egress

        in GiB from the pool during this interval.
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolId
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolId
  id: PoolId
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: PoolId
  nameWithType: PoolUsageMetrics.PoolId
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the id of the pool whose metrics are being aggregated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "poolId")]

      public string PoolId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="poolId")>

      Public Property PoolId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: poolId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.StartTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.StartTime
  id: StartTime
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: PoolUsageMetrics.StartTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.StartTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the start time of the aggregation interval.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startTime")]

      public DateTime StartTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="startTime")>

      Public Property StartTime As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.StartTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.EndTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.EndTime
  id: EndTime
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: PoolUsageMetrics.EndTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.EndTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the end time of the aggregation interval.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "endTime")]

      public DateTime EndTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="endTime")>

      Public Property EndTime As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.EndTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: endTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.VmSize
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.VmSize
  id: VmSize
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: VmSize
  nameWithType: PoolUsageMetrics.VmSize
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.VmSize
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VmSize
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the size of virtual machines in the pool. All VMs in\na pool are the same size.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "vmSize")]

      public string VmSize { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="vmSize")>

      Public Property VmSize As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.VmSize*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: vmSize
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.TotalCoreHours
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.TotalCoreHours
  id: TotalCoreHours
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: TotalCoreHours
  nameWithType: PoolUsageMetrics.TotalCoreHours
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.TotalCoreHours
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TotalCoreHours
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the total core hours used in the pool during this\naggregation interval.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "totalCoreHours")]

      public double TotalCoreHours { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="totalCoreHours")>

      Public Property TotalCoreHours As Double
    parameters: []
    return:
      type: System.Double
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.TotalCoreHours*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: totalCoreHours
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataIngressGiB
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataIngressGiB
  id: DataIngressGiB
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: DataIngressGiB
  nameWithType: PoolUsageMetrics.DataIngressGiB
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataIngressGiB
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataIngressGiB
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the cross data center network ingress in GiB to the\npool during this interval.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "dataIngressGiB")]

      public double DataIngressGiB { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="dataIngressGiB")>

      Public Property DataIngressGiB As Double
    parameters: []
    return:
      type: System.Double
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataIngressGiB*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: dataIngressGiB
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataEgressGiB
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataEgressGiB
  id: DataEgressGiB
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: DataEgressGiB
  nameWithType: PoolUsageMetrics.DataEgressGiB
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataEgressGiB
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataEgressGiB
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the cross data center network egress in GiB from the\npool during this interval.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "dataEgressGiB")]

      public double DataEgressGiB { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="dataEgressGiB")>

      Public Property DataEgressGiB As Double
    parameters: []
    return:
      type: System.Double
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataEgressGiB*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: dataEgressGiB
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: PoolUsageMetrics.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolUsageMetrics.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor
  isExternal: false
  name: PoolUsageMetrics
  nameWithType: PoolUsageMetrics.PoolUsageMetrics
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolUsageMetrics
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolId*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolId
  isExternal: false
  name: PoolId
  nameWithType: PoolUsageMetrics.PoolId
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolId
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.StartTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.StartTime
  isExternal: false
  name: StartTime
  nameWithType: PoolUsageMetrics.StartTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.StartTime
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.EndTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.EndTime
  isExternal: false
  name: EndTime
  nameWithType: PoolUsageMetrics.EndTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.EndTime
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.VmSize*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.VmSize
  isExternal: false
  name: VmSize
  nameWithType: PoolUsageMetrics.VmSize
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.VmSize
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.TotalCoreHours*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.TotalCoreHours
  isExternal: false
  name: TotalCoreHours
  nameWithType: PoolUsageMetrics.TotalCoreHours
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.TotalCoreHours
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataIngressGiB*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataIngressGiB
  isExternal: false
  name: DataIngressGiB
  nameWithType: PoolUsageMetrics.DataIngressGiB
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataIngressGiB
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataEgressGiB*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataEgressGiB
  isExternal: false
  name: DataEgressGiB
  nameWithType: PoolUsageMetrics.DataEgressGiB
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataEgressGiB
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.Validate
  isExternal: false
  name: Validate
  nameWithType: PoolUsageMetrics.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.Validate
