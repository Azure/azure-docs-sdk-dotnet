### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.CloudJob
  commentId: T:Microsoft.Azure.Batch.CloudJob
  id: CloudJob
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.CloudJob.AddTask(Microsoft.Azure.Batch.CloudTask,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudJob.AddTask(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudJob.AddTaskAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudJob.CommitChanges(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudJob.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudJob.CommonEnvironmentSettings
  - Microsoft.Azure.Batch.CloudJob.Constraints
  - Microsoft.Azure.Batch.CloudJob.CreationTime
  - Microsoft.Azure.Batch.CloudJob.CustomBehaviors
  - Microsoft.Azure.Batch.CloudJob.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudJob.Disable(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudJob.DisplayName
  - Microsoft.Azure.Batch.CloudJob.Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudJob.ETag
  - Microsoft.Azure.Batch.CloudJob.ExecutionInformation
  - Microsoft.Azure.Batch.CloudJob.GetTask(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudJob.Id
  - Microsoft.Azure.Batch.CloudJob.JobManagerTask
  - Microsoft.Azure.Batch.CloudJob.JobPreparationTask
  - Microsoft.Azure.Batch.CloudJob.JobReleaseTask
  - Microsoft.Azure.Batch.CloudJob.LastModified
  - Microsoft.Azure.Batch.CloudJob.ListTasks(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudJob.Metadata
  - Microsoft.Azure.Batch.CloudJob.OnAllTasksComplete
  - Microsoft.Azure.Batch.CloudJob.OnTaskFailure
  - Microsoft.Azure.Batch.CloudJob.PoolInformation
  - Microsoft.Azure.Batch.CloudJob.PreviousState
  - Microsoft.Azure.Batch.CloudJob.PreviousStateTransitionTime
  - Microsoft.Azure.Batch.CloudJob.Priority
  - Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudJob.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudJob.State
  - Microsoft.Azure.Batch.CloudJob.StateTransitionTime
  - Microsoft.Azure.Batch.CloudJob.Statistics
  - Microsoft.Azure.Batch.CloudJob.Terminate(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudJob.Url
  - Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies
  langs:
  - csharp
  - vb
  name: CloudJob
  nameWithType: CloudJob
  fullName: Microsoft.Azure.Batch.CloudJob
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloudJob
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nAn Azure Batch job.\n"
  example: []
  syntax:
    content: 'public class CloudJob : IRefreshable, ITransportObjectProvider<JobAddParameter>, IInheritedBehaviors, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class CloudJob
          Implements IRefreshable, ITransportObjectProvider(Of JobAddParameter), IInheritedBehaviors, IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Batch.IRefreshable
  - Microsoft.Azure.Batch.IInheritedBehaviors
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: CommitAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudJob.CommitAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommitAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCommits this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> to the Azure Batch service.\n"
  remarks: "\n<p>If the <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> already exists on the Batch service, its properties are replaced by the properties of this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The commit operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task CommitAsync(IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function CommitAsync(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudJob.CommitAsync*
  nameWithType.vb: CloudJob.CommitAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: CommitAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: Commit(IEnumerable<BatchClientBehavior>)
  nameWithType: CloudJob.Commit(IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Commit
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCommits this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> to the Azure Batch service.\n"
  remarks: "\n<p>If the <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> already exists on the Batch service, its properties are replaced by the properties of this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void Commit(IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Commit(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudJob.Commit*
  nameWithType.vb: CloudJob.Commit(IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Commit(IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudJob.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: CommitChangesAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudJob.CommitChangesAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudJob.CommitChangesAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommitChangesAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 117
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCommits all pending changes to this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> to the Azure Batch service.\n"
  remarks: "\n<p>\nUpdates an existing <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> on the Batch service by replacing its properties with the properties of this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> which have been changed.\nUnchanged properties are ignored.\nAll changes since the last time this entity was retrieved from the Batch service (either via <xref href=\"Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Azure.Batch.JobOperations.GetJob(System.String%2cMicrosoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>,\nor <xref href=\"Microsoft.Azure.Batch.JobOperations.ListJobs(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>) are applied.\nProperties which are explicitly set to null will cause an exception because the Batch service does not support partial updates which set a property to null.\nIf you need to set a property to null, use <xref href=\"Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>This operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task CommitChangesAsync(IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function CommitChangesAsync(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudJob.CommitChangesAsync*
  nameWithType.vb: CloudJob.CommitChangesAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.CommitChangesAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: CommitChangesAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.CommitChanges(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.CommitChanges(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: CommitChanges(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: CommitChanges(IEnumerable<BatchClientBehavior>)
  nameWithType: CloudJob.CommitChanges(IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudJob.CommitChanges(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommitChanges
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 165
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCommits all pending changes to this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> to the Azure Batch service.\n"
  remarks: "\n<p>\nUpdates an existing <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> on the Batch service by replacing its properties with the properties of this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> which have been changed.\nUnchanged properties are ignored.\nAll changes since the last time this entity was retrieved from the Batch service (either via <xref href=\"Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Azure.Batch.JobOperations.GetJob(System.String%2cMicrosoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>,\nor <xref href=\"Microsoft.Azure.Batch.JobOperations.ListJobs(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>) are applied.\nProperties which are explicitly set to null will cause an exception because the Batch service does not support partial updates which set a property to null.\nIf you need to set a property to null, use <xref href=\"Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudJob.CommitChangesAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void CommitChanges(IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub CommitChanges(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudJob.CommitChanges*
  nameWithType.vb: CloudJob.CommitChanges(IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.CommitChanges(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: CommitChanges(IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: AddTaskAsync(CloudTask, ConcurrentDictionary<Type, IFileStagingArtifact>, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudJob.AddTaskAsync(CloudTask, ConcurrentDictionary<Type, IFileStagingArtifact>, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask, System.Collections.Concurrent.ConcurrentDictionary<System.Type, Microsoft.Azure.Batch.IFileStagingArtifact>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddTaskAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 191
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nAdds a single task to this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.  To add multiple tasks,\nuse <xref href=\"Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.CloudTask%7d%2cMicrosoft.Azure.Batch.BatchClientParallelOptions%2cSystem.Collections.Concurrent.ConcurrentBag%7bSystem.Collections.Concurrent.ConcurrentDictionary%7bSystem.Type%2cMicrosoft.Azure.Batch.IFileStagingArtifact%7d%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>Each call to this method incurs a request to the Batch service. Therefore, using this method to add\nmultiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.\nIf you are performing many of these operations in parallel and are seeing client side timeouts, please see \nhttp://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx\nor use JobOperations.AddTaskAsync.</p>\n<p>The add task operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task AddTaskAsync(CloudTask taskToAdd, ConcurrentDictionary<Type, IFileStagingArtifact> allFileStagingArtifacts = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function AddTaskAsync(taskToAdd As CloudTask, allFileStagingArtifacts As ConcurrentDictionary(Of Type, IFileStagingArtifact) = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: taskToAdd
      type: Microsoft.Azure.Batch.CloudTask
      description: The <xref href="Microsoft.Azure.Batch.CloudTask" data-throw-if-not-resolved="false"></xref> to add.
    - id: allFileStagingArtifacts
      type: System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}
      description: >-
        An optional collection to customize and receive information about the file staging process (see <xref href="Microsoft.Azure.Batch.CloudTask.FilesToStage" data-throw-if-not-resolved="false"></xref>).

        For more information see <xref href="Microsoft.Azure.Batch.IFileStagingArtifact" data-throw-if-not-resolved="false"></xref>.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudJob.AddTaskAsync*
  nameWithType.vb: CloudJob.AddTaskAsync(CloudTask, ConcurrentDictionary(Of Type, IFileStagingArtifact), IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask, System.Collections.Concurrent.ConcurrentDictionary(Of System.Type, Microsoft.Azure.Batch.IFileStagingArtifact), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: AddTaskAsync(CloudTask, ConcurrentDictionary(Of Type, IFileStagingArtifact), IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.AddTask(Microsoft.Azure.Batch.CloudTask,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.AddTask(Microsoft.Azure.Batch.CloudTask,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: AddTask(Microsoft.Azure.Batch.CloudTask,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: AddTask(CloudTask, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudJob.AddTask(CloudTask, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudJob.AddTask(Microsoft.Azure.Batch.CloudTask, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 223
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nAdds a single task to this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.  To add multiple tasks,\nuse <xref href=\"Microsoft.Azure.Batch.JobOperations.AddTask(System.String%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.CloudTask%7d%2cMicrosoft.Azure.Batch.BatchClientParallelOptions%2cSystem.Collections.Concurrent.ConcurrentBag%7bSystem.Collections.Concurrent.ConcurrentDictionary%7bSystem.Type%2cMicrosoft.Azure.Batch.IFileStagingArtifact%7d%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>Each call to this method incurs a request to the Batch service. Therefore, using this method to add\nmultiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.\nIf you are performing many of these operations in parallel and are seeing client side timeouts, please see \nhttp://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx\nor use JobOperations.AddTask.</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask%2cSystem.Collections.Concurrent.ConcurrentDictionary%7bSystem.Type%2cMicrosoft.Azure.Batch.IFileStagingArtifact%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public ConcurrentDictionary<Type, IFileStagingArtifact> AddTask(CloudTask taskToAdd, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function AddTask(taskToAdd As CloudTask, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As ConcurrentDictionary(Of Type, IFileStagingArtifact)
    parameters:
    - id: taskToAdd
      type: Microsoft.Azure.Batch.CloudTask
      description: The <xref href="Microsoft.Azure.Batch.CloudTask" data-throw-if-not-resolved="false"></xref> to add.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}
      description: >-
        A collection of information about the file staging process (see <xref href="Microsoft.Azure.Batch.CloudTask.FilesToStage" data-throw-if-not-resolved="false"></xref>).

        For more information see <xref href="Microsoft.Azure.Batch.IFileStagingArtifact" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudJob.AddTask*
  nameWithType.vb: CloudJob.AddTask(CloudTask, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.AddTask(Microsoft.Azure.Batch.CloudTask, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: AddTask(CloudTask, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudJob.AddTaskAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: AddTaskAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: AddTaskAsync(IEnumerable<CloudTask>, BatchClientParallelOptions, ConcurrentBag<ConcurrentDictionary<Type, IFileStagingArtifact>>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudJob.AddTaskAsync(IEnumerable<CloudTask>, BatchClientParallelOptions, ConcurrentBag<ConcurrentDictionary<Type, IFileStagingArtifact>>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudJob.AddTaskAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.CloudTask>, Microsoft.Azure.Batch.BatchClientParallelOptions, System.Collections.Concurrent.ConcurrentBag<System.Collections.Concurrent.ConcurrentDictionary<System.Type, Microsoft.Azure.Batch.IFileStagingArtifact>>, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddTaskAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 270
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nAdds tasks to a job.\n"
  remarks: "\n<p>The add task operation runs asynchronously.</p>\n<p>This method is not atomic; that is, it is possible for the method to start adding tasks and\nthen fail. The collection of tasks to add is broken down into chunks of size at most <xref href=\"Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest\" data-throw-if-not-resolved=\"false\"></xref>,\nand an AddTaskCollection request is issued for each chunk.  Requests may be issued in parallel according to\nthe <span class=\"paramref\">parallelOptions</span>.</p>\n<p>Issuing a large number of simultaneous requests to the Batch service can incur HTTP connection restrictions.\nIf you are performing many of these operations in parallel (or have specified a large MaxDegreeOfParallelism in\nthe parallelOptions) and are seeing client side timeouts, please see \nhttp://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx .</p>\n<p>The progress of the operation in the face of errors is determined by <xref href=\"Microsoft.Azure.Batch.AddTaskCollectionResultHandler\" data-throw-if-not-resolved=\"false\"></xref> behavior.\nYou do not normally need to specify this behavior, as the Batch client uses a default which works in normal circumstances.\nIf you do want to customize this behavior, specify an AddTaskCollectionResultHandler in the <xref href=\"Microsoft.Azure.Batch.CloudJob.CustomBehaviors\" data-throw-if-not-resolved=\"false\"></xref>\nor <span class=\"paramref\">additionalBehaviors</span> collections.</p>\n"
  example: []
  syntax:
    content: public Task AddTaskAsync(IEnumerable<CloudTask> tasksToAdd, BatchClientParallelOptions parallelOptions = null, ConcurrentBag<ConcurrentDictionary<Type, IFileStagingArtifact>> fileStagingArtifacts = null, TimeSpan? timeout = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function AddTaskAsync(tasksToAdd As IEnumerable(Of CloudTask), parallelOptions As BatchClientParallelOptions = Nothing, fileStagingArtifacts As ConcurrentBag(Of ConcurrentDictionary(Of Type, IFileStagingArtifact)) = Nothing, timeout As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As Task
    parameters:
    - id: tasksToAdd
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask}
      description: The <xref href="Microsoft.Azure.Batch.CloudTask" data-throw-if-not-resolved="false"></xref>s to add.
    - id: parallelOptions
      type: Microsoft.Azure.Batch.BatchClientParallelOptions
      description: "\nControls the number of simultaneous parallel AddTaskCollection requests issued to the Batch service.  Each AddTaskCollection request contains at most\n<xref href=\"Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest\" data-throw-if-not-resolved=\"false\"></xref> tasks in it.\nAlso controls the cancellation token for the operation.\nIf omitted, the default is used (see <xref href=\"Microsoft.Azure.Batch.BatchClientParallelOptions\" data-throw-if-not-resolved=\"false\"></xref>.)\n"
    - id: fileStagingArtifacts
      type: System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}}
      description: >-
        An optional collection to receive information about the file staging process (see <xref href="Microsoft.Azure.Batch.CloudTask.FilesToStage" data-throw-if-not-resolved="false"></xref>).

        An entry is added to the <xref href="System.Collections.Concurrent.ConcurrentBag%601" data-throw-if-not-resolved="false"></xref> for each set of tasks grouped for submission to the Batch service.

        Unlike single-task adds, you cannot use this parameter to customize the file staging process.

        For more information about the format of each entry, see <xref href="Microsoft.Azure.Batch.IFileStagingArtifact" data-throw-if-not-resolved="false"></xref>.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: The amount of time after which the operation times out.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudJob.AddTaskAsync*
  exceptions:
  - type: Microsoft.Azure.Batch.ParallelOperationsException
    commentId: T:Microsoft.Azure.Batch.ParallelOperationsException
    description: Thrown if one or more requests to the Batch service fail.
  nameWithType.vb: CloudJob.AddTaskAsync(IEnumerable(Of CloudTask), BatchClientParallelOptions, ConcurrentBag(Of ConcurrentDictionary(Of Type, IFileStagingArtifact)), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.AddTaskAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.CloudTask), Microsoft.Azure.Batch.BatchClientParallelOptions, System.Collections.Concurrent.ConcurrentBag(Of System.Collections.Concurrent.ConcurrentDictionary(Of System.Type, Microsoft.Azure.Batch.IFileStagingArtifact)), System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: AddTaskAsync(IEnumerable(Of CloudTask), BatchClientParallelOptions, ConcurrentBag(Of ConcurrentDictionary(Of Type, IFileStagingArtifact)), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudJob.AddTask(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.AddTask(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: AddTask(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: AddTask(IEnumerable<CloudTask>, BatchClientParallelOptions, ConcurrentBag<ConcurrentDictionary<Type, IFileStagingArtifact>>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudJob.AddTask(IEnumerable<CloudTask>, BatchClientParallelOptions, ConcurrentBag<ConcurrentDictionary<Type, IFileStagingArtifact>>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudJob.AddTask(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.CloudTask>, Microsoft.Azure.Batch.BatchClientParallelOptions, System.Collections.Concurrent.ConcurrentBag<System.Collections.Concurrent.ConcurrentDictionary<System.Type, Microsoft.Azure.Batch.IFileStagingArtifact>>, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 319
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nAdds tasks to a job.\n"
  remarks: "\n<p>This is a blocking operation; for a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudJob.AddTaskAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.CloudTask%7d%2cMicrosoft.Azure.Batch.BatchClientParallelOptions%2cSystem.Collections.Concurrent.ConcurrentBag%7bSystem.Collections.Concurrent.ConcurrentDictionary%7bSystem.Type%2cMicrosoft.Azure.Batch.IFileStagingArtifact%7d%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method is not atomic; that is, it is possible for the method to start adding tasks and\nthen fail. The collection of tasks to add is broken down into chunks of size at most <xref href=\"Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest\" data-throw-if-not-resolved=\"false\"></xref>,\nand an AddTaskCollection request is issued for each chunk.  Requests may be issued in parallel according to\nthe <span class=\"paramref\">parallelOptions</span>.</p>\n<p>Issuing a large number of simultaneous requests to the Batch service can incur HTTP connection restrictions.\nIf you are performing many of these operations in parallel (or have specified a large MaxDegreeOfParallelism in\nthe parallelOptions) and are seeing client side timeouts, please see \nhttp://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx .</p>\n<p>The progress of the operation in the face of errors is determined by <xref href=\"Microsoft.Azure.Batch.AddTaskCollectionResultHandler\" data-throw-if-not-resolved=\"false\"></xref> behavior.\nYou do not normally need to specify this behavior, as the Batch client uses a default which works in normal circumstances.\nIf you do want to customize this behavior, specify an AddTaskCollectionResultHandler in the <xref href=\"Microsoft.Azure.Batch.CloudJob.CustomBehaviors\" data-throw-if-not-resolved=\"false\"></xref>\nor <span class=\"paramref\">additionalBehaviors</span> collections.</p>\n"
  example: []
  syntax:
    content: public void AddTask(IEnumerable<CloudTask> tasksToAdd, BatchClientParallelOptions parallelOptions = null, ConcurrentBag<ConcurrentDictionary<Type, IFileStagingArtifact>> fileStagingArtifacts = null, TimeSpan? timeout = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub AddTask(tasksToAdd As IEnumerable(Of CloudTask), parallelOptions As BatchClientParallelOptions = Nothing, fileStagingArtifacts As ConcurrentBag(Of ConcurrentDictionary(Of Type, IFileStagingArtifact)) = Nothing, timeout As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: tasksToAdd
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask}
      description: The <xref href="Microsoft.Azure.Batch.CloudTask" data-throw-if-not-resolved="false"></xref>s to add.
    - id: parallelOptions
      type: Microsoft.Azure.Batch.BatchClientParallelOptions
      description: "\nControls the number of simultaneous parallel AddTaskCollection requests issued to the Batch service.  Each AddTaskCollection request contains at most\n<xref href=\"Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest\" data-throw-if-not-resolved=\"false\"></xref> tasks in it.\nAlso controls the cancellation token for the operation.\nIf omitted, the default is used (see <xref href=\"Microsoft.Azure.Batch.BatchClientParallelOptions\" data-throw-if-not-resolved=\"false\"></xref>.)\n"
    - id: fileStagingArtifacts
      type: System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}}
      description: >-
        An optional collection to receive information about the file staging process (see <xref href="Microsoft.Azure.Batch.CloudTask.FilesToStage" data-throw-if-not-resolved="false"></xref>).

        An entry is added to the <xref href="System.Collections.Concurrent.ConcurrentBag%601" data-throw-if-not-resolved="false"></xref> for each set of tasks grouped for submission to the Batch service.

        Unlike single-task adds, you cannot use this parameter to customize the file staging process.

        For more information about the format of each entry, see <xref href="Microsoft.Azure.Batch.IFileStagingArtifact" data-throw-if-not-resolved="false"></xref>.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: The amount of time after which the operation times out.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudJob.AddTask*
  exceptions:
  - type: Microsoft.Azure.Batch.ParallelOperationsException
    commentId: T:Microsoft.Azure.Batch.ParallelOperationsException
    description: Thrown if one or more requests to the Batch service fail.
  nameWithType.vb: CloudJob.AddTask(IEnumerable(Of CloudTask), BatchClientParallelOptions, ConcurrentBag(Of ConcurrentDictionary(Of Type, IFileStagingArtifact)), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.AddTask(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.CloudTask), Microsoft.Azure.Batch.BatchClientParallelOptions, System.Collections.Concurrent.ConcurrentBag(Of System.Collections.Concurrent.ConcurrentDictionary(Of System.Type, Microsoft.Azure.Batch.IFileStagingArtifact)), System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: AddTask(IEnumerable(Of CloudTask), BatchClientParallelOptions, ConcurrentBag(Of ConcurrentDictionary(Of Type, IFileStagingArtifact)), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudJob.ListTasks(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.ListTasks(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: ListTasks(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: ListTasks(DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudJob.ListTasks(DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudJob.ListTasks(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListTasks
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 342
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nEnumerates the <xref href=\"Microsoft.Azure.Batch.CloudTask\" data-throw-if-not-resolved=\"false\"></xref> of this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: >-
    This method returns immediately; the tasks are retrieved from the Batch service only when the collection is enumerated.

    Retrieval is non-atomic; tasks are retrieved in pages during enumeration of the collection.
  example: []
  syntax:
    content: public IPagedEnumerable<CloudTask> ListTasks(DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function ListTasks(detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As IPagedEnumerable(Of CloudTask)
    parameters:
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: A <xref href="Microsoft.Azure.Batch.DetailLevel" data-throw-if-not-resolved="false"></xref> used for filtering the list and for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref> and <span class="paramref">detailLevel</span>.
    return:
      type: Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.CloudTask}
      description: An <xref href="Microsoft.Azure.Batch.IPagedEnumerable%601" data-throw-if-not-resolved="false"></xref> that can be used to enumerate tasks asynchronously or synchronously.
  overload: Microsoft.Azure.Batch.CloudJob.ListTasks*
  nameWithType.vb: CloudJob.ListTasks(DetailLevel, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.ListTasks(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: ListTasks(DetailLevel, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: GetTaskAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: GetTaskAsync(String, DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudJob.GetTaskAsync(String, DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetTaskAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 364
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the specified <xref href=\"Microsoft.Azure.Batch.CloudTask\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: The get task operation runs asynchronously.
  example: []
  syntax:
    content: public Task<CloudTask> GetTaskAsync(string taskId, DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetTaskAsync(taskId As String, detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CloudTask)
    parameters:
    - id: taskId
      type: System.String
      description: The id of the task to get.
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: A <xref href="Microsoft.Azure.Batch.DetailLevel" data-throw-if-not-resolved="false"></xref> used for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref> and <span class="paramref">detailLevel</span>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.CloudTask}
      description: A <xref href="Microsoft.Azure.Batch.CloudTask" data-throw-if-not-resolved="false"></xref> containing information about the specified Azure Batch task.
  overload: Microsoft.Azure.Batch.CloudJob.GetTaskAsync*
  nameWithType.vb: CloudJob.GetTaskAsync(String, DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: GetTaskAsync(String, DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.GetTask(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.GetTask(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: GetTask(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: GetTask(String, DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudJob.GetTask(String, DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudJob.GetTask(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 392
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the specified <xref href=\"Microsoft.Azure.Batch.CloudTask\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: This is a blocking operation. For a non-blocking equivalent, see <xref href="Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String%2cMicrosoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public CloudTask GetTask(string taskId, DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function GetTask(taskId As String, detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As CloudTask
    parameters:
    - id: taskId
      type: System.String
      description: The id of the task to get.
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: A <xref href="Microsoft.Azure.Batch.DetailLevel" data-throw-if-not-resolved="false"></xref> used for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref> and <span class="paramref">detailLevel</span>.
    return:
      type: Microsoft.Azure.Batch.CloudTask
      description: A <xref href="Microsoft.Azure.Batch.CloudTask" data-throw-if-not-resolved="false"></xref> containing information about the specified Azure Batch task.
  overload: Microsoft.Azure.Batch.CloudJob.GetTask*
  nameWithType.vb: CloudJob.GetTask(String, DetailLevel, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.GetTask(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: GetTask(String, DetailLevel, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: EnableAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudJob.EnableAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 412
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nEnables this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>, allowing new tasks to run.\n"
  remarks: The enable operation runs asynchronously.
  example: []
  syntax:
    content: public Task EnableAsync(IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function EnableAsync(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudJob.EnableAsync*
  nameWithType.vb: CloudJob.EnableAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: EnableAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: Enable(IEnumerable<BatchClientBehavior>)
  nameWithType: CloudJob.Enable(IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudJob.Enable(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Enable
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 431
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nEnables this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>, allowing new tasks to run.\n"
  remarks: This is a blocking operation. For a non-blocking equivalent, see <xref href="Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Enable(IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Enable(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudJob.Enable*
  nameWithType.vb: CloudJob.Enable(IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.Enable(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Enable(IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: DisableAsync(DisableJobOption, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudJob.DisableAsync(DisableJobOption, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisableAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 447
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDisables this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.  Disabled jobs do not run new tasks, but may be re-enabled later.\n"
  remarks: The disable operation runs asynchronously.
  example: []
  syntax:
    content: public Task DisableAsync(DisableJobOption disableJobOption, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function DisableAsync(disableJobOption As DisableJobOption, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: disableJobOption
      type: Microsoft.Azure.Batch.Common.DisableJobOption
      description: Specifies what to do with active tasks associated with the job.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudJob.DisableAsync*
  nameWithType.vb: CloudJob.DisableAsync(DisableJobOption, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: DisableAsync(DisableJobOption, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.Disable(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.Disable(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Disable(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: Disable(DisableJobOption, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudJob.Disable(DisableJobOption, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudJob.Disable(Microsoft.Azure.Batch.Common.DisableJobOption, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Disable
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 470
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDisables this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.  Disabled jobs do not run new tasks, but may be re-enabled later.\n"
  remarks: This is a blocking operation. For a non-blocking equivalent, see <xref href="Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Disable(DisableJobOption disableJobOption, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Disable(disableJobOption As DisableJobOption, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: disableJobOption
      type: Microsoft.Azure.Batch.Common.DisableJobOption
      description: Specifies what to do with active tasks associated with the job.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudJob.Disable*
  nameWithType.vb: CloudJob.Disable(DisableJobOption, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.Disable(Microsoft.Azure.Batch.Common.DisableJobOption, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Disable(DisableJobOption, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: TerminateAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: TerminateAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudJob.TerminateAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TerminateAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 486
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nTerminates this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>, marking it as completed.\n"
  remarks: The terminate operation runs asynchronously.
  example: []
  syntax:
    content: public Task TerminateAsync(string terminateReason = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function TerminateAsync(terminateReason As String = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: terminateReason
      type: System.String
      description: The text you want to appear as the job's <xref href="Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason" data-throw-if-not-resolved="false"></xref>.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudJob.TerminateAsync*
  nameWithType.vb: CloudJob.TerminateAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: TerminateAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.Terminate(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.Terminate(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Terminate(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: Terminate(String, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudJob.Terminate(String, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudJob.Terminate(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Terminate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 509
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nTerminates this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>, marking it as completed.\n"
  remarks: This is a blocking operation. For a non-blocking equivalent, see <xref href="Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Terminate(string terminateReason = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Terminate(terminateReason As String = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: terminateReason
      type: System.String
      description: The text you want to appear as the job's <xref href="Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason" data-throw-if-not-resolved="false"></xref>.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudJob.Terminate*
  nameWithType.vb: CloudJob.Terminate(String, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.Terminate(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Terminate(String, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: DeleteAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudJob.DeleteAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 528
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDeletes this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>The delete operation requests that the job be deleted.  The request puts the job in the <xref href=\"Microsoft.Azure.Batch.Common.JobState.Deleting\" data-throw-if-not-resolved=\"false\"></xref> state.\nThe Batch service will stop any running tasks and perform the actual job deletion without any further client action.</p>\n<p>The delete operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task DeleteAsync(IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function DeleteAsync(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudJob.DeleteAsync*
  nameWithType.vb: CloudJob.DeleteAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: DeleteAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: Delete(IEnumerable<BatchClientBehavior>)
  nameWithType: CloudJob.Delete(IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudJob.Delete(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 551
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDeletes this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>The delete operation requests that the job be deleted.  The request puts the job in the <xref href=\"Microsoft.Azure.Batch.Common.JobState.Deleting\" data-throw-if-not-resolved=\"false\"></xref> state.\nThe Batch service will stop any running tasks and perform the actual job deletion without any further client action.</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void Delete(IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Delete(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudJob.Delete*
  nameWithType.vb: CloudJob.Delete(IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.Delete(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Delete(IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudJob.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudJob.RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudJob.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RefreshAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 566
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRefreshes the current <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task RefreshAsync(DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function RefreshAsync(detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: The detail level for the refresh.  If a detail level which omits the <xref href="Microsoft.Azure.Batch.CloudJob.Id" data-throw-if-not-resolved="false"></xref> property is specified, refresh will fail.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous refresh operation.
  overload: Microsoft.Azure.Batch.CloudJob.RefreshAsync*
  implements:
  - Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  nameWithType.vb: CloudJob.RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudJob.Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Refresh
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudJob.cs
    startLine: 594
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRefreshes the current <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Refresh(DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Refresh(detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: The detail level for the refresh.  If a detail level which omits the <xref href="Microsoft.Azure.Batch.CloudJob.Id" data-throw-if-not-resolved="false"></xref> property is specified, refresh will fail.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudJob.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudJob.Refresh*
  implements:
  - Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  nameWithType.vb: CloudJob.Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudJob.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors
  id: CustomBehaviors
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: CustomBehaviors
  nameWithType: CloudJob.CustomBehaviors
  fullName: Microsoft.Azure.Batch.CloudJob.CustomBehaviors
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomBehaviors
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 227
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of behaviors that modify or customize requests to the Batch service\nmade via this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>These behaviors are inherited by child objects.</p>\n<p>Modifications are applied in the order of the collection. The last write wins.</p>\n"
  example: []
  syntax:
    content: public IList<BatchClientBehavior> CustomBehaviors { get; set; }
    content.vb: Public Property CustomBehaviors As IList(Of BatchClientBehavior)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  overload: Microsoft.Azure.Batch.CloudJob.CustomBehaviors*
  implements:
  - Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.CommonEnvironmentSettings
  commentId: P:Microsoft.Azure.Batch.CloudJob.CommonEnvironmentSettings
  id: CommonEnvironmentSettings
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: CommonEnvironmentSettings
  nameWithType: CloudJob.CommonEnvironmentSettings
  fullName: Microsoft.Azure.Batch.CloudJob.CommonEnvironmentSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommonEnvironmentSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 237
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of common environment variable settings. These environment variables are set for all tasks \nin this <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> (including the Job Manager, Job Preparation and Job Release tasks).\n"
  example: []
  syntax:
    content: public IList<EnvironmentSetting> CommonEnvironmentSettings { get; set; }
    content.vb: Public Property CommonEnvironmentSettings As IList(Of EnvironmentSetting)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.EnvironmentSetting}
  overload: Microsoft.Azure.Batch.CloudJob.CommonEnvironmentSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.Constraints
  commentId: P:Microsoft.Azure.Batch.CloudJob.Constraints
  id: Constraints
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: CloudJob.Constraints
  fullName: Microsoft.Azure.Batch.CloudJob.Constraints
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Constraints
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 249
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the execution constraints for the job.\n"
  example: []
  syntax:
    content: public JobConstraints Constraints { get; set; }
    content.vb: Public Property Constraints As JobConstraints
    parameters: []
    return:
      type: Microsoft.Azure.Batch.JobConstraints
  overload: Microsoft.Azure.Batch.CloudJob.Constraints*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.CreationTime
  commentId: P:Microsoft.Azure.Batch.CloudJob.CreationTime
  id: CreationTime
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: CreationTime
  nameWithType: CloudJob.CreationTime
  fullName: Microsoft.Azure.Batch.CloudJob.CreationTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreationTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 258
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the creation time of the job.\n"
  example: []
  syntax:
    content: public DateTime? CreationTime { get; }
    content.vb: Public ReadOnly Property CreationTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.CloudJob.CreationTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudJob.DisplayName
  commentId: P:Microsoft.Azure.Batch.CloudJob.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: CloudJob.DisplayName
  fullName: Microsoft.Azure.Batch.CloudJob.DisplayName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 266
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the display name of the job.\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    content.vb: Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudJob.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.ETag
  commentId: P:Microsoft.Azure.Batch.CloudJob.ETag
  id: ETag
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: CloudJob.ETag
  fullName: Microsoft.Azure.Batch.CloudJob.ETag
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ETag
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 275
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the ETag for the job.\n"
  example: []
  syntax:
    content: public string ETag { get; }
    content.vb: Public ReadOnly Property ETag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudJob.ETag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudJob.ExecutionInformation
  commentId: P:Microsoft.Azure.Batch.CloudJob.ExecutionInformation
  id: ExecutionInformation
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: ExecutionInformation
  nameWithType: CloudJob.ExecutionInformation
  fullName: Microsoft.Azure.Batch.CloudJob.ExecutionInformation
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExecutionInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 283
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the execution information for the job.\n"
  example: []
  syntax:
    content: public JobExecutionInformation ExecutionInformation { get; }
    content.vb: Public ReadOnly Property ExecutionInformation As JobExecutionInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.JobExecutionInformation
  overload: Microsoft.Azure.Batch.CloudJob.ExecutionInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudJob.Id
  commentId: P:Microsoft.Azure.Batch.CloudJob.Id
  id: Id
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CloudJob.Id
  fullName: Microsoft.Azure.Batch.CloudJob.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 291
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the id of the job.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudJob.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.JobManagerTask
  commentId: P:Microsoft.Azure.Batch.CloudJob.JobManagerTask
  id: JobManagerTask
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: JobManagerTask
  nameWithType: CloudJob.JobManagerTask
  fullName: Microsoft.Azure.Batch.CloudJob.JobManagerTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobManagerTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 300
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the Job Manager task. The Job Manager task is launched when the <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> is started.\n"
  example: []
  syntax:
    content: public JobManagerTask JobManagerTask { get; set; }
    content.vb: Public Property JobManagerTask As JobManagerTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.JobManagerTask
  overload: Microsoft.Azure.Batch.CloudJob.JobManagerTask*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.JobPreparationTask
  commentId: P:Microsoft.Azure.Batch.CloudJob.JobPreparationTask
  id: JobPreparationTask
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: JobPreparationTask
  nameWithType: CloudJob.JobPreparationTask
  fullName: Microsoft.Azure.Batch.CloudJob.JobPreparationTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobPreparationTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 310
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the Job Preparation task. The Batch service will run the Job Preparation task on a compute node \nbefore starting any tasks of that job on that compute node.\n"
  example: []
  syntax:
    content: public JobPreparationTask JobPreparationTask { get; set; }
    content.vb: Public Property JobPreparationTask As JobPreparationTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.JobPreparationTask
  overload: Microsoft.Azure.Batch.CloudJob.JobPreparationTask*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.JobReleaseTask
  commentId: P:Microsoft.Azure.Batch.CloudJob.JobReleaseTask
  id: JobReleaseTask
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: JobReleaseTask
  nameWithType: CloudJob.JobReleaseTask
  fullName: Microsoft.Azure.Batch.CloudJob.JobReleaseTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobReleaseTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 320
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the Job Release task. The Batch service runs the Job Release task when the job ends, on each compute \nnode where any task of the job has run.\n"
  example: []
  syntax:
    content: public JobReleaseTask JobReleaseTask { get; set; }
    content.vb: Public Property JobReleaseTask As JobReleaseTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.JobReleaseTask
  overload: Microsoft.Azure.Batch.CloudJob.JobReleaseTask*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.LastModified
  commentId: P:Microsoft.Azure.Batch.CloudJob.LastModified
  id: LastModified
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: CloudJob.LastModified
  fullName: Microsoft.Azure.Batch.CloudJob.LastModified
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastModified
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 329
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the last modified time of the job.\n"
  example: []
  syntax:
    content: public DateTime? LastModified { get; }
    content.vb: Public ReadOnly Property LastModified As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.CloudJob.LastModified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudJob.Metadata
  commentId: P:Microsoft.Azure.Batch.CloudJob.Metadata
  id: Metadata
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: CloudJob.Metadata
  fullName: Microsoft.Azure.Batch.CloudJob.Metadata
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Metadata
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 337
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of name-value pairs associated with the job as metadata.\n"
  example: []
  syntax:
    content: public IList<MetadataItem> Metadata { get; set; }
    content.vb: Public Property Metadata As IList(Of MetadataItem)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.MetadataItem}
  overload: Microsoft.Azure.Batch.CloudJob.Metadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.OnAllTasksComplete
  commentId: P:Microsoft.Azure.Batch.CloudJob.OnAllTasksComplete
  id: OnAllTasksComplete
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: OnAllTasksComplete
  nameWithType: CloudJob.OnAllTasksComplete
  fullName: Microsoft.Azure.Batch.CloudJob.OnAllTasksComplete
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OnAllTasksComplete
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 350
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the action the Batch service should take when all tasks in the job are in the <xref href=\"Microsoft.Azure.Batch.Common.JobState.Completed\" data-throw-if-not-resolved=\"false\"></xref> \nstate.\n"
  example: []
  syntax:
    content: public OnAllTasksComplete? OnAllTasksComplete { get; set; }
    content.vb: Public Property OnAllTasksComplete As OnAllTasksComplete?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.OnAllTasksComplete}
  overload: Microsoft.Azure.Batch.CloudJob.OnAllTasksComplete*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.OnTaskFailure
  commentId: P:Microsoft.Azure.Batch.CloudJob.OnTaskFailure
  id: OnTaskFailure
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: OnTaskFailure
  nameWithType: CloudJob.OnTaskFailure
  fullName: Microsoft.Azure.Batch.CloudJob.OnTaskFailure
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OnTaskFailure
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 359
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the action the Batch service should take when any task in the job fails.\n"
  example: []
  syntax:
    content: public OnTaskFailure? OnTaskFailure { get; set; }
    content.vb: Public Property OnTaskFailure As OnTaskFailure?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.OnTaskFailure}
  overload: Microsoft.Azure.Batch.CloudJob.OnTaskFailure*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.PoolInformation
  commentId: P:Microsoft.Azure.Batch.CloudJob.PoolInformation
  id: PoolInformation
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: PoolInformation
  nameWithType: CloudJob.PoolInformation
  fullName: Microsoft.Azure.Batch.CloudJob.PoolInformation
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 368
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the pool on which the Batch service runs the job's tasks.\n"
  example: []
  syntax:
    content: public PoolInformation PoolInformation { get; set; }
    content.vb: Public Property PoolInformation As PoolInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.PoolInformation
  overload: Microsoft.Azure.Batch.CloudJob.PoolInformation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.PreviousState
  commentId: P:Microsoft.Azure.Batch.CloudJob.PreviousState
  id: PreviousState
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: PreviousState
  nameWithType: CloudJob.PreviousState
  fullName: Microsoft.Azure.Batch.CloudJob.PreviousState
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreviousState
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 380
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the previous state of the job.\n"
  remarks: "\nIf the job is in its initial <xref href=\"Microsoft.Azure.Batch.Common.JobState.Active\" data-throw-if-not-resolved=\"false\"></xref> state, the PreviousState property is not defined.\n"
  example: []
  syntax:
    content: public JobState? PreviousState { get; }
    content.vb: Public ReadOnly Property PreviousState As JobState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.JobState}
  overload: Microsoft.Azure.Batch.CloudJob.PreviousState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudJob.PreviousStateTransitionTime
  commentId: P:Microsoft.Azure.Batch.CloudJob.PreviousStateTransitionTime
  id: PreviousStateTransitionTime
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: PreviousStateTransitionTime
  nameWithType: CloudJob.PreviousStateTransitionTime
  fullName: Microsoft.Azure.Batch.CloudJob.PreviousStateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreviousStateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 392
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the job entered its previous state.\n"
  remarks: "\nIf the job is in its initial <xref href=\"Microsoft.Azure.Batch.Common.JobState.Active\" data-throw-if-not-resolved=\"false\"></xref> state, the PreviousStateTransitionTime property \nis not defined.\n"
  example: []
  syntax:
    content: public DateTime? PreviousStateTransitionTime { get; }
    content.vb: Public ReadOnly Property PreviousStateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.CloudJob.PreviousStateTransitionTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudJob.Priority
  commentId: P:Microsoft.Azure.Batch.CloudJob.Priority
  id: Priority
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: CloudJob.Priority
  fullName: Microsoft.Azure.Batch.CloudJob.Priority
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Priority
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 404
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest \npriority and 1000 being the highest priority.\n"
  remarks: "\nThe default value is 0.\n"
  example: []
  syntax:
    content: public int ? Priority { get; set; }
    content.vb: Public Property Priority As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.CloudJob.Priority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudJob.State
  commentId: P:Microsoft.Azure.Batch.CloudJob.State
  id: State
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: State
  nameWithType: CloudJob.State
  fullName: Microsoft.Azure.Batch.CloudJob.State
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 413
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the current state of the job.\n"
  example: []
  syntax:
    content: public JobState? State { get; }
    content.vb: Public ReadOnly Property State As JobState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.JobState}
  overload: Microsoft.Azure.Batch.CloudJob.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudJob.StateTransitionTime
  commentId: P:Microsoft.Azure.Batch.CloudJob.StateTransitionTime
  id: StateTransitionTime
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: StateTransitionTime
  nameWithType: CloudJob.StateTransitionTime
  fullName: Microsoft.Azure.Batch.CloudJob.StateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 421
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the job entered its current state.\n"
  example: []
  syntax:
    content: public DateTime? StateTransitionTime { get; }
    content.vb: Public ReadOnly Property StateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.CloudJob.StateTransitionTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudJob.Statistics
  commentId: P:Microsoft.Azure.Batch.CloudJob.Statistics
  id: Statistics
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: Statistics
  nameWithType: CloudJob.Statistics
  fullName: Microsoft.Azure.Batch.CloudJob.Statistics
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Statistics
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 433
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets resource usage statistics for the entire lifetime of the job.\n"
  remarks: "\nThis property is populated only if the <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> was retrieved with an <xref href=\"Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause\" data-throw-if-not-resolved=\"false\"></xref> \nincluding the 'stats' attribute; otherwise it is null.\n"
  example: []
  syntax:
    content: public JobStatistics Statistics { get; }
    content.vb: Public ReadOnly Property Statistics As JobStatistics
    parameters: []
    return:
      type: Microsoft.Azure.Batch.JobStatistics
  overload: Microsoft.Azure.Batch.CloudJob.Statistics*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudJob.Url
  commentId: P:Microsoft.Azure.Batch.CloudJob.Url
  id: Url
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: CloudJob.Url
  fullName: Microsoft.Azure.Batch.CloudJob.Url
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Url
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 441
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the URL of the job.\n"
  example: []
  syntax:
    content: public string Url { get; }
    content.vb: Public ReadOnly Property Url As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudJob.Url*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies
  commentId: P:Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies
  id: UsesTaskDependencies
  parent: Microsoft.Azure.Batch.CloudJob
  langs:
  - csharp
  - vb
  name: UsesTaskDependencies
  nameWithType: CloudJob.UsesTaskDependencies
  fullName: Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudJob.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UsesTaskDependencies
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudJob.cs
    startLine: 452
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets whether tasks in the job can define dependencies on each other.\n"
  remarks: "\nThe default value is false.\n"
  example: []
  syntax:
    content: public bool ? UsesTaskDependencies { get; set; }
    content.vb: Public Property UsesTaskDependencies As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Batch.IRefreshable
  commentId: T:Microsoft.Azure.Batch.IRefreshable
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IRefreshable
  nameWithType: IRefreshable
  fullName: Microsoft.Azure.Batch.IRefreshable
- uid: Microsoft.Azure.Batch.IInheritedBehaviors
  commentId: T:Microsoft.Azure.Batch.IInheritedBehaviors
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IInheritedBehaviors
  nameWithType: IInheritedBehaviors
  fullName: Microsoft.Azure.Batch.IInheritedBehaviors
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.CloudJob
  commentId: T:Microsoft.Azure.Batch.CloudJob
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudJob
  nameWithType: CloudJob
  fullName: Microsoft.Azure.Batch.CloudJob
- uid: Microsoft.Azure.Batch.BatchClientBehavior
  commentId: T:Microsoft.Azure.Batch.BatchClientBehavior
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: BatchClientBehavior
  nameWithType: BatchClientBehavior
  fullName: Microsoft.Azure.Batch.BatchClientBehavior
- uid: Microsoft.Azure.Batch.CloudJob.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Batch.CloudJob.CommitAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.CommitAsync
  isExternal: false
  name: CommitAsync
  nameWithType: CloudJob.CommitAsync
  fullName: Microsoft.Azure.Batch.CloudJob.CommitAsync
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BatchClientBehavior>
  nameWithType: IEnumerable<BatchClientBehavior>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>
  nameWithType.vb: IEnumerable(Of BatchClientBehavior)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior)
  name.vb: IEnumerable(Of BatchClientBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.Commit*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.Commit
  isExternal: false
  name: Commit
  nameWithType: CloudJob.Commit
  fullName: Microsoft.Azure.Batch.CloudJob.Commit
- uid: Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.JobOperations.GetJob(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.JobOperations.GetJob(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.JobOperations.ListJobs(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.JobOperations.ListJobs(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.CloudJob.CommitChangesAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.CommitChangesAsync
  isExternal: false
  name: CommitChangesAsync
  nameWithType: CloudJob.CommitChangesAsync
  fullName: Microsoft.Azure.Batch.CloudJob.CommitChangesAsync
- uid: Microsoft.Azure.Batch.CloudJob.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.CommitChanges*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.CommitChanges
  isExternal: false
  name: CommitChanges
  nameWithType: CloudJob.CommitChanges
  fullName: Microsoft.Azure.Batch.CloudJob.CommitChanges
- uid: Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.CloudTask
  commentId: T:Microsoft.Azure.Batch.CloudTask
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudTask
  nameWithType: CloudTask
  fullName: Microsoft.Azure.Batch.CloudTask
- uid: Microsoft.Azure.Batch.CloudTask.FilesToStage
  commentId: P:Microsoft.Azure.Batch.CloudTask.FilesToStage
- uid: Microsoft.Azure.Batch.IFileStagingArtifact
  commentId: T:Microsoft.Azure.Batch.IFileStagingArtifact
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IFileStagingArtifact
  nameWithType: IFileStagingArtifact
  fullName: Microsoft.Azure.Batch.IFileStagingArtifact
- uid: Microsoft.Azure.Batch.CloudJob.AddTaskAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.AddTaskAsync
  isExternal: false
  name: AddTaskAsync
  nameWithType: CloudJob.AddTaskAsync
  fullName: Microsoft.Azure.Batch.CloudJob.AddTaskAsync
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentDictionary`2
  name: ConcurrentDictionary<Type, IFileStagingArtifact>
  nameWithType: ConcurrentDictionary<Type, IFileStagingArtifact>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Type, Microsoft.Azure.Batch.IFileStagingArtifact>
  nameWithType.vb: ConcurrentDictionary(Of Type, IFileStagingArtifact)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Type, Microsoft.Azure.Batch.IFileStagingArtifact)
  name.vb: ConcurrentDictionary(Of Type, IFileStagingArtifact)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Batch.IFileStagingArtifact
    name: IFileStagingArtifact
    nameWithType: IFileStagingArtifact
    fullName: Microsoft.Azure.Batch.IFileStagingArtifact
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Batch.IFileStagingArtifact
    name: IFileStagingArtifact
    nameWithType: IFileStagingArtifact
    fullName: Microsoft.Azure.Batch.IFileStagingArtifact
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: false
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
- uid: Microsoft.Azure.Batch.JobOperations.AddTask(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.AddTask*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.AddTask
  isExternal: false
  name: AddTask
  nameWithType: CloudJob.AddTask
  fullName: Microsoft.Azure.Batch.CloudJob.AddTask
- uid: Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest
  commentId: F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest
- uid: Microsoft.Azure.Batch.BatchClientParallelOptions
  commentId: T:Microsoft.Azure.Batch.BatchClientParallelOptions
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: BatchClientParallelOptions
  nameWithType: BatchClientParallelOptions
  fullName: Microsoft.Azure.Batch.BatchClientParallelOptions
- uid: System.Collections.Concurrent.ConcurrentBag`1
  commentId: T:System.Collections.Concurrent.ConcurrentBag`1
  isExternal: true
  name: ConcurrentBag<T>
  nameWithType: ConcurrentBag<T>
  fullName: System.Collections.Concurrent.ConcurrentBag<T>
  nameWithType.vb: ConcurrentBag(Of T)
  fullname.vb: System.Collections.Concurrent.ConcurrentBag(Of T)
  name.vb: ConcurrentBag(Of T)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentBag`1
    name: ConcurrentBag
    nameWithType: ConcurrentBag
    fullName: System.Collections.Concurrent.ConcurrentBag
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentBag`1
    name: ConcurrentBag
    nameWithType: ConcurrentBag
    fullName: System.Collections.Concurrent.ConcurrentBag
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.AddTaskCollectionResultHandler
  commentId: T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler
  isExternal: false
  name: AddTaskCollectionResultHandler
  nameWithType: AddTaskCollectionResultHandler
  fullName: Microsoft.Azure.Batch.AddTaskCollectionResultHandler
- uid: Microsoft.Azure.Batch.ParallelOperationsException
  commentId: T:Microsoft.Azure.Batch.ParallelOperationsException
  isExternal: false
  name: ParallelOperationsException
  nameWithType: ParallelOperationsException
  fullName: Microsoft.Azure.Batch.ParallelOperationsException
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CloudTask>
  nameWithType: IEnumerable<CloudTask>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.CloudTask>
  nameWithType.vb: IEnumerable(Of CloudTask)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.CloudTask)
  name.vb: IEnumerable(Of CloudTask)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.CloudTask
    name: CloudTask
    nameWithType: CloudTask
    fullName: Microsoft.Azure.Batch.CloudTask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.CloudTask
    name: CloudTask
    nameWithType: CloudTask
    fullName: Microsoft.Azure.Batch.CloudTask
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}}
  commentId: T:System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentBag`1
  name: ConcurrentBag<ConcurrentDictionary<Type, IFileStagingArtifact>>
  nameWithType: ConcurrentBag<ConcurrentDictionary<Type, IFileStagingArtifact>>
  fullName: System.Collections.Concurrent.ConcurrentBag<System.Collections.Concurrent.ConcurrentDictionary<System.Type, Microsoft.Azure.Batch.IFileStagingArtifact>>
  nameWithType.vb: ConcurrentBag(Of ConcurrentDictionary(Of Type, IFileStagingArtifact))
  fullname.vb: System.Collections.Concurrent.ConcurrentBag(Of System.Collections.Concurrent.ConcurrentDictionary(Of System.Type, Microsoft.Azure.Batch.IFileStagingArtifact))
  name.vb: ConcurrentBag(Of ConcurrentDictionary(Of Type, IFileStagingArtifact))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentBag`1
    name: ConcurrentBag
    nameWithType: ConcurrentBag
    fullName: System.Collections.Concurrent.ConcurrentBag
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Batch.IFileStagingArtifact
    name: IFileStagingArtifact
    nameWithType: IFileStagingArtifact
    fullName: Microsoft.Azure.Batch.IFileStagingArtifact
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentBag`1
    name: ConcurrentBag
    nameWithType: ConcurrentBag
    fullName: System.Collections.Concurrent.ConcurrentBag
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Batch.IFileStagingArtifact
    name: IFileStagingArtifact
    nameWithType: IFileStagingArtifact
    fullName: Microsoft.Azure.Batch.IFileStagingArtifact
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.AddTaskAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.DetailLevel
  commentId: T:Microsoft.Azure.Batch.DetailLevel
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: DetailLevel
  nameWithType: DetailLevel
  fullName: Microsoft.Azure.Batch.DetailLevel
- uid: Microsoft.Azure.Batch.IPagedEnumerable`1
  commentId: T:Microsoft.Azure.Batch.IPagedEnumerable`1
  isExternal: false
  name: IPagedEnumerable<T>
  nameWithType: IPagedEnumerable<T>
  fullName: Microsoft.Azure.Batch.IPagedEnumerable<T>
  nameWithType.vb: IPagedEnumerable(Of T)
  fullname.vb: Microsoft.Azure.Batch.IPagedEnumerable(Of T)
  name.vb: IPagedEnumerable(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.ListTasks*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.ListTasks
  isExternal: false
  name: ListTasks
  nameWithType: CloudJob.ListTasks
  fullName: Microsoft.Azure.Batch.CloudJob.ListTasks
- uid: Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.CloudTask}
  commentId: T:Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.CloudTask}
  parent: Microsoft.Azure.Batch
  definition: Microsoft.Azure.Batch.IPagedEnumerable`1
  name: IPagedEnumerable<CloudTask>
  nameWithType: IPagedEnumerable<CloudTask>
  fullName: Microsoft.Azure.Batch.IPagedEnumerable<Microsoft.Azure.Batch.CloudTask>
  nameWithType.vb: IPagedEnumerable(Of CloudTask)
  fullname.vb: Microsoft.Azure.Batch.IPagedEnumerable(Of Microsoft.Azure.Batch.CloudTask)
  name.vb: IPagedEnumerable(Of CloudTask)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.CloudTask
    name: CloudTask
    nameWithType: CloudTask
    fullName: Microsoft.Azure.Batch.CloudTask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.CloudTask
    name: CloudTask
    nameWithType: CloudTask
    fullName: Microsoft.Azure.Batch.CloudTask
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.GetTaskAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.GetTaskAsync
  isExternal: false
  name: GetTaskAsync
  nameWithType: CloudJob.GetTaskAsync
  fullName: Microsoft.Azure.Batch.CloudJob.GetTaskAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.CloudTask}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.CloudTask}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CloudTask>
  nameWithType: Task<CloudTask>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.CloudTask>
  nameWithType.vb: Task(Of CloudTask)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.CloudTask)
  name.vb: Task(Of CloudTask)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.CloudTask
    name: CloudTask
    nameWithType: CloudTask
    fullName: Microsoft.Azure.Batch.CloudTask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.CloudTask
    name: CloudTask
    nameWithType: CloudTask
    fullName: Microsoft.Azure.Batch.CloudTask
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.GetTask*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.GetTask
  isExternal: false
  name: GetTask
  nameWithType: CloudJob.GetTask
  fullName: Microsoft.Azure.Batch.CloudJob.GetTask
- uid: Microsoft.Azure.Batch.CloudJob.EnableAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.EnableAsync
  isExternal: false
  name: EnableAsync
  nameWithType: CloudJob.EnableAsync
  fullName: Microsoft.Azure.Batch.CloudJob.EnableAsync
- uid: Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.Enable*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.Enable
  isExternal: false
  name: Enable
  nameWithType: CloudJob.Enable
  fullName: Microsoft.Azure.Batch.CloudJob.Enable
- uid: Microsoft.Azure.Batch.CloudJob.DisableAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.DisableAsync
  isExternal: false
  name: DisableAsync
  nameWithType: CloudJob.DisableAsync
  fullName: Microsoft.Azure.Batch.CloudJob.DisableAsync
- uid: Microsoft.Azure.Batch.Common.DisableJobOption
  commentId: T:Microsoft.Azure.Batch.Common.DisableJobOption
  parent: Microsoft.Azure.Batch.Common
  isExternal: false
  name: DisableJobOption
  nameWithType: DisableJobOption
  fullName: Microsoft.Azure.Batch.Common.DisableJobOption
- uid: Microsoft.Azure.Batch.Common
  commentId: N:Microsoft.Azure.Batch.Common
  isExternal: false
  name: Microsoft.Azure.Batch.Common
  nameWithType: Microsoft.Azure.Batch.Common
  fullName: Microsoft.Azure.Batch.Common
- uid: Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.Disable*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.Disable
  isExternal: false
  name: Disable
  nameWithType: CloudJob.Disable
  fullName: Microsoft.Azure.Batch.CloudJob.Disable
- uid: Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason
  commentId: P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason
- uid: Microsoft.Azure.Batch.CloudJob.TerminateAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.TerminateAsync
  isExternal: false
  name: TerminateAsync
  nameWithType: CloudJob.TerminateAsync
  fullName: Microsoft.Azure.Batch.CloudJob.TerminateAsync
- uid: Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.Terminate*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.Terminate
  isExternal: false
  name: Terminate
  nameWithType: CloudJob.Terminate
  fullName: Microsoft.Azure.Batch.CloudJob.Terminate
- uid: Microsoft.Azure.Batch.Common.JobState.Deleting
  commentId: F:Microsoft.Azure.Batch.Common.JobState.Deleting
- uid: Microsoft.Azure.Batch.CloudJob.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: CloudJob.DeleteAsync
  fullName: Microsoft.Azure.Batch.CloudJob.DeleteAsync
- uid: Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudJob.Delete*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.Delete
  isExternal: false
  name: Delete
  nameWithType: CloudJob.Delete
  fullName: Microsoft.Azure.Batch.CloudJob.Delete
- uid: Microsoft.Azure.Batch.CloudJob.Id
  commentId: P:Microsoft.Azure.Batch.CloudJob.Id
- uid: Microsoft.Azure.Batch.CloudJob.RefreshAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.RefreshAsync
  isExternal: false
  name: RefreshAsync
  nameWithType: CloudJob.RefreshAsync
  fullName: Microsoft.Azure.Batch.CloudJob.RefreshAsync
- uid: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.IRefreshable
  isExternal: true
  name: RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: IRefreshable.RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  nameWithType.vb: IRefreshable.RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  fullname.vb: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
    name: RefreshAsync
    nameWithType: IRefreshable.RefreshAsync
    fullName: Microsoft.Azure.Batch.IRefreshable.RefreshAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
    name: RefreshAsync
    nameWithType: IRefreshable.RefreshAsync
    fullName: Microsoft.Azure.Batch.IRefreshable.RefreshAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.Refresh*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.Refresh
  isExternal: false
  name: Refresh
  nameWithType: CloudJob.Refresh
  fullName: Microsoft.Azure.Batch.CloudJob.Refresh
- uid: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.IRefreshable
  isExternal: true
  name: Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: IRefreshable.Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  nameWithType.vb: IRefreshable.Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
  fullname.vb: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
    name: Refresh
    nameWithType: IRefreshable.Refresh
    fullName: Microsoft.Azure.Batch.IRefreshable.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
    name: Refresh
    nameWithType: IRefreshable.Refresh
    fullName: Microsoft.Azure.Batch.IRefreshable.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.CustomBehaviors*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.CustomBehaviors
  isExternal: false
  name: CustomBehaviors
  nameWithType: CloudJob.CustomBehaviors
  fullName: Microsoft.Azure.Batch.CloudJob.CustomBehaviors
- uid: Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  parent: Microsoft.Azure.Batch.IInheritedBehaviors
  isExternal: false
  name: CustomBehaviors
  nameWithType: IInheritedBehaviors.CustomBehaviors
  fullName: Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<BatchClientBehavior>
  nameWithType: IList<BatchClientBehavior>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.BatchClientBehavior>
  nameWithType.vb: IList(Of BatchClientBehavior)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.BatchClientBehavior)
  name.vb: IList(Of BatchClientBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.CommonEnvironmentSettings*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.CommonEnvironmentSettings
  isExternal: false
  name: CommonEnvironmentSettings
  nameWithType: CloudJob.CommonEnvironmentSettings
  fullName: Microsoft.Azure.Batch.CloudJob.CommonEnvironmentSettings
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.EnvironmentSetting}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.EnvironmentSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EnvironmentSetting>
  nameWithType: IList<EnvironmentSetting>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.EnvironmentSetting>
  nameWithType.vb: IList(Of EnvironmentSetting)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.EnvironmentSetting)
  name.vb: IList(Of EnvironmentSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.EnvironmentSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.EnvironmentSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.Constraints*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.Constraints
  isExternal: false
  name: Constraints
  nameWithType: CloudJob.Constraints
  fullName: Microsoft.Azure.Batch.CloudJob.Constraints
- uid: Microsoft.Azure.Batch.JobConstraints
  commentId: T:Microsoft.Azure.Batch.JobConstraints
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobConstraints
  nameWithType: JobConstraints
  fullName: Microsoft.Azure.Batch.JobConstraints
- uid: Microsoft.Azure.Batch.CloudJob.CreationTime*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.CreationTime
  isExternal: false
  name: CreationTime
  nameWithType: CloudJob.CreationTime
  fullName: Microsoft.Azure.Batch.CloudJob.CreationTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.DisplayName*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: CloudJob.DisplayName
  fullName: Microsoft.Azure.Batch.CloudJob.DisplayName
- uid: Microsoft.Azure.Batch.CloudJob.ETag*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.ETag
  isExternal: false
  name: ETag
  nameWithType: CloudJob.ETag
  fullName: Microsoft.Azure.Batch.CloudJob.ETag
- uid: Microsoft.Azure.Batch.CloudJob.ExecutionInformation*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.ExecutionInformation
  isExternal: false
  name: ExecutionInformation
  nameWithType: CloudJob.ExecutionInformation
  fullName: Microsoft.Azure.Batch.CloudJob.ExecutionInformation
- uid: Microsoft.Azure.Batch.JobExecutionInformation
  commentId: T:Microsoft.Azure.Batch.JobExecutionInformation
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobExecutionInformation
  nameWithType: JobExecutionInformation
  fullName: Microsoft.Azure.Batch.JobExecutionInformation
- uid: Microsoft.Azure.Batch.CloudJob.Id*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.Id
  isExternal: false
  name: Id
  nameWithType: CloudJob.Id
  fullName: Microsoft.Azure.Batch.CloudJob.Id
- uid: Microsoft.Azure.Batch.CloudJob.JobManagerTask*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.JobManagerTask
  isExternal: false
  name: JobManagerTask
  nameWithType: CloudJob.JobManagerTask
  fullName: Microsoft.Azure.Batch.CloudJob.JobManagerTask
- uid: Microsoft.Azure.Batch.JobManagerTask
  commentId: T:Microsoft.Azure.Batch.JobManagerTask
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobManagerTask
  nameWithType: JobManagerTask
  fullName: Microsoft.Azure.Batch.JobManagerTask
- uid: Microsoft.Azure.Batch.CloudJob.JobPreparationTask*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.JobPreparationTask
  isExternal: false
  name: JobPreparationTask
  nameWithType: CloudJob.JobPreparationTask
  fullName: Microsoft.Azure.Batch.CloudJob.JobPreparationTask
- uid: Microsoft.Azure.Batch.JobPreparationTask
  commentId: T:Microsoft.Azure.Batch.JobPreparationTask
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobPreparationTask
  nameWithType: JobPreparationTask
  fullName: Microsoft.Azure.Batch.JobPreparationTask
- uid: Microsoft.Azure.Batch.CloudJob.JobReleaseTask*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.JobReleaseTask
  isExternal: false
  name: JobReleaseTask
  nameWithType: CloudJob.JobReleaseTask
  fullName: Microsoft.Azure.Batch.CloudJob.JobReleaseTask
- uid: Microsoft.Azure.Batch.JobReleaseTask
  commentId: T:Microsoft.Azure.Batch.JobReleaseTask
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobReleaseTask
  nameWithType: JobReleaseTask
  fullName: Microsoft.Azure.Batch.JobReleaseTask
- uid: Microsoft.Azure.Batch.CloudJob.LastModified*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.LastModified
  isExternal: false
  name: LastModified
  nameWithType: CloudJob.LastModified
  fullName: Microsoft.Azure.Batch.CloudJob.LastModified
- uid: Microsoft.Azure.Batch.CloudJob.Metadata*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.Metadata
  isExternal: false
  name: Metadata
  nameWithType: CloudJob.Metadata
  fullName: Microsoft.Azure.Batch.CloudJob.Metadata
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.MetadataItem}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.MetadataItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MetadataItem>
  nameWithType: IList<MetadataItem>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.MetadataItem>
  nameWithType.vb: IList(Of MetadataItem)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.MetadataItem)
  name.vb: IList(Of MetadataItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.MetadataItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.MetadataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Common.JobState.Completed
  commentId: F:Microsoft.Azure.Batch.Common.JobState.Completed
- uid: Microsoft.Azure.Batch.CloudJob.OnAllTasksComplete*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.OnAllTasksComplete
  isExternal: false
  name: OnAllTasksComplete
  nameWithType: CloudJob.OnAllTasksComplete
  fullName: Microsoft.Azure.Batch.CloudJob.OnAllTasksComplete
- uid: System.Nullable{Microsoft.Azure.Batch.Common.OnAllTasksComplete}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.OnAllTasksComplete}
  parent: System
  definition: System.Nullable`1
  name: Nullable<OnAllTasksComplete>
  nameWithType: Nullable<OnAllTasksComplete>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.OnAllTasksComplete>
  nameWithType.vb: Nullable(Of OnAllTasksComplete)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.OnAllTasksComplete)
  name.vb: Nullable(Of OnAllTasksComplete)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.OnAllTasksComplete
    name: OnAllTasksComplete
    nameWithType: OnAllTasksComplete
    fullName: Microsoft.Azure.Batch.Common.OnAllTasksComplete
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.OnAllTasksComplete
    name: OnAllTasksComplete
    nameWithType: OnAllTasksComplete
    fullName: Microsoft.Azure.Batch.Common.OnAllTasksComplete
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.OnTaskFailure*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.OnTaskFailure
  isExternal: false
  name: OnTaskFailure
  nameWithType: CloudJob.OnTaskFailure
  fullName: Microsoft.Azure.Batch.CloudJob.OnTaskFailure
- uid: System.Nullable{Microsoft.Azure.Batch.Common.OnTaskFailure}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.OnTaskFailure}
  parent: System
  definition: System.Nullable`1
  name: Nullable<OnTaskFailure>
  nameWithType: Nullable<OnTaskFailure>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.OnTaskFailure>
  nameWithType.vb: Nullable(Of OnTaskFailure)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.OnTaskFailure)
  name.vb: Nullable(Of OnTaskFailure)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.OnTaskFailure
    name: OnTaskFailure
    nameWithType: OnTaskFailure
    fullName: Microsoft.Azure.Batch.Common.OnTaskFailure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.OnTaskFailure
    name: OnTaskFailure
    nameWithType: OnTaskFailure
    fullName: Microsoft.Azure.Batch.Common.OnTaskFailure
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.PoolInformation*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.PoolInformation
  isExternal: false
  name: PoolInformation
  nameWithType: CloudJob.PoolInformation
  fullName: Microsoft.Azure.Batch.CloudJob.PoolInformation
- uid: Microsoft.Azure.Batch.PoolInformation
  commentId: T:Microsoft.Azure.Batch.PoolInformation
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: PoolInformation
  nameWithType: PoolInformation
  fullName: Microsoft.Azure.Batch.PoolInformation
- uid: Microsoft.Azure.Batch.Common.JobState.Active
  commentId: F:Microsoft.Azure.Batch.Common.JobState.Active
- uid: Microsoft.Azure.Batch.CloudJob.PreviousState*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.PreviousState
  isExternal: false
  name: PreviousState
  nameWithType: CloudJob.PreviousState
  fullName: Microsoft.Azure.Batch.CloudJob.PreviousState
- uid: System.Nullable{Microsoft.Azure.Batch.Common.JobState}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.JobState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<JobState>
  nameWithType: Nullable<JobState>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.JobState>
  nameWithType.vb: Nullable(Of JobState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.JobState)
  name.vb: Nullable(Of JobState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.JobState
    name: JobState
    nameWithType: JobState
    fullName: Microsoft.Azure.Batch.Common.JobState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.JobState
    name: JobState
    nameWithType: JobState
    fullName: Microsoft.Azure.Batch.Common.JobState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.PreviousStateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.PreviousStateTransitionTime
  isExternal: false
  name: PreviousStateTransitionTime
  nameWithType: CloudJob.PreviousStateTransitionTime
  fullName: Microsoft.Azure.Batch.CloudJob.PreviousStateTransitionTime
- uid: Microsoft.Azure.Batch.CloudJob.Priority*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.Priority
  isExternal: false
  name: Priority
  nameWithType: CloudJob.Priority
  fullName: Microsoft.Azure.Batch.CloudJob.Priority
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudJob.State*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.State
  isExternal: false
  name: State
  nameWithType: CloudJob.State
  fullName: Microsoft.Azure.Batch.CloudJob.State
- uid: Microsoft.Azure.Batch.CloudJob.StateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.StateTransitionTime
  isExternal: false
  name: StateTransitionTime
  nameWithType: CloudJob.StateTransitionTime
  fullName: Microsoft.Azure.Batch.CloudJob.StateTransitionTime
- uid: Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause
  commentId: P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause
- uid: Microsoft.Azure.Batch.CloudJob.Statistics*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.Statistics
  isExternal: false
  name: Statistics
  nameWithType: CloudJob.Statistics
  fullName: Microsoft.Azure.Batch.CloudJob.Statistics
- uid: Microsoft.Azure.Batch.JobStatistics
  commentId: T:Microsoft.Azure.Batch.JobStatistics
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobStatistics
  nameWithType: JobStatistics
  fullName: Microsoft.Azure.Batch.JobStatistics
- uid: Microsoft.Azure.Batch.CloudJob.Url*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.Url
  isExternal: false
  name: Url
  nameWithType: CloudJob.Url
  fullName: Microsoft.Azure.Batch.CloudJob.Url
- uid: Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies*
  commentId: Overload:Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies
  isExternal: false
  name: UsesTaskDependencies
  nameWithType: CloudJob.UsesTaskDependencies
  fullName: Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
