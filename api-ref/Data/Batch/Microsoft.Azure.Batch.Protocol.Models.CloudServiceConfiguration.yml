### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
  id: CloudServiceConfiguration
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor(System.String,System.String,System.String)
  - Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CurrentOSVersion
  - Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.OsFamily
  - Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.TargetOSVersion
  - Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.Validate
  langs:
  - csharp
  - vb
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloudServiceConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nThe configuration for nodes in a pool based on the Azure Cloud\nServices platform.\n"
  example: []
  syntax:
    content: public class CloudServiceConfiguration
    content.vb: Public Class CloudServiceConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
  langs:
  - csharp
  - vb
  name: CloudServiceConfiguration()
  nameWithType: CloudServiceConfiguration.CloudServiceConfiguration()
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CloudServiceConfiguration()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the CloudServiceConfiguration class.\n"
  example: []
  syntax:
    content: public CloudServiceConfiguration()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
  langs:
  - csharp
  - vb
  name: CloudServiceConfiguration(String, String, String)
  nameWithType: CloudServiceConfiguration.CloudServiceConfiguration(String, String, String)
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CloudServiceConfiguration(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the CloudServiceConfiguration class.\n"
  example: []
  syntax:
    content: public CloudServiceConfiguration(string osFamily, string targetOSVersion = null, string currentOSVersion = null)
    content.vb: Public Sub New(osFamily As String, targetOSVersion As String = Nothing, currentOSVersion As String = Nothing)
    parameters:
    - id: osFamily
      type: System.String
      description: >-
        The Azure Guest OS family to be installed

        on the virtual machines in the pool.
    - id: targetOSVersion
      type: System.String
      description: >-
        The Azure Guest OS version to be

        installed on the virtual machines in the pool.
    - id: currentOSVersion
      type: System.String
      description: >-
        The Azure Guest OS Version

        currently installed on the virtual machines in the pool. This may

        differ from targetOSVersion if the pool state is

        Upgrading.
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.OsFamily
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.OsFamily
  id: OsFamily
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
  langs:
  - csharp
  - vb
  name: OsFamily
  nameWithType: CloudServiceConfiguration.OsFamily
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.OsFamily
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OsFamily
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the Azure Guest OS family to be installed on the\nvirtual machines in the pool.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "osFamily")]

      public string OsFamily { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="osFamily")>

      Public Property OsFamily As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.OsFamily*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: osFamily
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.TargetOSVersion
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.TargetOSVersion
  id: TargetOSVersion
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
  langs:
  - csharp
  - vb
  name: TargetOSVersion
  nameWithType: CloudServiceConfiguration.TargetOSVersion
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.TargetOSVersion
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TargetOSVersion
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the Azure Guest OS version to be installed on the\nvirtual machines in the pool.\n"
  remarks: "\nThe default value is * which specifies the latest operating system\nversion for the specified OS family.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "targetOSVersion")]

      public string TargetOSVersion { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="targetOSVersion")>

      Public Property TargetOSVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.TargetOSVersion*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: targetOSVersion
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CurrentOSVersion
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CurrentOSVersion
  id: CurrentOSVersion
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
  langs:
  - csharp
  - vb
  name: CurrentOSVersion
  nameWithType: CloudServiceConfiguration.CurrentOSVersion
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CurrentOSVersion
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CurrentOSVersion
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the Azure Guest OS Version currently installed on the\nvirtual machines in the pool. This may differ from\ntargetOSVersion if the pool state is Upgrading.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "currentOSVersion")]

      public string CurrentOSVersion { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="currentOSVersion")>

      Public Property CurrentOSVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CurrentOSVersion*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: currentOSVersion
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CloudServiceConfiguration.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/CloudServiceConfiguration.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor
  isExternal: false
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration.CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CloudServiceConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.OsFamily*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.OsFamily
  isExternal: false
  name: OsFamily
  nameWithType: CloudServiceConfiguration.OsFamily
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.OsFamily
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.TargetOSVersion*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.TargetOSVersion
  isExternal: false
  name: TargetOSVersion
  nameWithType: CloudServiceConfiguration.TargetOSVersion
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.TargetOSVersion
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CurrentOSVersion*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CurrentOSVersion
  isExternal: false
  name: CurrentOSVersion
  nameWithType: CloudServiceConfiguration.CurrentOSVersion
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CurrentOSVersion
- uid: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.Validate
  isExternal: false
  name: Validate
  nameWithType: CloudServiceConfiguration.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.Validate
