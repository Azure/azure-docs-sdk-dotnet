### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  id: SubtaskInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor(System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime})
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.EndTime
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.ExitCode
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Id
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.NodeInfo
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousState
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousStateTransitionTime
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SchedulingError
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StartTime
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.State
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StateTransitionTime
  - Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Validate
  langs:
  - csharp
  - vb
  name: SubtaskInformation
  nameWithType: SubtaskInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubtaskInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInformation about an Azure Batch subtask.\n"
  example: []
  syntax:
    content: public class SubtaskInformation
    content.vb: Public Class SubtaskInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: SubtaskInformation()
  nameWithType: SubtaskInformation.SubtaskInformation()
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SubtaskInformation()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the SubtaskInformation class.\n"
  example: []
  syntax:
    content: public SubtaskInformation()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor(System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor(System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime})
  id: '#ctor(System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime})'
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: SubtaskInformation(Nullable<Int32>, ComputeNodeInformation, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int32>, TaskSchedulingError, Nullable<TaskState>, Nullable<DateTime>, Nullable<TaskState>, Nullable<DateTime>)
  nameWithType: SubtaskInformation.SubtaskInformation(Nullable<Int32>, ComputeNodeInformation, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int32>, TaskSchedulingError, Nullable<TaskState>, Nullable<DateTime>, Nullable<TaskState>, Nullable<DateTime>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SubtaskInformation(System.Nullable<System.Int32>, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Nullable<System.Int32>, Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.TaskState>, System.Nullable<System.DateTime>, System.Nullable<Microsoft.Azure.Batch.Protocol.Models.TaskState>, System.Nullable<System.DateTime>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the SubtaskInformation class.\n"
  example: []
  syntax:
    content: public SubtaskInformation(int ? id = null, ComputeNodeInformation nodeInfo = null, DateTime? startTime = null, DateTime? endTime = null, int ? exitCode = null, TaskSchedulingError schedulingError = null, TaskState? state = null, DateTime? stateTransitionTime = null, TaskState? previousState = null, DateTime? previousStateTransitionTime = null)
    content.vb: Public Sub New(id As Integer? = Nothing, nodeInfo As ComputeNodeInformation = Nothing, startTime As Date? = Nothing, endTime As Date? = Nothing, exitCode As Integer? = Nothing, schedulingError As TaskSchedulingError = Nothing, state As TaskState? = Nothing, stateTransitionTime As Date? = Nothing, previousState As TaskState? = Nothing, previousStateTransitionTime As Date? = Nothing)
    parameters:
    - id: id
      type: System.Nullable{System.Int32}
      description: The id of the subtask.
    - id: nodeInfo
      type: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation
      description: >-
        Information about the compute node on which

        the subtask ran.
    - id: startTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the subtask started

        running. If the subtask has been restarted or retried, this is

        the most recent time at which the subtask started running.
    - id: endTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the subtask

        completed.
    - id: exitCode
      type: System.Nullable{System.Int32}
      description: >-
        The exit code of the program specified on

        the subtask command line.
    - id: schedulingError
      type: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
      description: >-
        Details of any error encountered

        scheduling the subtask.
    - id: state
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState}
      description: The current state of the subtask.
    - id: stateTransitionTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the subtask

        entered its current state.
    - id: previousState
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState}
      description: >-
        The previous state of the

        subtask.
    - id: previousStateTransitionTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the

        subtask entered its previous state.
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor*
  nameWithType.vb: SubtaskInformation.SubtaskInformation(Nullable(Of Int32), ComputeNodeInformation, Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of Int32), TaskSchedulingError, Nullable(Of TaskState), Nullable(Of DateTime), Nullable(Of TaskState), Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SubtaskInformation(System.Nullable(Of System.Int32), Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Nullable(Of System.Int32), Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError, System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.TaskState), System.Nullable(Of System.DateTime), System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.TaskState), System.Nullable(Of System.DateTime))
  name.vb: SubtaskInformation(Nullable(Of Int32), ComputeNodeInformation, Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of Int32), TaskSchedulingError, Nullable(Of TaskState), Nullable(Of DateTime), Nullable(Of TaskState), Nullable(Of DateTime))
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Id
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Id
  id: Id
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SubtaskInformation.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the id of the subtask.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public int ? Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.NodeInfo
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.NodeInfo
  id: NodeInfo
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: NodeInfo
  nameWithType: SubtaskInformation.NodeInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.NodeInfo
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NodeInfo
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets information about the compute node on which the\nsubtask ran.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "nodeInfo")]

      public ComputeNodeInformation NodeInfo { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="nodeInfo")>

      Public Property NodeInfo As ComputeNodeInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.NodeInfo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: nodeInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StartTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StartTime
  id: StartTime
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: SubtaskInformation.StartTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StartTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the subtask started running. If the\nsubtask has been restarted or retried, this is the most recent\ntime at which the subtask started running.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startTime")]

      public DateTime? StartTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="startTime")>

      Public Property StartTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StartTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.EndTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.EndTime
  id: EndTime
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: SubtaskInformation.EndTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.EndTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the subtask completed.\n"
  remarks: "\nThis property is set only if the subtask is in the Completed state.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "endTime")]

      public DateTime? EndTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="endTime")>

      Public Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.EndTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: endTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.ExitCode
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.ExitCode
  id: ExitCode
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: ExitCode
  nameWithType: SubtaskInformation.ExitCode
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.ExitCode
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExitCode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the exit code of the program specified on the subtask\ncommand line.\n"
  remarks: "\nThis parameter is returned only if the subtask is in the completed\nstate. The exit code for a process reflects the specific\nconvention implemented by the application developer for that\nprocess. If you use the exit code value to make decisions in your\ncode, be sure that you know the exit code convention used by the\napplication process. Note that the exit code may also be\ngenerated by the compute node operating system, such as when a\nprocess is forcibly terminated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "exitCode")]

      public int ? ExitCode { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="exitCode")>

      Public Property ExitCode As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.ExitCode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: exitCode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SchedulingError
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SchedulingError
  id: SchedulingError
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: SchedulingError
  nameWithType: SubtaskInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SchedulingError
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SchedulingError
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets details of any error encountered scheduling the\nsubtask.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "schedulingError")]

      public TaskSchedulingError SchedulingError { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="schedulingError")>

      Public Property SchedulingError As TaskSchedulingError
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SchedulingError*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: schedulingError
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.State
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.State
  id: State
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: State
  nameWithType: SubtaskInformation.State
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.State
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 129
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the current state of the subtask.\n"
  remarks: "\nPossible values include: 'active', 'preparing', 'running',\n'completed'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "state")]

      public TaskState? State { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="state")>

      Public Property State As TaskState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState}
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.State*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: state
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StateTransitionTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StateTransitionTime
  id: StateTransitionTime
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: StateTransitionTime
  nameWithType: SubtaskInformation.StateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 136
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the subtask entered its current\nstate.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "stateTransitionTime")]

      public DateTime? StateTransitionTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="stateTransitionTime")>

      Public Property StateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StateTransitionTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: stateTransitionTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousState
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousState
  id: PreviousState
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: PreviousState
  nameWithType: SubtaskInformation.PreviousState
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousState
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreviousState
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 147
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the previous state of the subtask.\n"
  remarks: "\nThis property is not set if the subtask is in its initial Active\nstate. Possible values include: 'active', 'preparing', 'running',\n'completed'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "previousState")]

      public TaskState? PreviousState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="previousState")>

      Public Property PreviousState As TaskState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState}
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: previousState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousStateTransitionTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousStateTransitionTime
  id: PreviousStateTransitionTime
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: PreviousStateTransitionTime
  nameWithType: SubtaskInformation.PreviousStateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousStateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreviousStateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 158
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the subtask entered its previous\nstate.\n"
  remarks: "\nThis property is not set if the subtask is in its initial Active\nstate.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "previousStateTransitionTime")]

      public DateTime? PreviousStateTransitionTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="previousStateTransitionTime")>

      Public Property PreviousStateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousStateTransitionTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: previousStateTransitionTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: SubtaskInformation.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/SubtaskInformation.cs
    startLine: 167
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor
  isExternal: false
  name: SubtaskInformation
  nameWithType: SubtaskInformation.SubtaskInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SubtaskInformation
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: ComputeNodeInformation
  nameWithType: ComputeNodeInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskSchedulingError
  nameWithType: TaskSchedulingError
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
- uid: System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TaskState>
  nameWithType: Nullable<TaskState>
  fullName: System.Nullable<Microsoft.Azure.Batch.Protocol.Models.TaskState>
  nameWithType.vb: Nullable(Of TaskState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Protocol.Models.TaskState)
  name.vb: Nullable(Of TaskState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskState
    name: TaskState
    nameWithType: TaskState
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.TaskState
    name: TaskState
    nameWithType: TaskState
    fullName: Microsoft.Azure.Batch.Protocol.Models.TaskState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Id*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Id
  isExternal: false
  name: Id
  nameWithType: SubtaskInformation.Id
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Id
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.NodeInfo*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.NodeInfo
  isExternal: false
  name: NodeInfo
  nameWithType: SubtaskInformation.NodeInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.NodeInfo
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StartTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StartTime
  isExternal: false
  name: StartTime
  nameWithType: SubtaskInformation.StartTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StartTime
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.EndTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.EndTime
  isExternal: false
  name: EndTime
  nameWithType: SubtaskInformation.EndTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.EndTime
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.ExitCode*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.ExitCode
  isExternal: false
  name: ExitCode
  nameWithType: SubtaskInformation.ExitCode
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.ExitCode
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SchedulingError*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SchedulingError
  isExternal: false
  name: SchedulingError
  nameWithType: SubtaskInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SchedulingError
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.State*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.State
  isExternal: false
  name: State
  nameWithType: SubtaskInformation.State
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.State
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StateTransitionTime
  isExternal: false
  name: StateTransitionTime
  nameWithType: SubtaskInformation.StateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StateTransitionTime
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousState*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousState
  isExternal: false
  name: PreviousState
  nameWithType: SubtaskInformation.PreviousState
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousState
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousStateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousStateTransitionTime
  isExternal: false
  name: PreviousStateTransitionTime
  nameWithType: SubtaskInformation.PreviousStateTransitionTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousStateTransitionTime
- uid: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Validate
  isExternal: false
  name: Validate
  nameWithType: SubtaskInformation.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Validate
