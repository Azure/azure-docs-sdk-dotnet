### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  id: ResourceFile
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor(System.String,System.String,System.String)
  - Microsoft.Azure.Batch.Protocol.Models.ResourceFile.BlobSource
  - Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FileMode
  - Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FilePath
  - Microsoft.Azure.Batch.Protocol.Models.ResourceFile.Validate
  langs:
  - csharp
  - vb
  name: ResourceFile
  nameWithType: ResourceFile
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceFile
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nA file to be downloaded from Azure blob storage to a compute node.\n"
  example: []
  syntax:
    content: public class ResourceFile
    content.vb: Public Class ResourceFile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  langs:
  - csharp
  - vb
  name: ResourceFile()
  nameWithType: ResourceFile.ResourceFile()
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.ResourceFile()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the ResourceFile class.\n"
  example: []
  syntax:
    content: public ResourceFile()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  langs:
  - csharp
  - vb
  name: ResourceFile(String, String, String)
  nameWithType: ResourceFile.ResourceFile(String, String, String)
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.ResourceFile(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the ResourceFile class.\n"
  example: []
  syntax:
    content: public ResourceFile(string blobSource, string filePath, string fileMode = null)
    content.vb: Public Sub New(blobSource As String, filePath As String, fileMode As String = Nothing)
    parameters:
    - id: blobSource
      type: System.String
      description: >-
        The URL of the file within Azure Blob

        Storage. This URL should include a shared access signature if the

        blob is not publicly readable.
    - id: filePath
      type: System.String
      description: >-
        The location to which to download the file,

        relative to the task's working directory.
    - id: fileMode
      type: System.String
      description: >-
        The file mode attribute in octal

        format.
  overload: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.BlobSource
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.BlobSource
  id: BlobSource
  parent: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  langs:
  - csharp
  - vb
  name: BlobSource
  nameWithType: ResourceFile.BlobSource
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.BlobSource
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BlobSource
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the URL of the file within Azure Blob Storage. This\nURL should include a shared access signature if the blob is not\npublicly readable.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "blobSource")]

      public string BlobSource { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="blobSource")>

      Public Property BlobSource As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.BlobSource*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: blobSource
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FilePath
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FilePath
  id: FilePath
  parent: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: ResourceFile.FilePath
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FilePath
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FilePath
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the location to which to download the file, relative\nto the task's working directory.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "filePath")]

      public string FilePath { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="filePath")>

      Public Property FilePath As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FilePath*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: filePath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FileMode
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FileMode
  id: FileMode
  parent: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  langs:
  - csharp
  - vb
  name: FileMode
  nameWithType: ResourceFile.FileMode
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FileMode
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FileMode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the file mode attribute in octal format.\n"
  remarks: "\nThis property will be ignored if it is specified for a\nresourceFile which will be downloaded to a Windows compute node.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "fileMode")]

      public string FileMode { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="fileMode")>

      Public Property FileMode As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FileMode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: fileMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ResourceFile.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/ResourceFile.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor
  isExternal: false
  name: ResourceFile
  nameWithType: ResourceFile.ResourceFile
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.ResourceFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.BlobSource*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.BlobSource
  isExternal: false
  name: BlobSource
  nameWithType: ResourceFile.BlobSource
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.BlobSource
- uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FilePath*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FilePath
  isExternal: false
  name: FilePath
  nameWithType: ResourceFile.FilePath
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FilePath
- uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FileMode*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FileMode
  isExternal: false
  name: FileMode
  nameWithType: ResourceFile.FileMode
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FileMode
- uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.Validate
  isExternal: false
  name: Validate
  nameWithType: ResourceFile.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile.Validate
