### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.NodeAgentSku
  commentId: T:Microsoft.Azure.Batch.NodeAgentSku
  id: NodeAgentSku
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.NodeAgentSku.Id
  - Microsoft.Azure.Batch.NodeAgentSku.OSType
  - Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences
  langs:
  - csharp
  - vb
  name: NodeAgentSku
  nameWithType: NodeAgentSku
  fullName: Microsoft.Azure.Batch.NodeAgentSku
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/NodeAgentSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NodeAgentSku
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/NodeAgentSku.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nA node agent SKU supported by the Batch service. The Batch node agent is a program that runs on each node in the \npool, and provides the command-and-control interface between the node and the Batch service. There are different \nimplementations of the node agent, known as SKUs, for different operating systems.\n"
  example: []
  syntax:
    content: 'public class NodeAgentSku : IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class NodeAgentSku
          Implements IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.NodeAgentSku.Id
  commentId: P:Microsoft.Azure.Batch.NodeAgentSku.Id
  id: Id
  parent: Microsoft.Azure.Batch.NodeAgentSku
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: NodeAgentSku.Id
  fullName: Microsoft.Azure.Batch.NodeAgentSku.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/NodeAgentSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/NodeAgentSku.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the id of the node agent SKU.\n"
  example: []
  syntax:
    content: public string Id { get; }
    content.vb: Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.NodeAgentSku.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.NodeAgentSku.OSType
  commentId: P:Microsoft.Azure.Batch.NodeAgentSku.OSType
  id: OSType
  parent: Microsoft.Azure.Batch.NodeAgentSku
  langs:
  - csharp
  - vb
  name: OSType
  nameWithType: NodeAgentSku.OSType
  fullName: Microsoft.Azure.Batch.NodeAgentSku.OSType
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/NodeAgentSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OSType
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/NodeAgentSku.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the type of operating system compatible with the node agent SKU.\n"
  example: []
  syntax:
    content: public OSType? OSType { get; }
    content.vb: Public ReadOnly Property OSType As OSType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.OSType}
  overload: Microsoft.Azure.Batch.NodeAgentSku.OSType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences
  commentId: P:Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences
  id: VerifiedImageReferences
  parent: Microsoft.Azure.Batch.NodeAgentSku
  langs:
  - csharp
  - vb
  name: VerifiedImageReferences
  nameWithType: NodeAgentSku.VerifiedImageReferences
  fullName: Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/NodeAgentSku.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VerifiedImageReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/NodeAgentSku.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the list of images verified to be compatible with this node agent SKU. This collection is not exhaustive \n(the node agent may be compatible with other images).\n"
  example: []
  syntax:
    content: public IReadOnlyList<ImageReference> VerifiedImageReferences { get; }
    content.vb: Public ReadOnly Property VerifiedImageReferences As IReadOnlyList(Of ImageReference)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.ImageReference}
  overload: Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.NodeAgentSku.Id*
  commentId: Overload:Microsoft.Azure.Batch.NodeAgentSku.Id
  isExternal: false
  name: Id
  nameWithType: NodeAgentSku.Id
  fullName: Microsoft.Azure.Batch.NodeAgentSku.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.NodeAgentSku.OSType*
  commentId: Overload:Microsoft.Azure.Batch.NodeAgentSku.OSType
  isExternal: false
  name: OSType
  nameWithType: NodeAgentSku.OSType
  fullName: Microsoft.Azure.Batch.NodeAgentSku.OSType
- uid: System.Nullable{Microsoft.Azure.Batch.Common.OSType}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.OSType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<OSType>
  nameWithType: Nullable<OSType>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.OSType>
  nameWithType.vb: Nullable(Of OSType)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.OSType)
  name.vb: Nullable(Of OSType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.OSType
    name: OSType
    nameWithType: OSType
    fullName: Microsoft.Azure.Batch.Common.OSType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.OSType
    name: OSType
    nameWithType: OSType
    fullName: Microsoft.Azure.Batch.Common.OSType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences*
  commentId: Overload:Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences
  isExternal: false
  name: VerifiedImageReferences
  nameWithType: NodeAgentSku.VerifiedImageReferences
  fullName: Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.ImageReference}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.Azure.Batch.ImageReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ImageReference>
  nameWithType: IReadOnlyList<ImageReference>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.Azure.Batch.ImageReference>
  nameWithType.vb: IReadOnlyList(Of ImageReference)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.Azure.Batch.ImageReference)
  name.vb: IReadOnlyList(Of ImageReference)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.ImageReference
    name: ImageReference
    nameWithType: ImageReference
    fullName: Microsoft.Azure.Batch.ImageReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.ImageReference
    name: ImageReference
    nameWithType: ImageReference
    fullName: Microsoft.Azure.Batch.ImageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
