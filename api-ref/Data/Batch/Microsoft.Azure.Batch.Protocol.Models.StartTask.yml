### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.StartTask
  id: StartTask
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean})
  - Microsoft.Azure.Batch.Protocol.Models.StartTask.CommandLine
  - Microsoft.Azure.Batch.Protocol.Models.StartTask.EnvironmentSettings
  - Microsoft.Azure.Batch.Protocol.Models.StartTask.MaxTaskRetryCount
  - Microsoft.Azure.Batch.Protocol.Models.StartTask.ResourceFiles
  - Microsoft.Azure.Batch.Protocol.Models.StartTask.RunElevated
  - Microsoft.Azure.Batch.Protocol.Models.StartTask.Validate
  - Microsoft.Azure.Batch.Protocol.Models.StartTask.WaitForSuccess
  langs:
  - csharp
  - vb
  name: StartTask
  nameWithType: StartTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nA task which is run when a compute node joins a pool in the Azure\nBatch service, or when the compute node is rebooted or reimaged.\n"
  example: []
  syntax:
    content: public class StartTask
    content.vb: Public Class StartTask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.StartTask
  langs:
  - csharp
  - vb
  name: StartTask()
  nameWithType: StartTask.StartTask()
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.StartTask()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the StartTask class.\n"
  example: []
  syntax:
    content: public StartTask()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean})
  id: '#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean})'
  parent: Microsoft.Azure.Batch.Protocol.Models.StartTask
  langs:
  - csharp
  - vb
  name: StartTask(String, IList<ResourceFile>, IList<EnvironmentSetting>, Nullable<Boolean>, Nullable<Int32>, Nullable<Boolean>)
  nameWithType: StartTask.StartTask(String, IList<ResourceFile>, IList<EnvironmentSetting>, Nullable<Boolean>, Nullable<Int32>, Nullable<Boolean>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.StartTask(System.String, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ResourceFile>, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>, System.Nullable<System.Boolean>, System.Nullable<System.Int32>, System.Nullable<System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the StartTask class.\n"
  example: []
  syntax:
    content: public StartTask(string commandLine, IList<ResourceFile> resourceFiles = null, IList<EnvironmentSetting> environmentSettings = null, bool ? runElevated = null, int ? maxTaskRetryCount = null, bool ? waitForSuccess = null)
    content.vb: Public Sub New(commandLine As String, resourceFiles As IList(Of ResourceFile) = Nothing, environmentSettings As IList(Of EnvironmentSetting) = Nothing, runElevated As Boolean? = Nothing, maxTaskRetryCount As Integer? = Nothing, waitForSuccess As Boolean? = Nothing)
    parameters:
    - id: commandLine
      type: System.String
      description: >-
        The command line of the start

        task.
    - id: resourceFiles
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
      description: >-
        A list of files that the Batch service

        will download to the compute node before running the command

        line.
    - id: environmentSettings
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
      description: >-
        A list of environment variable

        settings for the start task.
    - id: runElevated
      type: System.Nullable{System.Boolean}
      description: >-
        Whether to run the start task in

        elevated mode. The default value is false.
    - id: maxTaskRetryCount
      type: System.Nullable{System.Int32}
      description: >-
        The maximum number of times the

        task may be retried.
    - id: waitForSuccess
      type: System.Nullable{System.Boolean}
      description: >-
        Whether the Batch service should wait

        for the start task to complete successfully (that is, to exit

        with exit code 0) before scheduling any tasks on the compute

        node.
  overload: Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor*
  nameWithType.vb: StartTask.StartTask(String, IList(Of ResourceFile), IList(Of EnvironmentSetting), Nullable(Of Boolean), Nullable(Of Int32), Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.StartTask.StartTask(System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ResourceFile), System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting), System.Nullable(Of System.Boolean), System.Nullable(Of System.Int32), System.Nullable(Of System.Boolean))
  name.vb: StartTask(String, IList(Of ResourceFile), IList(Of EnvironmentSetting), Nullable(Of Boolean), Nullable(Of Int32), Nullable(Of Boolean))
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.CommandLine
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.StartTask.CommandLine
  id: CommandLine
  parent: Microsoft.Azure.Batch.Protocol.Models.StartTask
  langs:
  - csharp
  - vb
  name: CommandLine
  nameWithType: StartTask.CommandLine
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.CommandLine
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommandLine
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the command line of the start task.\n"
  remarks: "\nThe command line does not run under a shell, and therefore cannot\ntake advantage of shell features such as environment variable\nexpansion. If you want to take advantage of such features, you\nshould invoke the shell in the command line, for example using\n\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "commandLine")]

      public string CommandLine { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="commandLine")>

      Public Property CommandLine As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.StartTask.CommandLine*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: commandLine
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.ResourceFiles
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.StartTask.ResourceFiles
  id: ResourceFiles
  parent: Microsoft.Azure.Batch.Protocol.Models.StartTask
  langs:
  - csharp
  - vb
  name: ResourceFiles
  nameWithType: StartTask.ResourceFiles
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.ResourceFiles
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceFiles
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of files that the Batch service will download\nto the compute node before running the command line.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "resourceFiles")]

      public IList<ResourceFile> ResourceFiles { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="resourceFiles")>

      Public Property ResourceFiles As IList(Of ResourceFile)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  overload: Microsoft.Azure.Batch.Protocol.Models.StartTask.ResourceFiles*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: resourceFiles
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.EnvironmentSettings
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.StartTask.EnvironmentSettings
  id: EnvironmentSettings
  parent: Microsoft.Azure.Batch.Protocol.Models.StartTask
  langs:
  - csharp
  - vb
  name: EnvironmentSettings
  nameWithType: StartTask.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.EnvironmentSettings
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnvironmentSettings
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of environment variable settings for the start\ntask.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "environmentSettings")]

      public IList<EnvironmentSetting> EnvironmentSettings { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="environmentSettings")>

      Public Property EnvironmentSettings As IList(Of EnvironmentSetting)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  overload: Microsoft.Azure.Batch.Protocol.Models.StartTask.EnvironmentSettings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: environmentSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.RunElevated
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.StartTask.RunElevated
  id: RunElevated
  parent: Microsoft.Azure.Batch.Protocol.Models.StartTask
  langs:
  - csharp
  - vb
  name: RunElevated
  nameWithType: StartTask.RunElevated
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.RunElevated
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RunElevated
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether to run the start task in elevated mode. The\ndefault value is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "runElevated")]

      public bool ? RunElevated { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="runElevated")>

      Public Property RunElevated As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.Protocol.Models.StartTask.RunElevated*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: runElevated
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.MaxTaskRetryCount
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.StartTask.MaxTaskRetryCount
  id: MaxTaskRetryCount
  parent: Microsoft.Azure.Batch.Protocol.Models.StartTask
  langs:
  - csharp
  - vb
  name: MaxTaskRetryCount
  nameWithType: StartTask.MaxTaskRetryCount
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.MaxTaskRetryCount
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxTaskRetryCount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the maximum number of times the task may be retried.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "maxTaskRetryCount")]

      public int ? MaxTaskRetryCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="maxTaskRetryCount")>

      Public Property MaxTaskRetryCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.Protocol.Models.StartTask.MaxTaskRetryCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: maxTaskRetryCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.WaitForSuccess
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.StartTask.WaitForSuccess
  id: WaitForSuccess
  parent: Microsoft.Azure.Batch.Protocol.Models.StartTask
  langs:
  - csharp
  - vb
  name: WaitForSuccess
  nameWithType: StartTask.WaitForSuccess
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.WaitForSuccess
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WaitForSuccess
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets whether the Batch service should wait for the start\ntask to complete successfully (that is, to exit with exit code 0)\nbefore scheduling any tasks on the compute node.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "waitForSuccess")]

      public bool ? WaitForSuccess { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="waitForSuccess")>

      Public Property WaitForSuccess As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.Protocol.Models.StartTask.WaitForSuccess*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: waitForSuccess
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.StartTask.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.StartTask
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: StartTask.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/StartTask.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.StartTask.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor
  isExternal: false
  name: StartTask
  nameWithType: StartTask.StartTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.StartTask
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ResourceFile>
  nameWithType: IList<ResourceFile>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ResourceFile>
  nameWithType.vb: IList(Of ResourceFile)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ResourceFile)
  name.vb: IList(Of ResourceFile)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.Protocol.Models.ResourceFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EnvironmentSetting>
  nameWithType: IList<EnvironmentSetting>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting>
  nameWithType.vb: IList(Of EnvironmentSetting)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting)
  name.vb: IList(Of EnvironmentSetting)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
    name: EnvironmentSetting
    nameWithType: EnvironmentSetting
    fullName: Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.CommandLine*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.StartTask.CommandLine
  isExternal: false
  name: CommandLine
  nameWithType: StartTask.CommandLine
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.CommandLine
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.ResourceFiles*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.StartTask.ResourceFiles
  isExternal: false
  name: ResourceFiles
  nameWithType: StartTask.ResourceFiles
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.ResourceFiles
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.EnvironmentSettings*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.StartTask.EnvironmentSettings
  isExternal: false
  name: EnvironmentSettings
  nameWithType: StartTask.EnvironmentSettings
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.EnvironmentSettings
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.RunElevated*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.StartTask.RunElevated
  isExternal: false
  name: RunElevated
  nameWithType: StartTask.RunElevated
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.RunElevated
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.MaxTaskRetryCount*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.StartTask.MaxTaskRetryCount
  isExternal: false
  name: MaxTaskRetryCount
  nameWithType: StartTask.MaxTaskRetryCount
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.MaxTaskRetryCount
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.WaitForSuccess*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.StartTask.WaitForSuccess
  isExternal: false
  name: WaitForSuccess
  nameWithType: StartTask.WaitForSuccess
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.WaitForSuccess
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.StartTask.Validate
  isExternal: false
  name: Validate
  nameWithType: StartTask.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask.Validate
