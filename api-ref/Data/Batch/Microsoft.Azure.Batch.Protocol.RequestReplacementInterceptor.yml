### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor
  commentId: T:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor
  id: RequestReplacementInterceptor
  parent: Microsoft.Azure.Batch.Protocol
  children:
  - Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor
  - Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler)
  - Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler
  langs:
  - csharp
  - vb
  name: RequestReplacementInterceptor
  nameWithType: RequestReplacementInterceptor
  fullName: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Protocol/Interceptors.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RequestReplacementInterceptor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Protocol/Interceptors.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nDerived classes can inspect, replace or modify a BatchRequest.\n"
  example: []
  syntax:
    content: 'public class RequestReplacementInterceptor : BatchClientBehavior'
    content.vb: >-
      Public Class RequestReplacementInterceptor
          Inherits BatchClientBehavior
  inheritance:
  - System.Object
  - Microsoft.Azure.Batch.BatchClientBehavior
  derivedClasses:
  - Microsoft.Azure.Batch.Protocol.RequestInterceptor
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor
  langs:
  - csharp
  - vb
  name: RequestReplacementInterceptor()
  nameWithType: RequestReplacementInterceptor.RequestReplacementInterceptor()
  fullName: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.RequestReplacementInterceptor()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Protocol/Interceptors.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Protocol/Interceptors.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nInitializes a new instance of RequestReplacementInterceptor.\n"
  example: []
  syntax:
    content: public RequestReplacementInterceptor()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler)
  commentId: M:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler)
  id: '#ctor(Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler)'
  parent: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor
  langs:
  - csharp
  - vb
  name: RequestReplacementInterceptor(BatchRequestReplacementInterceptHandler)
  nameWithType: RequestReplacementInterceptor.RequestReplacementInterceptor(BatchRequestReplacementInterceptHandler)
  fullName: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.RequestReplacementInterceptor(Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Protocol/Interceptors.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Protocol/Interceptors.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nInitializes a new instance of RequestReplacementInterceptor\n"
  example: []
  syntax:
    content: public RequestReplacementInterceptor(BatchRequestReplacementInterceptHandler replacementInterceptor)
    content.vb: Public Sub New(replacementInterceptor As BatchRequestReplacementInterceptHandler)
    parameters:
    - id: replacementInterceptor
      type: Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler
      description: ''
  overload: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler
  commentId: P:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler
  id: ReplacementInterceptHandler
  parent: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor
  langs:
  - csharp
  - vb
  name: ReplacementInterceptHandler
  nameWithType: RequestReplacementInterceptor.ReplacementInterceptHandler
  fullName: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Protocol/Interceptors.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReplacementInterceptHandler
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Protocol/Interceptors.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets or sets a method that will be called just before a <xref href=\"Microsoft.Azure.Batch.Protocol.IBatchRequest\" data-throw-if-not-resolved=\"false\"></xref> is executed.\nThe request can be inspected, replaced, modified or ignored.\n"
  example: []
  syntax:
    content: public BatchRequestReplacementInterceptHandler ReplacementInterceptHandler { get; set; }
    content.vb: Public Property ReplacementInterceptHandler As BatchRequestReplacementInterceptHandler
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler
  overload: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Batch.BatchClientBehavior
  commentId: T:Microsoft.Azure.Batch.BatchClientBehavior
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: BatchClientBehavior
  nameWithType: BatchClientBehavior
  fullName: Microsoft.Azure.Batch.BatchClientBehavior
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor
  isExternal: false
  name: RequestReplacementInterceptor
  nameWithType: RequestReplacementInterceptor.RequestReplacementInterceptor
  fullName: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.RequestReplacementInterceptor
- uid: Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler
  commentId: T:Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: BatchRequestReplacementInterceptHandler
  nameWithType: BatchRequestReplacementInterceptHandler
  fullName: Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler
- uid: Microsoft.Azure.Batch.Protocol.IBatchRequest
  commentId: T:Microsoft.Azure.Batch.Protocol.IBatchRequest
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: IBatchRequest
  nameWithType: IBatchRequest
  fullName: Microsoft.Azure.Batch.Protocol.IBatchRequest
- uid: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler
  isExternal: false
  name: ReplacementInterceptHandler
  nameWithType: RequestReplacementInterceptor.ReplacementInterceptHandler
  fullName: Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler
