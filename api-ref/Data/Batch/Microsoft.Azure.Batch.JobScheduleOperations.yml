### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.JobScheduleOperations
  commentId: T:Microsoft.Azure.Batch.JobScheduleOperations
  id: JobScheduleOperations
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule
  - Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule(System.String,Microsoft.Azure.Batch.Schedule,Microsoft.Azure.Batch.JobSpecification)
  - Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors
  - Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.JobScheduleOperations.DisableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.JobScheduleOperations.ListJobs(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: JobScheduleOperations
  nameWithType: JobScheduleOperations
  fullName: Microsoft.Azure.Batch.JobScheduleOperations
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobScheduleOperations
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nPerforms operations on Azure Batch job schedules.\n"
  example: []
  syntax:
    content: 'public class JobScheduleOperations : IInheritedBehaviors'
    content.vb: >-
      Public Class JobScheduleOperations
          Implements IInheritedBehaviors
  seealso:
  - linkId: Microsoft.Azure.Batch.CloudJobSchedule
    commentId: T:Microsoft.Azure.Batch.CloudJobSchedule
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Batch.IInheritedBehaviors
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors
  id: CustomBehaviors
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: CustomBehaviors
  nameWithType: JobScheduleOperations.CustomBehaviors
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomBehaviors
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of behaviors that modify or customize requests to the Batch service\nmade via this <xref href=\"Microsoft.Azure.Batch.JobScheduleOperations\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>These behaviors are inherited by child objects.</p>\n<p>Modifications are applied in the order of the collection. The last write wins.</p>\n"
  example: []
  syntax:
    content: public IList<BatchClientBehavior> CustomBehaviors { get; set; }
    content.vb: Public Property CustomBehaviors As IList(Of BatchClientBehavior)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  overload: Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors*
  implements:
  - Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: ListJobSchedules(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: ListJobSchedules(DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: JobScheduleOperations.ListJobSchedules(DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListJobSchedules
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nEnumerates the <xref href=\"Microsoft.Azure.Batch.CloudJobSchedule\" data-throw-if-not-resolved=\"false\"></xref> in the Batch account.\n"
  remarks: >-
    This method returns immediately; the job schedules are retrieved from the Batch service only when the collection is enumerated.

    Retrieval is non-atomic; schedules are retrieved in pages during enumeration of the collection.
  example: []
  syntax:
    content: public IPagedEnumerable<CloudJobSchedule> ListJobSchedules(DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function ListJobSchedules(detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As IPagedEnumerable(Of CloudJobSchedule)
    parameters:
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: A <xref href="Microsoft.Azure.Batch.DetailLevel" data-throw-if-not-resolved="false"></xref> used for filtering the list and for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors" data-throw-if-not-resolved="false"></xref> and <span class="paramref">detailLevel</span>.
    return:
      type: Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.CloudJobSchedule}
      description: An <xref href="Microsoft.Azure.Batch.IPagedEnumerable%601" data-throw-if-not-resolved="false"></xref> that can be used to enumerate job schedules asynchronously or synchronously.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules*
  nameWithType.vb: JobScheduleOperations.ListJobSchedules(DetailLevel, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: ListJobSchedules(DetailLevel, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: GetJobScheduleAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: GetJobScheduleAsync(String, DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: JobScheduleOperations.GetJobScheduleAsync(String, DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetJobScheduleAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 99
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the specified <xref href=\"Microsoft.Azure.Batch.CloudJobSchedule\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: The get job schedule operation runs asynchronously.
  example: []
  syntax:
    content: public Task<CloudJobSchedule> GetJobScheduleAsync(string jobScheduleId, DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetJobScheduleAsync(jobScheduleId As String, detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CloudJobSchedule)
    parameters:
    - id: jobScheduleId
      type: System.String
      description: The id of the job schedule to get.
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: A <xref href="Microsoft.Azure.Batch.DetailLevel" data-throw-if-not-resolved="false"></xref> used for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors" data-throw-if-not-resolved="false"></xref> and <span class="paramref">detailLevel</span>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.CloudJobSchedule}
      description: A <xref href="Microsoft.Azure.Batch.CloudJobSchedule" data-throw-if-not-resolved="false"></xref> containing information about the specified Azure Batch job schedule.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync*
  nameWithType.vb: JobScheduleOperations.GetJobScheduleAsync(String, DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: GetJobScheduleAsync(String, DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: GetJobSchedule(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: GetJobSchedule(String, DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: JobScheduleOperations.GetJobSchedule(String, DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetJobSchedule
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 128
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the specified <xref href=\"Microsoft.Azure.Batch.CloudJobSchedule\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: This is a blocking operation. For a non-blocking equivalent, see <xref href="Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String%2cMicrosoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public CloudJobSchedule GetJobSchedule(string jobScheduleId, DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function GetJobSchedule(jobScheduleId As String, detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As CloudJobSchedule
    parameters:
    - id: jobScheduleId
      type: System.String
      description: The id of the job schedule to get.
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: A <xref href="Microsoft.Azure.Batch.DetailLevel" data-throw-if-not-resolved="false"></xref> used for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors" data-throw-if-not-resolved="false"></xref> and <span class="paramref">detailLevel</span>.
    return:
      type: Microsoft.Azure.Batch.CloudJobSchedule
      description: A <xref href="Microsoft.Azure.Batch.CloudJobSchedule" data-throw-if-not-resolved="false"></xref> containing information about the specified Azure Batch job schedule.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule*
  nameWithType.vb: JobScheduleOperations.GetJobSchedule(String, DetailLevel, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: GetJobSchedule(String, DetailLevel, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule
  id: CreateJobSchedule
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: CreateJobSchedule()
  nameWithType: JobScheduleOperations.CreateJobSchedule()
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateJobSchedule
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCreates an instance of CloudJobSchedule that is unbound and does not have a consistency relationship to any job schedule in the Batch Service.\n"
  example: []
  syntax:
    content: public CloudJobSchedule CreateJobSchedule()
    content.vb: Public Function CreateJobSchedule As CloudJobSchedule
    return:
      type: Microsoft.Azure.Batch.CloudJobSchedule
      description: A <xref href="Microsoft.Azure.Batch.CloudJobSchedule" data-throw-if-not-resolved="false"></xref> representing a new job schedule that has not been submitted to the Batch service.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule(System.String,Microsoft.Azure.Batch.Schedule,Microsoft.Azure.Batch.JobSpecification)
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule(System.String,Microsoft.Azure.Batch.Schedule,Microsoft.Azure.Batch.JobSpecification)
  id: CreateJobSchedule(System.String,Microsoft.Azure.Batch.Schedule,Microsoft.Azure.Batch.JobSpecification)
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: CreateJobSchedule(String, Schedule, JobSpecification)
  nameWithType: JobScheduleOperations.CreateJobSchedule(String, Schedule, JobSpecification)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule(System.String, Microsoft.Azure.Batch.Schedule, Microsoft.Azure.Batch.JobSpecification)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateJobSchedule
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCreates an instance of CloudJobSchedule that is unbound and does not have a consistency relationship to any job schedule in the Batch Service.\n"
  example: []
  syntax:
    content: public CloudJobSchedule CreateJobSchedule(string jobScheduleId, Schedule schedule, JobSpecification jobSpecification)
    content.vb: Public Function CreateJobSchedule(jobScheduleId As String, schedule As Schedule, jobSpecification As JobSpecification) As CloudJobSchedule
    parameters:
    - id: jobScheduleId
      type: System.String
      description: The id of the job schedule.
    - id: schedule
      type: Microsoft.Azure.Batch.Schedule
      description: The schedule that determines when jobs will be created.
    - id: jobSpecification
      type: Microsoft.Azure.Batch.JobSpecification
      description: a <xref href="Microsoft.Azure.Batch.JobSpecification" data-throw-if-not-resolved="false"></xref> containing details of the jobs to be created according to the <span class="paramref">schedule</span>.
    return:
      type: Microsoft.Azure.Batch.CloudJobSchedule
      description: A <xref href="Microsoft.Azure.Batch.CloudJobSchedule" data-throw-if-not-resolved="false"></xref> representing a new job schedule that has not been submitted to the Batch service.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: EnableJobScheduleAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: JobScheduleOperations.EnableJobScheduleAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableJobScheduleAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 178
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nEnables the specified job schedule, allowing jobs to be created according to its <xref href=\"Microsoft.Azure.Batch.CloudJobSchedule.Schedule\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>The enable operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task EnableJobScheduleAsync(string jobScheduleId, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function EnableJobScheduleAsync(jobScheduleId As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: jobScheduleId
      type: System.String
      description: The id of the job schedule.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync*
  nameWithType.vb: JobScheduleOperations.EnableJobScheduleAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: EnableJobScheduleAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: EnableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: EnableJobSchedule(String, IEnumerable<BatchClientBehavior>)
  nameWithType: JobScheduleOperations.EnableJobSchedule(String, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableJobSchedule
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 196
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nEnables the specified job schedule, allowing jobs to be created according to its <xref href=\"Microsoft.Azure.Batch.CloudJobSchedule.Schedule\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void EnableJobSchedule(string jobScheduleId, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub EnableJobSchedule(jobScheduleId As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: jobScheduleId
      type: System.String
      description: The id of the job schedule.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule*
  nameWithType.vb: JobScheduleOperations.EnableJobSchedule(String, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: EnableJobSchedule(String, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: DisableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: DisableJobScheduleAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: JobScheduleOperations.DisableJobScheduleAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisableJobScheduleAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 215
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDisables the specified job schedule.  Disabled schedules do not create new jobs, but may be re-enabled later.\n"
  remarks: "\n<p>The disable operation runs asynchronously.</p>\n<p>To re-enable the schedule, call <xref href=\"Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public Task DisableJobScheduleAsync(string jobScheduleId, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function DisableJobScheduleAsync(jobScheduleId As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: jobScheduleId
      type: System.String
      description: The id of the job schedule.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync*
  nameWithType.vb: JobScheduleOperations.DisableJobScheduleAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: DisableJobScheduleAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: DisableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: DisableJobSchedule(String, IEnumerable<BatchClientBehavior>)
  nameWithType: JobScheduleOperations.DisableJobSchedule(String, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobSchedule(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisableJobSchedule
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 234
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDisables the specified job schedule.  Disabled schedules do not create new jobs, but may be re-enabled later.\n"
  remarks: "\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>To re-enable the schedule, call <xref href=\"Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void DisableJobSchedule(string jobScheduleId, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub DisableJobSchedule(jobScheduleId As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: jobScheduleId
      type: System.String
      description: The id of the job schedule.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobSchedule*
  nameWithType.vb: JobScheduleOperations.DisableJobSchedule(String, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobSchedule(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: DisableJobSchedule(String, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: DeleteJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: DeleteJobScheduleAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: JobScheduleOperations.DeleteJobScheduleAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteJobScheduleAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 254
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDeletes the specified job schedule.\n"
  remarks: "\n<p>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <xref href=\"Microsoft.Azure.Batch.Common.JobScheduleState.Deleting\" data-throw-if-not-resolved=\"false\"></xref> state.\nThe Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</p>\n<p>The delete operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task DeleteJobScheduleAsync(string jobScheduleId, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function DeleteJobScheduleAsync(jobScheduleId As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: jobScheduleId
      type: System.String
      description: The id of the job schedule.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync*
  nameWithType.vb: JobScheduleOperations.DeleteJobScheduleAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: DeleteJobScheduleAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: DeleteJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: DeleteJobSchedule(String, IEnumerable<BatchClientBehavior>)
  nameWithType: JobScheduleOperations.DeleteJobSchedule(String, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobSchedule(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteJobSchedule
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 277
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDeletes the specified job schedule.\n"
  remarks: "\n<p>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <xref href=\"Microsoft.Azure.Batch.Common.JobScheduleState.Deleting\" data-throw-if-not-resolved=\"false\"></xref> state.\nThe Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void DeleteJobSchedule(string jobScheduleId, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub DeleteJobSchedule(jobScheduleId As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: jobScheduleId
      type: System.String
      description: The id of the job schedule.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobSchedule*
  nameWithType.vb: JobScheduleOperations.DeleteJobSchedule(String, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobSchedule(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: DeleteJobSchedule(String, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: TerminateJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: TerminateJobScheduleAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: JobScheduleOperations.TerminateJobScheduleAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TerminateJobScheduleAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 297
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nTerminates the specified job schedule.\n"
  remarks: "\n<p>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <xref href=\"Microsoft.Azure.Batch.Common.JobScheduleState.Terminating\" data-throw-if-not-resolved=\"false\"></xref> state.\nThe Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</p>\n<p>The terminate operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task TerminateJobScheduleAsync(string jobScheduleId, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function TerminateJobScheduleAsync(jobScheduleId As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: jobScheduleId
      type: System.String
      description: The id of the job schedule.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync*
  nameWithType.vb: JobScheduleOperations.TerminateJobScheduleAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: TerminateJobScheduleAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: TerminateJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: TerminateJobSchedule(String, IEnumerable<BatchClientBehavior>)
  nameWithType: JobScheduleOperations.TerminateJobSchedule(String, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobSchedule(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TerminateJobSchedule
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 320
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nTerminates the specified job schedule.\n"
  remarks: "\n<p>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <xref href=\"Microsoft.Azure.Batch.Common.JobScheduleState.Terminating\" data-throw-if-not-resolved=\"false\"></xref> state.\nThe Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void TerminateJobSchedule(string jobScheduleId, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub TerminateJobSchedule(jobScheduleId As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: jobScheduleId
      type: System.String
      description: The id of the job schedule.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobSchedule*
  nameWithType.vb: JobScheduleOperations.TerminateJobSchedule(String, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobSchedule(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: TerminateJobSchedule(String, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.JobScheduleOperations.ListJobs(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.ListJobs(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: ListJobs(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.JobScheduleOperations
  langs:
  - csharp
  - vb
  name: ListJobs(String, DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: JobScheduleOperations.ListJobs(String, DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.ListJobs(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/JobScheduleOperations.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListJobs
    path: src/azure-sdk-for-net/src/Batch/Client/Src/JobScheduleOperations.cs
    startLine: 354
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nEnumerates the <xref href=\"Microsoft.Azure.Batch.CloudJob\" data-throw-if-not-resolved=\"false\"></xref> created under the specified job schedule.\n"
  remarks: >-
    This method returns immediately; the jobs are retrieved from the Batch service only when the collection is enumerated.

    Retrieval is non-atomic; jobs are retrieved in pages during enumeration of the collection.
  example: []
  syntax:
    content: public IPagedEnumerable<CloudJob> ListJobs(string jobScheduleId, DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function ListJobs(jobScheduleId As String, detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As IPagedEnumerable(Of CloudJob)
    parameters:
    - id: jobScheduleId
      type: System.String
      description: The id of the job schedule.
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: A <xref href="Microsoft.Azure.Batch.DetailLevel" data-throw-if-not-resolved="false"></xref> used for filtering the list and for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors" data-throw-if-not-resolved="false"></xref> and <span class="paramref">detailLevel</span>.
    return:
      type: Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.CloudJob}
      description: An <xref href="Microsoft.Azure.Batch.IPagedEnumerable%601" data-throw-if-not-resolved="false"></xref> that can be used to enumerate jobs asynchronously or synchronously.
  overload: Microsoft.Azure.Batch.JobScheduleOperations.ListJobs*
  nameWithType.vb: JobScheduleOperations.ListJobs(String, DetailLevel, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.JobScheduleOperations.ListJobs(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: ListJobs(String, DetailLevel, IEnumerable(Of BatchClientBehavior))
references:
- uid: Microsoft.Azure.Batch.CloudJobSchedule
  commentId: T:Microsoft.Azure.Batch.CloudJobSchedule
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudJobSchedule
  nameWithType: CloudJobSchedule
  fullName: Microsoft.Azure.Batch.CloudJobSchedule
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Batch.IInheritedBehaviors
  commentId: T:Microsoft.Azure.Batch.IInheritedBehaviors
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IInheritedBehaviors
  nameWithType: IInheritedBehaviors
  fullName: Microsoft.Azure.Batch.IInheritedBehaviors
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.JobScheduleOperations
  commentId: T:Microsoft.Azure.Batch.JobScheduleOperations
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobScheduleOperations
  nameWithType: JobScheduleOperations
  fullName: Microsoft.Azure.Batch.JobScheduleOperations
- uid: Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors
  isExternal: false
  name: CustomBehaviors
  nameWithType: JobScheduleOperations.CustomBehaviors
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors
- uid: Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  parent: Microsoft.Azure.Batch.IInheritedBehaviors
  isExternal: false
  name: CustomBehaviors
  nameWithType: IInheritedBehaviors.CustomBehaviors
  fullName: Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<BatchClientBehavior>
  nameWithType: IList<BatchClientBehavior>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.BatchClientBehavior>
  nameWithType.vb: IList(Of BatchClientBehavior)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.BatchClientBehavior)
  name.vb: IList(Of BatchClientBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.DetailLevel
  commentId: T:Microsoft.Azure.Batch.DetailLevel
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: DetailLevel
  nameWithType: DetailLevel
  fullName: Microsoft.Azure.Batch.DetailLevel
- uid: Microsoft.Azure.Batch.BatchClientBehavior
  commentId: T:Microsoft.Azure.Batch.BatchClientBehavior
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: BatchClientBehavior
  nameWithType: BatchClientBehavior
  fullName: Microsoft.Azure.Batch.BatchClientBehavior
- uid: Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors
- uid: Microsoft.Azure.Batch.IPagedEnumerable`1
  commentId: T:Microsoft.Azure.Batch.IPagedEnumerable`1
  isExternal: false
  name: IPagedEnumerable<T>
  nameWithType: IPagedEnumerable<T>
  fullName: Microsoft.Azure.Batch.IPagedEnumerable<T>
  nameWithType.vb: IPagedEnumerable(Of T)
  fullname.vb: Microsoft.Azure.Batch.IPagedEnumerable(Of T)
  name.vb: IPagedEnumerable(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules
  isExternal: false
  name: ListJobSchedules
  nameWithType: JobScheduleOperations.ListJobSchedules
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BatchClientBehavior>
  nameWithType: IEnumerable<BatchClientBehavior>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>
  nameWithType.vb: IEnumerable(Of BatchClientBehavior)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior)
  name.vb: IEnumerable(Of BatchClientBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.CloudJobSchedule}
  commentId: T:Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.CloudJobSchedule}
  parent: Microsoft.Azure.Batch
  definition: Microsoft.Azure.Batch.IPagedEnumerable`1
  name: IPagedEnumerable<CloudJobSchedule>
  nameWithType: IPagedEnumerable<CloudJobSchedule>
  fullName: Microsoft.Azure.Batch.IPagedEnumerable<Microsoft.Azure.Batch.CloudJobSchedule>
  nameWithType.vb: IPagedEnumerable(Of CloudJobSchedule)
  fullname.vb: Microsoft.Azure.Batch.IPagedEnumerable(Of Microsoft.Azure.Batch.CloudJobSchedule)
  name.vb: IPagedEnumerable(Of CloudJobSchedule)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.CloudJobSchedule
    name: CloudJobSchedule
    nameWithType: CloudJobSchedule
    fullName: Microsoft.Azure.Batch.CloudJobSchedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.CloudJobSchedule
    name: CloudJobSchedule
    nameWithType: CloudJobSchedule
    fullName: Microsoft.Azure.Batch.CloudJobSchedule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync
  isExternal: false
  name: GetJobScheduleAsync
  nameWithType: JobScheduleOperations.GetJobScheduleAsync
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.CloudJobSchedule}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.CloudJobSchedule}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CloudJobSchedule>
  nameWithType: Task<CloudJobSchedule>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.CloudJobSchedule>
  nameWithType.vb: Task(Of CloudJobSchedule)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.CloudJobSchedule)
  name.vb: Task(Of CloudJobSchedule)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.CloudJobSchedule
    name: CloudJobSchedule
    nameWithType: CloudJobSchedule
    fullName: Microsoft.Azure.Batch.CloudJobSchedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.CloudJobSchedule
    name: CloudJobSchedule
    nameWithType: CloudJobSchedule
    fullName: Microsoft.Azure.Batch.CloudJobSchedule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule
  isExternal: false
  name: GetJobSchedule
  nameWithType: JobScheduleOperations.GetJobSchedule
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule
- uid: Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule
  isExternal: false
  name: CreateJobSchedule
  nameWithType: JobScheduleOperations.CreateJobSchedule
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule
- uid: Microsoft.Azure.Batch.JobSpecification
  commentId: T:Microsoft.Azure.Batch.JobSpecification
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: JobSpecification
  nameWithType: JobSpecification
  fullName: Microsoft.Azure.Batch.JobSpecification
- uid: Microsoft.Azure.Batch.Schedule
  commentId: T:Microsoft.Azure.Batch.Schedule
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: Schedule
  nameWithType: Schedule
  fullName: Microsoft.Azure.Batch.Schedule
- uid: Microsoft.Azure.Batch.CloudJobSchedule.Schedule
  commentId: P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync
  isExternal: false
  name: EnableJobScheduleAsync
  nameWithType: JobScheduleOperations.EnableJobScheduleAsync
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync
- uid: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule
  isExternal: false
  name: EnableJobSchedule
  nameWithType: JobScheduleOperations.EnableJobSchedule
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule
- uid: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync
  isExternal: false
  name: DisableJobScheduleAsync
  nameWithType: JobScheduleOperations.DisableJobScheduleAsync
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync
- uid: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobSchedule*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobSchedule
  isExternal: false
  name: DisableJobSchedule
  nameWithType: JobScheduleOperations.DisableJobSchedule
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.DisableJobSchedule
- uid: Microsoft.Azure.Batch.Common.JobScheduleState.Deleting
  commentId: F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting
- uid: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync
  isExternal: false
  name: DeleteJobScheduleAsync
  nameWithType: JobScheduleOperations.DeleteJobScheduleAsync
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync
- uid: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobSchedule*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobSchedule
  isExternal: false
  name: DeleteJobSchedule
  nameWithType: JobScheduleOperations.DeleteJobSchedule
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobSchedule
- uid: Microsoft.Azure.Batch.Common.JobScheduleState.Terminating
  commentId: F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating
- uid: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync
  isExternal: false
  name: TerminateJobScheduleAsync
  nameWithType: JobScheduleOperations.TerminateJobScheduleAsync
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync
- uid: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobSchedule*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobSchedule
  isExternal: false
  name: TerminateJobSchedule
  nameWithType: JobScheduleOperations.TerminateJobSchedule
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobSchedule
- uid: Microsoft.Azure.Batch.CloudJob
  commentId: T:Microsoft.Azure.Batch.CloudJob
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudJob
  nameWithType: CloudJob
  fullName: Microsoft.Azure.Batch.CloudJob
- uid: Microsoft.Azure.Batch.JobScheduleOperations.ListJobs*
  commentId: Overload:Microsoft.Azure.Batch.JobScheduleOperations.ListJobs
  isExternal: false
  name: ListJobs
  nameWithType: JobScheduleOperations.ListJobs
  fullName: Microsoft.Azure.Batch.JobScheduleOperations.ListJobs
- uid: Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.CloudJob}
  commentId: T:Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.CloudJob}
  parent: Microsoft.Azure.Batch
  definition: Microsoft.Azure.Batch.IPagedEnumerable`1
  name: IPagedEnumerable<CloudJob>
  nameWithType: IPagedEnumerable<CloudJob>
  fullName: Microsoft.Azure.Batch.IPagedEnumerable<Microsoft.Azure.Batch.CloudJob>
  nameWithType.vb: IPagedEnumerable(Of CloudJob)
  fullname.vb: Microsoft.Azure.Batch.IPagedEnumerable(Of Microsoft.Azure.Batch.CloudJob)
  name.vb: IPagedEnumerable(Of CloudJob)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.CloudJob
    name: CloudJob
    nameWithType: CloudJob
    fullName: Microsoft.Azure.Batch.CloudJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.CloudJob
    name: CloudJob
    nameWithType: CloudJob
    fullName: Microsoft.Azure.Batch.CloudJob
  - name: )
    nameWithType: )
    fullName: )
