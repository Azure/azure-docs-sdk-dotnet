### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.ResponseInterceptor
  commentId: T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor
  id: ResponseInterceptor
  parent: Microsoft.Azure.Batch.Protocol
  children:
  - Microsoft.Azure.Batch.Protocol.ResponseInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler)
  - Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptHandler
  langs:
  - csharp
  - vb
  name: ResponseInterceptor
  nameWithType: ResponseInterceptor
  fullName: Microsoft.Azure.Batch.Protocol.ResponseInterceptor
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Protocol/ResponseInterceptor.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResponseInterceptor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Protocol/ResponseInterceptor.cs
    startLine: 9
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nA BatchClientBehavior that enables inspection and modification of the BatchResponse.\n"
  example: []
  syntax:
    content: 'public class ResponseInterceptor : BatchClientBehavior'
    content.vb: >-
      Public Class ResponseInterceptor
          Inherits BatchClientBehavior
  inheritance:
  - System.Object
  - Microsoft.Azure.Batch.BatchClientBehavior
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler)
  commentId: M:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler)
  id: '#ctor(Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler)'
  parent: Microsoft.Azure.Batch.Protocol.ResponseInterceptor
  langs:
  - csharp
  - vb
  name: ResponseInterceptor(ResponseInterceptor.BatchResponseInterceptHandler)
  nameWithType: ResponseInterceptor.ResponseInterceptor(ResponseInterceptor.BatchResponseInterceptHandler)
  fullName: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptor(Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Protocol/ResponseInterceptor.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Protocol/ResponseInterceptor.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.Protocol.ResponseInterceptor\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ResponseInterceptor(ResponseInterceptor.BatchResponseInterceptHandler responseInterceptHandler)
    content.vb: Public Sub New(responseInterceptHandler As ResponseInterceptor.BatchResponseInterceptHandler)
    parameters:
    - id: responseInterceptHandler
      type: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler
      description: The method to invoke on the intercepted response.
  overload: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptHandler
  commentId: P:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptHandler
  id: ResponseInterceptHandler
  parent: Microsoft.Azure.Batch.Protocol.ResponseInterceptor
  langs:
  - csharp
  - vb
  name: ResponseInterceptHandler
  nameWithType: ResponseInterceptor.ResponseInterceptHandler
  fullName: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptHandler
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Protocol/ResponseInterceptor.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResponseInterceptHandler
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Protocol/ResponseInterceptor.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol
  summary: "\nGets or sets the method to invoke on the intercepted response.\n"
  example: []
  syntax:
    content: public ResponseInterceptor.BatchResponseInterceptHandler ResponseInterceptHandler { get; set; }
    content.vb: Public Property ResponseInterceptHandler As ResponseInterceptor.BatchResponseInterceptHandler
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler
  overload: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptHandler*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.Protocol
  commentId: N:Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol
  nameWithType: Microsoft.Azure.Batch.Protocol
  fullName: Microsoft.Azure.Batch.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Batch.BatchClientBehavior
  commentId: T:Microsoft.Azure.Batch.BatchClientBehavior
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: BatchClientBehavior
  nameWithType: BatchClientBehavior
  fullName: Microsoft.Azure.Batch.BatchClientBehavior
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: Microsoft.Azure.Batch.Protocol.ResponseInterceptor
  commentId: T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor
  isExternal: false
  name: ResponseInterceptor
  nameWithType: ResponseInterceptor
  fullName: Microsoft.Azure.Batch.Protocol.ResponseInterceptor
- uid: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.#ctor
  isExternal: false
  name: ResponseInterceptor
  nameWithType: ResponseInterceptor.ResponseInterceptor
  fullName: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptor
- uid: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler
  commentId: T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler
  parent: Microsoft.Azure.Batch.Protocol
  isExternal: false
  name: ResponseInterceptor.BatchResponseInterceptHandler
  nameWithType: ResponseInterceptor.BatchResponseInterceptHandler
  fullName: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler
- uid: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptHandler*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptHandler
  isExternal: false
  name: ResponseInterceptHandler
  nameWithType: ResponseInterceptor.ResponseInterceptHandler
  fullName: Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptHandler
