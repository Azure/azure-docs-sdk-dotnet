### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  id: JobPreparationAndReleaseTaskExecutionInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation)
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInfo
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInfo
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeId
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeUrl
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.PoolId
  - Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.Validate
  langs:
  - csharp
  - vb
  name: JobPreparationAndReleaseTaskExecutionInformation
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobPreparationAndReleaseTaskExecutionInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nThe status of the Job Preparation and Job Release tasks on a compute\nnode.\n"
  example: []
  syntax:
    content: public class JobPreparationAndReleaseTaskExecutionInformation
    content.vb: Public Class JobPreparationAndReleaseTaskExecutionInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: JobPreparationAndReleaseTaskExecutionInformation()
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.JobPreparationAndReleaseTaskExecutionInformation()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationAndReleaseTaskExecutionInformation()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the\nJobPreparationAndReleaseTaskExecutionInformation class.\n"
  example: []
  syntax:
    content: public JobPreparationAndReleaseTaskExecutionInformation()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation)
  id: '#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation)'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: JobPreparationAndReleaseTaskExecutionInformation(String, String, String, JobPreparationTaskExecutionInformation, JobReleaseTaskExecutionInformation)
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.JobPreparationAndReleaseTaskExecutionInformation(String, String, String, JobPreparationTaskExecutionInformation, JobReleaseTaskExecutionInformation)
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationAndReleaseTaskExecutionInformation(System.String, System.String, System.String, Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation, Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the\nJobPreparationAndReleaseTaskExecutionInformation class.\n"
  example: []
  syntax:
    content: public JobPreparationAndReleaseTaskExecutionInformation(string poolId = null, string nodeId = null, string nodeUrl = null, JobPreparationTaskExecutionInformation jobPreparationTaskExecutionInfo = null, JobReleaseTaskExecutionInformation jobReleaseTaskExecutionInfo = null)
    content.vb: Public Sub New(poolId As String = Nothing, nodeId As String = Nothing, nodeUrl As String = Nothing, jobPreparationTaskExecutionInfo As JobPreparationTaskExecutionInformation = Nothing, jobReleaseTaskExecutionInfo As JobReleaseTaskExecutionInformation = Nothing)
    parameters:
    - id: poolId
      type: System.String
      description: >-
        The id of the pool containing the compute

        node to which this entry refers.
    - id: nodeId
      type: System.String
      description: >-
        The id of the compute node to which this

        entry refers.
    - id: nodeUrl
      type: System.String
      description: >-
        The URL of the compute node to which this

        entry refers.
    - id: jobPreparationTaskExecutionInfo
      type: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation
      description: >-
        Information about

        the execution status of the Job Preparation task on this compute

        node.
    - id: jobReleaseTaskExecutionInfo
      type: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
      description: >-
        Information about the

        execution status of the Job Release task on this compute

        node.
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.PoolId
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.PoolId
  id: PoolId
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: PoolId
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.PoolId
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.PoolId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the id of the pool containing the compute node to\nwhich this entry refers.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "poolId")]

      public string PoolId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="poolId")>

      Public Property PoolId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.PoolId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: poolId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeId
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeId
  id: NodeId
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: NodeId
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.NodeId
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NodeId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the id of the compute node to which this entry refers.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "nodeId")]

      public string NodeId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="nodeId")>

      Public Property NodeId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: nodeId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeUrl
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeUrl
  id: NodeUrl
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: NodeUrl
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.NodeUrl
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeUrl
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NodeUrl
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the URL of the compute node to which this entry\nrefers.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "nodeUrl")]

      public string NodeUrl { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="nodeUrl")>

      Public Property NodeUrl As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: nodeUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInfo
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInfo
  id: JobPreparationTaskExecutionInfo
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: JobPreparationTaskExecutionInfo
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInfo
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobPreparationTaskExecutionInfo
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets information about the execution status of the Job\nPreparation task on this compute node.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "jobPreparationTaskExecutionInfo")]

      public JobPreparationTaskExecutionInformation JobPreparationTaskExecutionInfo { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="jobPreparationTaskExecutionInfo")>

      Public Property JobPreparationTaskExecutionInfo As JobPreparationTaskExecutionInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInfo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: jobPreparationTaskExecutionInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInfo
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInfo
  id: JobReleaseTaskExecutionInfo
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: JobReleaseTaskExecutionInfo
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInfo
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobReleaseTaskExecutionInfo
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets information about the execution status of the Job\nRelease task on this compute node.\n"
  remarks: "\nThis property is set only if the Job Release task has run on the\nnode.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "jobReleaseTaskExecutionInfo")]

      public JobReleaseTaskExecutionInformation JobReleaseTaskExecutionInfo { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="jobReleaseTaskExecutionInfo")>

      Public Property JobReleaseTaskExecutionInfo As JobReleaseTaskExecutionInformation
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInfo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: jobReleaseTaskExecutionInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobPreparationAndReleaseTaskExecutionInformation.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor
  isExternal: false
  name: JobPreparationAndReleaseTaskExecutionInformation
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.JobPreparationAndReleaseTaskExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationAndReleaseTaskExecutionInformation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobPreparationTaskExecutionInformation
  nameWithType: JobPreparationTaskExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation
- uid: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: JobReleaseTaskExecutionInformation
  nameWithType: JobReleaseTaskExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.PoolId*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.PoolId
  isExternal: false
  name: PoolId
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.PoolId
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.PoolId
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeId*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeId
  isExternal: false
  name: NodeId
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.NodeId
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeId
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeUrl*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeUrl
  isExternal: false
  name: NodeUrl
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.NodeUrl
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeUrl
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInfo*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInfo
  isExternal: false
  name: JobPreparationTaskExecutionInfo
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInfo
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInfo*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInfo
  isExternal: false
  name: JobReleaseTaskExecutionInfo
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInfo
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInfo
- uid: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.Validate
  isExternal: false
  name: Validate
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.Validate
