### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.PoolUsageMetrics
  commentId: T:Microsoft.Azure.Batch.PoolUsageMetrics
  id: PoolUsageMetrics
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.PoolUsageMetrics.DataEgressGiB
  - Microsoft.Azure.Batch.PoolUsageMetrics.DataIngressGiB
  - Microsoft.Azure.Batch.PoolUsageMetrics.EndTime
  - Microsoft.Azure.Batch.PoolUsageMetrics.PoolId
  - Microsoft.Azure.Batch.PoolUsageMetrics.StartTime
  - Microsoft.Azure.Batch.PoolUsageMetrics.TotalCoreHours
  - Microsoft.Azure.Batch.PoolUsageMetrics.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: PoolUsageMetrics
  nameWithType: PoolUsageMetrics
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolUsageMetrics
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nThe usage metrics for a single pool in a certain time range.\n"
  example: []
  syntax:
    content: 'public class PoolUsageMetrics : IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class PoolUsageMetrics
          Implements IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.DataEgressGiB
  commentId: P:Microsoft.Azure.Batch.PoolUsageMetrics.DataEgressGiB
  id: DataEgressGiB
  parent: Microsoft.Azure.Batch.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: DataEgressGiB
  nameWithType: PoolUsageMetrics.DataEgressGiB
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.DataEgressGiB
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataEgressGiB
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the cross data center network egress from the pool during this interval, in gibibytes.\n"
  example: []
  syntax:
    content: public double DataEgressGiB { get; }
    content.vb: Public ReadOnly Property DataEgressGiB As Double
    parameters: []
    return:
      type: System.Double
  overload: Microsoft.Azure.Batch.PoolUsageMetrics.DataEgressGiB*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.DataIngressGiB
  commentId: P:Microsoft.Azure.Batch.PoolUsageMetrics.DataIngressGiB
  id: DataIngressGiB
  parent: Microsoft.Azure.Batch.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: DataIngressGiB
  nameWithType: PoolUsageMetrics.DataIngressGiB
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.DataIngressGiB
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataIngressGiB
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the cross data center network ingress to the pool during this interval, in gibibytes.\n"
  example: []
  syntax:
    content: public double DataIngressGiB { get; }
    content.vb: Public ReadOnly Property DataIngressGiB As Double
    parameters: []
    return:
      type: System.Double
  overload: Microsoft.Azure.Batch.PoolUsageMetrics.DataIngressGiB*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.EndTime
  commentId: P:Microsoft.Azure.Batch.PoolUsageMetrics.EndTime
  id: EndTime
  parent: Microsoft.Azure.Batch.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: PoolUsageMetrics.EndTime
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.EndTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the end time of the aggregation interval for this entry.\n"
  example: []
  syntax:
    content: public DateTime EndTime { get; }
    content.vb: Public ReadOnly Property EndTime As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Batch.PoolUsageMetrics.EndTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.PoolId
  commentId: P:Microsoft.Azure.Batch.PoolUsageMetrics.PoolId
  id: PoolId
  parent: Microsoft.Azure.Batch.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: PoolId
  nameWithType: PoolUsageMetrics.PoolId
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.PoolId
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolId
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the id of the pool whose metrics are aggregated in this entry.\n"
  example: []
  syntax:
    content: public string PoolId { get; }
    content.vb: Public ReadOnly Property PoolId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.PoolUsageMetrics.PoolId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.StartTime
  commentId: P:Microsoft.Azure.Batch.PoolUsageMetrics.StartTime
  id: StartTime
  parent: Microsoft.Azure.Batch.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: PoolUsageMetrics.StartTime
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.StartTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the start time of the aggregation interval covered by this entry.\n"
  example: []
  syntax:
    content: public DateTime StartTime { get; }
    content.vb: Public ReadOnly Property StartTime As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Batch.PoolUsageMetrics.StartTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.TotalCoreHours
  commentId: P:Microsoft.Azure.Batch.PoolUsageMetrics.TotalCoreHours
  id: TotalCoreHours
  parent: Microsoft.Azure.Batch.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: TotalCoreHours
  nameWithType: PoolUsageMetrics.TotalCoreHours
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.TotalCoreHours
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TotalCoreHours
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the total core hours used in the pool during this aggregation interval.\n"
  example: []
  syntax:
    content: public double TotalCoreHours { get; }
    content.vb: Public ReadOnly Property TotalCoreHours As Double
    parameters: []
    return:
      type: System.Double
  overload: Microsoft.Azure.Batch.PoolUsageMetrics.TotalCoreHours*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.VirtualMachineSize
  commentId: P:Microsoft.Azure.Batch.PoolUsageMetrics.VirtualMachineSize
  id: VirtualMachineSize
  parent: Microsoft.Azure.Batch.PoolUsageMetrics
  langs:
  - csharp
  - vb
  name: VirtualMachineSize
  nameWithType: PoolUsageMetrics.VirtualMachineSize
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.VirtualMachineSize
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineSize
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolUsageMetrics.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the size of virtual machine in the pool. All virtual machines in a pool are the same size. Azure Batch supports \nall Azure virtual machine sizes except ExtraSmall.\n"
  example: []
  syntax:
    content: public string VirtualMachineSize { get; }
    content.vb: Public ReadOnly Property VirtualMachineSize As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.PoolUsageMetrics.VirtualMachineSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.DataEgressGiB*
  commentId: Overload:Microsoft.Azure.Batch.PoolUsageMetrics.DataEgressGiB
  isExternal: false
  name: DataEgressGiB
  nameWithType: PoolUsageMetrics.DataEgressGiB
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.DataEgressGiB
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.DataIngressGiB*
  commentId: Overload:Microsoft.Azure.Batch.PoolUsageMetrics.DataIngressGiB
  isExternal: false
  name: DataIngressGiB
  nameWithType: PoolUsageMetrics.DataIngressGiB
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.DataIngressGiB
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.EndTime*
  commentId: Overload:Microsoft.Azure.Batch.PoolUsageMetrics.EndTime
  isExternal: false
  name: EndTime
  nameWithType: PoolUsageMetrics.EndTime
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.EndTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.PoolId*
  commentId: Overload:Microsoft.Azure.Batch.PoolUsageMetrics.PoolId
  isExternal: false
  name: PoolId
  nameWithType: PoolUsageMetrics.PoolId
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.PoolId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.StartTime*
  commentId: Overload:Microsoft.Azure.Batch.PoolUsageMetrics.StartTime
  isExternal: false
  name: StartTime
  nameWithType: PoolUsageMetrics.StartTime
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.StartTime
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.TotalCoreHours*
  commentId: Overload:Microsoft.Azure.Batch.PoolUsageMetrics.TotalCoreHours
  isExternal: false
  name: TotalCoreHours
  nameWithType: PoolUsageMetrics.TotalCoreHours
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.TotalCoreHours
- uid: Microsoft.Azure.Batch.PoolUsageMetrics.VirtualMachineSize*
  commentId: Overload:Microsoft.Azure.Batch.PoolUsageMetrics.VirtualMachineSize
  isExternal: false
  name: VirtualMachineSize
  nameWithType: PoolUsageMetrics.VirtualMachineSize
  fullName: Microsoft.Azure.Batch.PoolUsageMetrics.VirtualMachineSize
