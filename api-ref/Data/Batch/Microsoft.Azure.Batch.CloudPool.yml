### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.CloudPool
  commentId: T:Microsoft.Azure.Batch.CloudPool
  id: CloudPool
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.CloudPool.AllocationState
  - Microsoft.Azure.Batch.CloudPool.AllocationStateTransitionTime
  - Microsoft.Azure.Batch.CloudPool.ApplicationPackageReferences
  - Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled
  - Microsoft.Azure.Batch.CloudPool.AutoScaleEvaluationInterval
  - Microsoft.Azure.Batch.CloudPool.AutoScaleFormula
  - Microsoft.Azure.Batch.CloudPool.AutoScaleRun
  - Microsoft.Azure.Batch.CloudPool.CertificateReferences
  - Microsoft.Azure.Batch.CloudPool.ChangeOSVersion(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration
  - Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.CommitChanges(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.CreationTime
  - Microsoft.Azure.Batch.CloudPool.CurrentDedicated
  - Microsoft.Azure.Batch.CloudPool.CustomBehaviors
  - Microsoft.Azure.Batch.CloudPool.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.DisableAutoScale(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.DisplayName
  - Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.ETag
  - Microsoft.Azure.Batch.CloudPool.EvaluateAutoScale(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.GetComputeNode(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.Id
  - Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled
  - Microsoft.Azure.Batch.CloudPool.LastModified
  - Microsoft.Azure.Batch.CloudPool.ListComputeNodes(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.MaxTasksPerComputeNode
  - Microsoft.Azure.Batch.CloudPool.Metadata
  - Microsoft.Azure.Batch.CloudPool.NetworkConfiguration
  - Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.RemoveFromPool(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.Resize(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.ResizeError
  - Microsoft.Azure.Batch.CloudPool.ResizeTimeout
  - Microsoft.Azure.Batch.CloudPool.StartTask
  - Microsoft.Azure.Batch.CloudPool.State
  - Microsoft.Azure.Batch.CloudPool.StateTransitionTime
  - Microsoft.Azure.Batch.CloudPool.Statistics
  - Microsoft.Azure.Batch.CloudPool.StopResize(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  - Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  - Microsoft.Azure.Batch.CloudPool.TargetDedicated
  - Microsoft.Azure.Batch.CloudPool.TaskSchedulingPolicy
  - Microsoft.Azure.Batch.CloudPool.Url
  - Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration
  - Microsoft.Azure.Batch.CloudPool.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: CloudPool
  nameWithType: CloudPool
  fullName: Microsoft.Azure.Batch.CloudPool
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloudPool
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nA pool in the Azure Batch service.\n"
  example: []
  syntax:
    content: 'public class CloudPool : IRefreshable, ITransportObjectProvider<PoolAddParameter>, IInheritedBehaviors, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class CloudPool
          Implements IRefreshable, ITransportObjectProvider(Of PoolAddParameter), IInheritedBehaviors, IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Batch.IRefreshable
  - Microsoft.Azure.Batch.IInheritedBehaviors
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.CloudPool.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: DeleteAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.DeleteAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.DeleteAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDeletes this pool.\n"
  remarks: "\n<p>The delete operation requests that the pool be deleted.  The request puts the pool in the <xref href=\"Microsoft.Azure.Batch.Common.PoolState.Deleting\" data-throw-if-not-resolved=\"false\"></xref> state.\nThe Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</p>\n<p>The delete operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task DeleteAsync(IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function DeleteAsync(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudPool.DeleteAsync*
  nameWithType.vb: CloudPool.DeleteAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.DeleteAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: DeleteAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: Delete(IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.Delete(IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.Delete(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDeletes this pool.\n"
  remarks: "\n<p>The delete operation requests that the pool be deleted.  The request puts the pool in the <xref href=\"Microsoft.Azure.Batch.Common.PoolState.Deleting\" data-throw-if-not-resolved=\"false\"></xref> state.\nThe Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</p>\n<remarks>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.DeleteAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</remarks>\n"
  example: []
  syntax:
    content: public void Delete(IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Delete(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.Delete*
  nameWithType.vb: CloudPool.Delete(IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.Delete(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Delete(IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: CommitAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.CommitAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommitAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCommits this <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref> to the Azure Batch service.\n"
  remarks: "\n<p>The commit operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task CommitAsync(IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function CommitAsync(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudPool.CommitAsync*
  nameWithType.vb: CloudPool.CommitAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: CommitAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: Commit(IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.Commit(IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Commit
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 131
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCommits this <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref> to the Azure Batch service.\n"
  remarks: "\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void Commit(IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Commit(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.Commit*
  nameWithType.vb: CloudPool.Commit(IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Commit(IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: CommitChangesAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.CommitChangesAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.CommitChangesAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommitChangesAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCommits all pending changes to this <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref> to the Azure Batch service.\n"
  remarks: "\n<p>\nUpdates an existing <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref> on the Batch service by replacing its properties with the properties of this <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref> which have been changed.\nUnchanged properties are ignored.\nAll changes since the last time this entity was retrieved from the Batch service (either via <xref href=\"Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Azure.Batch.PoolOperations.GetPool(System.String%2cMicrosoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>,\nor <xref href=\"Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>) are applied.\nProperties which are explicitly set to null will cause an exception because the Batch service does not support partial updates which set a property to null.\nIf you need to set a property to null, use <xref href=\"Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>This operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task CommitChangesAsync(IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function CommitChangesAsync(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudPool.CommitChangesAsync*
  nameWithType.vb: CloudPool.CommitChangesAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.CommitChangesAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: CommitChangesAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.CommitChanges(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.CommitChanges(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: CommitChanges(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: CommitChanges(IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.CommitChanges(IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.CommitChanges(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CommitChanges
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 203
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nCommits all pending changes to this <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref> to the Azure Batch service.\n"
  remarks: "\n<p>\nUpdates an existing <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref> on the Batch service by replacing its properties with the properties of this <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref> which have been changed.\nUnchanged properties are ignored.\nAll changes since the last time this entity was retrieved from the Batch service (either via <xref href=\"Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Azure.Batch.PoolOperations.GetPool(System.String%2cMicrosoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>,\nor <xref href=\"Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>) are applied.\nProperties which are explicitly set to null will cause an exception because the Batch service does not support partial updates which set a property to null.\nIf you need to set a property to null, use the <xref href=\"Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.CommitChangesAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void CommitChanges(IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub CommitChanges(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.CommitChanges*
  nameWithType.vb: CloudPool.CommitChanges(IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.CommitChanges(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: CommitChanges(IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: ResizeAsync(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: ResizeAsync(Int32, Nullable<TimeSpan>, Nullable<ComputeNodeDeallocationOption>, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.ResizeAsync(Int32, Nullable<TimeSpan>, Nullable<ComputeNodeDeallocationOption>, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Int32, System.Nullable<System.TimeSpan>, System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResizeAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 230
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nResizes this pool.\n"
  remarks: "\n<p>The resize operation requests that the pool be resized.  The request puts the pool in the <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Resizing\" data-throw-if-not-resolved=\"false\"></xref> allocation state.\nThe Batch service will perform the actual resize without any further client action, and set the allocation state to <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref> once complete.</p>\n<p>\nYou can only resize a pool when its <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref>.\nYou cannot resize pools which are configured for automatic scaling (that is, the <xref href=\"Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled\" data-throw-if-not-resolved=\"false\"></xref> property of the pool is true).\nIf you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <xref href=\"Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable%7bSystem.String%7d%2cSystem.Nullable%7bMicrosoft.Azure.Batch.Common.ComputeNodeDeallocationOption%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>The resize operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task ResizeAsync(int targetDedicated, TimeSpan? resizeTimeout = null, ComputeNodeDeallocationOption? deallocationOption = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function ResizeAsync(targetDedicated As Integer, resizeTimeout As TimeSpan? = Nothing, deallocationOption As ComputeNodeDeallocationOption? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: targetDedicated
      type: System.Int32
      description: The desired number of compute nodes in the pool.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. If the pool has not reached the target size after this time, the resize is stopped. The default is 15 minutes.
    - id: deallocationOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
      description: Specifies when nodes may be removed from the pool, if the pool size is decreasing. The default is <xref href="Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue" data-throw-if-not-resolved="false"></xref>.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudPool.ResizeAsync*
  nameWithType.vb: CloudPool.ResizeAsync(Int32, Nullable(Of TimeSpan), Nullable(Of ComputeNodeDeallocationOption), IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Int32, System.Nullable(Of System.TimeSpan), System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: ResizeAsync(Int32, Nullable(Of TimeSpan), Nullable(Of ComputeNodeDeallocationOption), IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.Resize(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.Resize(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Resize(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: Resize(Int32, Nullable<TimeSpan>, Nullable<ComputeNodeDeallocationOption>, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.Resize(Int32, Nullable<TimeSpan>, Nullable<ComputeNodeDeallocationOption>, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.Resize(System.Int32, System.Nullable<System.TimeSpan>, System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Resize
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 272
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nResizes this pool.\n"
  remarks: "\n<p>The resize operation requests that the pool be resized.  The request puts the pool in the <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Resizing\" data-throw-if-not-resolved=\"false\"></xref> allocation state.\nThe Batch service will perform the actual resize without any further client action, and set the allocation state to <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref> once complete.</p>\n<p>\nYou can only resize a pool when its <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref>.\nYou cannot resize pools which are configured for automatic scaling (that is, the <xref href=\"Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled\" data-throw-if-not-resolved=\"false\"></xref> property of the pool is true).\nIf you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <xref href=\"Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable%7bSystem.String%7d%2cSystem.Nullable%7bMicrosoft.Azure.Batch.Common.ComputeNodeDeallocationOption%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Int32%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Nullable%7bMicrosoft.Azure.Batch.Common.ComputeNodeDeallocationOption%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void Resize(int targetDedicated, TimeSpan? resizeTimeout = null, ComputeNodeDeallocationOption? deallocationOption = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Resize(targetDedicated As Integer, resizeTimeout As TimeSpan? = Nothing, deallocationOption As ComputeNodeDeallocationOption? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: targetDedicated
      type: System.Int32
      description: The desired number of compute nodes in the pool.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. If the pool has not reached the target size after this time, the resize is stopped. The default is 15 minutes.
    - id: deallocationOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
      description: Specifies when nodes may be removed from the pool, if the pool size is decreasing. The default is <xref href="Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue" data-throw-if-not-resolved="false"></xref>.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.Resize*
  nameWithType.vb: CloudPool.Resize(Int32, Nullable(Of TimeSpan), Nullable(Of ComputeNodeDeallocationOption), IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.Resize(System.Int32, System.Nullable(Of System.TimeSpan), System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Resize(Int32, Nullable(Of TimeSpan), Nullable(Of ComputeNodeDeallocationOption), IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: StopResizeAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: StopResizeAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.StopResizeAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StopResizeAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 299
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nStops a resize operation on this pool.\n"
  remarks: "\n<p>\nThis operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at\nwhen the stop operation is done.  During the stop operation, the pool <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> changes first\nto <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Stopping\" data-throw-if-not-resolved=\"false\"></xref> and then to <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>The stop resize operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task StopResizeAsync(IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function StopResizeAsync(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudPool.StopResizeAsync*
  nameWithType.vb: CloudPool.StopResizeAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: StopResizeAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.StopResize(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.StopResize(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: StopResize(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: StopResize(IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.StopResize(IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.StopResize(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StopResize
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 327
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nStops a resize operation on this pool.\n"
  remarks: "\n<p>\nThis operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at\nwhen the stop operation is done.  During the stop operation, the pool <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> changes first\nto <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Stopping\" data-throw-if-not-resolved=\"false\"></xref> and then to <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void StopResize(IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub StopResize(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.StopResize*
  nameWithType.vb: CloudPool.StopResize(IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.StopResize(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: StopResize(IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.ListComputeNodes(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.ListComputeNodes(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: ListComputeNodes(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: ListComputeNodes(DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.ListComputeNodes(DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.ListComputeNodes(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListComputeNodes
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 343
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nEnumerates the <xref href=\"Microsoft.Azure.Batch.ComputeNode\" data-throw-if-not-resolved=\"false\"></xref> of this pool.\n"
  remarks: >-
    This method returns immediately; the nodes are retrieved from the Batch service only when the collection is enumerated.

    Retrieval is non-atomic; nodes are retrieved in pages during enumeration of the collection.
  example: []
  syntax:
    content: public IPagedEnumerable<ComputeNode> ListComputeNodes(DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function ListComputeNodes(detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As IPagedEnumerable(Of ComputeNode)
    parameters:
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: A <xref href="Microsoft.Azure.Batch.DetailLevel" data-throw-if-not-resolved="false"></xref> used for filtering the list and for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref> and <span class="paramref">detailLevel</span>.
    return:
      type: Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.ComputeNode}
      description: An <xref href="Microsoft.Azure.Batch.IPagedEnumerable%601" data-throw-if-not-resolved="false"></xref> that can be used to enumerate compute nodes asynchronously or synchronously.
  overload: Microsoft.Azure.Batch.CloudPool.ListComputeNodes*
  nameWithType.vb: CloudPool.ListComputeNodes(DetailLevel, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.ListComputeNodes(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: ListComputeNodes(DetailLevel, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: GetComputeNodeAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: GetComputeNodeAsync(String, DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.GetComputeNodeAsync(String, DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetComputeNodeAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 364
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the specified compute node from this pool.\n"
  remarks: The get node operation runs asynchronously.
  example: []
  syntax:
    content: public Task<ComputeNode> GetComputeNodeAsync(string computeNodeId, DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function GetComputeNodeAsync(computeNodeId As String, detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ComputeNode)
    parameters:
    - id: computeNodeId
      type: System.String
      description: The id of the compute node to get from the pool.
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: A <xref href="Microsoft.Azure.Batch.DetailLevel" data-throw-if-not-resolved="false"></xref> used for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref> and <span class="paramref">detailLevel</span>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.ComputeNode}
      description: A <xref href="Microsoft.Azure.Batch.ComputeNode" data-throw-if-not-resolved="false"></xref> containing information about the specified compute node.
  overload: Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync*
  nameWithType.vb: CloudPool.GetComputeNodeAsync(String, DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: GetComputeNodeAsync(String, DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.GetComputeNode(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.GetComputeNode(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: GetComputeNode(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: GetComputeNode(String, DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.GetComputeNode(String, DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.GetComputeNode(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetComputeNode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 389
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the specified compute node from this pool.\n"
  remarks: This is a blocking operation. For a non-blocking equivalent, see <xref href="Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String%2cMicrosoft.Azure.Batch.DetailLevel%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ComputeNode GetComputeNode(string computeNodeId, DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function GetComputeNode(computeNodeId As String, detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As ComputeNode
    parameters:
    - id: computeNodeId
      type: System.String
      description: The id of the compute node to get from the pool.
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: A <xref href="Microsoft.Azure.Batch.DetailLevel" data-throw-if-not-resolved="false"></xref> used for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Azure.Batch.ComputeNode
      description: A <xref href="Microsoft.Azure.Batch.ComputeNode" data-throw-if-not-resolved="false"></xref> containing information about the specified compute node.
  overload: Microsoft.Azure.Batch.CloudPool.GetComputeNode*
  nameWithType.vb: CloudPool.GetComputeNode(String, DetailLevel, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.GetComputeNode(System.String, Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: GetComputeNode(String, DetailLevel, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: EnableAutoScaleAsync(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: EnableAutoScaleAsync(String, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.EnableAutoScaleAsync(String, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableAutoScaleAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 411
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nEnables automatic scaling on this pool.\n"
  remarks: "\n<p>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</p>\n<p>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</p>\n<p>The enable autoscale operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task EnableAutoScaleAsync(string autoscaleFormula = null, TimeSpan? autoscaleEvaluationInterval = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function EnableAutoScaleAsync(autoscaleFormula As String = Nothing, autoscaleEvaluationInterval As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: autoscaleFormula
      type: System.String
      description: The formula for the desired number of compute nodes in the pool.
    - id: autoscaleEvaluationInterval
      type: System.Nullable{System.TimeSpan}
      description: The time interval at which to automatically adjust the pool size according to the AutoScale formula. The default value is 15 minutes. The minimum allowed value is 5 minutes.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync*
  nameWithType.vb: CloudPool.EnableAutoScaleAsync(String, Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String, System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: EnableAutoScaleAsync(String, Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: EnableAutoScale(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: EnableAutoScale(String, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.EnableAutoScale(String, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EnableAutoScale
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 439
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nEnables automatic scaling on this pool.\n"
  remarks: "\n<p>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</p>\n<p>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void EnableAutoScale(string autoscaleFormula = null, TimeSpan? autoscaleEvaluationInterval = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub EnableAutoScale(autoscaleFormula As String = Nothing, autoscaleEvaluationInterval As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: autoscaleFormula
      type: System.String
      description: The formula for the desired number of compute nodes in the pool.
    - id: autoscaleEvaluationInterval
      type: System.Nullable{System.TimeSpan}
      description: The time interval at which to automatically adjust the pool size according to the AutoScale formula. The default value is 15 minutes. The minimum allowed value is 5 minutes.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.EnableAutoScale*
  nameWithType.vb: CloudPool.EnableAutoScale(String, Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String, System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: EnableAutoScale(String, Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: DisableAutoScaleAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: DisableAutoScaleAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.DisableAutoScaleAsync(IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisableAutoScaleAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 459
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDisables automatic scaling on this pool.\n"
  remarks: "\n<p>The disable autoscale operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task DisableAutoScaleAsync(IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function DisableAutoScaleAsync(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync*
  nameWithType.vb: CloudPool.DisableAutoScaleAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: DisableAutoScaleAsync(IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.DisableAutoScale(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.DisableAutoScale(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: DisableAutoScale(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: DisableAutoScale(IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.DisableAutoScale(IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.DisableAutoScale(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisableAutoScale
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 479
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nDisables automatic scaling on this pool.\n"
  remarks: "\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void DisableAutoScale(IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub DisableAutoScale(additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.DisableAutoScale*
  nameWithType.vb: CloudPool.DisableAutoScale(IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.DisableAutoScale(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: DisableAutoScale(IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: EvaluateAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: EvaluateAutoScaleAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.EvaluateAutoScaleAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EvaluateAutoScaleAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 501
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the result of evaluating an automatic scaling formula on this pool.  This \nis primarily for validating an autoscale formula, as it simply returns the result\nwithout applying the formula to the pool.\n"
  remarks: "\n<p>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <xref href=\"Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method does not change any state of the pool, and does not affect the <xref href=\"Microsoft.Azure.Batch.CloudPool.LastModified\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Microsoft.Azure.Batch.CloudPool.ETag\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The evaluate operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task<AutoScaleRun> EvaluateAutoScaleAsync(string autoscaleFormula, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function EvaluateAutoScaleAsync(autoscaleFormula As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AutoScaleRun)
    parameters:
    - id: autoscaleFormula
      type: System.String
      description: The formula to be evaluated on the pool.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.AutoScaleRun}
      description: The result of evaluating the <span class="paramref">autoscaleFormula</span> on this pool.
  overload: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync*
  nameWithType.vb: CloudPool.EvaluateAutoScaleAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: EvaluateAutoScaleAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScale(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScale(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: EvaluateAutoScale(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: EvaluateAutoScale(String, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.EvaluateAutoScale(String, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScale(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EvaluateAutoScale
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 530
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the result of evaluating an automatic scaling formula on this pool.  This \nis primarily for validating an autoscale formula, as it simply returns the result\nwithout applying the formula to the pool.\n"
  remarks: "\n<p>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <xref href=\"Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method does not change any state of the pool, and does not affect the <xref href=\"Microsoft.Azure.Batch.CloudPool.LastModified\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Microsoft.Azure.Batch.CloudPool.ETag\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public AutoScaleRun EvaluateAutoScale(string autoscaleFormula, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Function EvaluateAutoScale(autoscaleFormula As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As AutoScaleRun
    parameters:
    - id: autoscaleFormula
      type: System.String
      description: The formula to be evaluated on the pool.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Azure.Batch.AutoScaleRun
      description: The result of evaluating the <span class="paramref">autoscaleFormula</span> on this pool.
  overload: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScale*
  nameWithType.vb: CloudPool.EvaluateAutoScale(String, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScale(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: EvaluateAutoScale(String, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: RemoveFromPoolAsync(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: RemoveFromPoolAsync(String, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.RemoveFromPoolAsync(String, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String, System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveFromPoolAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 555
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRemoves the specified compute node from this pool.\n"
  remarks: "\n<p>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <xref href=\"Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable%7bSystem.String%7d%2cSystem.Nullable%7bMicrosoft.Azure.Batch.Common.ComputeNodeDeallocationOption%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> overload.</p>\n<p>You can only remove nodes from a pool when the <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> of the pool is <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref>. If the pool is already resizing, an exception occurs.</p>\n<p>When you remove nodes from a pool, the pool's <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> changes from <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Resizing\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The remove operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task RemoveFromPoolAsync(string computeNodeId, ComputeNodeDeallocationOption? deallocationOption = null, TimeSpan? resizeTimeout = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function RemoveFromPoolAsync(computeNodeId As String, deallocationOption As ComputeNodeDeallocationOption? = Nothing, resizeTimeout As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: computeNodeId
      type: System.String
      description: The id of the compute node to remove from the pool.
    - id: deallocationOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
      description: Specifies when nodes may be removed from the pool. The default is <xref href="Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue" data-throw-if-not-resolved="false"></xref>.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync*
  nameWithType.vb: CloudPool.RemoveFromPoolAsync(String, Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String, System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption), System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RemoveFromPoolAsync(String, Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: RemoveFromPool(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: RemoveFromPool(String, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.RemoveFromPool(String, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.String, System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveFromPool
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 585
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRemoves the specified compute node from this pool.\n"
  remarks: "\n<p>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <xref href=\"Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable%7bSystem.String%7d%2cSystem.Nullable%7bMicrosoft.Azure.Batch.Common.ComputeNodeDeallocationOption%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref> overload.</p>\n<p>You can only remove nodes from a pool when the <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> of the pool is <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref>. If the pool is already resizing, an exception occurs.</p>\n<p>When you remove nodes from a pool, the pool's <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> changes from <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Resizing\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String%2cSystem.Nullable%7bMicrosoft.Azure.Batch.Common.ComputeNodeDeallocationOption%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void RemoveFromPool(string computeNodeId, ComputeNodeDeallocationOption? deallocationOption = null, TimeSpan? resizeTimeout = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub RemoveFromPool(computeNodeId As String, deallocationOption As ComputeNodeDeallocationOption? = Nothing, resizeTimeout As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: computeNodeId
      type: System.String
      description: The id of the compute node to remove from the pool.
    - id: deallocationOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
      description: Specifies when nodes may be removed from the pool. The default is <xref href="Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue" data-throw-if-not-resolved="false"></xref>.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.RemoveFromPool*
  nameWithType.vb: CloudPool.RemoveFromPool(String, Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.String, System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption), System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: RemoveFromPool(String, Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: RemoveFromPoolAsync(IEnumerable<String>, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.RemoveFromPoolAsync(IEnumerable<String>, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable<System.String>, System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveFromPoolAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 611
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRemoves the specified compute nodes from this pool.\n"
  remarks: "\n<p>You can only remove nodes from a pool when the <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> of the pool is <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref>. If the pool is already resizing, an exception occurs.</p>\n<p>When you remove nodes from a pool, the pool's <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> changes from <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Resizing\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The remove operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task RemoveFromPoolAsync(IEnumerable<string> computeNodeIds, ComputeNodeDeallocationOption? deallocationOption = null, TimeSpan? resizeTimeout = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function RemoveFromPoolAsync(computeNodeIds As IEnumerable(Of String), deallocationOption As ComputeNodeDeallocationOption? = Nothing, resizeTimeout As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: computeNodeIds
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The ids of the compute nodes to remove from the pool.
    - id: deallocationOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
      description: Specifies when nodes may be removed from the pool. The default is <xref href="Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue" data-throw-if-not-resolved="false"></xref>.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync*
  nameWithType.vb: CloudPool.RemoveFromPoolAsync(IEnumerable(Of String), Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable(Of System.String), System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption), System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RemoveFromPoolAsync(IEnumerable(Of String), Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: RemoveFromPool(IEnumerable<String>, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.RemoveFromPool(IEnumerable<String>, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable<System.String>, System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveFromPool
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 640
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRemoves the specified compute nodes from this pool.\n"
  remarks: "\n<p>You can only remove nodes from a pool when the <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> of the pool is <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref>. If the pool is already resizing, an exception occurs.</p>\n<p>When you remove nodes from a pool, the pool's <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> changes from <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Resizing\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable%7bSystem.String%7d%2cSystem.Nullable%7bMicrosoft.Azure.Batch.Common.ComputeNodeDeallocationOption%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void RemoveFromPool(IEnumerable<string> computeNodeIds, ComputeNodeDeallocationOption? deallocationOption = null, TimeSpan? resizeTimeout = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub RemoveFromPool(computeNodeIds As IEnumerable(Of String), deallocationOption As ComputeNodeDeallocationOption? = Nothing, resizeTimeout As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: computeNodeIds
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The ids of the compute nodes to remove from the pool.
    - id: deallocationOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
      description: Specifies when nodes may be removed from the pool. The default is <xref href="Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue" data-throw-if-not-resolved="false"></xref>.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.RemoveFromPool*
  nameWithType.vb: CloudPool.RemoveFromPool(IEnumerable(Of String), Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable(Of System.String), System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption), System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: RemoveFromPool(IEnumerable(Of String), Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: RemoveFromPoolAsync(ComputeNode, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.RemoveFromPoolAsync(ComputeNode, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode, System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveFromPoolAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 667
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRemoves the specified compute node from this pool.\n"
  remarks: "\n<p>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <xref href=\"Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.ComputeNode%7d%2cSystem.Nullable%7bMicrosoft.Azure.Batch.Common.ComputeNodeDeallocationOption%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> overload.</p>\n<p>You can only remove nodes from a pool when the <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> of the pool is <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref>. If the pool is already resizing, an exception occurs.</p>\n<p>When you remove nodes from a pool, the pool's <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> changes from <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Resizing\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The remove operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task RemoveFromPoolAsync(ComputeNode computeNode, ComputeNodeDeallocationOption? deallocationOption = null, TimeSpan? resizeTimeout = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function RemoveFromPoolAsync(computeNode As ComputeNode, deallocationOption As ComputeNodeDeallocationOption? = Nothing, resizeTimeout As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: computeNode
      type: Microsoft.Azure.Batch.ComputeNode
      description: The <xref href="Microsoft.Azure.Batch.ComputeNode" data-throw-if-not-resolved="false"></xref> to remove from the pool.
    - id: deallocationOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
      description: Specifies when nodes may be removed from the pool. The default is <xref href="Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue" data-throw-if-not-resolved="false"></xref>.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync*
  nameWithType.vb: CloudPool.RemoveFromPoolAsync(ComputeNode, Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode, System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption), System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RemoveFromPoolAsync(ComputeNode, Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: RemoveFromPool(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: RemoveFromPool(ComputeNode, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.RemoveFromPool(ComputeNode, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(Microsoft.Azure.Batch.ComputeNode, System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveFromPool
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 703
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRemoves the specified compute node from this pool.\n"
  remarks: "\n<p>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <xref href=\"Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.ComputeNode%7d%2cSystem.Nullable%7bMicrosoft.Azure.Batch.Common.ComputeNodeDeallocationOption%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d)\" data-throw-if-not-resolved=\"false\"></xref> overload.</p>\n<p>You can only remove nodes from a pool when the <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> of the pool is <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref>. If the pool is already resizing, an exception occurs.</p>\n<p>When you remove nodes from a pool, the pool's <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> changes from <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Resizing\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode%2cSystem.Nullable%7bMicrosoft.Azure.Batch.Common.ComputeNodeDeallocationOption%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void RemoveFromPool(ComputeNode computeNode, ComputeNodeDeallocationOption? deallocationOption = null, TimeSpan? resizeTimeout = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub RemoveFromPool(computeNode As ComputeNode, deallocationOption As ComputeNodeDeallocationOption? = Nothing, resizeTimeout As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: computeNode
      type: Microsoft.Azure.Batch.ComputeNode
      description: The <xref href="Microsoft.Azure.Batch.ComputeNode" data-throw-if-not-resolved="false"></xref> to remove from the pool.
    - id: deallocationOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
      description: Specifies when nodes may be removed from the pool. The default is <xref href="Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue" data-throw-if-not-resolved="false"></xref>.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.RemoveFromPool*
  nameWithType.vb: CloudPool.RemoveFromPool(ComputeNode, Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(Microsoft.Azure.Batch.ComputeNode, System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption), System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: RemoveFromPool(ComputeNode, Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: RemoveFromPoolAsync(IEnumerable<ComputeNode>, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.RemoveFromPoolAsync(IEnumerable<ComputeNode>, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.ComputeNode>, System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveFromPoolAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 729
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRemoves the specified compute nodes from this pool.\n"
  remarks: "\n<p>You can only remove nodes from a pool when the <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> of the pool is <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref>. If the pool is already resizing, an exception occurs.</p>\n<p>When you remove nodes from a pool, the pool's <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> changes from <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Resizing\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The remove operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task RemoveFromPoolAsync(IEnumerable<ComputeNode> computeNodes, ComputeNodeDeallocationOption? deallocationOption = null, TimeSpan? resizeTimeout = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function RemoveFromPoolAsync(computeNodes As IEnumerable(Of ComputeNode), deallocationOption As ComputeNodeDeallocationOption? = Nothing, resizeTimeout As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: computeNodes
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode}
      description: The <xref href="Microsoft.Azure.Batch.ComputeNode" data-throw-if-not-resolved="false"></xref> to remove from the pool.
    - id: deallocationOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
      description: Specifies when nodes may be removed from the pool. The default is <xref href="Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue" data-throw-if-not-resolved="false"></xref>.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync*
  nameWithType.vb: CloudPool.RemoveFromPoolAsync(IEnumerable(Of ComputeNode), Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.ComputeNode), System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption), System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RemoveFromPoolAsync(IEnumerable(Of ComputeNode), Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: RemoveFromPool(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: RemoveFromPool(IEnumerable<ComputeNode>, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.RemoveFromPool(IEnumerable<ComputeNode>, Nullable<ComputeNodeDeallocationOption>, Nullable<TimeSpan>, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.ComputeNode>, System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>, System.Nullable<System.TimeSpan>, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveFromPool
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 759
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRemoves the specified compute nodes from this pool.\n"
  remarks: "\n<p>You can only remove nodes from a pool when the <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> of the pool is <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref>. If the pool is already resizing, an exception occurs.</p>\n<p>When you remove nodes from a pool, the pool's <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> changes from <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Steady\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"Microsoft.Azure.Batch.Common.AllocationState.Resizing\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.ComputeNode%7d%2cSystem.Nullable%7bMicrosoft.Azure.Batch.Common.ComputeNodeDeallocationOption%7d%2cSystem.Nullable%7bSystem.TimeSpan%7d%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void RemoveFromPool(IEnumerable<ComputeNode> computeNodes, ComputeNodeDeallocationOption? deallocationOption = null, TimeSpan? resizeTimeout = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub RemoveFromPool(computeNodes As IEnumerable(Of ComputeNode), deallocationOption As ComputeNodeDeallocationOption? = Nothing, resizeTimeout As TimeSpan? = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: computeNodes
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode}
      description: The <xref href="Microsoft.Azure.Batch.ComputeNode" data-throw-if-not-resolved="false"></xref> to remove from the pool.
    - id: deallocationOption
      type: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
      description: Specifies when nodes may be removed from the pool. The default is <xref href="Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue" data-throw-if-not-resolved="false"></xref>.
    - id: resizeTimeout
      type: System.Nullable{System.TimeSpan}
      description: Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.RemoveFromPool*
  nameWithType.vb: CloudPool.RemoveFromPool(IEnumerable(Of ComputeNode), Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.ComputeNode), System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption), System.Nullable(Of System.TimeSpan), System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: RemoveFromPool(IEnumerable(Of ComputeNode), Nullable(Of ComputeNodeDeallocationOption), Nullable(Of TimeSpan), IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: ChangeOSVersionAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: ChangeOSVersionAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.ChangeOSVersionAsync(String, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ChangeOSVersionAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 786
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nChanges the operating system version of this pool.\n"
  remarks: "\n<p>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</p>\n<p>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</p>\n<p>When you request an OS version change, the pool state changes to <xref href=\"Microsoft.Azure.Batch.Common.PoolState.Upgrading\" data-throw-if-not-resolved=\"false\"></xref>.  When all compute nodes have finished changing version, the pool state returns to <xref href=\"Microsoft.Azure.Batch.Common.PoolState.Active\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>While the version change is in progress, the pool's <xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion\" data-throw-if-not-resolved=\"false\"></xref> reflects the OS version that nodes are changing from, and <xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion\" data-throw-if-not-resolved=\"false\"></xref> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</p>\n<p>The change version operation runs asynchronously.</p>\n"
  example: []
  syntax:
    content: public Task ChangeOSVersionAsync(string targetOSVersion, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function ChangeOSVersionAsync(targetOSVersion As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: targetOSVersion
      type: System.String
      description: The Azure Guest OS version to be installed on the virtual machines in the pool.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync*
  nameWithType.vb: CloudPool.ChangeOSVersionAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: ChangeOSVersionAsync(String, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.ChangeOSVersion(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.ChangeOSVersion(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: ChangeOSVersion(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: ChangeOSVersion(String, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.ChangeOSVersion(String, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.ChangeOSVersion(System.String, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ChangeOSVersion
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 811
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nChanges the operating system version of this pool.\n"
  remarks: "\n<p>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</p>\n<p>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</p>\n<p>When you request an OS version change, the pool state changes to <xref href=\"Microsoft.Azure.Batch.Common.PoolState.Upgrading\" data-throw-if-not-resolved=\"false\"></xref>.  When all compute nodes have finished changing version, the pool state returns to <xref href=\"Microsoft.Azure.Batch.Common.PoolState.Active\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>While the version change is in progress, the pool's <xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion\" data-throw-if-not-resolved=\"false\"></xref> reflects the OS version that nodes are changing from, and <xref href=\"Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion\" data-throw-if-not-resolved=\"false\"></xref> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</p>\n<p>This is a blocking operation. For a non-blocking equivalent, see <xref href=\"Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String%2cSystem.Collections.Generic.IEnumerable%7bMicrosoft.Azure.Batch.BatchClientBehavior%7d%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public void ChangeOSVersion(string targetOSVersion, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub ChangeOSVersion(targetOSVersion As String, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: targetOSVersion
      type: System.String
      description: The Azure Guest OS version to be installed on the virtual machines in the pool.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.ChangeOSVersion*
  nameWithType.vb: CloudPool.ChangeOSVersion(String, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.ChangeOSVersion(System.String, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: ChangeOSVersion(String, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  id: RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: CloudPool.RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.CloudPool.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RefreshAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 831
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRefreshes the current <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task RefreshAsync(DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null, CancellationToken cancellationToken = null)
    content.vb: Public Function RefreshAsync(detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: The detail level for the refresh.  If a detail level which omits the <xref href="Microsoft.Azure.Batch.CloudPool.Id" data-throw-if-not-resolved="false"></xref> property is specified, refresh will fail.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for controlling the lifetime of the asynchronous operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous refresh operation.
  overload: Microsoft.Azure.Batch.CloudPool.RefreshAsync*
  implements:
  - Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  nameWithType.vb: CloudPool.RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  id: Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: CloudPool.Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Refresh
    path: src/azure-sdk-for-net/src/Batch/Client/Src/CloudPool.cs
    startLine: 858
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nRefreshes the current <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Refresh(DetailLevel detailLevel = null, IEnumerable<BatchClientBehavior> additionalBehaviors = null)
    content.vb: Public Sub Refresh(detailLevel As DetailLevel = Nothing, additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)
    parameters:
    - id: detailLevel
      type: Microsoft.Azure.Batch.DetailLevel
      description: The detail level for the refresh.  If a detail level which omits the <xref href="Microsoft.Azure.Batch.CloudPool.Id" data-throw-if-not-resolved="false"></xref> property is specified, refresh will fail.
    - id: additionalBehaviors
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
      description: A collection of <xref href="Microsoft.Azure.Batch.BatchClientBehavior" data-throw-if-not-resolved="false"></xref> instances that are applied to the Batch service request after the <xref href="Microsoft.Azure.Batch.CloudPool.CustomBehaviors" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.CloudPool.Refresh*
  implements:
  - Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  nameWithType.vb: CloudPool.Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
- uid: Microsoft.Azure.Batch.CloudPool.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors
  id: CustomBehaviors
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: CustomBehaviors
  nameWithType: CloudPool.CustomBehaviors
  fullName: Microsoft.Azure.Batch.CloudPool.CustomBehaviors
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CustomBehaviors
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 269
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of behaviors that modify or customize requests to the Batch service\nmade via this <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>These behaviors are inherited by child objects.</p>\n<p>Modifications are applied in the order of the collection. The last write wins.</p>\n"
  example: []
  syntax:
    content: public IList<BatchClientBehavior> CustomBehaviors { get; set; }
    content.vb: Public Property CustomBehaviors As IList(Of BatchClientBehavior)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  overload: Microsoft.Azure.Batch.CloudPool.CustomBehaviors*
  implements:
  - Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.AllocationState
  commentId: P:Microsoft.Azure.Batch.CloudPool.AllocationState
  id: AllocationState
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: AllocationState
  nameWithType: CloudPool.AllocationState
  fullName: Microsoft.Azure.Batch.CloudPool.AllocationState
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllocationState
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 279
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets an <xref href=\"Microsoft.Azure.Batch.Common.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> which indicates what node allocation activity is occurring on the \npool.\n"
  example: []
  syntax:
    content: public AllocationState? AllocationState { get; }
    content.vb: Public ReadOnly Property AllocationState As AllocationState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.AllocationState}
  overload: Microsoft.Azure.Batch.CloudPool.AllocationState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudPool.AllocationStateTransitionTime
  commentId: P:Microsoft.Azure.Batch.CloudPool.AllocationStateTransitionTime
  id: AllocationStateTransitionTime
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: AllocationStateTransitionTime
  nameWithType: CloudPool.AllocationStateTransitionTime
  fullName: Microsoft.Azure.Batch.CloudPool.AllocationStateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllocationStateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 287
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the pool entered its current <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DateTime? AllocationStateTransitionTime { get; }
    content.vb: Public ReadOnly Property AllocationStateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.CloudPool.AllocationStateTransitionTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudPool.ApplicationPackageReferences
  commentId: P:Microsoft.Azure.Batch.CloudPool.ApplicationPackageReferences
  id: ApplicationPackageReferences
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: ApplicationPackageReferences
  nameWithType: CloudPool.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.CloudPool.ApplicationPackageReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationPackageReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 295
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of application packages to be installed on each compute node in the pool.\n"
  example: []
  syntax:
    content: public IList<ApplicationPackageReference> ApplicationPackageReferences { get; set; }
    content.vb: Public Property ApplicationPackageReferences As IList(Of ApplicationPackageReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.ApplicationPackageReference}
  overload: Microsoft.Azure.Batch.CloudPool.ApplicationPackageReferences*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled
  commentId: P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled
  id: AutoScaleEnabled
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: AutoScaleEnabled
  nameWithType: CloudPool.AutoScaleEnabled
  fullName: Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoScaleEnabled
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 312
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets whether the pool size should automatically adjust according to the <xref href=\"Microsoft.Azure.Batch.CloudPool.AutoScaleFormula\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>If false, the <xref href=\"Microsoft.Azure.Batch.CloudPool.TargetDedicated\" data-throw-if-not-resolved=\"false\"></xref> property is required, and <xref href=\"Microsoft.Azure.Batch.CloudPool.AutoScaleFormula\" data-throw-if-not-resolved=\"false\"></xref> must \nbe null.</p> <p>If true, the <xref href=\"Microsoft.Azure.Batch.CloudPool.AutoScaleFormula\" data-throw-if-not-resolved=\"false\"></xref> property is required, and <xref href=\"Microsoft.Azure.Batch.CloudPool.TargetDedicated\" data-throw-if-not-resolved=\"false\"></xref> \nmust be null. The pool automatically resizes according to the formula.</p><p>The default value is false.</p>\n"
  example: []
  syntax:
    content: public bool ? AutoScaleEnabled { get; set; }
    content.vb: Public Property AutoScaleEnabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.AutoScaleEvaluationInterval
  commentId: P:Microsoft.Azure.Batch.CloudPool.AutoScaleEvaluationInterval
  id: AutoScaleEvaluationInterval
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: AutoScaleEvaluationInterval
  nameWithType: CloudPool.AutoScaleEvaluationInterval
  fullName: Microsoft.Azure.Batch.CloudPool.AutoScaleEvaluationInterval
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoScaleEvaluationInterval
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 324
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a time interval at which to automatically adjust the pool size according to the <xref href=\"Microsoft.Azure.Batch.CloudPool.AutoScaleFormula\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe default value is 15 minutes. The minimum allowed value is 5 minutes.\n"
  example: []
  syntax:
    content: public TimeSpan? AutoScaleEvaluationInterval { get; set; }
    content.vb: Public Property AutoScaleEvaluationInterval As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.CloudPool.AutoScaleEvaluationInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.AutoScaleFormula
  commentId: P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula
  id: AutoScaleFormula
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: AutoScaleFormula
  nameWithType: CloudPool.AutoScaleFormula
  fullName: Microsoft.Azure.Batch.CloudPool.AutoScaleFormula
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoScaleFormula
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 339
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a formula for the desired number of compute nodes in the pool.\n"
  remarks: "\n<p>For how to write autoscale formulas, see https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/. \nThis property is required if <xref href=\"Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled\" data-throw-if-not-resolved=\"false\"></xref> is set to true. It must be null if AutoScaleEnabled \nis false.</p><p>The formula is checked for validity before the pool is created. If the formula is not valid, \nan exception is thrown when you try to commit the <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public string AutoScaleFormula { get; set; }
    content.vb: Public Property AutoScaleFormula As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudPool.AutoScaleFormula*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.AutoScaleRun
  commentId: P:Microsoft.Azure.Batch.CloudPool.AutoScaleRun
  id: AutoScaleRun
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: AutoScaleRun
  nameWithType: CloudPool.AutoScaleRun
  fullName: Microsoft.Azure.Batch.CloudPool.AutoScaleRun
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoScaleRun
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 348
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the results and errors from the last execution of the <xref href=\"Microsoft.Azure.Batch.CloudPool.AutoScaleFormula\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AutoScaleRun AutoScaleRun { get; }
    content.vb: Public ReadOnly Property AutoScaleRun As AutoScaleRun
    parameters: []
    return:
      type: Microsoft.Azure.Batch.AutoScaleRun
  overload: Microsoft.Azure.Batch.CloudPool.AutoScaleRun*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudPool.CertificateReferences
  commentId: P:Microsoft.Azure.Batch.CloudPool.CertificateReferences
  id: CertificateReferences
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: CertificateReferences
  nameWithType: CloudPool.CertificateReferences
  fullName: Microsoft.Azure.Batch.CloudPool.CertificateReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 356
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of certificates to be installed on each compute node in the pool.\n"
  example: []
  syntax:
    content: public IList<CertificateReference> CertificateReferences { get; set; }
    content.vb: Public Property CertificateReferences As IList(Of CertificateReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.CertificateReference}
  overload: Microsoft.Azure.Batch.CloudPool.CertificateReferences*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration
  commentId: P:Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration
  id: CloudServiceConfiguration
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: CloudServiceConfiguration
  nameWithType: CloudPool.CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloudServiceConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 368
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the <xref href=\"Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration\" data-throw-if-not-resolved=\"false\"></xref> for the pool.\n"
  example: []
  syntax:
    content: public CloudServiceConfiguration CloudServiceConfiguration { get; set; }
    content.vb: Public Property CloudServiceConfiguration As CloudServiceConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Batch.CloudServiceConfiguration
  overload: Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.CreationTime
  commentId: P:Microsoft.Azure.Batch.CloudPool.CreationTime
  id: CreationTime
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: CreationTime
  nameWithType: CloudPool.CreationTime
  fullName: Microsoft.Azure.Batch.CloudPool.CreationTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreationTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 377
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the creation time for the pool.\n"
  example: []
  syntax:
    content: public DateTime? CreationTime { get; }
    content.vb: Public ReadOnly Property CreationTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.CloudPool.CreationTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudPool.CurrentDedicated
  commentId: P:Microsoft.Azure.Batch.CloudPool.CurrentDedicated
  id: CurrentDedicated
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: CurrentDedicated
  nameWithType: CloudPool.CurrentDedicated
  fullName: Microsoft.Azure.Batch.CloudPool.CurrentDedicated
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CurrentDedicated
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 385
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the number of compute nodes currently in the pool.\n"
  example: []
  syntax:
    content: public int ? CurrentDedicated { get; }
    content.vb: Public ReadOnly Property CurrentDedicated As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.CloudPool.CurrentDedicated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudPool.DisplayName
  commentId: P:Microsoft.Azure.Batch.CloudPool.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: CloudPool.DisplayName
  fullName: Microsoft.Azure.Batch.CloudPool.DisplayName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 393
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the display name of the pool.\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    content.vb: Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudPool.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.ETag
  commentId: P:Microsoft.Azure.Batch.CloudPool.ETag
  id: ETag
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: CloudPool.ETag
  fullName: Microsoft.Azure.Batch.CloudPool.ETag
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ETag
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 402
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the ETag for the pool.\n"
  example: []
  syntax:
    content: public string ETag { get; }
    content.vb: Public ReadOnly Property ETag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudPool.ETag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudPool.Id
  commentId: P:Microsoft.Azure.Batch.CloudPool.Id
  id: Id
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CloudPool.Id
  fullName: Microsoft.Azure.Batch.CloudPool.Id
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 410
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the id of the pool.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudPool.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled
  commentId: P:Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled
  id: InterComputeNodeCommunicationEnabled
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: InterComputeNodeCommunicationEnabled
  nameWithType: CloudPool.InterComputeNodeCommunicationEnabled
  fullName: Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InterComputeNodeCommunicationEnabled
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 423
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets whether the pool permits direct communication between its compute nodes.\n"
  remarks: "\nEnabling inter-node communication limits the maximum size of the pool due to deployment restrictions on the nodes \nof the pool. This may result in the pool not reaching its desired size.\n"
  example: []
  syntax:
    content: public bool ? InterComputeNodeCommunicationEnabled { get; set; }
    content.vb: Public Property InterComputeNodeCommunicationEnabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.LastModified
  commentId: P:Microsoft.Azure.Batch.CloudPool.LastModified
  id: LastModified
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: CloudPool.LastModified
  fullName: Microsoft.Azure.Batch.CloudPool.LastModified
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastModified
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 432
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the last modified time of the pool.\n"
  example: []
  syntax:
    content: public DateTime? LastModified { get; }
    content.vb: Public ReadOnly Property LastModified As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.CloudPool.LastModified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudPool.MaxTasksPerComputeNode
  commentId: P:Microsoft.Azure.Batch.CloudPool.MaxTasksPerComputeNode
  id: MaxTasksPerComputeNode
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: MaxTasksPerComputeNode
  nameWithType: CloudPool.MaxTasksPerComputeNode
  fullName: Microsoft.Azure.Batch.CloudPool.MaxTasksPerComputeNode
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxTasksPerComputeNode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 444
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.\n"
  remarks: "\nThe default value is 1. The maximum value of this setting depends on the size of the compute nodes in the pool \n(the <xref href=\"Microsoft.Azure.Batch.CloudPool.VirtualMachineSize\" data-throw-if-not-resolved=\"false\"></xref> property).\n"
  example: []
  syntax:
    content: public int ? MaxTasksPerComputeNode { get; set; }
    content.vb: Public Property MaxTasksPerComputeNode As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.CloudPool.MaxTasksPerComputeNode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.Metadata
  commentId: P:Microsoft.Azure.Batch.CloudPool.Metadata
  id: Metadata
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: CloudPool.Metadata
  fullName: Microsoft.Azure.Batch.CloudPool.Metadata
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Metadata
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 453
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of name-value pairs associated with the pool as metadata.\n"
  example: []
  syntax:
    content: public IList<MetadataItem> Metadata { get; set; }
    content.vb: Public Property Metadata As IList(Of MetadataItem)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.MetadataItem}
  overload: Microsoft.Azure.Batch.CloudPool.Metadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.NetworkConfiguration
  commentId: P:Microsoft.Azure.Batch.CloudPool.NetworkConfiguration
  id: NetworkConfiguration
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: NetworkConfiguration
  nameWithType: CloudPool.NetworkConfiguration
  fullName: Microsoft.Azure.Batch.CloudPool.NetworkConfiguration
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NetworkConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 465
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the network configuration of the pool.\n"
  example: []
  syntax:
    content: public NetworkConfiguration NetworkConfiguration { get; set; }
    content.vb: Public Property NetworkConfiguration As NetworkConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Batch.NetworkConfiguration
  overload: Microsoft.Azure.Batch.CloudPool.NetworkConfiguration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.ResizeError
  commentId: P:Microsoft.Azure.Batch.CloudPool.ResizeError
  id: ResizeError
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: ResizeError
  nameWithType: CloudPool.ResizeError
  fullName: Microsoft.Azure.Batch.CloudPool.ResizeError
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResizeError
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 476
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the resize error encountered while performing the last resize on the <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref>. This error \nis returned only when the Batch service encountered an error while resizing the pool, and when the pool's <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"Microsoft.Azure.Batch.CloudPool.AllocationState\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ResizeError ResizeError { get; }
    content.vb: Public ReadOnly Property ResizeError As ResizeError
    parameters: []
    return:
      type: Microsoft.Azure.Batch.ResizeError
  overload: Microsoft.Azure.Batch.CloudPool.ResizeError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudPool.ResizeTimeout
  commentId: P:Microsoft.Azure.Batch.CloudPool.ResizeTimeout
  id: ResizeTimeout
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: ResizeTimeout
  nameWithType: CloudPool.ResizeTimeout
  fullName: Microsoft.Azure.Batch.CloudPool.ResizeTimeout
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResizeTimeout
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 484
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the timeout for allocation of compute nodes to the pool.\n"
  example: []
  syntax:
    content: public TimeSpan? ResizeTimeout { get; set; }
    content.vb: Public Property ResizeTimeout As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.CloudPool.ResizeTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.StartTask
  commentId: P:Microsoft.Azure.Batch.CloudPool.StartTask
  id: StartTask
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: StartTask
  nameWithType: CloudPool.StartTask
  fullName: Microsoft.Azure.Batch.CloudPool.StartTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 494
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a task to run on each compute node as it joins the pool. The task runs when the node is added to \nthe pool or when the node is restarted.\n"
  example: []
  syntax:
    content: public StartTask StartTask { get; set; }
    content.vb: Public Property StartTask As StartTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.StartTask
  overload: Microsoft.Azure.Batch.CloudPool.StartTask*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.State
  commentId: P:Microsoft.Azure.Batch.CloudPool.State
  id: State
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: State
  nameWithType: CloudPool.State
  fullName: Microsoft.Azure.Batch.CloudPool.State
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 503
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the current state of the pool.\n"
  example: []
  syntax:
    content: public PoolState? State { get; }
    content.vb: Public ReadOnly Property State As PoolState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Batch.Common.PoolState}
  overload: Microsoft.Azure.Batch.CloudPool.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudPool.StateTransitionTime
  commentId: P:Microsoft.Azure.Batch.CloudPool.StateTransitionTime
  id: StateTransitionTime
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: StateTransitionTime
  nameWithType: CloudPool.StateTransitionTime
  fullName: Microsoft.Azure.Batch.CloudPool.StateTransitionTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StateTransitionTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 511
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the time at which the pool entered its current state.\n"
  example: []
  syntax:
    content: public DateTime? StateTransitionTime { get; }
    content.vb: Public ReadOnly Property StateTransitionTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.CloudPool.StateTransitionTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudPool.Statistics
  commentId: P:Microsoft.Azure.Batch.CloudPool.Statistics
  id: Statistics
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: Statistics
  nameWithType: CloudPool.Statistics
  fullName: Microsoft.Azure.Batch.CloudPool.Statistics
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Statistics
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 523
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the resource usage statistics for the pool.\n"
  remarks: "\nThis property is populated only if the <xref href=\"Microsoft.Azure.Batch.CloudPool\" data-throw-if-not-resolved=\"false\"></xref> was retrieved with an <xref href=\"Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause\" data-throw-if-not-resolved=\"false\"></xref> \nincluding the 'stats' attribute; otherwise it is null.\n"
  example: []
  syntax:
    content: public PoolStatistics Statistics { get; }
    content.vb: Public ReadOnly Property Statistics As PoolStatistics
    parameters: []
    return:
      type: Microsoft.Azure.Batch.PoolStatistics
  overload: Microsoft.Azure.Batch.CloudPool.Statistics*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudPool.TargetDedicated
  commentId: P:Microsoft.Azure.Batch.CloudPool.TargetDedicated
  id: TargetDedicated
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: TargetDedicated
  nameWithType: CloudPool.TargetDedicated
  fullName: Microsoft.Azure.Batch.CloudPool.TargetDedicated
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TargetDedicated
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 535
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the desired number of compute nodes in the pool.\n"
  remarks: "\nThis property must be null if <xref href=\"Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled\" data-throw-if-not-resolved=\"false\"></xref> is set to true. It is required if AutoScaleEnabled \nis set to false.\n"
  example: []
  syntax:
    content: public int ? TargetDedicated { get; set; }
    content.vb: Public Property TargetDedicated As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.CloudPool.TargetDedicated*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.TaskSchedulingPolicy
  commentId: P:Microsoft.Azure.Batch.CloudPool.TaskSchedulingPolicy
  id: TaskSchedulingPolicy
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: TaskSchedulingPolicy
  nameWithType: CloudPool.TaskSchedulingPolicy
  fullName: Microsoft.Azure.Batch.CloudPool.TaskSchedulingPolicy
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskSchedulingPolicy
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 544
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets how tasks are distributed among compute nodes in the pool.\n"
  example: []
  syntax:
    content: public TaskSchedulingPolicy TaskSchedulingPolicy { get; set; }
    content.vb: Public Property TaskSchedulingPolicy As TaskSchedulingPolicy
    parameters: []
    return:
      type: Microsoft.Azure.Batch.TaskSchedulingPolicy
  overload: Microsoft.Azure.Batch.CloudPool.TaskSchedulingPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.Url
  commentId: P:Microsoft.Azure.Batch.CloudPool.Url
  id: Url
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: CloudPool.Url
  fullName: Microsoft.Azure.Batch.CloudPool.Url
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Url
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 553
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets the URL of the pool.\n"
  example: []
  syntax:
    content: public string Url { get; }
    content.vb: Public ReadOnly Property Url As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudPool.Url*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration
  commentId: P:Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration
  id: VirtualMachineConfiguration
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: VirtualMachineConfiguration
  nameWithType: CloudPool.VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 561
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the <xref href=\"Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration\" data-throw-if-not-resolved=\"false\"></xref> of the pool.\n"
  example: []
  syntax:
    content: public VirtualMachineConfiguration VirtualMachineConfiguration { get; set; }
    content.vb: Public Property VirtualMachineConfiguration As VirtualMachineConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Batch.VirtualMachineConfiguration
  overload: Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.CloudPool.VirtualMachineSize
  commentId: P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize
  id: VirtualMachineSize
  parent: Microsoft.Azure.Batch.CloudPool
  langs:
  - csharp
  - vb
  name: VirtualMachineSize
  nameWithType: CloudPool.VirtualMachineSize
  fullName: Microsoft.Azure.Batch.CloudPool.VirtualMachineSize
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/CloudPool.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineSize
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/CloudPool.cs
    startLine: 579
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the size of the virtual machines in the pool.  All virtual machines in a pool are the same size.\n"
  remarks: "\n<p>For information about available sizes of virtual machines for Cloud Services pools (pools created with \na <xref href=\"Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration\" data-throw-if-not-resolved=\"false\"></xref>), see https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/. \nBatch supports all Cloud Services VM sizes except ExtraSmall.</p><p>For information about available VM \nsizes for pools using images from the Virtual Machines Marketplace (pools created with a <xref href=\"Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration\" data-throw-if-not-resolved=\"false\"></xref>) \nsee https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/ or https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/. \nBatch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (for example STANDARD_GS, \nSTANDARD_DS, and STANDARD_DSV2 series).</p>\n"
  example: []
  syntax:
    content: public string VirtualMachineSize { get; set; }
    content.vb: Public Property VirtualMachineSize As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.CloudPool.VirtualMachineSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Batch.IRefreshable
  commentId: T:Microsoft.Azure.Batch.IRefreshable
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IRefreshable
  nameWithType: IRefreshable
  fullName: Microsoft.Azure.Batch.IRefreshable
- uid: Microsoft.Azure.Batch.IInheritedBehaviors
  commentId: T:Microsoft.Azure.Batch.IInheritedBehaviors
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IInheritedBehaviors
  nameWithType: IInheritedBehaviors
  fullName: Microsoft.Azure.Batch.IInheritedBehaviors
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Common.PoolState.Deleting
  commentId: F:Microsoft.Azure.Batch.Common.PoolState.Deleting
- uid: Microsoft.Azure.Batch.BatchClientBehavior
  commentId: T:Microsoft.Azure.Batch.BatchClientBehavior
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: BatchClientBehavior
  nameWithType: BatchClientBehavior
  fullName: Microsoft.Azure.Batch.BatchClientBehavior
- uid: Microsoft.Azure.Batch.CloudPool.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Batch.CloudPool.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: CloudPool.DeleteAsync
  fullName: Microsoft.Azure.Batch.CloudPool.DeleteAsync
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BatchClientBehavior>
  nameWithType: IEnumerable<BatchClientBehavior>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>
  nameWithType.vb: IEnumerable(Of BatchClientBehavior)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior)
  name.vb: IEnumerable(Of BatchClientBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.CloudPool.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.Delete*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.Delete
  isExternal: false
  name: Delete
  nameWithType: CloudPool.Delete
  fullName: Microsoft.Azure.Batch.CloudPool.Delete
- uid: Microsoft.Azure.Batch.CloudPool
  commentId: T:Microsoft.Azure.Batch.CloudPool
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudPool
  nameWithType: CloudPool
  fullName: Microsoft.Azure.Batch.CloudPool
- uid: Microsoft.Azure.Batch.CloudPool.CommitAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.CommitAsync
  isExternal: false
  name: CommitAsync
  nameWithType: CloudPool.CommitAsync
  fullName: Microsoft.Azure.Batch.CloudPool.CommitAsync
- uid: Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.Commit*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.Commit
  isExternal: false
  name: Commit
  nameWithType: CloudPool.Commit
  fullName: Microsoft.Azure.Batch.CloudPool.Commit
- uid: Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.PoolOperations.GetPool(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.PoolOperations.GetPool(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.CloudPool.CommitChangesAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.CommitChangesAsync
  isExternal: false
  name: CommitChangesAsync
  nameWithType: CloudPool.CommitChangesAsync
  fullName: Microsoft.Azure.Batch.CloudPool.CommitChangesAsync
- uid: Microsoft.Azure.Batch.CloudPool.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.CommitChangesAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.CommitChanges*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.CommitChanges
  isExternal: false
  name: CommitChanges
  nameWithType: CloudPool.CommitChanges
  fullName: Microsoft.Azure.Batch.CloudPool.CommitChanges
- uid: Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue
  commentId: F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue
- uid: Microsoft.Azure.Batch.Common.AllocationState.Resizing
  commentId: F:Microsoft.Azure.Batch.Common.AllocationState.Resizing
- uid: Microsoft.Azure.Batch.Common.AllocationState.Steady
  commentId: F:Microsoft.Azure.Batch.Common.AllocationState.Steady
- uid: Microsoft.Azure.Batch.CloudPool.AllocationState
  commentId: P:Microsoft.Azure.Batch.CloudPool.AllocationState
- uid: Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled
  commentId: P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.ResizeAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.ResizeAsync
  isExternal: false
  name: ResizeAsync
  nameWithType: CloudPool.ResizeAsync
  fullName: Microsoft.Azure.Batch.CloudPool.ResizeAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ComputeNodeDeallocationOption>
  nameWithType: Nullable<ComputeNodeDeallocationOption>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption>
  nameWithType.vb: Nullable(Of ComputeNodeDeallocationOption)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption)
  name.vb: Nullable(Of ComputeNodeDeallocationOption)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption
    name: ComputeNodeDeallocationOption
    nameWithType: ComputeNodeDeallocationOption
    fullName: Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption
    name: ComputeNodeDeallocationOption
    nameWithType: ComputeNodeDeallocationOption
    fullName: Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.Resize*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.Resize
  isExternal: false
  name: Resize
  nameWithType: CloudPool.Resize
  fullName: Microsoft.Azure.Batch.CloudPool.Resize
- uid: Microsoft.Azure.Batch.Common.AllocationState.Stopping
  commentId: F:Microsoft.Azure.Batch.Common.AllocationState.Stopping
- uid: Microsoft.Azure.Batch.CloudPool.StopResizeAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.StopResizeAsync
  isExternal: false
  name: StopResizeAsync
  nameWithType: CloudPool.StopResizeAsync
  fullName: Microsoft.Azure.Batch.CloudPool.StopResizeAsync
- uid: Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.StopResize*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.StopResize
  isExternal: false
  name: StopResize
  nameWithType: CloudPool.StopResize
  fullName: Microsoft.Azure.Batch.CloudPool.StopResize
- uid: Microsoft.Azure.Batch.ComputeNode
  commentId: T:Microsoft.Azure.Batch.ComputeNode
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ComputeNode
  nameWithType: ComputeNode
  fullName: Microsoft.Azure.Batch.ComputeNode
- uid: Microsoft.Azure.Batch.DetailLevel
  commentId: T:Microsoft.Azure.Batch.DetailLevel
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: DetailLevel
  nameWithType: DetailLevel
  fullName: Microsoft.Azure.Batch.DetailLevel
- uid: Microsoft.Azure.Batch.IPagedEnumerable`1
  commentId: T:Microsoft.Azure.Batch.IPagedEnumerable`1
  isExternal: false
  name: IPagedEnumerable<T>
  nameWithType: IPagedEnumerable<T>
  fullName: Microsoft.Azure.Batch.IPagedEnumerable<T>
  nameWithType.vb: IPagedEnumerable(Of T)
  fullname.vb: Microsoft.Azure.Batch.IPagedEnumerable(Of T)
  name.vb: IPagedEnumerable(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.ListComputeNodes*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.ListComputeNodes
  isExternal: false
  name: ListComputeNodes
  nameWithType: CloudPool.ListComputeNodes
  fullName: Microsoft.Azure.Batch.CloudPool.ListComputeNodes
- uid: Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.ComputeNode}
  commentId: T:Microsoft.Azure.Batch.IPagedEnumerable{Microsoft.Azure.Batch.ComputeNode}
  parent: Microsoft.Azure.Batch
  definition: Microsoft.Azure.Batch.IPagedEnumerable`1
  name: IPagedEnumerable<ComputeNode>
  nameWithType: IPagedEnumerable<ComputeNode>
  fullName: Microsoft.Azure.Batch.IPagedEnumerable<Microsoft.Azure.Batch.ComputeNode>
  nameWithType.vb: IPagedEnumerable(Of ComputeNode)
  fullname.vb: Microsoft.Azure.Batch.IPagedEnumerable(Of Microsoft.Azure.Batch.ComputeNode)
  name.vb: IPagedEnumerable(Of ComputeNode)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.ComputeNode
    name: ComputeNode
    nameWithType: ComputeNode
    fullName: Microsoft.Azure.Batch.ComputeNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Batch.IPagedEnumerable`1
    name: IPagedEnumerable
    nameWithType: IPagedEnumerable
    fullName: Microsoft.Azure.Batch.IPagedEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.ComputeNode
    name: ComputeNode
    nameWithType: ComputeNode
    fullName: Microsoft.Azure.Batch.ComputeNode
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync
  isExternal: false
  name: GetComputeNodeAsync
  nameWithType: CloudPool.GetComputeNodeAsync
  fullName: Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.ComputeNode}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.ComputeNode}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ComputeNode>
  nameWithType: Task<ComputeNode>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.ComputeNode>
  nameWithType.vb: Task(Of ComputeNode)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.ComputeNode)
  name.vb: Task(Of ComputeNode)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.ComputeNode
    name: ComputeNode
    nameWithType: ComputeNode
    fullName: Microsoft.Azure.Batch.ComputeNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.ComputeNode
    name: ComputeNode
    nameWithType: ComputeNode
    fullName: Microsoft.Azure.Batch.ComputeNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.GetComputeNode*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.GetComputeNode
  isExternal: false
  name: GetComputeNode
  nameWithType: CloudPool.GetComputeNode
  fullName: Microsoft.Azure.Batch.CloudPool.GetComputeNode
- uid: Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync
  isExternal: false
  name: EnableAutoScaleAsync
  nameWithType: CloudPool.EnableAutoScaleAsync
  fullName: Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync
- uid: Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.EnableAutoScale*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.EnableAutoScale
  isExternal: false
  name: EnableAutoScale
  nameWithType: CloudPool.EnableAutoScale
  fullName: Microsoft.Azure.Batch.CloudPool.EnableAutoScale
- uid: Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync
  isExternal: false
  name: DisableAutoScaleAsync
  nameWithType: CloudPool.DisableAutoScaleAsync
  fullName: Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync
- uid: Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.DisableAutoScale*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.DisableAutoScale
  isExternal: false
  name: DisableAutoScale
  nameWithType: CloudPool.DisableAutoScale
  fullName: Microsoft.Azure.Batch.CloudPool.DisableAutoScale
- uid: Microsoft.Azure.Batch.CloudPool.LastModified
  commentId: P:Microsoft.Azure.Batch.CloudPool.LastModified
- uid: Microsoft.Azure.Batch.CloudPool.ETag
  commentId: P:Microsoft.Azure.Batch.CloudPool.ETag
- uid: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync
  isExternal: false
  name: EvaluateAutoScaleAsync
  nameWithType: CloudPool.EvaluateAutoScaleAsync
  fullName: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.AutoScaleRun}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.AutoScaleRun}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AutoScaleRun>
  nameWithType: Task<AutoScaleRun>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.AutoScaleRun>
  nameWithType.vb: Task(Of AutoScaleRun)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.AutoScaleRun)
  name.vb: Task(Of AutoScaleRun)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.AutoScaleRun
    name: AutoScaleRun
    nameWithType: AutoScaleRun
    fullName: Microsoft.Azure.Batch.AutoScaleRun
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.AutoScaleRun
    name: AutoScaleRun
    nameWithType: AutoScaleRun
    fullName: Microsoft.Azure.Batch.AutoScaleRun
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScale*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScale
  isExternal: false
  name: EvaluateAutoScale
  nameWithType: CloudPool.EvaluateAutoScale
  fullName: Microsoft.Azure.Batch.CloudPool.EvaluateAutoScale
- uid: Microsoft.Azure.Batch.AutoScaleRun
  commentId: T:Microsoft.Azure.Batch.AutoScaleRun
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: AutoScaleRun
  nameWithType: AutoScaleRun
  fullName: Microsoft.Azure.Batch.AutoScaleRun
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync
  isExternal: false
  name: RemoveFromPoolAsync
  nameWithType: CloudPool.RemoveFromPoolAsync
  fullName: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPool*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.RemoveFromPool
  isExternal: false
  name: RemoveFromPool
  nameWithType: CloudPool.RemoveFromPool
  fullName: Microsoft.Azure.Batch.CloudPool.RemoveFromPool
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
- uid: Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ComputeNode>
  nameWithType: IEnumerable<ComputeNode>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.ComputeNode>
  nameWithType.vb: IEnumerable(Of ComputeNode)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.ComputeNode)
  name.vb: IEnumerable(Of ComputeNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.ComputeNode
    name: ComputeNode
    nameWithType: ComputeNode
    fullName: Microsoft.Azure.Batch.ComputeNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.ComputeNode
    name: ComputeNode
    nameWithType: ComputeNode
    fullName: Microsoft.Azure.Batch.ComputeNode
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Common.PoolState.Upgrading
  commentId: F:Microsoft.Azure.Batch.Common.PoolState.Upgrading
- uid: Microsoft.Azure.Batch.Common.PoolState.Active
  commentId: F:Microsoft.Azure.Batch.Common.PoolState.Active
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion
  commentId: P:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion
  commentId: P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion
- uid: Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync
  isExternal: false
  name: ChangeOSVersionAsync
  nameWithType: CloudPool.ChangeOSVersionAsync
  fullName: Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync
- uid: Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
- uid: Microsoft.Azure.Batch.CloudPool.ChangeOSVersion*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.ChangeOSVersion
  isExternal: false
  name: ChangeOSVersion
  nameWithType: CloudPool.ChangeOSVersion
  fullName: Microsoft.Azure.Batch.CloudPool.ChangeOSVersion
- uid: Microsoft.Azure.Batch.CloudPool.Id
  commentId: P:Microsoft.Azure.Batch.CloudPool.Id
- uid: Microsoft.Azure.Batch.CloudPool.RefreshAsync*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.RefreshAsync
  isExternal: false
  name: RefreshAsync
  nameWithType: CloudPool.RefreshAsync
  fullName: Microsoft.Azure.Batch.CloudPool.RefreshAsync
- uid: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
  parent: Microsoft.Azure.Batch.IRefreshable
  isExternal: true
  name: RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  nameWithType: IRefreshable.RefreshAsync(DetailLevel, IEnumerable<BatchClientBehavior>, CancellationToken)
  fullName: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>, System.Threading.CancellationToken)
  nameWithType.vb: IRefreshable.RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  fullname.vb: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior), System.Threading.CancellationToken)
  name.vb: RefreshAsync(DetailLevel, IEnumerable(Of BatchClientBehavior), CancellationToken)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
    name: RefreshAsync
    nameWithType: IRefreshable.RefreshAsync
    fullName: Microsoft.Azure.Batch.IRefreshable.RefreshAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)
    name: RefreshAsync
    nameWithType: IRefreshable.RefreshAsync
    fullName: Microsoft.Azure.Batch.IRefreshable.RefreshAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.Refresh*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.Refresh
  isExternal: false
  name: Refresh
  nameWithType: CloudPool.Refresh
  fullName: Microsoft.Azure.Batch.CloudPool.Refresh
- uid: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  commentId: M:Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
  parent: Microsoft.Azure.Batch.IRefreshable
  isExternal: true
  name: Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  nameWithType: IRefreshable.Refresh(DetailLevel, IEnumerable<BatchClientBehavior>)
  fullName: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.BatchClientBehavior>)
  nameWithType.vb: IRefreshable.Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
  fullname.vb: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel, System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.BatchClientBehavior))
  name.vb: Refresh(DetailLevel, IEnumerable(Of BatchClientBehavior))
  spec.csharp:
  - uid: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
    name: Refresh
    nameWithType: IRefreshable.Refresh
    fullName: Microsoft.Azure.Batch.IRefreshable.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})
    name: Refresh
    nameWithType: IRefreshable.Refresh
    fullName: Microsoft.Azure.Batch.IRefreshable.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Batch.DetailLevel
    name: DetailLevel
    nameWithType: DetailLevel
    fullName: Microsoft.Azure.Batch.DetailLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.CustomBehaviors*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.CustomBehaviors
  isExternal: false
  name: CustomBehaviors
  nameWithType: CloudPool.CustomBehaviors
  fullName: Microsoft.Azure.Batch.CloudPool.CustomBehaviors
- uid: Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  commentId: P:Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
  parent: Microsoft.Azure.Batch.IInheritedBehaviors
  isExternal: false
  name: CustomBehaviors
  nameWithType: IInheritedBehaviors.CustomBehaviors
  fullName: Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.BatchClientBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<BatchClientBehavior>
  nameWithType: IList<BatchClientBehavior>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.BatchClientBehavior>
  nameWithType.vb: IList(Of BatchClientBehavior)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.BatchClientBehavior)
  name.vb: IList(Of BatchClientBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.BatchClientBehavior
    name: BatchClientBehavior
    nameWithType: BatchClientBehavior
    fullName: Microsoft.Azure.Batch.BatchClientBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Common.AllocationState
  commentId: T:Microsoft.Azure.Batch.Common.AllocationState
  parent: Microsoft.Azure.Batch.Common
  isExternal: false
  name: AllocationState
  nameWithType: AllocationState
  fullName: Microsoft.Azure.Batch.Common.AllocationState
- uid: Microsoft.Azure.Batch.CloudPool.AllocationState*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.AllocationState
  isExternal: false
  name: AllocationState
  nameWithType: CloudPool.AllocationState
  fullName: Microsoft.Azure.Batch.CloudPool.AllocationState
- uid: System.Nullable{Microsoft.Azure.Batch.Common.AllocationState}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.AllocationState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AllocationState>
  nameWithType: Nullable<AllocationState>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.AllocationState>
  nameWithType.vb: Nullable(Of AllocationState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.AllocationState)
  name.vb: Nullable(Of AllocationState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.AllocationState
    name: AllocationState
    nameWithType: AllocationState
    fullName: Microsoft.Azure.Batch.Common.AllocationState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.AllocationState
    name: AllocationState
    nameWithType: AllocationState
    fullName: Microsoft.Azure.Batch.Common.AllocationState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Common
  commentId: N:Microsoft.Azure.Batch.Common
  isExternal: false
  name: Microsoft.Azure.Batch.Common
  nameWithType: Microsoft.Azure.Batch.Common
  fullName: Microsoft.Azure.Batch.Common
- uid: Microsoft.Azure.Batch.CloudPool.AllocationStateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.AllocationStateTransitionTime
  isExternal: false
  name: AllocationStateTransitionTime
  nameWithType: CloudPool.AllocationStateTransitionTime
  fullName: Microsoft.Azure.Batch.CloudPool.AllocationStateTransitionTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.ApplicationPackageReferences*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.ApplicationPackageReferences
  isExternal: false
  name: ApplicationPackageReferences
  nameWithType: CloudPool.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.CloudPool.ApplicationPackageReferences
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.ApplicationPackageReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.ApplicationPackageReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ApplicationPackageReference>
  nameWithType: IList<ApplicationPackageReference>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.ApplicationPackageReference>
  nameWithType.vb: IList(Of ApplicationPackageReference)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.ApplicationPackageReference)
  name.vb: IList(Of ApplicationPackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.ApplicationPackageReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.ApplicationPackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.AutoScaleFormula
  commentId: P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula
- uid: Microsoft.Azure.Batch.CloudPool.TargetDedicated
  commentId: P:Microsoft.Azure.Batch.CloudPool.TargetDedicated
- uid: Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled
  isExternal: false
  name: AutoScaleEnabled
  nameWithType: CloudPool.AutoScaleEnabled
  fullName: Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.AutoScaleEvaluationInterval*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.AutoScaleEvaluationInterval
  isExternal: false
  name: AutoScaleEvaluationInterval
  nameWithType: CloudPool.AutoScaleEvaluationInterval
  fullName: Microsoft.Azure.Batch.CloudPool.AutoScaleEvaluationInterval
- uid: Microsoft.Azure.Batch.CloudPool.AutoScaleFormula*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula
  isExternal: false
  name: AutoScaleFormula
  nameWithType: CloudPool.AutoScaleFormula
  fullName: Microsoft.Azure.Batch.CloudPool.AutoScaleFormula
- uid: Microsoft.Azure.Batch.CloudPool.AutoScaleRun*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.AutoScaleRun
  isExternal: false
  name: AutoScaleRun
  nameWithType: CloudPool.AutoScaleRun
  fullName: Microsoft.Azure.Batch.CloudPool.AutoScaleRun
- uid: Microsoft.Azure.Batch.CloudPool.CertificateReferences*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.CertificateReferences
  isExternal: false
  name: CertificateReferences
  nameWithType: CloudPool.CertificateReferences
  fullName: Microsoft.Azure.Batch.CloudPool.CertificateReferences
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.CertificateReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.CertificateReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<CertificateReference>
  nameWithType: IList<CertificateReference>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.CertificateReference>
  nameWithType.vb: IList(Of CertificateReference)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.CertificateReference)
  name.vb: IList(Of CertificateReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.CertificateReference
    name: CertificateReference
    nameWithType: CertificateReference
    fullName: Microsoft.Azure.Batch.CertificateReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.CertificateReference
    name: CertificateReference
    nameWithType: CertificateReference
    fullName: Microsoft.Azure.Batch.CertificateReference
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration
  commentId: P:Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration
- uid: Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration
  isExternal: false
  name: CloudServiceConfiguration
  nameWithType: CloudPool.CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration
  commentId: T:Microsoft.Azure.Batch.CloudServiceConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration
- uid: Microsoft.Azure.Batch.CloudPool.CreationTime*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.CreationTime
  isExternal: false
  name: CreationTime
  nameWithType: CloudPool.CreationTime
  fullName: Microsoft.Azure.Batch.CloudPool.CreationTime
- uid: Microsoft.Azure.Batch.CloudPool.CurrentDedicated*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.CurrentDedicated
  isExternal: false
  name: CurrentDedicated
  nameWithType: CloudPool.CurrentDedicated
  fullName: Microsoft.Azure.Batch.CloudPool.CurrentDedicated
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.DisplayName*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: CloudPool.DisplayName
  fullName: Microsoft.Azure.Batch.CloudPool.DisplayName
- uid: Microsoft.Azure.Batch.CloudPool.ETag*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.ETag
  isExternal: false
  name: ETag
  nameWithType: CloudPool.ETag
  fullName: Microsoft.Azure.Batch.CloudPool.ETag
- uid: Microsoft.Azure.Batch.CloudPool.Id*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.Id
  isExternal: false
  name: Id
  nameWithType: CloudPool.Id
  fullName: Microsoft.Azure.Batch.CloudPool.Id
- uid: Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled
  isExternal: false
  name: InterComputeNodeCommunicationEnabled
  nameWithType: CloudPool.InterComputeNodeCommunicationEnabled
  fullName: Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled
- uid: Microsoft.Azure.Batch.CloudPool.LastModified*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.LastModified
  isExternal: false
  name: LastModified
  nameWithType: CloudPool.LastModified
  fullName: Microsoft.Azure.Batch.CloudPool.LastModified
- uid: Microsoft.Azure.Batch.CloudPool.VirtualMachineSize
  commentId: P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize
- uid: Microsoft.Azure.Batch.CloudPool.MaxTasksPerComputeNode*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.MaxTasksPerComputeNode
  isExternal: false
  name: MaxTasksPerComputeNode
  nameWithType: CloudPool.MaxTasksPerComputeNode
  fullName: Microsoft.Azure.Batch.CloudPool.MaxTasksPerComputeNode
- uid: Microsoft.Azure.Batch.CloudPool.Metadata*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.Metadata
  isExternal: false
  name: Metadata
  nameWithType: CloudPool.Metadata
  fullName: Microsoft.Azure.Batch.CloudPool.Metadata
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.MetadataItem}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.MetadataItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MetadataItem>
  nameWithType: IList<MetadataItem>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.MetadataItem>
  nameWithType.vb: IList(Of MetadataItem)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.MetadataItem)
  name.vb: IList(Of MetadataItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.MetadataItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.MetadataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.NetworkConfiguration*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.NetworkConfiguration
  isExternal: false
  name: NetworkConfiguration
  nameWithType: CloudPool.NetworkConfiguration
  fullName: Microsoft.Azure.Batch.CloudPool.NetworkConfiguration
- uid: Microsoft.Azure.Batch.NetworkConfiguration
  commentId: T:Microsoft.Azure.Batch.NetworkConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: NetworkConfiguration
  nameWithType: NetworkConfiguration
  fullName: Microsoft.Azure.Batch.NetworkConfiguration
- uid: Microsoft.Azure.Batch.CloudPool.ResizeError*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.ResizeError
  isExternal: false
  name: ResizeError
  nameWithType: CloudPool.ResizeError
  fullName: Microsoft.Azure.Batch.CloudPool.ResizeError
- uid: Microsoft.Azure.Batch.ResizeError
  commentId: T:Microsoft.Azure.Batch.ResizeError
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: ResizeError
  nameWithType: ResizeError
  fullName: Microsoft.Azure.Batch.ResizeError
- uid: Microsoft.Azure.Batch.CloudPool.ResizeTimeout*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.ResizeTimeout
  isExternal: false
  name: ResizeTimeout
  nameWithType: CloudPool.ResizeTimeout
  fullName: Microsoft.Azure.Batch.CloudPool.ResizeTimeout
- uid: Microsoft.Azure.Batch.CloudPool.StartTask*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.StartTask
  isExternal: false
  name: StartTask
  nameWithType: CloudPool.StartTask
  fullName: Microsoft.Azure.Batch.CloudPool.StartTask
- uid: Microsoft.Azure.Batch.StartTask
  commentId: T:Microsoft.Azure.Batch.StartTask
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: StartTask
  nameWithType: StartTask
  fullName: Microsoft.Azure.Batch.StartTask
- uid: Microsoft.Azure.Batch.CloudPool.State*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.State
  isExternal: false
  name: State
  nameWithType: CloudPool.State
  fullName: Microsoft.Azure.Batch.CloudPool.State
- uid: System.Nullable{Microsoft.Azure.Batch.Common.PoolState}
  commentId: T:System.Nullable{Microsoft.Azure.Batch.Common.PoolState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<PoolState>
  nameWithType: Nullable<PoolState>
  fullName: System.Nullable<Microsoft.Azure.Batch.Common.PoolState>
  nameWithType.vb: Nullable(Of PoolState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Batch.Common.PoolState)
  name.vb: Nullable(Of PoolState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.PoolState
    name: PoolState
    nameWithType: PoolState
    fullName: Microsoft.Azure.Batch.Common.PoolState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.PoolState
    name: PoolState
    nameWithType: PoolState
    fullName: Microsoft.Azure.Batch.Common.PoolState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.CloudPool.StateTransitionTime*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.StateTransitionTime
  isExternal: false
  name: StateTransitionTime
  nameWithType: CloudPool.StateTransitionTime
  fullName: Microsoft.Azure.Batch.CloudPool.StateTransitionTime
- uid: Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause
  commentId: P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause
- uid: Microsoft.Azure.Batch.CloudPool.Statistics*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.Statistics
  isExternal: false
  name: Statistics
  nameWithType: CloudPool.Statistics
  fullName: Microsoft.Azure.Batch.CloudPool.Statistics
- uid: Microsoft.Azure.Batch.PoolStatistics
  commentId: T:Microsoft.Azure.Batch.PoolStatistics
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: PoolStatistics
  nameWithType: PoolStatistics
  fullName: Microsoft.Azure.Batch.PoolStatistics
- uid: Microsoft.Azure.Batch.CloudPool.TargetDedicated*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.TargetDedicated
  isExternal: false
  name: TargetDedicated
  nameWithType: CloudPool.TargetDedicated
  fullName: Microsoft.Azure.Batch.CloudPool.TargetDedicated
- uid: Microsoft.Azure.Batch.CloudPool.TaskSchedulingPolicy*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.TaskSchedulingPolicy
  isExternal: false
  name: TaskSchedulingPolicy
  nameWithType: CloudPool.TaskSchedulingPolicy
  fullName: Microsoft.Azure.Batch.CloudPool.TaskSchedulingPolicy
- uid: Microsoft.Azure.Batch.TaskSchedulingPolicy
  commentId: T:Microsoft.Azure.Batch.TaskSchedulingPolicy
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: TaskSchedulingPolicy
  nameWithType: TaskSchedulingPolicy
  fullName: Microsoft.Azure.Batch.TaskSchedulingPolicy
- uid: Microsoft.Azure.Batch.CloudPool.Url*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.Url
  isExternal: false
  name: Url
  nameWithType: CloudPool.Url
  fullName: Microsoft.Azure.Batch.CloudPool.Url
- uid: Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration
  commentId: P:Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration
- uid: Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration
  isExternal: false
  name: VirtualMachineConfiguration
  nameWithType: CloudPool.VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration
  commentId: T:Microsoft.Azure.Batch.VirtualMachineConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration
- uid: Microsoft.Azure.Batch.CloudPool.VirtualMachineSize*
  commentId: Overload:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize
  isExternal: false
  name: VirtualMachineSize
  nameWithType: CloudPool.VirtualMachineSize
  fullName: Microsoft.Azure.Batch.CloudPool.VirtualMachineSize
