### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.BatchClientParallelOptions
  commentId: T:Microsoft.Azure.Batch.BatchClientParallelOptions
  id: BatchClientParallelOptions
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.BatchClientParallelOptions.#ctor
  - Microsoft.Azure.Batch.BatchClientParallelOptions.CancellationToken
  - Microsoft.Azure.Batch.BatchClientParallelOptions.MaxDegreeOfParallelism
  langs:
  - csharp
  - vb
  name: BatchClientParallelOptions
  nameWithType: BatchClientParallelOptions
  fullName: Microsoft.Azure.Batch.BatchClientParallelOptions
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/BatchClientParallelOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BatchClientParallelOptions
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClientParallelOptions.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nStores options that configure the operation of methods on Batch client parallel operations.\n"
  example: []
  syntax:
    content: public class BatchClientParallelOptions
    content.vb: Public Class BatchClientParallelOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.BatchClientParallelOptions.MaxDegreeOfParallelism
  commentId: P:Microsoft.Azure.Batch.BatchClientParallelOptions.MaxDegreeOfParallelism
  id: MaxDegreeOfParallelism
  parent: Microsoft.Azure.Batch.BatchClientParallelOptions
  langs:
  - csharp
  - vb
  name: MaxDegreeOfParallelism
  nameWithType: BatchClientParallelOptions.MaxDegreeOfParallelism
  fullName: Microsoft.Azure.Batch.BatchClientParallelOptions.MaxDegreeOfParallelism
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/BatchClientParallelOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxDegreeOfParallelism
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClientParallelOptions.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the maximum number of concurrent tasks enabled by this <xref href=\"Microsoft.Azure.Batch.BatchClientParallelOptions\" data-throw-if-not-resolved=\"false\"></xref> instance.\nThe default value is 1.\n"
  example: []
  syntax:
    content: public int MaxDegreeOfParallelism { get; set; }
    content.vb: Public Property MaxDegreeOfParallelism As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Batch.BatchClientParallelOptions.MaxDegreeOfParallelism*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.BatchClientParallelOptions.CancellationToken
  commentId: P:Microsoft.Azure.Batch.BatchClientParallelOptions.CancellationToken
  id: CancellationToken
  parent: Microsoft.Azure.Batch.BatchClientParallelOptions
  langs:
  - csharp
  - vb
  name: CancellationToken
  nameWithType: BatchClientParallelOptions.CancellationToken
  fullName: Microsoft.Azure.Batch.BatchClientParallelOptions.CancellationToken
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/BatchClientParallelOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CancellationToken
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClientParallelOptions.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> associated with this <xref href=\"Microsoft.Azure.Batch.BatchClientParallelOptions\" data-throw-if-not-resolved=\"false\"></xref> instance.\nThe default is <xref href=\"System.Threading.CancellationToken.None\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CancellationToken CancellationToken { get; set; }
    content.vb: Public Property CancellationToken As CancellationToken
    parameters: []
    return:
      type: System.Threading.CancellationToken
  overload: Microsoft.Azure.Batch.BatchClientParallelOptions.CancellationToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.BatchClientParallelOptions.#ctor
  commentId: M:Microsoft.Azure.Batch.BatchClientParallelOptions.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.BatchClientParallelOptions
  langs:
  - csharp
  - vb
  name: BatchClientParallelOptions()
  nameWithType: BatchClientParallelOptions.BatchClientParallelOptions()
  fullName: Microsoft.Azure.Batch.BatchClientParallelOptions.BatchClientParallelOptions()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/BatchClientParallelOptions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/BatchClientParallelOptions.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.BatchClientParallelOptions\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public BatchClientParallelOptions()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.BatchClientParallelOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.BatchClientParallelOptions
  commentId: T:Microsoft.Azure.Batch.BatchClientParallelOptions
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: BatchClientParallelOptions
  nameWithType: BatchClientParallelOptions
  fullName: Microsoft.Azure.Batch.BatchClientParallelOptions
- uid: Microsoft.Azure.Batch.BatchClientParallelOptions.MaxDegreeOfParallelism*
  commentId: Overload:Microsoft.Azure.Batch.BatchClientParallelOptions.MaxDegreeOfParallelism
  isExternal: false
  name: MaxDegreeOfParallelism
  nameWithType: BatchClientParallelOptions.MaxDegreeOfParallelism
  fullName: Microsoft.Azure.Batch.BatchClientParallelOptions.MaxDegreeOfParallelism
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.CancellationToken.None
  commentId: P:System.Threading.CancellationToken.None
- uid: Microsoft.Azure.Batch.BatchClientParallelOptions.CancellationToken*
  commentId: Overload:Microsoft.Azure.Batch.BatchClientParallelOptions.CancellationToken
  isExternal: false
  name: CancellationToken
  nameWithType: BatchClientParallelOptions.CancellationToken
  fullName: Microsoft.Azure.Batch.BatchClientParallelOptions.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.Azure.Batch.BatchClientParallelOptions.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.BatchClientParallelOptions.#ctor
  isExternal: false
  name: BatchClientParallelOptions
  nameWithType: BatchClientParallelOptions.BatchClientParallelOptions
  fullName: Microsoft.Azure.Batch.BatchClientParallelOptions.BatchClientParallelOptions
