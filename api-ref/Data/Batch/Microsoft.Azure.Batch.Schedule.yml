### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Schedule
  commentId: T:Microsoft.Azure.Batch.Schedule
  id: Schedule
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.Schedule.#ctor
  - Microsoft.Azure.Batch.Schedule.DoNotRunAfter
  - Microsoft.Azure.Batch.Schedule.DoNotRunUntil
  - Microsoft.Azure.Batch.Schedule.RecurrenceInterval
  - Microsoft.Azure.Batch.Schedule.StartWindow
  langs:
  - csharp
  - vb
  name: Schedule
  nameWithType: Schedule
  fullName: Microsoft.Azure.Batch.Schedule
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/Schedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Schedule
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/Schedule.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nA schedule.\n"
  example: []
  syntax:
    content: 'public class Schedule : ITransportObjectProvider<Schedule>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class Schedule
          Implements ITransportObjectProvider(Of Schedule), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Schedule.#ctor
  commentId: M:Microsoft.Azure.Batch.Schedule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Schedule
  langs:
  - csharp
  - vb
  name: Schedule()
  nameWithType: Schedule.Schedule()
  fullName: Microsoft.Azure.Batch.Schedule.Schedule()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/Schedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/Schedule.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.Schedule\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Schedule()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Schedule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Schedule.DoNotRunAfter
  commentId: P:Microsoft.Azure.Batch.Schedule.DoNotRunAfter
  id: DoNotRunAfter
  parent: Microsoft.Azure.Batch.Schedule
  langs:
  - csharp
  - vb
  name: DoNotRunAfter
  nameWithType: Schedule.DoNotRunAfter
  fullName: Microsoft.Azure.Batch.Schedule.DoNotRunAfter
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/Schedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DoNotRunAfter
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/Schedule.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the wall clock time after which no job will be scheduled under this job schedule.\n"
  example: []
  syntax:
    content: public DateTime? DoNotRunAfter { get; set; }
    content.vb: Public Property DoNotRunAfter As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Schedule.DoNotRunAfter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Schedule.DoNotRunUntil
  commentId: P:Microsoft.Azure.Batch.Schedule.DoNotRunUntil
  id: DoNotRunUntil
  parent: Microsoft.Azure.Batch.Schedule
  langs:
  - csharp
  - vb
  name: DoNotRunUntil
  nameWithType: Schedule.DoNotRunUntil
  fullName: Microsoft.Azure.Batch.Schedule.DoNotRunUntil
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/Schedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DoNotRunUntil
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/Schedule.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the earliest wall clock time at which to schedule the first job under this job schedule\n"
  example: []
  syntax:
    content: public DateTime? DoNotRunUntil { get; set; }
    content.vb: Public Property DoNotRunUntil As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Schedule.DoNotRunUntil*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Schedule.RecurrenceInterval
  commentId: P:Microsoft.Azure.Batch.Schedule.RecurrenceInterval
  id: RecurrenceInterval
  parent: Microsoft.Azure.Batch.Schedule
  langs:
  - csharp
  - vb
  name: RecurrenceInterval
  nameWithType: Schedule.RecurrenceInterval
  fullName: Microsoft.Azure.Batch.Schedule.RecurrenceInterval
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/Schedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RecurrenceInterval
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/Schedule.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the time interval between the start times of two successive jobs under the job schedule.\n"
  example: []
  syntax:
    content: public TimeSpan? RecurrenceInterval { get; set; }
    content.vb: Public Property RecurrenceInterval As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.Schedule.RecurrenceInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Schedule.StartWindow
  commentId: P:Microsoft.Azure.Batch.Schedule.StartWindow
  id: StartWindow
  parent: Microsoft.Azure.Batch.Schedule
  langs:
  - csharp
  - vb
  name: StartWindow
  nameWithType: Schedule.StartWindow
  fullName: Microsoft.Azure.Batch.Schedule.StartWindow
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/Schedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartWindow
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/Schedule.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the window of time within which a job must be started from the time the job schedule is ready to \nbe scheduled.\n"
  example: []
  syntax:
    content: public TimeSpan? StartWindow { get; set; }
    content.vb: Public Property StartWindow As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.Schedule.StartWindow*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Schedule
  commentId: T:Microsoft.Azure.Batch.Schedule
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: Schedule
  nameWithType: Schedule
  fullName: Microsoft.Azure.Batch.Schedule
- uid: Microsoft.Azure.Batch.Schedule.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Schedule.#ctor
  isExternal: false
  name: Schedule
  nameWithType: Schedule.Schedule
  fullName: Microsoft.Azure.Batch.Schedule.Schedule
- uid: Microsoft.Azure.Batch.Schedule.DoNotRunAfter*
  commentId: Overload:Microsoft.Azure.Batch.Schedule.DoNotRunAfter
  isExternal: false
  name: DoNotRunAfter
  nameWithType: Schedule.DoNotRunAfter
  fullName: Microsoft.Azure.Batch.Schedule.DoNotRunAfter
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Schedule.DoNotRunUntil*
  commentId: Overload:Microsoft.Azure.Batch.Schedule.DoNotRunUntil
  isExternal: false
  name: DoNotRunUntil
  nameWithType: Schedule.DoNotRunUntil
  fullName: Microsoft.Azure.Batch.Schedule.DoNotRunUntil
- uid: Microsoft.Azure.Batch.Schedule.RecurrenceInterval*
  commentId: Overload:Microsoft.Azure.Batch.Schedule.RecurrenceInterval
  isExternal: false
  name: RecurrenceInterval
  nameWithType: Schedule.RecurrenceInterval
  fullName: Microsoft.Azure.Batch.Schedule.RecurrenceInterval
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Schedule.StartWindow*
  commentId: Overload:Microsoft.Azure.Batch.Schedule.StartWindow
  isExternal: false
  name: StartWindow
  nameWithType: Schedule.StartWindow
  fullName: Microsoft.Azure.Batch.Schedule.StartWindow
