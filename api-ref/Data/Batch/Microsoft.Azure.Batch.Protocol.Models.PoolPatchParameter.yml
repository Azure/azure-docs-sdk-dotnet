### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
  id: PoolPatchParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})
  - Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ApplicationPackageReferences
  - Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.CertificateReferences
  - Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Metadata
  - Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.StartTask
  - Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Validate
  langs:
  - csharp
  - vb
  name: PoolPatchParameter
  nameWithType: PoolPatchParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolPatchParameter
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nParameters for a CloudPoolOperations.Patch request.\n"
  example: []
  syntax:
    content: public class PoolPatchParameter
    content.vb: Public Class PoolPatchParameter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
  langs:
  - csharp
  - vb
  name: PoolPatchParameter()
  nameWithType: PoolPatchParameter.PoolPatchParameter()
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.PoolPatchParameter()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the PoolPatchParameter class.\n"
  example: []
  syntax:
    content: public PoolPatchParameter()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})
  id: '#ctor(Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})'
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
  langs:
  - csharp
  - vb
  name: PoolPatchParameter(StartTask, IList<CertificateReference>, IList<ApplicationPackageReference>, IList<MetadataItem>)
  nameWithType: PoolPatchParameter.PoolPatchParameter(StartTask, IList<CertificateReference>, IList<ApplicationPackageReference>, IList<MetadataItem>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.PoolPatchParameter(Microsoft.Azure.Batch.Protocol.Models.StartTask, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.CertificateReference>, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference>, System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.MetadataItem>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the PoolPatchParameter class.\n"
  example: []
  syntax:
    content: public PoolPatchParameter(StartTask startTask = null, IList<CertificateReference> certificateReferences = null, IList<ApplicationPackageReference> applicationPackageReferences = null, IList<MetadataItem> metadata = null)
    content.vb: Public Sub New(startTask As StartTask = Nothing, certificateReferences As IList(Of CertificateReference) = Nothing, applicationPackageReferences As IList(Of ApplicationPackageReference) = Nothing, metadata As IList(Of MetadataItem) = Nothing)
    parameters:
    - id: startTask
      type: Microsoft.Azure.Batch.Protocol.Models.StartTask
      description: >-
        A task to run on each compute node as it

        joins the pool.
    - id: certificateReferences
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference}
      description: >-
        A list of certificates to be

        installed on each compute node in the pool.
    - id: applicationPackageReferences
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
      description: >-
        A list of application

        packages to be installed on each compute node in the pool.
    - id: metadata
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
      description: >-
        A list of name-value pairs associated with

        the pool as metadata.
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor*
  nameWithType.vb: PoolPatchParameter.PoolPatchParameter(StartTask, IList(Of CertificateReference), IList(Of ApplicationPackageReference), IList(Of MetadataItem))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.PoolPatchParameter(Microsoft.Azure.Batch.Protocol.Models.StartTask, System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.CertificateReference), System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference), System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.MetadataItem))
  name.vb: PoolPatchParameter(StartTask, IList(Of CertificateReference), IList(Of ApplicationPackageReference), IList(Of MetadataItem))
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.StartTask
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.StartTask
  id: StartTask
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
  langs:
  - csharp
  - vb
  name: StartTask
  nameWithType: PoolPatchParameter.StartTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.StartTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a task to run on each compute node as it joins the\npool.\n"
  remarks: "\nIf omitted, any existing start task is left unchanged.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startTask")]

      public StartTask StartTask { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="startTask")>

      Public Property StartTask As StartTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.StartTask
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.StartTask*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startTask
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.CertificateReferences
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.CertificateReferences
  id: CertificateReferences
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
  langs:
  - csharp
  - vb
  name: CertificateReferences
  nameWithType: PoolPatchParameter.CertificateReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.CertificateReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of certificates to be installed on each\ncompute node in the pool.\n"
  remarks: "\nIf omitted, any existing certificate references are left unchanged.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "certificateReferences")]

      public IList<CertificateReference> CertificateReferences { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="certificateReferences")>

      Public Property CertificateReferences As IList(Of CertificateReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference}
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.CertificateReferences*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: certificateReferences
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ApplicationPackageReferences
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ApplicationPackageReferences
  id: ApplicationPackageReferences
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
  langs:
  - csharp
  - vb
  name: ApplicationPackageReferences
  nameWithType: PoolPatchParameter.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ApplicationPackageReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationPackageReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of application packages to be installed on\neach compute node in the pool.\n"
  remarks: "\nIf omitted, any existing application package references are left\nunchanged.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "applicationPackageReferences")]

      public IList<ApplicationPackageReference> ApplicationPackageReferences { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="applicationPackageReferences")>

      Public Property ApplicationPackageReferences As IList(Of ApplicationPackageReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ApplicationPackageReferences*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: applicationPackageReferences
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Metadata
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Metadata
  id: Metadata
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: PoolPatchParameter.Metadata
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Metadata
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Metadata
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets a list of name-value pairs associated with the pool\nas metadata.\n"
  remarks: "\nIf omitted, any existing metadata is left unchanged.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "metadata")]

      public IList<MetadataItem> Metadata { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="metadata")>

      Public Property Metadata As IList(Of MetadataItem)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Metadata*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: metadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: PoolPatchParameter.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/PoolPatchParameter.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor
  isExternal: false
  name: PoolPatchParameter
  nameWithType: PoolPatchParameter.PoolPatchParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.PoolPatchParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.StartTask
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.StartTask
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: StartTask
  nameWithType: StartTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.StartTask
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<CertificateReference>
  nameWithType: IList<CertificateReference>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.CertificateReference>
  nameWithType.vb: IList(Of CertificateReference)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.CertificateReference)
  name.vb: IList(Of CertificateReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
    name: CertificateReference
    nameWithType: CertificateReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
    name: CertificateReference
    nameWithType: CertificateReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.CertificateReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ApplicationPackageReference>
  nameWithType: IList<ApplicationPackageReference>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference>
  nameWithType.vb: IList(Of ApplicationPackageReference)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference)
  name.vb: IList(Of ApplicationPackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MetadataItem>
  nameWithType: IList<MetadataItem>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.Protocol.Models.MetadataItem>
  nameWithType.vb: IList(Of MetadataItem)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.Protocol.Models.MetadataItem)
  name.vb: IList(Of MetadataItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.Protocol.Models.MetadataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.StartTask*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.StartTask
  isExternal: false
  name: StartTask
  nameWithType: PoolPatchParameter.StartTask
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.StartTask
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.CertificateReferences*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.CertificateReferences
  isExternal: false
  name: CertificateReferences
  nameWithType: PoolPatchParameter.CertificateReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.CertificateReferences
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ApplicationPackageReferences*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ApplicationPackageReferences
  isExternal: false
  name: ApplicationPackageReferences
  nameWithType: PoolPatchParameter.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ApplicationPackageReferences
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Metadata*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Metadata
  isExternal: false
  name: Metadata
  nameWithType: PoolPatchParameter.Metadata
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Metadata
- uid: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Validate
  isExternal: false
  name: Validate
  nameWithType: PoolPatchParameter.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Validate
