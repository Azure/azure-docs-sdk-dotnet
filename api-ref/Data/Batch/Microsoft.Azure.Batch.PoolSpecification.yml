### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.PoolSpecification
  commentId: T:Microsoft.Azure.Batch.PoolSpecification
  id: PoolSpecification
  parent: Microsoft.Azure.Batch
  children:
  - Microsoft.Azure.Batch.PoolSpecification.#ctor
  - Microsoft.Azure.Batch.PoolSpecification.ApplicationPackageReferences
  - Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled
  - Microsoft.Azure.Batch.PoolSpecification.AutoScaleEvaluationInterval
  - Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula
  - Microsoft.Azure.Batch.PoolSpecification.CertificateReferences
  - Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration
  - Microsoft.Azure.Batch.PoolSpecification.DisplayName
  - Microsoft.Azure.Batch.PoolSpecification.InterComputeNodeCommunicationEnabled
  - Microsoft.Azure.Batch.PoolSpecification.MaxTasksPerComputeNode
  - Microsoft.Azure.Batch.PoolSpecification.Metadata
  - Microsoft.Azure.Batch.PoolSpecification.NetworkConfiguration
  - Microsoft.Azure.Batch.PoolSpecification.ResizeTimeout
  - Microsoft.Azure.Batch.PoolSpecification.StartTask
  - Microsoft.Azure.Batch.PoolSpecification.TargetDedicated
  - Microsoft.Azure.Batch.PoolSpecification.TaskSchedulingPolicy
  - Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration
  - Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize
  langs:
  - csharp
  - vb
  name: PoolSpecification
  nameWithType: PoolSpecification
  fullName: Microsoft.Azure.Batch.PoolSpecification
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PoolSpecification
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nThe specification for a pool.\n"
  example: []
  syntax:
    content: 'public class PoolSpecification : ITransportObjectProvider<PoolSpecification>, IPropertyMetadata, IModifiable, IReadOnly'
    content.vb: >-
      Public Class PoolSpecification
          Implements ITransportObjectProvider(Of PoolSpecification), IPropertyMetadata, IModifiable, IReadOnly
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.PoolSpecification.#ctor
  commentId: M:Microsoft.Azure.Batch.PoolSpecification.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: PoolSpecification()
  nameWithType: PoolSpecification.PoolSpecification()
  fullName: Microsoft.Azure.Batch.PoolSpecification.PoolSpecification()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.Batch.PoolSpecification\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public PoolSpecification()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.PoolSpecification.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.ApplicationPackageReferences
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.ApplicationPackageReferences
  id: ApplicationPackageReferences
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: ApplicationPackageReferences
  nameWithType: PoolSpecification.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.PoolSpecification.ApplicationPackageReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApplicationPackageReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 173
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of application package references to be installed on each compute node in the pool.\n"
  example: []
  syntax:
    content: public IList<ApplicationPackageReference> ApplicationPackageReferences { get; set; }
    content.vb: Public Property ApplicationPackageReferences As IList(Of ApplicationPackageReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.ApplicationPackageReference}
  overload: Microsoft.Azure.Batch.PoolSpecification.ApplicationPackageReferences*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled
  id: AutoScaleEnabled
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: AutoScaleEnabled
  nameWithType: PoolSpecification.AutoScaleEnabled
  fullName: Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoScaleEnabled
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 190
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets whether the pool size should automatically adjust over time.\n"
  remarks: "\n<p>If false, the <xref href=\"Microsoft.Azure.Batch.PoolSpecification.TargetDedicated\" data-throw-if-not-resolved=\"false\"></xref> property is required.</p> <p>If true, the <xref href=\"Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula\" data-throw-if-not-resolved=\"false\"></xref> \nproperty is required. The pool automatically resizes according to the formula.</p> <p>The default value \nis false.</p>\n"
  example: []
  syntax:
    content: public bool ? AutoScaleEnabled { get; set; }
    content.vb: Public Property AutoScaleEnabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.AutoScaleEvaluationInterval
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEvaluationInterval
  id: AutoScaleEvaluationInterval
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: AutoScaleEvaluationInterval
  nameWithType: PoolSpecification.AutoScaleEvaluationInterval
  fullName: Microsoft.Azure.Batch.PoolSpecification.AutoScaleEvaluationInterval
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoScaleEvaluationInterval
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 202
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a time interval at which to automatically adjust the pool size according to the <xref href=\"Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe default value is 15 minutes. The minimum allowed value is 5 minutes.\n"
  example: []
  syntax:
    content: public TimeSpan? AutoScaleEvaluationInterval { get; set; }
    content.vb: Public Property AutoScaleEvaluationInterval As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.PoolSpecification.AutoScaleEvaluationInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula
  id: AutoScaleFormula
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: AutoScaleFormula
  nameWithType: PoolSpecification.AutoScaleFormula
  fullName: Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AutoScaleFormula
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 217
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a formula for the desired number of compute nodes in the pool.\n"
  remarks: "\n<p>For how to write autoscale formulas, see https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/. \nThis property is required if <xref href=\"Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled\" data-throw-if-not-resolved=\"false\"></xref> is set to true. It must be null if AutoScaleEnabled \nis false.</p><p>The formula is checked for validity before the pool is created. If the formula is not valid, \nan exception is thrown when you try to commit the <xref href=\"Microsoft.Azure.Batch.PoolSpecification\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public string AutoScaleFormula { get; set; }
    content.vb: Public Property AutoScaleFormula As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.CertificateReferences
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.CertificateReferences
  id: CertificateReferences
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: CertificateReferences
  nameWithType: PoolSpecification.CertificateReferences
  fullName: Microsoft.Azure.Batch.PoolSpecification.CertificateReferences
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateReferences
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 226
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of certificates to be installed on each compute node in the pool.\n"
  example: []
  syntax:
    content: public IList<CertificateReference> CertificateReferences { get; set; }
    content.vb: Public Property CertificateReferences As IList(Of CertificateReference)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.CertificateReference}
  overload: Microsoft.Azure.Batch.PoolSpecification.CertificateReferences*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration
  id: CloudServiceConfiguration
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: CloudServiceConfiguration
  nameWithType: PoolSpecification.CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CloudServiceConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 241
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the <xref href=\"Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration\" data-throw-if-not-resolved=\"false\"></xref> for the pool.\n"
  remarks: "\nThis property is mutually exclusive with <xref href=\"Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CloudServiceConfiguration CloudServiceConfiguration { get; set; }
    content.vb: Public Property CloudServiceConfiguration As CloudServiceConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Batch.CloudServiceConfiguration
  overload: Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.DisplayName
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: PoolSpecification.DisplayName
  fullName: Microsoft.Azure.Batch.PoolSpecification.DisplayName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 250
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the display name for the pool.\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    content.vb: Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.PoolSpecification.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.InterComputeNodeCommunicationEnabled
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.InterComputeNodeCommunicationEnabled
  id: InterComputeNodeCommunicationEnabled
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: InterComputeNodeCommunicationEnabled
  nameWithType: PoolSpecification.InterComputeNodeCommunicationEnabled
  fullName: Microsoft.Azure.Batch.PoolSpecification.InterComputeNodeCommunicationEnabled
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InterComputeNodeCommunicationEnabled
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 263
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets whether the pool permits direct communication between its compute nodes.\n"
  remarks: "\nEnabling inter-node communication limits the maximum size of the pool due to deployment restrictions on the nodes \nof the pool. This may result in the pool not reaching its desired size.\n"
  example: []
  syntax:
    content: public bool ? InterComputeNodeCommunicationEnabled { get; set; }
    content.vb: Public Property InterComputeNodeCommunicationEnabled As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Batch.PoolSpecification.InterComputeNodeCommunicationEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.MaxTasksPerComputeNode
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.MaxTasksPerComputeNode
  id: MaxTasksPerComputeNode
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: MaxTasksPerComputeNode
  nameWithType: PoolSpecification.MaxTasksPerComputeNode
  fullName: Microsoft.Azure.Batch.PoolSpecification.MaxTasksPerComputeNode
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxTasksPerComputeNode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 276
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.\n"
  remarks: "\nThe default value is 1. The maximum value of this setting depends on the size of the compute nodes in the pool \n(the <xref href=\"Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize\" data-throw-if-not-resolved=\"false\"></xref> property).\n"
  example: []
  syntax:
    content: public int ? MaxTasksPerComputeNode { get; set; }
    content.vb: Public Property MaxTasksPerComputeNode As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.PoolSpecification.MaxTasksPerComputeNode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.Metadata
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.Metadata
  id: Metadata
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: PoolSpecification.Metadata
  fullName: Microsoft.Azure.Batch.PoolSpecification.Metadata
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Metadata
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 285
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a list of name-value pairs associated with the pool as metadata.\n"
  example: []
  syntax:
    content: public IList<MetadataItem> Metadata { get; set; }
    content.vb: Public Property Metadata As IList(Of MetadataItem)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Batch.MetadataItem}
  overload: Microsoft.Azure.Batch.PoolSpecification.Metadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.NetworkConfiguration
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.NetworkConfiguration
  id: NetworkConfiguration
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: NetworkConfiguration
  nameWithType: PoolSpecification.NetworkConfiguration
  fullName: Microsoft.Azure.Batch.PoolSpecification.NetworkConfiguration
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NetworkConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 297
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the network configuration of the pool.\n"
  example: []
  syntax:
    content: public NetworkConfiguration NetworkConfiguration { get; set; }
    content.vb: Public Property NetworkConfiguration As NetworkConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Batch.NetworkConfiguration
  overload: Microsoft.Azure.Batch.PoolSpecification.NetworkConfiguration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.ResizeTimeout
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.ResizeTimeout
  id: ResizeTimeout
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: ResizeTimeout
  nameWithType: PoolSpecification.ResizeTimeout
  fullName: Microsoft.Azure.Batch.PoolSpecification.ResizeTimeout
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResizeTimeout
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 310
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the timeout for allocation of compute nodes to the pool.\n"
  remarks: "\n<p>This timeout applies only to manual scaling; it has no effect when <xref href=\"Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled\" data-throw-if-not-resolved=\"false\"></xref> is set \nto true.</p><p>The default value is 15 minutes. The minimum value is 5 minutes.</p>\n"
  example: []
  syntax:
    content: public TimeSpan? ResizeTimeout { get; set; }
    content.vb: Public Property ResizeTimeout As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Batch.PoolSpecification.ResizeTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.StartTask
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.StartTask
  id: StartTask
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: StartTask
  nameWithType: PoolSpecification.StartTask
  fullName: Microsoft.Azure.Batch.PoolSpecification.StartTask
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTask
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 320
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets a task to run on each compute node as it joins the pool. The task runs when the node is added to \nthe pool or when the node is restarted.\n"
  example: []
  syntax:
    content: public StartTask StartTask { get; set; }
    content.vb: Public Property StartTask As StartTask
    parameters: []
    return:
      type: Microsoft.Azure.Batch.StartTask
  overload: Microsoft.Azure.Batch.PoolSpecification.StartTask*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.TargetDedicated
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.TargetDedicated
  id: TargetDedicated
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: TargetDedicated
  nameWithType: PoolSpecification.TargetDedicated
  fullName: Microsoft.Azure.Batch.PoolSpecification.TargetDedicated
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TargetDedicated
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 333
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the desired number of compute nodes in the pool.\n"
  remarks: "\nThis setting cannot be specified if <xref href=\"Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled\" data-throw-if-not-resolved=\"false\"></xref> is set to true. It is required if AutoScaleEnabled \nis set to false.\n"
  example: []
  syntax:
    content: public int ? TargetDedicated { get; set; }
    content.vb: Public Property TargetDedicated As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.PoolSpecification.TargetDedicated*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.TaskSchedulingPolicy
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.TaskSchedulingPolicy
  id: TaskSchedulingPolicy
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: TaskSchedulingPolicy
  nameWithType: PoolSpecification.TaskSchedulingPolicy
  fullName: Microsoft.Azure.Batch.PoolSpecification.TaskSchedulingPolicy
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskSchedulingPolicy
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 342
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets how tasks are distributed among compute nodes in the pool.\n"
  example: []
  syntax:
    content: public TaskSchedulingPolicy TaskSchedulingPolicy { get; set; }
    content.vb: Public Property TaskSchedulingPolicy As TaskSchedulingPolicy
    parameters: []
    return:
      type: Microsoft.Azure.Batch.TaskSchedulingPolicy
  overload: Microsoft.Azure.Batch.PoolSpecification.TaskSchedulingPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration
  id: VirtualMachineConfiguration
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: VirtualMachineConfiguration
  nameWithType: PoolSpecification.VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineConfiguration
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 354
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the <xref href=\"Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration\" data-throw-if-not-resolved=\"false\"></xref> of the pool.\n"
  remarks: "\nThis property is mutually exclusive with <xref href=\"Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public VirtualMachineConfiguration VirtualMachineConfiguration { get; set; }
    content.vb: Public Property VirtualMachineConfiguration As VirtualMachineConfiguration
    parameters: []
    return:
      type: Microsoft.Azure.Batch.VirtualMachineConfiguration
  overload: Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize
  id: VirtualMachineSize
  parent: Microsoft.Azure.Batch.PoolSpecification
  langs:
  - csharp
  - vb
  name: VirtualMachineSize
  nameWithType: PoolSpecification.VirtualMachineSize
  fullName: Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/Generated/PoolSpecification.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VirtualMachineSize
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Generated/PoolSpecification.cs
    startLine: 372
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch
  summary: "\nGets or sets the size of the virtual machines in the pool.  All virtual machines in a pool are the same size.\n"
  remarks: "\n<p>For information about available sizes of virtual machines for Cloud Services pools (pools created with \na <xref href=\"Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration\" data-throw-if-not-resolved=\"false\"></xref>), see https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/. \nBatch supports all Cloud Services VM sizes except ExtraSmall.</p><p>For information about available VM \nsizes for pools using images from the Virtual Machines Marketplace (pools created with a <xref href=\"Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration\" data-throw-if-not-resolved=\"false\"></xref>) \nsee https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/ or https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/. \nBatch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (for example STANDARD_GS, \nSTANDARD_DS, and STANDARD_DSV2 series).</p>\n"
  example: []
  syntax:
    content: public string VirtualMachineSize { get; set; }
    content.vb: Public Property VirtualMachineSize As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.PoolSpecification
  commentId: T:Microsoft.Azure.Batch.PoolSpecification
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: PoolSpecification
  nameWithType: PoolSpecification
  fullName: Microsoft.Azure.Batch.PoolSpecification
- uid: Microsoft.Azure.Batch.PoolSpecification.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.#ctor
  isExternal: false
  name: PoolSpecification
  nameWithType: PoolSpecification.PoolSpecification
  fullName: Microsoft.Azure.Batch.PoolSpecification.PoolSpecification
- uid: Microsoft.Azure.Batch.PoolSpecification.ApplicationPackageReferences*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.ApplicationPackageReferences
  isExternal: false
  name: ApplicationPackageReferences
  nameWithType: PoolSpecification.ApplicationPackageReferences
  fullName: Microsoft.Azure.Batch.PoolSpecification.ApplicationPackageReferences
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.ApplicationPackageReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.ApplicationPackageReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ApplicationPackageReference>
  nameWithType: IList<ApplicationPackageReference>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.ApplicationPackageReference>
  nameWithType.vb: IList(Of ApplicationPackageReference)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.ApplicationPackageReference)
  name.vb: IList(Of ApplicationPackageReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.ApplicationPackageReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.ApplicationPackageReference
    name: ApplicationPackageReference
    nameWithType: ApplicationPackageReference
    fullName: Microsoft.Azure.Batch.ApplicationPackageReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.PoolSpecification.TargetDedicated
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.TargetDedicated
- uid: Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula
- uid: Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled
  isExternal: false
  name: AutoScaleEnabled
  nameWithType: PoolSpecification.AutoScaleEnabled
  fullName: Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.PoolSpecification.AutoScaleEvaluationInterval*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEvaluationInterval
  isExternal: false
  name: AutoScaleEvaluationInterval
  nameWithType: PoolSpecification.AutoScaleEvaluationInterval
  fullName: Microsoft.Azure.Batch.PoolSpecification.AutoScaleEvaluationInterval
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled
- uid: Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula
  isExternal: false
  name: AutoScaleFormula
  nameWithType: PoolSpecification.AutoScaleFormula
  fullName: Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.PoolSpecification.CertificateReferences*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.CertificateReferences
  isExternal: false
  name: CertificateReferences
  nameWithType: PoolSpecification.CertificateReferences
  fullName: Microsoft.Azure.Batch.PoolSpecification.CertificateReferences
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.CertificateReference}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.CertificateReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<CertificateReference>
  nameWithType: IList<CertificateReference>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.CertificateReference>
  nameWithType.vb: IList(Of CertificateReference)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.CertificateReference)
  name.vb: IList(Of CertificateReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.CertificateReference
    name: CertificateReference
    nameWithType: CertificateReference
    fullName: Microsoft.Azure.Batch.CertificateReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.CertificateReference
    name: CertificateReference
    nameWithType: CertificateReference
    fullName: Microsoft.Azure.Batch.CertificateReference
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration
- uid: Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration
- uid: Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration
  isExternal: false
  name: CloudServiceConfiguration
  nameWithType: PoolSpecification.CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration
- uid: Microsoft.Azure.Batch.CloudServiceConfiguration
  commentId: T:Microsoft.Azure.Batch.CloudServiceConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration
  fullName: Microsoft.Azure.Batch.CloudServiceConfiguration
- uid: Microsoft.Azure.Batch.PoolSpecification.DisplayName*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: PoolSpecification.DisplayName
  fullName: Microsoft.Azure.Batch.PoolSpecification.DisplayName
- uid: Microsoft.Azure.Batch.PoolSpecification.InterComputeNodeCommunicationEnabled*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.InterComputeNodeCommunicationEnabled
  isExternal: false
  name: InterComputeNodeCommunicationEnabled
  nameWithType: PoolSpecification.InterComputeNodeCommunicationEnabled
  fullName: Microsoft.Azure.Batch.PoolSpecification.InterComputeNodeCommunicationEnabled
- uid: Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize
  commentId: P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize
- uid: Microsoft.Azure.Batch.PoolSpecification.MaxTasksPerComputeNode*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.MaxTasksPerComputeNode
  isExternal: false
  name: MaxTasksPerComputeNode
  nameWithType: PoolSpecification.MaxTasksPerComputeNode
  fullName: Microsoft.Azure.Batch.PoolSpecification.MaxTasksPerComputeNode
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.PoolSpecification.Metadata*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.Metadata
  isExternal: false
  name: Metadata
  nameWithType: PoolSpecification.Metadata
  fullName: Microsoft.Azure.Batch.PoolSpecification.Metadata
- uid: System.Collections.Generic.IList{Microsoft.Azure.Batch.MetadataItem}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Batch.MetadataItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MetadataItem>
  nameWithType: IList<MetadataItem>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Batch.MetadataItem>
  nameWithType.vb: IList(Of MetadataItem)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Batch.MetadataItem)
  name.vb: IList(Of MetadataItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.MetadataItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.MetadataItem
    name: MetadataItem
    nameWithType: MetadataItem
    fullName: Microsoft.Azure.Batch.MetadataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.PoolSpecification.NetworkConfiguration*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.NetworkConfiguration
  isExternal: false
  name: NetworkConfiguration
  nameWithType: PoolSpecification.NetworkConfiguration
  fullName: Microsoft.Azure.Batch.PoolSpecification.NetworkConfiguration
- uid: Microsoft.Azure.Batch.NetworkConfiguration
  commentId: T:Microsoft.Azure.Batch.NetworkConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: NetworkConfiguration
  nameWithType: NetworkConfiguration
  fullName: Microsoft.Azure.Batch.NetworkConfiguration
- uid: Microsoft.Azure.Batch.PoolSpecification.ResizeTimeout*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.ResizeTimeout
  isExternal: false
  name: ResizeTimeout
  nameWithType: PoolSpecification.ResizeTimeout
  fullName: Microsoft.Azure.Batch.PoolSpecification.ResizeTimeout
- uid: Microsoft.Azure.Batch.PoolSpecification.StartTask*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.StartTask
  isExternal: false
  name: StartTask
  nameWithType: PoolSpecification.StartTask
  fullName: Microsoft.Azure.Batch.PoolSpecification.StartTask
- uid: Microsoft.Azure.Batch.StartTask
  commentId: T:Microsoft.Azure.Batch.StartTask
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: StartTask
  nameWithType: StartTask
  fullName: Microsoft.Azure.Batch.StartTask
- uid: Microsoft.Azure.Batch.PoolSpecification.TargetDedicated*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.TargetDedicated
  isExternal: false
  name: TargetDedicated
  nameWithType: PoolSpecification.TargetDedicated
  fullName: Microsoft.Azure.Batch.PoolSpecification.TargetDedicated
- uid: Microsoft.Azure.Batch.PoolSpecification.TaskSchedulingPolicy*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.TaskSchedulingPolicy
  isExternal: false
  name: TaskSchedulingPolicy
  nameWithType: PoolSpecification.TaskSchedulingPolicy
  fullName: Microsoft.Azure.Batch.PoolSpecification.TaskSchedulingPolicy
- uid: Microsoft.Azure.Batch.TaskSchedulingPolicy
  commentId: T:Microsoft.Azure.Batch.TaskSchedulingPolicy
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: TaskSchedulingPolicy
  nameWithType: TaskSchedulingPolicy
  fullName: Microsoft.Azure.Batch.TaskSchedulingPolicy
- uid: Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration
  isExternal: false
  name: VirtualMachineConfiguration
  nameWithType: PoolSpecification.VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration
- uid: Microsoft.Azure.Batch.VirtualMachineConfiguration
  commentId: T:Microsoft.Azure.Batch.VirtualMachineConfiguration
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration
  fullName: Microsoft.Azure.Batch.VirtualMachineConfiguration
- uid: Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize*
  commentId: Overload:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize
  isExternal: false
  name: VirtualMachineSize
  nameWithType: PoolSpecification.VirtualMachineSize
  fullName: Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize
