### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Common.NoRetry
  commentId: T:Microsoft.Azure.Batch.Common.NoRetry
  id: NoRetry
  parent: Microsoft.Azure.Batch.Common
  children:
  - Microsoft.Azure.Batch.Common.NoRetry.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
  langs:
  - csharp
  - vb
  name: NoRetry
  nameWithType: NoRetry
  fullName: Microsoft.Azure.Batch.Common.NoRetry
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/Common/NoRetry.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NoRetry
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Common/NoRetry.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Common
  summary: "\nRepresents a retry policy that performs no retries.\n"
  example: []
  syntax:
    content: 'public class NoRetry : IRetryPolicy'
    content.vb: >-
      Public Class NoRetry
          Implements IRetryPolicy
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Batch.Common.IRetryPolicy
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Common.NoRetry.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
  commentId: M:Microsoft.Azure.Batch.Common.NoRetry.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
  id: ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
  parent: Microsoft.Azure.Batch.Common.NoRetry
  langs:
  - csharp
  - vb
  name: ShouldRetryAsync(Exception, OperationContext)
  nameWithType: NoRetry.ShouldRetryAsync(Exception, OperationContext)
  fullName: Microsoft.Azure.Batch.Common.NoRetry.ShouldRetryAsync(System.Exception, Microsoft.Azure.Batch.Common.OperationContext)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/Common/NoRetry.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ShouldRetryAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/Common/NoRetry.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Common
  summary: "\nDetermines if the operation should be retried and how long to wait until the next retry. This\nimplementation always returns <xref href=\"Microsoft.Azure.Batch.Common.RetryDecision.NoRetry\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task<RetryDecision> ShouldRetryAsync(Exception exception, OperationContext operationContext)
    content.vb: Public Function ShouldRetryAsync(exception As Exception, operationContext As OperationContext) As Task(Of RetryDecision)
    parameters:
    - id: exception
      type: System.Exception
      description: An <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> object that represents the last exception encountered.
    - id: operationContext
      type: Microsoft.Azure.Batch.Common.OperationContext
      description: An <xref href="Microsoft.Azure.Batch.Common.OperationContext" data-throw-if-not-resolved="false"></xref> object for tracking the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Common.RetryDecision}
      description: >-
        A <xref href="Microsoft.Azure.Batch.Common.RetryDecision" data-throw-if-not-resolved="false"></xref> object which specifies if a retry should be performed.This

        implementation always returns <xref href="Microsoft.Azure.Batch.Common.RetryDecision.NoRetry" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.Azure.Batch.Common.NoRetry.ShouldRetryAsync*
  implements:
  - Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.Common
  commentId: N:Microsoft.Azure.Batch.Common
  isExternal: false
  name: Microsoft.Azure.Batch.Common
  nameWithType: Microsoft.Azure.Batch.Common
  fullName: Microsoft.Azure.Batch.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Batch.Common.IRetryPolicy
  commentId: T:Microsoft.Azure.Batch.Common.IRetryPolicy
  parent: Microsoft.Azure.Batch.Common
  isExternal: false
  name: IRetryPolicy
  nameWithType: IRetryPolicy
  fullName: Microsoft.Azure.Batch.Common.IRetryPolicy
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Common.RetryDecision.NoRetry
  commentId: F:Microsoft.Azure.Batch.Common.RetryDecision.NoRetry
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Azure.Batch.Common.OperationContext
  commentId: T:Microsoft.Azure.Batch.Common.OperationContext
  parent: Microsoft.Azure.Batch.Common
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.Azure.Batch.Common.OperationContext
- uid: Microsoft.Azure.Batch.Common.RetryDecision
  commentId: T:Microsoft.Azure.Batch.Common.RetryDecision
  parent: Microsoft.Azure.Batch.Common
  isExternal: false
  name: RetryDecision
  nameWithType: RetryDecision
  fullName: Microsoft.Azure.Batch.Common.RetryDecision
- uid: Microsoft.Azure.Batch.Common.NoRetry.ShouldRetryAsync*
  commentId: Overload:Microsoft.Azure.Batch.Common.NoRetry.ShouldRetryAsync
  isExternal: false
  name: ShouldRetryAsync
  nameWithType: NoRetry.ShouldRetryAsync
  fullName: Microsoft.Azure.Batch.Common.NoRetry.ShouldRetryAsync
- uid: Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
  commentId: M:Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
  parent: Microsoft.Azure.Batch.Common.IRetryPolicy
  isExternal: true
  name: ShouldRetryAsync(Exception, OperationContext)
  nameWithType: IRetryPolicy.ShouldRetryAsync(Exception, OperationContext)
  fullName: Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception, Microsoft.Azure.Batch.Common.OperationContext)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
    name: ShouldRetryAsync
    nameWithType: IRetryPolicy.ShouldRetryAsync
    fullName: Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Batch.Common.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.Azure.Batch.Common.OperationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)
    name: ShouldRetryAsync
    nameWithType: IRetryPolicy.ShouldRetryAsync
    fullName: Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Batch.Common.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.Azure.Batch.Common.OperationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Batch.Common.RetryDecision}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Batch.Common.RetryDecision}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RetryDecision>
  nameWithType: Task<RetryDecision>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Batch.Common.RetryDecision>
  nameWithType.vb: Task(Of RetryDecision)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Batch.Common.RetryDecision)
  name.vb: Task(Of RetryDecision)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.Common.RetryDecision
    name: RetryDecision
    nameWithType: RetryDecision
    fullName: Microsoft.Azure.Batch.Common.RetryDecision
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.Common.RetryDecision
    name: RetryDecision
    nameWithType: RetryDecision
    fullName: Microsoft.Azure.Batch.Common.RetryDecision
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
