### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage
  commentId: T:Microsoft.Azure.Batch.FileStaging.FileToStage
  id: FileToStage
  parent: Microsoft.Azure.Batch.FileStaging
  children:
  - Microsoft.Azure.Batch.FileStaging.FileToStage.#ctor(System.String,Microsoft.Azure.Batch.FileStaging.StagingStorageAccount,System.String)
  - Microsoft.Azure.Batch.FileStaging.FileToStage.CreateStagingArtifact
  - Microsoft.Azure.Batch.FileStaging.FileToStage.Exception
  - Microsoft.Azure.Batch.FileStaging.FileToStage.LocalFileToStage
  - Microsoft.Azure.Batch.FileStaging.FileToStage.NodeFileName
  - Microsoft.Azure.Batch.FileStaging.FileToStage.StagedFiles
  - Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
  - Microsoft.Azure.Batch.FileStaging.FileToStage.Validate
  langs:
  - csharp
  - vb
  name: FileToStage
  nameWithType: FileToStage
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FileToStage
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nProvides for file staging of a local file to blob storage.\n"
  example: []
  syntax:
    content: 'public sealed class FileToStage : IFileStagingProvider'
    content.vb: >-
      Public NotInheritable Class FileToStage
          Implements IFileStagingProvider
  inheritance:
  - System.Object
  implements:
  - Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.LocalFileToStage
  commentId: P:Microsoft.Azure.Batch.FileStaging.FileToStage.LocalFileToStage
  id: LocalFileToStage
  parent: Microsoft.Azure.Batch.FileStaging.FileToStage
  langs:
  - csharp
  - vb
  name: LocalFileToStage
  nameWithType: FileToStage.LocalFileToStage
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.LocalFileToStage
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LocalFileToStage
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nThe name of the local file to stage to blob storage\n"
  example: []
  syntax:
    content: public string LocalFileToStage { get; }
    content.vb: Public ReadOnly Property LocalFileToStage As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.FileStaging.FileToStage.LocalFileToStage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.NodeFileName
  commentId: P:Microsoft.Azure.Batch.FileStaging.FileToStage.NodeFileName
  id: NodeFileName
  parent: Microsoft.Azure.Batch.FileStaging.FileToStage
  langs:
  - csharp
  - vb
  name: NodeFileName
  nameWithType: FileToStage.NodeFileName
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.NodeFileName
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NodeFileName
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nThe target filename, on the compute node, to which the blob contents will be downloaded.\n"
  example: []
  syntax:
    content: public string NodeFileName { get; }
    content.vb: Public ReadOnly Property NodeFileName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Batch.FileStaging.FileToStage.NodeFileName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.StagedFiles
  commentId: P:Microsoft.Azure.Batch.FileStaging.FileToStage.StagedFiles
  id: StagedFiles
  parent: Microsoft.Azure.Batch.FileStaging.FileToStage
  langs:
  - csharp
  - vb
  name: StagedFiles
  nameWithType: FileToStage.StagedFiles
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.StagedFiles
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StagedFiles
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nThe instances of ResourcesFile for the staged local file.\nFor this implementation, successful file staging of this object will\nresult in a collection with only one entry.\n"
  example: []
  syntax:
    content: public IEnumerable<ResourceFile> StagedFiles { get; }
    content.vb: Public ReadOnly Property StagedFiles As IEnumerable(Of ResourceFile)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ResourceFile}
  overload: Microsoft.Azure.Batch.FileStaging.FileToStage.StagedFiles*
  implements:
  - Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.Exception
  commentId: P:Microsoft.Azure.Batch.FileStaging.FileToStage.Exception
  id: Exception
  parent: Microsoft.Azure.Batch.FileStaging.FileToStage
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: FileToStage.Exception
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.Exception
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Exception
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nThe exception, if any, caught while attempting to stage this file.\n"
  example: []
  syntax:
    content: public Exception Exception { get; }
    content.vb: Public ReadOnly Property Exception As Exception
    parameters: []
    return:
      type: System.Exception
  overload: Microsoft.Azure.Batch.FileStaging.FileToStage.Exception*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.#ctor(System.String,Microsoft.Azure.Batch.FileStaging.StagingStorageAccount,System.String)
  commentId: M:Microsoft.Azure.Batch.FileStaging.FileToStage.#ctor(System.String,Microsoft.Azure.Batch.FileStaging.StagingStorageAccount,System.String)
  id: '#ctor(System.String,Microsoft.Azure.Batch.FileStaging.StagingStorageAccount,System.String)'
  parent: Microsoft.Azure.Batch.FileStaging.FileToStage
  langs:
  - csharp
  - vb
  name: FileToStage(String, StagingStorageAccount, String)
  nameWithType: FileToStage.FileToStage(String, StagingStorageAccount, String)
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.FileToStage(System.String, Microsoft.Azure.Batch.FileStaging.StagingStorageAccount, System.String)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nSpecifies that a local file should be staged to blob storage.  \nThe specified account will be charged for storage costs.\n"
  example: []
  syntax:
    content: public FileToStage(string localFileToStage, StagingStorageAccount storageCredentials, string nodeFileName = null)
    content.vb: Public Sub New(localFileToStage As String, storageCredentials As StagingStorageAccount, nodeFileName As String = Nothing)
    parameters:
    - id: localFileToStage
      type: System.String
      description: The name of the local file.
    - id: storageCredentials
      type: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount
      description: The storage credentials to be used when creating the default container.
    - id: nodeFileName
      type: System.String
      description: "Optional name to be given to the file on the compute node.  If this parameter is null or missing \nthe name on the compute node will be set to the value of localFileToStage stripped of all path information."
  overload: Microsoft.Azure.Batch.FileStaging.FileToStage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
  commentId: M:Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
  id: StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
  parent: Microsoft.Azure.Batch.FileStaging.FileToStage
  langs:
  - csharp
  - vb
  name: StageFilesAsync(List<IFileStagingProvider>, IFileStagingArtifact)
  nameWithType: FileToStage.StageFilesAsync(List<IFileStagingProvider>, IFileStagingArtifact)
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync(System.Collections.Generic.List<Microsoft.Azure.Batch.FileStaging.IFileStagingProvider>, Microsoft.Azure.Batch.IFileStagingArtifact)
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StageFilesAsync
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nSee <xref href=\"Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List%7bMicrosoft.Azure.Batch.FileStaging.IFileStagingProvider%7d%2cMicrosoft.Azure.Batch.IFileStagingArtifact)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task StageFilesAsync(List<IFileStagingProvider> filesToStage, IFileStagingArtifact fileStagingArtifact)
    content.vb: Public Function StageFilesAsync(filesToStage As List(Of IFileStagingProvider), fileStagingArtifact As IFileStagingArtifact) As Task
    parameters:
    - id: filesToStage
      type: System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider}
      description: The instances of IFileStagingProvider to stage.
    - id: fileStagingArtifact
      type: Microsoft.Azure.Batch.IFileStagingArtifact
      description: IFileStagingProvider specific staging artifacts including error/progress.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync*
  implements:
  - Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
  nameWithType.vb: FileToStage.StageFilesAsync(List(Of IFileStagingProvider), IFileStagingArtifact)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync(System.Collections.Generic.List(Of Microsoft.Azure.Batch.FileStaging.IFileStagingProvider), Microsoft.Azure.Batch.IFileStagingArtifact)
  name.vb: StageFilesAsync(List(Of IFileStagingProvider), IFileStagingArtifact)
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.CreateStagingArtifact
  commentId: M:Microsoft.Azure.Batch.FileStaging.FileToStage.CreateStagingArtifact
  id: CreateStagingArtifact
  parent: Microsoft.Azure.Batch.FileStaging.FileToStage
  langs:
  - csharp
  - vb
  name: CreateStagingArtifact()
  nameWithType: FileToStage.CreateStagingArtifact()
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.CreateStagingArtifact()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateStagingArtifact
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nSee <xref href=\"Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IFileStagingArtifact CreateStagingArtifact()
    content.vb: Public Function CreateStagingArtifact As IFileStagingArtifact
    return:
      type: Microsoft.Azure.Batch.IFileStagingArtifact
      description: An instance of IFileStagingArtifact with default values.
  overload: Microsoft.Azure.Batch.FileStaging.FileToStage.CreateStagingArtifact*
  implements:
  - Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.Validate
  commentId: M:Microsoft.Azure.Batch.FileStaging.FileToStage.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.FileStaging.FileToStage
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: FileToStage.Validate()
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/FileStaging/SequentialFileStaging.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.FileStaging
  summary: "\nSee <xref href=\"Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Validate()
    content.vb: Public Sub Validate
  overload: Microsoft.Azure.Batch.FileStaging.FileToStage.Validate*
  implements:
  - Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Batch.FileStaging
  commentId: N:Microsoft.Azure.Batch.FileStaging
  isExternal: false
  name: Microsoft.Azure.Batch.FileStaging
  nameWithType: Microsoft.Azure.Batch.FileStaging
  fullName: Microsoft.Azure.Batch.FileStaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  commentId: T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  parent: Microsoft.Azure.Batch.FileStaging
  isExternal: false
  name: IFileStagingProvider
  nameWithType: IFileStagingProvider
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.LocalFileToStage*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.FileToStage.LocalFileToStage
  isExternal: false
  name: LocalFileToStage
  nameWithType: FileToStage.LocalFileToStage
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.LocalFileToStage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.NodeFileName*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.FileToStage.NodeFileName
  isExternal: false
  name: NodeFileName
  nameWithType: FileToStage.NodeFileName
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.NodeFileName
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.StagedFiles*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.FileToStage.StagedFiles
  isExternal: false
  name: StagedFiles
  nameWithType: FileToStage.StagedFiles
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.StagedFiles
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles
  commentId: P:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles
  parent: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  isExternal: false
  name: StagedFiles
  nameWithType: IFileStagingProvider.StagedFiles
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ResourceFile}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ResourceFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ResourceFile>
  nameWithType: IEnumerable<ResourceFile>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Batch.ResourceFile>
  nameWithType.vb: IEnumerable(Of ResourceFile)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Batch.ResourceFile)
  name.vb: IEnumerable(Of ResourceFile)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.ResourceFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.ResourceFile
    name: ResourceFile
    nameWithType: ResourceFile
    fullName: Microsoft.Azure.Batch.ResourceFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.Exception*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.FileToStage.Exception
  isExternal: false
  name: Exception
  nameWithType: FileToStage.Exception
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.Exception
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.FileToStage.#ctor
  isExternal: false
  name: FileToStage
  nameWithType: FileToStage.FileToStage
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.FileToStage
- uid: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount
  commentId: T:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount
  parent: Microsoft.Azure.Batch.FileStaging
  isExternal: false
  name: StagingStorageAccount
  nameWithType: StagingStorageAccount
  fullName: Microsoft.Azure.Batch.FileStaging.StagingStorageAccount
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
  commentId: M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
  parent: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  isExternal: true
  name: StageFilesAsync(List<IFileStagingProvider>, IFileStagingArtifact)
  nameWithType: IFileStagingProvider.StageFilesAsync(List<IFileStagingProvider>, IFileStagingArtifact)
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List<Microsoft.Azure.Batch.FileStaging.IFileStagingProvider>, Microsoft.Azure.Batch.IFileStagingArtifact)
  nameWithType.vb: IFileStagingProvider.StageFilesAsync(List(Of IFileStagingProvider), IFileStagingArtifact)
  fullname.vb: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List(Of Microsoft.Azure.Batch.FileStaging.IFileStagingProvider), Microsoft.Azure.Batch.IFileStagingArtifact)
  name.vb: StageFilesAsync(List(Of IFileStagingProvider), IFileStagingArtifact)
  spec.csharp:
  - uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
    name: StageFilesAsync
    nameWithType: IFileStagingProvider.StageFilesAsync
    fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
    name: IFileStagingProvider
    nameWithType: IFileStagingProvider
    fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Batch.IFileStagingArtifact
    name: IFileStagingArtifact
    nameWithType: IFileStagingArtifact
    fullName: Microsoft.Azure.Batch.IFileStagingArtifact
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)
    name: StageFilesAsync
    nameWithType: IFileStagingProvider.StageFilesAsync
    fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
    name: IFileStagingProvider
    nameWithType: IFileStagingProvider
    fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Batch.IFileStagingArtifact
    name: IFileStagingArtifact
    nameWithType: IFileStagingArtifact
    fullName: Microsoft.Azure.Batch.IFileStagingArtifact
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync
  isExternal: false
  name: StageFilesAsync
  nameWithType: FileToStage.StageFilesAsync
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync
- uid: System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider}
  commentId: T:System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IFileStagingProvider>
  nameWithType: List<IFileStagingProvider>
  fullName: System.Collections.Generic.List<Microsoft.Azure.Batch.FileStaging.IFileStagingProvider>
  nameWithType.vb: List(Of IFileStagingProvider)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.Azure.Batch.FileStaging.IFileStagingProvider)
  name.vb: List(Of IFileStagingProvider)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
    name: IFileStagingProvider
    nameWithType: IFileStagingProvider
    fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
    name: IFileStagingProvider
    nameWithType: IFileStagingProvider
    fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.IFileStagingArtifact
  commentId: T:Microsoft.Azure.Batch.IFileStagingArtifact
  parent: Microsoft.Azure.Batch
  isExternal: false
  name: IFileStagingArtifact
  nameWithType: IFileStagingArtifact
  fullName: Microsoft.Azure.Batch.IFileStagingArtifact
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch
  commentId: N:Microsoft.Azure.Batch
  isExternal: false
  name: Microsoft.Azure.Batch
  nameWithType: Microsoft.Azure.Batch
  fullName: Microsoft.Azure.Batch
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact
  commentId: M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact
  parent: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  isExternal: false
  name: CreateStagingArtifact()
  nameWithType: IFileStagingProvider.CreateStagingArtifact()
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact()
  spec.csharp:
  - uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact
    name: CreateStagingArtifact
    nameWithType: IFileStagingProvider.CreateStagingArtifact
    fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact
    name: CreateStagingArtifact
    nameWithType: IFileStagingProvider.CreateStagingArtifact
    fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.CreateStagingArtifact*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.FileToStage.CreateStagingArtifact
  isExternal: false
  name: CreateStagingArtifact
  nameWithType: FileToStage.CreateStagingArtifact
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.CreateStagingArtifact
- uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate
  commentId: M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate
  parent: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider
  isExternal: false
  name: Validate()
  nameWithType: IFileStagingProvider.Validate()
  fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate
    name: Validate
    nameWithType: IFileStagingProvider.Validate
    fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate
    name: Validate
    nameWithType: IFileStagingProvider.Validate
    fullName: Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.FileStaging.FileToStage.Validate*
  commentId: Overload:Microsoft.Azure.Batch.FileStaging.FileToStage.Validate
  isExternal: false
  name: Validate
  nameWithType: FileToStage.Validate
  fullName: Microsoft.Azure.Batch.FileStaging.FileToStage.Validate
