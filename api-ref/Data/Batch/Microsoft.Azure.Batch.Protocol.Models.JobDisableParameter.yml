### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter
  id: JobDisableParameter
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.DisableJobOption)
  - Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.DisableTasks
  - Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.Validate
  langs:
  - csharp
  - vb
  name: JobDisableParameter
  nameWithType: JobDisableParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobDisableParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: JobDisableParameter
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobDisableParameter.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nParameters for a CloudJobOperations.Disable request.\n"
  example: []
  syntax:
    content: public class JobDisableParameter
    content.vb: Public Class JobDisableParameter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter
  langs:
  - csharp
  - vb
  name: JobDisableParameter()
  nameWithType: JobDisableParameter.JobDisableParameter()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.JobDisableParameter()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobDisableParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobDisableParameter.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobDisableParameter class.\n"
  example: []
  syntax:
    content: public JobDisableParameter()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.DisableJobOption)
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.DisableJobOption)
  id: '#ctor(Microsoft.Azure.Batch.Protocol.Models.DisableJobOption)'
  parent: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter
  langs:
  - csharp
  - vb
  name: JobDisableParameter(DisableJobOption)
  nameWithType: JobDisableParameter.JobDisableParameter(DisableJobOption)
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.JobDisableParameter(Microsoft.Azure.Batch.Protocol.Models.DisableJobOption)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobDisableParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobDisableParameter.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the JobDisableParameter class.\n"
  example: []
  syntax:
    content: public JobDisableParameter(DisableJobOption disableTasks)
    content.vb: Public Sub New(disableTasks As DisableJobOption)
    parameters:
    - id: disableTasks
      type: Microsoft.Azure.Batch.Protocol.Models.DisableJobOption
      description: >-
        What to do with active tasks associated

        with the job.
  overload: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.DisableTasks
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.DisableTasks
  id: DisableTasks
  parent: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter
  langs:
  - csharp
  - vb
  name: DisableTasks
  nameWithType: JobDisableParameter.DisableTasks
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.DisableTasks
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobDisableParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisableTasks
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobDisableParameter.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets what to do with active tasks associated with the job.\n"
  remarks: "\nPossible values include: 'requeue', 'terminate', 'wait'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "disableTasks")]

      public DisableJobOption DisableTasks { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="disableTasks")>

      Public Property DisableTasks As DisableJobOption
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.DisableJobOption
  overload: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.DisableTasks*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: disableTasks
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: JobDisableParameter.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/JobDisableParameter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/JobDisableParameter.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor
  isExternal: false
  name: JobDisableParameter
  nameWithType: JobDisableParameter.JobDisableParameter
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.JobDisableParameter
- uid: Microsoft.Azure.Batch.Protocol.Models.DisableJobOption
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.DisableJobOption
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: DisableJobOption
  nameWithType: DisableJobOption
  fullName: Microsoft.Azure.Batch.Protocol.Models.DisableJobOption
- uid: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.DisableTasks*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.DisableTasks
  isExternal: false
  name: DisableTasks
  nameWithType: JobDisableParameter.DisableTasks
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.DisableTasks
- uid: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.Validate
  isExternal: false
  name: Validate
  nameWithType: JobDisableParameter.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.Validate
