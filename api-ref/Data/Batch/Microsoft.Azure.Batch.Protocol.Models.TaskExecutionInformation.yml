### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  id: TaskExecutionInformation
  parent: Microsoft.Azure.Batch.Protocol.Models
  children:
  - Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor
  - Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor(System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.EndTime
  - Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.ExitCode
  - Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRequeueTime
  - Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRetryTime
  - Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RequeueCount
  - Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RetryCount
  - Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.SchedulingError
  - Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.StartTime
  - Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.Validate
  langs:
  - csharp
  - vb
  name: TaskExecutionInformation
  nameWithType: TaskExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  type: Class
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TaskExecutionInformation
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInformation about the execution of a task.\n"
  example: []
  syntax:
    content: public class TaskExecutionInformation
    content.vb: Public Class TaskExecutionInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: TaskExecutionInformation()
  nameWithType: TaskExecutionInformation.TaskExecutionInformation()
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.TaskExecutionInformation()
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the TaskExecutionInformation class.\n"
  example: []
  syntax:
    content: public TaskExecutionInformation()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor(System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor(System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: '#ctor(System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError,System.Nullable{System.DateTime},System.Nullable{System.DateTime})'
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: TaskExecutionInformation(Int32, Int32, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int32>, TaskSchedulingError, Nullable<DateTime>, Nullable<DateTime>)
  nameWithType: TaskExecutionInformation.TaskExecutionInformation(Int32, Int32, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int32>, TaskSchedulingError, Nullable<DateTime>, Nullable<DateTime>)
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.TaskExecutionInformation(System.Int32, System.Int32, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Nullable<System.Int32>, Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>)
  type: Constructor
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nInitializes a new instance of the TaskExecutionInformation class.\n"
  example: []
  syntax:
    content: public TaskExecutionInformation(int retryCount, int requeueCount, DateTime? startTime = null, DateTime? endTime = null, int ? exitCode = null, TaskSchedulingError schedulingError = null, DateTime? lastRetryTime = null, DateTime? lastRequeueTime = null)
    content.vb: Public Sub New(retryCount As Integer, requeueCount As Integer, startTime As Date? = Nothing, endTime As Date? = Nothing, exitCode As Integer? = Nothing, schedulingError As TaskSchedulingError = Nothing, lastRetryTime As Date? = Nothing, lastRequeueTime As Date? = Nothing)
    parameters:
    - id: retryCount
      type: System.Int32
      description: >-
        The number of times the task has been

        retried by the Batch service.
    - id: requeueCount
      type: System.Int32
      description: >-
        The number of times the task has been

        requeued by the Batch service as the result of a user

        request.
    - id: startTime
      type: System.Nullable{System.DateTime}
      description: >-
        The time at which the task started

        running.
    - id: endTime
      type: System.Nullable{System.DateTime}
      description: The time at which the task completed.
    - id: exitCode
      type: System.Nullable{System.Int32}
      description: >-
        The exit code of the program specified on

        the task command line.
    - id: schedulingError
      type: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
      description: >-
        Details of any error encountered

        scheduling the task.
    - id: lastRetryTime
      type: System.Nullable{System.DateTime}
      description: >-
        The most recent time at which a retry

        of the task started running.
    - id: lastRequeueTime
      type: System.Nullable{System.DateTime}
      description: >-
        The most recent time at which the

        task has been requeued by the Batch service as the result of a

        user request.
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor*
  nameWithType.vb: TaskExecutionInformation.TaskExecutionInformation(Int32, Int32, Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of Int32), TaskSchedulingError, Nullable(Of DateTime), Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.TaskExecutionInformation(System.Int32, System.Int32, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Nullable(Of System.Int32), Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime))
  name.vb: TaskExecutionInformation(Int32, Int32, Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of Int32), TaskSchedulingError, Nullable(Of DateTime), Nullable(Of DateTime))
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.StartTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.StartTime
  id: StartTime
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: TaskExecutionInformation.StartTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.StartTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the task started running.\n"
  remarks: "\nIf the task has been restarted or retried, this is the most recent\ntime at which the task started running.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startTime")]

      public DateTime? StartTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="startTime")>

      Public Property StartTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.StartTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.EndTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.EndTime
  id: EndTime
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: TaskExecutionInformation.EndTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.EndTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the time at which the task completed.\n"
  remarks: "\nThis property is set only if the task is in the Completed state.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "endTime")]

      public DateTime? EndTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="endTime")>

      Public Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.EndTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: endTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.ExitCode
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.ExitCode
  id: ExitCode
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: ExitCode
  nameWithType: TaskExecutionInformation.ExitCode
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.ExitCode
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExitCode
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the exit code of the program specified on the task\ncommand line.\n"
  remarks: "\nThis parameter is returned only if the task is in the completed\nstate. The exit code for a process reflects the specific\nconvention implemented by the application developer for that\nprocess. If you use the exit code value to make decisions in your\ncode, be sure that you know the exit code convention used by the\napplication process. Note that the exit code may also be\ngenerated by the compute node operating system, such as when a\nprocess is forcibly terminated.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "exitCode")]

      public int ? ExitCode { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="exitCode")>

      Public Property ExitCode As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.ExitCode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: exitCode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.SchedulingError
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.SchedulingError
  id: SchedulingError
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: SchedulingError
  nameWithType: TaskExecutionInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.SchedulingError
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SchedulingError
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets details of any error encountered scheduling the task.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "schedulingError")]

      public TaskSchedulingError SchedulingError { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="schedulingError")>

      Public Property SchedulingError As TaskSchedulingError
    parameters: []
    return:
      type: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.SchedulingError*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: schedulingError
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RetryCount
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RetryCount
  id: RetryCount
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: RetryCount
  nameWithType: TaskExecutionInformation.RetryCount
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RetryCount
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RetryCount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
    startLine: 110
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the number of times the task has been retried by the\nBatch service.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "retryCount")]

      public int RetryCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="retryCount")>

      Public Property RetryCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RetryCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: retryCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRetryTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRetryTime
  id: LastRetryTime
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: LastRetryTime
  nameWithType: TaskExecutionInformation.LastRetryTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRetryTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastRetryTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
    startLine: 117
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the most recent time at which a retry of the task\nstarted running.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lastRetryTime")]

      public DateTime? LastRetryTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="lastRetryTime")>

      Public Property LastRetryTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRetryTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lastRetryTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RequeueCount
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RequeueCount
  id: RequeueCount
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: RequeueCount
  nameWithType: TaskExecutionInformation.RequeueCount
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RequeueCount
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RequeueCount
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
    startLine: 124
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the number of times the task has been requeued by the\nBatch service as the result of a user request.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "requeueCount")]

      public int RequeueCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="requeueCount")>

      Public Property RequeueCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RequeueCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: requeueCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRequeueTime
  commentId: P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRequeueTime
  id: LastRequeueTime
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: LastRequeueTime
  nameWithType: TaskExecutionInformation.LastRequeueTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRequeueTime
  type: Property
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastRequeueTime
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
    startLine: 131
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nGets or sets the most recent time at which the task has been\nrequeued by the Batch service as the result of a user request.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lastRequeueTime")]

      public DateTime? LastRequeueTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="lastRequeueTime")>

      Public Property LastRequeueTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRequeueTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lastRequeueTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.Validate
  commentId: M:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.Validate
  id: Validate
  parent: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: TaskExecutionInformation.Validate()
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.Validate()
  type: Method
  source:
    remote:
      path: src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Batch/Client/Src/GeneratedProtocol/Models/TaskExecutionInformation.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Batch
  namespace: Microsoft.Azure.Batch.Protocol.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Batch.Protocol.Models
  commentId: N:Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: Microsoft.Azure.Batch.Protocol.Models
  nameWithType: Microsoft.Azure.Batch.Protocol.Models
  fullName: Microsoft.Azure.Batch.Protocol.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor
  isExternal: false
  name: TaskExecutionInformation
  nameWithType: TaskExecutionInformation.TaskExecutionInformation
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.TaskExecutionInformation
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
  commentId: T:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
  parent: Microsoft.Azure.Batch.Protocol.Models
  isExternal: false
  name: TaskSchedulingError
  nameWithType: TaskSchedulingError
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.StartTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.StartTime
  isExternal: false
  name: StartTime
  nameWithType: TaskExecutionInformation.StartTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.StartTime
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.EndTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.EndTime
  isExternal: false
  name: EndTime
  nameWithType: TaskExecutionInformation.EndTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.EndTime
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.ExitCode*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.ExitCode
  isExternal: false
  name: ExitCode
  nameWithType: TaskExecutionInformation.ExitCode
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.ExitCode
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.SchedulingError*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.SchedulingError
  isExternal: false
  name: SchedulingError
  nameWithType: TaskExecutionInformation.SchedulingError
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.SchedulingError
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RetryCount*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RetryCount
  isExternal: false
  name: RetryCount
  nameWithType: TaskExecutionInformation.RetryCount
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RetryCount
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRetryTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRetryTime
  isExternal: false
  name: LastRetryTime
  nameWithType: TaskExecutionInformation.LastRetryTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRetryTime
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RequeueCount*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RequeueCount
  isExternal: false
  name: RequeueCount
  nameWithType: TaskExecutionInformation.RequeueCount
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RequeueCount
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRequeueTime*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRequeueTime
  isExternal: false
  name: LastRequeueTime
  nameWithType: TaskExecutionInformation.LastRequeueTime
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRequeueTime
- uid: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.Validate*
  commentId: Overload:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.Validate
  isExternal: false
  name: Validate
  nameWithType: TaskExecutionInformation.Validate
  fullName: Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.Validate
