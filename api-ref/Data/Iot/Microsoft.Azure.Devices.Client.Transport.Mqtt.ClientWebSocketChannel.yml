### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  commentId: T:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  id: ClientWebSocketChannel
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt
  children:
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.#ctor(IChannel,System.Net.WebSockets.ClientWebSocket)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Active
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Configuration
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBeginRead
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBind(System.Net.EndPoint)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoClose
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoDisconnect
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoWrite(ChannelOutboundBuffer)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.IsCompatible(IEventLoop)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.LocalAddressInternal
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Metadata
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.NewUnsafe
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Open
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Option``1(ChannelOption{``0},``0)
  - Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.RemoteAddressInternal
  langs:
  - csharp
  - vb
  name: ClientWebSocketChannel
  nameWithType: ClientWebSocketChannel
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  type: Class
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ClientWebSocketChannel
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: 'public class ClientWebSocketChannel : AbstractChannel'
    content.vb: >-
      Public Class ClientWebSocketChannel
          Inherits AbstractChannel
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.#ctor(IChannel,System.Net.WebSockets.ClientWebSocket)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.#ctor(IChannel,System.Net.WebSockets.ClientWebSocket)
  id: '#ctor(IChannel,System.Net.WebSockets.ClientWebSocket)'
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: ClientWebSocketChannel(IChannel, ClientWebSocket)
  nameWithType: ClientWebSocketChannel.ClientWebSocketChannel(IChannel, ClientWebSocket)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.ClientWebSocketChannel(IChannel, System.Net.WebSockets.ClientWebSocket)
  type: Constructor
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public ClientWebSocketChannel(IChannel parent, ClientWebSocket webSocket)
    content.vb: Public Sub New(parent As IChannel, webSocket As ClientWebSocket)
    parameters:
    - id: parent
      type: IChannel
    - id: webSocket
      type: System.Net.WebSockets.ClientWebSocket
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Configuration
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Configuration
  id: Configuration
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: ClientWebSocketChannel.Configuration
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Configuration
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Configuration
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public override IChannelConfiguration Configuration { get; }
    content.vb: Public Overrides ReadOnly Property Configuration As IChannelConfiguration
    parameters: []
    return:
      type: IChannelConfiguration
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Configuration*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Open
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Open
  id: Open
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: Open
  nameWithType: ClientWebSocketChannel.Open
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Open
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Open
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public override bool Open { get; }
    content.vb: Public Overrides ReadOnly Property Open As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Open*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Active
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Active
  id: Active
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: ClientWebSocketChannel.Active
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Active
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Active
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public override bool Active { get; }
    content.vb: Public Overrides ReadOnly Property Active As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Active*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Metadata
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Metadata
  id: Metadata
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: ClientWebSocketChannel.Metadata
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Metadata
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Metadata
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public override ChannelMetadata Metadata { get; }
    content.vb: Public Overrides ReadOnly Property Metadata As ChannelMetadata
    parameters: []
    return:
      type: ChannelMetadata
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Metadata*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Option``1(ChannelOption{``0},``0)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Option``1(ChannelOption{``0},``0)
  id: Option``1(ChannelOption{``0},``0)
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: Option<T>(ChannelOption<T>, T)
  nameWithType: ClientWebSocketChannel.Option<T>(ChannelOption<T>, T)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Option<T>(ChannelOption<T>, T)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Option
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: public ClientWebSocketChannel Option<T>(ChannelOption<T> option, T value)
    content.vb: Public Function Option(Of T)(option As ChannelOption(Of T), value As T) As ClientWebSocketChannel
    parameters:
    - id: option
      type: ChannelOption{{T}}
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Option*
  nameWithType.vb: ClientWebSocketChannel.Option(Of T)(ChannelOption(Of T), T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Option(Of T)(ChannelOption(Of T), T)
  name.vb: Option(Of T)(ChannelOption(Of T), T)
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.LocalAddressInternal
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.LocalAddressInternal
  id: LocalAddressInternal
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: LocalAddressInternal
  nameWithType: ClientWebSocketChannel.LocalAddressInternal
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.LocalAddressInternal
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: LocalAddressInternal
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override EndPoint LocalAddressInternal { get; }
    content.vb: Protected Overrides ReadOnly Property LocalAddressInternal As EndPoint
    parameters: []
    return:
      type: System.Net.EndPoint
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.LocalAddressInternal*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.RemoteAddressInternal
  commentId: P:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.RemoteAddressInternal
  id: RemoteAddressInternal
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: RemoteAddressInternal
  nameWithType: ClientWebSocketChannel.RemoteAddressInternal
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.RemoteAddressInternal
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: RemoteAddressInternal
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override EndPoint RemoteAddressInternal { get; }
    content.vb: Protected Overrides ReadOnly Property RemoteAddressInternal As EndPoint
    parameters: []
    return:
      type: System.Net.EndPoint
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.RemoteAddressInternal*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.NewUnsafe
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.NewUnsafe
  id: NewUnsafe
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: NewUnsafe()
  nameWithType: ClientWebSocketChannel.NewUnsafe()
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.NewUnsafe()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: NewUnsafe
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override IChannelUnsafe NewUnsafe()
    content.vb: Protected Overrides Function NewUnsafe As IChannelUnsafe
    return:
      type: IChannelUnsafe
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.NewUnsafe*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.IsCompatible(IEventLoop)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.IsCompatible(IEventLoop)
  id: IsCompatible(IEventLoop)
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: IsCompatible(IEventLoop)
  nameWithType: ClientWebSocketChannel.IsCompatible(IEventLoop)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.IsCompatible(IEventLoop)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: IsCompatible
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 83
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override bool IsCompatible(IEventLoop eventLoop)
    content.vb: Protected Overrides Function IsCompatible(eventLoop As IEventLoop) As Boolean
    parameters:
    - id: eventLoop
      type: IEventLoop
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.IsCompatible*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBind(System.Net.EndPoint)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBind(System.Net.EndPoint)
  id: DoBind(System.Net.EndPoint)
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: DoBind(EndPoint)
  nameWithType: ClientWebSocketChannel.DoBind(EndPoint)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBind(System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DoBind
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override void DoBind(EndPoint localAddress)
    content.vb: Protected Overrides Sub DoBind(localAddress As EndPoint)
    parameters:
    - id: localAddress
      type: System.Net.EndPoint
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBind*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoDisconnect
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoDisconnect
  id: DoDisconnect
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: DoDisconnect()
  nameWithType: ClientWebSocketChannel.DoDisconnect()
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoDisconnect()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DoDisconnect
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override void DoDisconnect()
    content.vb: Protected Overrides Sub DoDisconnect
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoDisconnect*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoClose
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoClose
  id: DoClose
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: DoClose()
  nameWithType: ClientWebSocketChannel.DoClose()
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoClose()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DoClose
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override void DoClose()
    content.vb: Protected Overrides Sub DoClose
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoClose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBeginRead
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBeginRead
  id: DoBeginRead
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: DoBeginRead()
  nameWithType: ClientWebSocketChannel.DoBeginRead()
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBeginRead()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DoBeginRead
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 118
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override void DoBeginRead()
    content.vb: Protected Overrides Sub DoBeginRead
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBeginRead*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoWrite(ChannelOutboundBuffer)
  commentId: M:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoWrite(ChannelOutboundBuffer)
  id: DoWrite(ChannelOutboundBuffer)
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  langs:
  - csharp
  - vb
  name: DoWrite(ChannelOutboundBuffer)
  nameWithType: ClientWebSocketChannel.DoWrite(ChannelOutboundBuffer)
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoWrite(ChannelOutboundBuffer)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DoWrite
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Transport/Mqtt/ClientWebSocketChannel.cs
    startLine: 176
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Transport.Mqtt
  syntax:
    content: protected override void DoWrite(ChannelOutboundBuffer channelOutboundBuffer)
    content.vb: Protected Overrides Sub DoWrite(channelOutboundBuffer As ChannelOutboundBuffer)
    parameters:
    - id: channelOutboundBuffer
      type: ChannelOutboundBuffer
  overload: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoWrite*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt
  commentId: N:Microsoft.Azure.Devices.Client.Transport.Mqtt
  isExternal: false
  name: Microsoft.Azure.Devices.Client.Transport.Mqtt
  nameWithType: Microsoft.Azure.Devices.Client.Transport.Mqtt
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.#ctor*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.#ctor
  isExternal: false
  name: ClientWebSocketChannel
  nameWithType: ClientWebSocketChannel.ClientWebSocketChannel
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.ClientWebSocketChannel
- uid: IChannel
  commentId: '!:IChannel'
  isExternal: true
  name: IChannel
  nameWithType: IChannel
  fullName: IChannel
- uid: System.Net.WebSockets.ClientWebSocket
  commentId: T:System.Net.WebSockets.ClientWebSocket
  parent: System.Net.WebSockets
  isExternal: true
  name: ClientWebSocket
  nameWithType: ClientWebSocket
  fullName: System.Net.WebSockets.ClientWebSocket
- uid: System.Net.WebSockets
  commentId: N:System.Net.WebSockets
  isExternal: false
  name: System.Net.WebSockets
  nameWithType: System.Net.WebSockets
  fullName: System.Net.WebSockets
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Configuration*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Configuration
  isExternal: false
  name: Configuration
  nameWithType: ClientWebSocketChannel.Configuration
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Configuration
- uid: IChannelConfiguration
  commentId: '!:IChannelConfiguration'
  isExternal: true
  name: IChannelConfiguration
  nameWithType: IChannelConfiguration
  fullName: IChannelConfiguration
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Open*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Open
  isExternal: false
  name: Open
  nameWithType: ClientWebSocketChannel.Open
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Open
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Active*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Active
  isExternal: false
  name: Active
  nameWithType: ClientWebSocketChannel.Active
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Active
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Metadata*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Metadata
  isExternal: false
  name: Metadata
  nameWithType: ClientWebSocketChannel.Metadata
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Metadata
- uid: ChannelMetadata
  commentId: '!:ChannelMetadata'
  isExternal: true
  name: ChannelMetadata
  nameWithType: ChannelMetadata
  fullName: ChannelMetadata
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Option*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Option
  isExternal: false
  name: Option<T>
  nameWithType: ClientWebSocketChannel.Option<T>
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Option<T>
  nameWithType.vb: ClientWebSocketChannel.Option(Of T)
  fullname.vb: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.Option(Of T)
  name.vb: Option(Of T)
- uid: ChannelOption{{T}}
  commentId: '!:ChannelOption{``0}'
  definition: ChannelOption`1
  name: ChannelOption<T>
  nameWithType: ChannelOption<T>
  fullName: ChannelOption<T>
  nameWithType.vb: ChannelOption(Of T)
  fullname.vb: ChannelOption(Of T)
  name.vb: ChannelOption(Of T)
  spec.csharp:
  - uid: ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: ChannelOption
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: ChannelOption
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  commentId: T:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
  parent: Microsoft.Azure.Devices.Client.Transport.Mqtt
  isExternal: false
  name: ClientWebSocketChannel
  nameWithType: ClientWebSocketChannel
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel
- uid: ChannelOption`1
  isExternal: true
  name: ChannelOption<>
  nameWithType: ChannelOption<>
  fullName: ChannelOption<>
  nameWithType.vb: ChannelOption(Of )
  fullname.vb: ChannelOption(Of )
  name.vb: ChannelOption(Of )
  spec.csharp:
  - uid: ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: ChannelOption
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ChannelOption`1
    name: ChannelOption
    nameWithType: ChannelOption
    fullName: ChannelOption
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.LocalAddressInternal*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.LocalAddressInternal
  isExternal: false
  name: LocalAddressInternal
  nameWithType: ClientWebSocketChannel.LocalAddressInternal
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.LocalAddressInternal
- uid: System.Net.EndPoint
  commentId: T:System.Net.EndPoint
  parent: System.Net
  isExternal: true
  name: EndPoint
  nameWithType: EndPoint
  fullName: System.Net.EndPoint
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.RemoteAddressInternal*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.RemoteAddressInternal
  isExternal: false
  name: RemoteAddressInternal
  nameWithType: ClientWebSocketChannel.RemoteAddressInternal
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.RemoteAddressInternal
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.NewUnsafe*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.NewUnsafe
  isExternal: false
  name: NewUnsafe
  nameWithType: ClientWebSocketChannel.NewUnsafe
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.NewUnsafe
- uid: IChannelUnsafe
  commentId: '!:IChannelUnsafe'
  isExternal: true
  name: IChannelUnsafe
  nameWithType: IChannelUnsafe
  fullName: IChannelUnsafe
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.IsCompatible*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.IsCompatible
  isExternal: false
  name: IsCompatible
  nameWithType: ClientWebSocketChannel.IsCompatible
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.IsCompatible
- uid: IEventLoop
  commentId: '!:IEventLoop'
  isExternal: true
  name: IEventLoop
  nameWithType: IEventLoop
  fullName: IEventLoop
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBind*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBind
  isExternal: false
  name: DoBind
  nameWithType: ClientWebSocketChannel.DoBind
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBind
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoDisconnect*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoDisconnect
  isExternal: false
  name: DoDisconnect
  nameWithType: ClientWebSocketChannel.DoDisconnect
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoDisconnect
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoClose*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoClose
  isExternal: false
  name: DoClose
  nameWithType: ClientWebSocketChannel.DoClose
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoClose
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBeginRead*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBeginRead
  isExternal: false
  name: DoBeginRead
  nameWithType: ClientWebSocketChannel.DoBeginRead
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoBeginRead
- uid: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoWrite*
  commentId: Overload:Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoWrite
  isExternal: false
  name: DoWrite
  nameWithType: ClientWebSocketChannel.DoWrite
  fullName: Microsoft.Azure.Devices.Client.Transport.Mqtt.ClientWebSocketChannel.DoWrite
- uid: ChannelOutboundBuffer
  commentId: '!:ChannelOutboundBuffer'
  isExternal: true
  name: ChannelOutboundBuffer
  nameWithType: ChannelOutboundBuffer
  fullName: ChannelOutboundBuffer
