### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer
  commentId: T:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer
  id: UrlEncodedDictionarySerializer
  parent: Microsoft.Azure.Devices.Client.Common
  children:
  - Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String,System.Int32)
  - Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String,System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.KeyValueSeparator
  - Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.NotAllowedCharacter
  - Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.PropertySeparator
  - Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.PropertySeparatorLength
  - Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Serialize(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  langs:
  - csharp
  - vb
  name: UrlEncodedDictionarySerializer
  nameWithType: UrlEncodedDictionarySerializer
  fullName: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer
  type: Class
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: UrlEncodedDictionarySerializer
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Common
  syntax:
    content: public class UrlEncodedDictionarySerializer
    content.vb: Public Class UrlEncodedDictionarySerializer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.KeyValueSeparator
  commentId: F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.KeyValueSeparator
  id: KeyValueSeparator
  parent: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer
  langs:
  - csharp
  - vb
  name: KeyValueSeparator
  nameWithType: UrlEncodedDictionarySerializer.KeyValueSeparator
  fullName: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.KeyValueSeparator
  type: Field
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: KeyValueSeparator
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Common
  syntax:
    content: public const char KeyValueSeparator = '='
    content.vb: Public Const KeyValueSeparator As Char = "="c
    return:
      type: System.Char
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.PropertySeparator
  commentId: F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.PropertySeparator
  id: PropertySeparator
  parent: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer
  langs:
  - csharp
  - vb
  name: PropertySeparator
  nameWithType: UrlEncodedDictionarySerializer.PropertySeparator
  fullName: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.PropertySeparator
  type: Field
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: PropertySeparator
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Common
  syntax:
    content: public const char PropertySeparator = '&'
    content.vb: Public Const PropertySeparator As Char = "&"c
    return:
      type: System.Char
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.NotAllowedCharacter
  commentId: F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.NotAllowedCharacter
  id: NotAllowedCharacter
  parent: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer
  langs:
  - csharp
  - vb
  name: NotAllowedCharacter
  nameWithType: UrlEncodedDictionarySerializer.NotAllowedCharacter
  fullName: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.NotAllowedCharacter
  type: Field
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: NotAllowedCharacter
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Common
  syntax:
    content: public const char NotAllowedCharacter = '/'
    content.vb: Public Const NotAllowedCharacter As Char = "/"c
    return:
      type: System.Char
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.PropertySeparatorLength
  commentId: F:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.PropertySeparatorLength
  id: PropertySeparatorLength
  parent: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer
  langs:
  - csharp
  - vb
  name: PropertySeparatorLength
  nameWithType: UrlEncodedDictionarySerializer.PropertySeparatorLength
  fullName: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.PropertySeparatorLength
  type: Field
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: PropertySeparatorLength
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Common
  syntax:
    content: public const int PropertySeparatorLength = 1
    content.vb: Public Const PropertySeparatorLength As Integer = 1
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String,System.Int32)
  commentId: M:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String,System.Int32)
  id: Deserialize(System.String,System.Int32)
  parent: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer
  langs:
  - csharp
  - vb
  name: Deserialize(String, Int32)
  nameWithType: UrlEncodedDictionarySerializer.Deserialize(String, Int32)
  fullName: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Deserialize
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Common
  syntax:
    content: public static Dictionary<string, string> Deserialize(string value, int startIndex)
    content.vb: Public Shared Function Deserialize(value As String, startIndex As Integer) As Dictionary(Of String, String)
    parameters:
    - id: value
      type: System.String
    - id: startIndex
      type: System.Int32
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
  overload: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String,System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String,System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})
  id: Deserialize(System.String,System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer
  langs:
  - csharp
  - vb
  name: Deserialize(String, Int32, IDictionary<String, String>)
  nameWithType: UrlEncodedDictionarySerializer.Deserialize(String, Int32, IDictionary<String, String>)
  fullName: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String, System.Int32, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Deserialize
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Common
  syntax:
    content: public static void Deserialize(string value, int startIndex, IDictionary<string, string> properties)
    content.vb: Public Shared Sub Deserialize(value As String, startIndex As Integer, properties As IDictionary(Of String, String))
    parameters:
    - id: value
      type: System.String
    - id: startIndex
      type: System.Int32
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize*
  nameWithType.vb: UrlEncodedDictionarySerializer.Deserialize(String, Int32, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize(System.String, System.Int32, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: Deserialize(String, Int32, IDictionary(Of String, String))
- uid: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Serialize(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  commentId: M:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Serialize(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: Serialize(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer
  langs:
  - csharp
  - vb
  name: Serialize(IEnumerable<KeyValuePair<String, String>>)
  nameWithType: UrlEncodedDictionarySerializer.Serialize(IEnumerable<KeyValuePair<String, String>>)
  fullName: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Serialize(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Serialize
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/Common/UrlEncodedDictionarySerializer.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Devices.Client
  namespace: Microsoft.Azure.Devices.Client.Common
  syntax:
    content: public static string Serialize(IEnumerable<KeyValuePair<string, string>> properties)
    content.vb: Public Shared Function Serialize(properties As IEnumerable(Of KeyValuePair(Of String, String))) As String
    parameters:
    - id: properties
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Serialize*
  nameWithType.vb: UrlEncodedDictionarySerializer.Serialize(IEnumerable(Of KeyValuePair(Of String, String)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Serialize(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  name.vb: Serialize(IEnumerable(Of KeyValuePair(Of String, String)))
references:
- uid: Microsoft.Azure.Devices.Client.Common
  commentId: N:Microsoft.Azure.Devices.Client.Common
  isExternal: false
  name: Microsoft.Azure.Devices.Client.Common
  nameWithType: Microsoft.Azure.Devices.Client.Common
  fullName: Microsoft.Azure.Devices.Client.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize*
  commentId: Overload:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize
  isExternal: false
  name: Deserialize
  nameWithType: UrlEncodedDictionarySerializer.Deserialize
  fullName: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Deserialize
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Serialize*
  commentId: Overload:Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Serialize
  isExternal: false
  name: Serialize
  nameWithType: UrlEncodedDictionarySerializer.Serialize
  fullName: Microsoft.Azure.Devices.Client.Common.UrlEncodedDictionarySerializer.Serialize
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
