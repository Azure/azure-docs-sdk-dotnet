### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2
  commentId: T:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2
  id: ReadOnlyDictionary45`2
  parent: Microsoft.Azure.Devices.Common
  children:
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.#ctor(IDictionary{`0,`1})
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ContainsKey(`0)
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Count
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Dictionary
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.GetEnumerator
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Item(`0)
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Keys
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.TryGetValue(`0,`1@)
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Values
  langs:
  - csharp
  - vb
  name: ReadOnlyDictionary45<TKey, TValue>
  nameWithType: ReadOnlyDictionary45<TKey, TValue>
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>
  type: Class
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ReadOnlyDictionary45
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: 'public sealed class ReadOnlyDictionary45<TKey, TValue> : IDictionary<TKey, TValue>, IDictionary'
    content.vb: >-
      Public NotInheritable Class ReadOnlyDictionary45(Of TKey, TValue)
          Inherits IDictionary(Of TKey, TValue)
          Implements IDictionary
    typeParameters:
    - id: TKey
    - id: TValue
  inheritance:
  - System.Object
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue)
  name.vb: ReadOnlyDictionary45(Of TKey, TValue)
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.#ctor(IDictionary{`0,`1})
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.#ctor(IDictionary{`0,`1})
  id: '#ctor(IDictionary{`0,`1})'
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ReadOnlyDictionary45(IDictionary<TKey, TValue>)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ReadOnlyDictionary45(IDictionary<TKey, TValue>)
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.ReadOnlyDictionary45(IDictionary<TKey, TValue>)
  type: Constructor
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: .ctor
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public ReadOnlyDictionary45(IDictionary<TKey, TValue> dictionary)
    content.vb: Public Sub New(dictionary As IDictionary(Of TKey, TValue))
    parameters:
    - id: dictionary
      type: IDictionary{{TKey},{TValue}}
  overload: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.#ctor*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ReadOnlyDictionary45(IDictionary(Of TKey, TValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).ReadOnlyDictionary45(IDictionary(Of TKey, TValue))
  name.vb: ReadOnlyDictionary45(IDictionary(Of TKey, TValue))
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Dictionary
  commentId: P:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Dictionary
  id: Dictionary
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: Dictionary
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Dictionary
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.Dictionary
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Dictionary
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: protected IDictionary<TKey, TValue> Dictionary { get; }
    content.vb: Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TValue)
    parameters: []
    return:
      type: IDictionary{{TKey},{TValue}}
  overload: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Dictionary*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Dictionary
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).Dictionary
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Keys
  commentId: P:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Keys
  id: Keys
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Keys
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.Keys
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Keys
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public ReadOnlyDictionary45<TKey, TValue>.KeyCollection Keys { get; }
    content.vb: Public ReadOnly Property Keys As ReadOnlyDictionary45(Of TKey, TValue).KeyCollection
    parameters: []
    return:
      type: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  overload: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Keys*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Keys
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).Keys
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Values
  commentId: P:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Values
  id: Values
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Values
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.Values
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Values
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public ReadOnlyDictionary45<TKey, TValue>.ValueCollection Values { get; }
    content.vb: Public ReadOnly Property Values As ReadOnlyDictionary45(Of TKey, TValue).ValueCollection
    parameters: []
    return:
      type: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection
  overload: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Values*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Values
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).Values
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ContainsKey(`0)
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: ContainsKey(TKey)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ContainsKey(TKey)
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.ContainsKey(TKey)
  type: Method
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ContainsKey
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public bool ContainsKey(TKey key)
    content.vb: Public Function ContainsKey(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ContainsKey*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ContainsKey(TKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).ContainsKey(TKey)
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.TryGetValue(`0,`1@)
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey, out TValue)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: TryGetValue
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public bool TryGetValue(TKey key, out TValue value)
    content.vb: Public Function TryGetValue(key As TKey, ByRef value As TValue) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.TryGetValue*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
  name.vb: TryGetValue(TKey, ByRef TValue)
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Item(`0)
  commentId: P:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Item(`0)
  id: Item(`0)
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: Item[TKey]
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Item[TKey]
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.Item[TKey]
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: this[]
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 119
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public TValue this[TKey key] { get; }
    content.vb: Public ReadOnly Property Item(key As TKey) As TValue
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: '{TValue}'
  overload: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Item*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Item(TKey)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Count
  commentId: P:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Count
  id: Count
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Count
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.Count
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Count
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 168
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Count*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).Count
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.GetEnumerator
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.GetEnumerator()
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.GetEnumerator()
  type: Method
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: GetEnumerator
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 222
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of TKey, TValue))
    return:
      type: IEnumerator{KeyValuePair{{TKey},{TValue}}}
  overload: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.GetEnumerator*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).GetEnumerator()
references:
- uid: Microsoft.Azure.Devices.Common
  commentId: N:Microsoft.Azure.Devices.Common
  isExternal: false
  name: Microsoft.Azure.Devices.Common
  nameWithType: Microsoft.Azure.Devices.Common
  fullName: Microsoft.Azure.Devices.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.#ctor*
  commentId: Overload:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.#ctor
  isExternal: false
  name: ReadOnlyDictionary45
  nameWithType: ReadOnlyDictionary45.ReadOnlyDictionary45
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.ReadOnlyDictionary45
- uid: IDictionary{{TKey},{TValue}}
  commentId: '!:IDictionary{`0,`1}'
  definition: IDictionary`2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullname.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Dictionary*
  commentId: Overload:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Dictionary
  isExternal: false
  name: Dictionary
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Dictionary
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.Dictionary
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Dictionary
  fullname.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).Dictionary
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Keys*
  commentId: Overload:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Keys
  isExternal: false
  name: Keys
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Keys
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.Keys
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Keys
  fullname.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).Keys
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  commentId: T:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
  parent: Microsoft.Azure.Devices.Common
  isExternal: false
  name: ReadOnlyDictionary45.KeyCollection<>
  nameWithType: ReadOnlyDictionary45.KeyCollection<>
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.KeyCollection<>
  nameWithType.vb: ReadOnlyDictionary45.KeyCollection(Of )
  fullname.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.KeyCollection(Of )
  name.vb: ReadOnlyDictionary45.KeyCollection(Of )
  spec.csharp:
  - uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
    name: ReadOnlyDictionary45.KeyCollection
    nameWithType: ReadOnlyDictionary45.KeyCollection
    fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.KeyCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.KeyCollection
    name: ReadOnlyDictionary45.KeyCollection
    nameWithType: ReadOnlyDictionary45.KeyCollection
    fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.KeyCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Values*
  commentId: Overload:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Values
  isExternal: false
  name: Values
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Values
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.Values
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Values
  fullname.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).Values
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection
  commentId: T:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection
  parent: Microsoft.Azure.Devices.Common
  isExternal: false
  name: ReadOnlyDictionary45.ValueCollection<>
  nameWithType: ReadOnlyDictionary45.ValueCollection<>
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.ValueCollection<>
  nameWithType.vb: ReadOnlyDictionary45.ValueCollection(Of )
  fullname.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.ValueCollection(Of )
  name.vb: ReadOnlyDictionary45.ValueCollection(Of )
  spec.csharp:
  - uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection
    name: ReadOnlyDictionary45.ValueCollection
    nameWithType: ReadOnlyDictionary45.ValueCollection
    fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.ValueCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection
    name: ReadOnlyDictionary45.ValueCollection
    nameWithType: ReadOnlyDictionary45.ValueCollection
    fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.ValueCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ContainsKey*
  commentId: Overload:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ContainsKey
  isExternal: false
  name: ContainsKey
  nameWithType: ReadOnlyDictionary45.ContainsKey
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.ContainsKey
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TKey
  isExternal: false
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.TryGetValue*
  commentId: Overload:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.TryGetValue
  isExternal: false
  name: TryGetValue
  nameWithType: ReadOnlyDictionary45.TryGetValue
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.TryGetValue
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  isExternal: false
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Item*
  commentId: Overload:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Item
  isExternal: false
  name: Item
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Item
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.Item
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Item
  fullname.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).Item
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Count*
  commentId: Overload:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.Count
  isExternal: false
  name: Count
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.Count
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.Count
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).Count
  fullname.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.GetEnumerator*
  commentId: Overload:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: ReadOnlyDictionary45.GetEnumerator
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.GetEnumerator
- uid: IEnumerator{KeyValuePair{{TKey},{TValue}}}
  commentId: '!:IEnumerator{KeyValuePair{`0,`1}}'
  definition: IEnumerator`1
  name: IEnumerator<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerator<KeyValuePair<TKey, TValue>>
  fullName: IEnumerator<KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  fullname.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullname.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
