### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Client.DeviceClient
  commentId: T:Microsoft.Azure.Devices.Client.DeviceClient
  id: DeviceClient
  parent: Microsoft.Azure.Devices.Client
  children:
  - Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message)
  - Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(System.String)
  - Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync
  - Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message)
  - Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(System.String)
  - Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod)
  - Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ITransportSettings[])
  - Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType)
  - Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String)
  - Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.ITransportSettings[])
  - Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.TransportType)
  - Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String)
  - Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.ITransportSettings[])
  - Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.TransportType)
  - Microsoft.Azure.Devices.Client.DeviceClient.Dispose
  - Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync
  - Microsoft.Azure.Devices.Client.DeviceClient.OperationTimeoutInMilliseconds
  - Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync
  - Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync(System.TimeSpan)
  - Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(Microsoft.Azure.Devices.Client.Message)
  - Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(System.String)
  - Microsoft.Azure.Devices.Client.DeviceClient.RetryPolicy
  - Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message)
  - Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})
  - Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandler(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object)
  langs:
  - csharp
  - vb
  name: DeviceClient
  nameWithType: DeviceClient
  fullName: Microsoft.Azure.Devices.Client.DeviceClient
  type: Class
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DeviceClient
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nContains methods that a device can use to send messages to and receive from the service.\n"
  example: []
  syntax:
    content: 'public sealed class DeviceClient : IDisposable'
    content.vb: >-
      Public NotInheritable Class DeviceClient
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Devices.Client.DeviceClient.OperationTimeoutInMilliseconds
  commentId: P:Microsoft.Azure.Devices.Client.DeviceClient.OperationTimeoutInMilliseconds
  id: OperationTimeoutInMilliseconds
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: OperationTimeoutInMilliseconds
  nameWithType: DeviceClient.OperationTimeoutInMilliseconds
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.OperationTimeoutInMilliseconds
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: OperationTimeoutInMilliseconds
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nStores the timeout used in the operation retries.\n"
  example: []
  syntax:
    content: public uint OperationTimeoutInMilliseconds { get; set; }
    content.vb: Public Property OperationTimeoutInMilliseconds As UInteger
    parameters: []
    return:
      type: System.UInt32
  overload: Microsoft.Azure.Devices.Client.DeviceClient.OperationTimeoutInMilliseconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.RetryPolicy
  commentId: P:Microsoft.Azure.Devices.Client.DeviceClient.RetryPolicy
  id: RetryPolicy
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: RetryPolicy
  nameWithType: DeviceClient.RetryPolicy
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.RetryPolicy
  type: Property
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: RetryPolicy
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 126
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nStores the retry strategy used in the operation retries.\n"
  example: []
  syntax:
    content: public RetryPolicyType RetryPolicy { get; set; }
    content.vb: Public Property RetryPolicy As RetryPolicyType
    parameters: []
    return:
      type: Microsoft.Azure.Devices.Client.RetryPolicyType
  overload: Microsoft.Azure.Devices.Client.DeviceClient.RetryPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod)
  id: Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: Create(String, IAuthenticationMethod)
  nameWithType: DeviceClient.Create(String, IAuthenticationMethod)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String, Microsoft.Azure.Devices.Client.IAuthenticationMethod)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Create
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 220
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate an Amqp DeviceClient from individual parameters\n"
  example: []
  syntax:
    content: public static DeviceClient Create(string hostname, IAuthenticationMethod authenticationMethod)
    content.vb: Public Shared Function Create(hostname As String, authenticationMethod As IAuthenticationMethod) As DeviceClient
    parameters:
    - id: hostname
      type: System.String
      description: The fully-qualified DNS hostname of IoT Hub
    - id: authenticationMethod
      type: Microsoft.Azure.Devices.Client.IAuthenticationMethod
      description: The authentication method that is used
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  overload: Microsoft.Azure.Devices.Client.DeviceClient.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType)
  id: Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.TransportType)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: Create(String, IAuthenticationMethod, TransportType)
  nameWithType: DeviceClient.Create(String, IAuthenticationMethod, TransportType)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String, Microsoft.Azure.Devices.Client.IAuthenticationMethod, Microsoft.Azure.Devices.Client.TransportType)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Create
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 236
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate a DeviceClient from individual parameters\n"
  example: []
  syntax:
    content: public static DeviceClient Create(string hostname, IAuthenticationMethod authenticationMethod, TransportType transportType)
    content.vb: Public Shared Function Create(hostname As String, authenticationMethod As IAuthenticationMethod, transportType As TransportType) As DeviceClient
    parameters:
    - id: hostname
      type: System.String
      description: The fully-qualified DNS hostname of IoT Hub
    - id: authenticationMethod
      type: Microsoft.Azure.Devices.Client.IAuthenticationMethod
      description: The authentication method that is used
    - id: transportType
      type: Microsoft.Azure.Devices.Client.TransportType
      description: The transportType used (Http1 or Amqp)
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  overload: Microsoft.Azure.Devices.Client.DeviceClient.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ITransportSettings[])
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ITransportSettings[])
  id: Create(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.ITransportSettings[])
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: Create(String, IAuthenticationMethod, ITransportSettings[])
  nameWithType: DeviceClient.Create(String, IAuthenticationMethod, ITransportSettings[])
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String, Microsoft.Azure.Devices.Client.IAuthenticationMethod, Microsoft.Azure.Devices.Client.ITransportSettings[])
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Create
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 272
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate a DeviceClient from individual parameters\n"
  example: []
  syntax:
    content: public static DeviceClient Create(string hostname, IAuthenticationMethod authenticationMethod, [ReadOnlyArray] ITransportSettings[] transportSettings)
    content.vb: Public Shared Function Create(hostname As String, authenticationMethod As IAuthenticationMethod, transportSettings As ITransportSettings()) As DeviceClient
    parameters:
    - id: hostname
      type: System.String
      description: The fully-qualified DNS hostname of IoT Hub
    - id: authenticationMethod
      type: Microsoft.Azure.Devices.Client.IAuthenticationMethod
      description: The authentication method that is used
    - id: transportSettings
      type: Microsoft.Azure.Devices.Client.ITransportSettings[]
      description: Prioritized list of transportTypes and their settings
      attributes:
      - type: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
        ctor: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
        arguments: []
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  overload: Microsoft.Azure.Devices.Client.DeviceClient.Create*
  nameWithType.vb: DeviceClient.Create(String, IAuthenticationMethod, ITransportSettings())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.DeviceClient.Create(System.String, Microsoft.Azure.Devices.Client.IAuthenticationMethod, Microsoft.Azure.Devices.Client.ITransportSettings())
  name.vb: Create(String, IAuthenticationMethod, ITransportSettings())
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String)
  id: CreateFromConnectionString(System.String)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String)
  nameWithType: DeviceClient.CreateFromConnectionString(String)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CreateFromConnectionString
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 305
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate a DeviceClient using Amqp transport from the specified connection string\n"
  example: []
  syntax:
    content: public static DeviceClient CreateFromConnectionString(string connectionString)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String) As DeviceClient
    parameters:
    - id: connectionString
      type: System.String
      description: Connection string for the IoT hub (including DeviceId)
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  overload: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String)
  id: CreateFromConnectionString(System.String,System.String)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String, String)
  nameWithType: DeviceClient.CreateFromConnectionString(String, String)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String, System.String)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CreateFromConnectionString
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 321
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate a DeviceClient using Amqp transport from the specified connection string\n(WinRT) Create a DeviceClient using Http transport from the specified connection string\n"
  example: []
  syntax:
    content: public static DeviceClient CreateFromConnectionString(string connectionString, string deviceId)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String, deviceId As String) As DeviceClient
    parameters:
    - id: connectionString
      type: System.String
      description: IoT Hub-Scope Connection string for the IoT hub (without DeviceId)
    - id: deviceId
      type: System.String
      description: Id of the Device
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  overload: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.TransportType)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.TransportType)
  id: CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.TransportType)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String, TransportType)
  nameWithType: DeviceClient.CreateFromConnectionString(String, TransportType)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String, Microsoft.Azure.Devices.Client.TransportType)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CreateFromConnectionString
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 337
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate DeviceClient from the specified connection string using the specified transport type\n(PCL) Only Http transport is allowed\n"
  example: []
  syntax:
    content: public static DeviceClient CreateFromConnectionString(string connectionString, TransportType transportType)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String, transportType As TransportType) As DeviceClient
    parameters:
    - id: connectionString
      type: System.String
      description: Connection string for the IoT hub (including DeviceId)
    - id: transportType
      type: Microsoft.Azure.Devices.Client.TransportType
      description: Specifies whether Amqp or Http transport is used
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  overload: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.TransportType)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.TransportType)
  id: CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.TransportType)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String, String, TransportType)
  nameWithType: DeviceClient.CreateFromConnectionString(String, String, TransportType)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String, System.String, Microsoft.Azure.Devices.Client.TransportType)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CreateFromConnectionString
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 417
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate DeviceClient from the specified connection string using the specified transport type\n"
  example: []
  syntax:
    content: public static DeviceClient CreateFromConnectionString(string connectionString, string deviceId, TransportType transportType)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String, deviceId As String, transportType As TransportType) As DeviceClient
    parameters:
    - id: connectionString
      type: System.String
      description: IoT Hub-Scope Connection string for the IoT hub (without DeviceId)
    - id: deviceId
      type: System.String
      description: Id of the device
    - id: transportType
      type: Microsoft.Azure.Devices.Client.TransportType
      description: The transportType used (Http1 or Amqp)
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  overload: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.ITransportSettings[])
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.ITransportSettings[])
  id: CreateFromConnectionString(System.String,Microsoft.Azure.Devices.Client.ITransportSettings[])
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String, ITransportSettings[])
  nameWithType: DeviceClient.CreateFromConnectionString(String, ITransportSettings[])
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String, Microsoft.Azure.Devices.Client.ITransportSettings[])
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CreateFromConnectionString
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 445
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate DeviceClient from the specified connection string using a prioritized list of transports\n"
  example: []
  syntax:
    content: public static DeviceClient CreateFromConnectionString(string connectionString, [ReadOnlyArray] ITransportSettings[] transportSettings)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String, transportSettings As ITransportSettings()) As DeviceClient
    parameters:
    - id: connectionString
      type: System.String
      description: Connection string for the IoT hub (with DeviceId)
    - id: transportSettings
      type: Microsoft.Azure.Devices.Client.ITransportSettings[]
      description: Prioritized list of transports and their settings
      attributes:
      - type: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
        ctor: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
        arguments: []
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  overload: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString*
  nameWithType.vb: DeviceClient.CreateFromConnectionString(String, ITransportSettings())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String, Microsoft.Azure.Devices.Client.ITransportSettings())
  name.vb: CreateFromConnectionString(String, ITransportSettings())
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.ITransportSettings[])
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.ITransportSettings[])
  id: CreateFromConnectionString(System.String,System.String,Microsoft.Azure.Devices.Client.ITransportSettings[])
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CreateFromConnectionString(String, String, ITransportSettings[])
  nameWithType: DeviceClient.CreateFromConnectionString(String, String, ITransportSettings[])
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String, System.String, Microsoft.Azure.Devices.Client.ITransportSettings[])
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CreateFromConnectionString
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 520
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nCreate DeviceClient from the specified connection string using the prioritized list of transports\n"
  example: []
  syntax:
    content: public static DeviceClient CreateFromConnectionString(string connectionString, string deviceId, [ReadOnlyArray] ITransportSettings[] transportSettings)
    content.vb: Public Shared Function CreateFromConnectionString(connectionString As String, deviceId As String, transportSettings As ITransportSettings()) As DeviceClient
    parameters:
    - id: connectionString
      type: System.String
      description: Connection string for the IoT hub (without DeviceId)
    - id: deviceId
      type: System.String
      description: Id of the device
    - id: transportSettings
      type: Microsoft.Azure.Devices.Client.ITransportSettings[]
      description: Prioritized list of transportTypes and their settings
      attributes:
      - type: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
        ctor: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
        arguments: []
    return:
      type: Microsoft.Azure.Devices.Client.DeviceClient
      description: DeviceClient
  overload: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString*
  nameWithType.vb: DeviceClient.CreateFromConnectionString(String, String, ITransportSettings())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString(System.String, System.String, Microsoft.Azure.Devices.Client.ITransportSettings())
  name.vb: CreateFromConnectionString(String, String, ITransportSettings())
- uid: Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync
  id: OpenAsync
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: OpenAsync()
  nameWithType: DeviceClient.OpenAsync()
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: OpenAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 550
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nExplicitly open the DeviceClient instance.\n"
  example: []
  syntax:
    content: public Task OpenAsync()
    content.vb: Public Function OpenAsync As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync
  id: CloseAsync
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CloseAsync()
  nameWithType: DeviceClient.CloseAsync()
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CloseAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 560
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nClose the DeviceClient instance\n"
  example: []
  syntax:
    content: public Task CloseAsync()
    content.vb: Public Function CloseAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overload: Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync
  id: ReceiveAsync
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: ReceiveAsync()
  nameWithType: DeviceClient.ReceiveAsync()
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ReceiveAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 569
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nReceive a message from the device queue using the default timeout.\n"
  example: []
  syntax:
    content: public Task<Message> ReceiveAsync()
    content.vb: Public Function ReceiveAsync As Task(Of Message)
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Devices.Client.Message}
      description: The receive message or null if there was no message until the default timeout
  overload: Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync(System.TimeSpan)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync(System.TimeSpan)
  id: ReceiveAsync(System.TimeSpan)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: ReceiveAsync(TimeSpan)
  nameWithType: DeviceClient.ReceiveAsync(TimeSpan)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync(System.TimeSpan)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: ReceiveAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 579
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nReceive a message from the device queue with the specified timeout\n"
  example: []
  syntax:
    content: public Task<Message> ReceiveAsync(TimeSpan timeout)
    content.vb: Public Function ReceiveAsync(timeout As TimeSpan) As Task(Of Message)
    parameters:
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Devices.Client.Message}
      description: The receive message or null if there was no message until the specified time has elapsed
  overload: Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(System.String)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(System.String)
  id: CompleteAsync(System.String)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CompleteAsync(String)
  nameWithType: DeviceClient.CompleteAsync(String)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(System.String)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CompleteAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 589
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nDeletes a received message from the device queue\n"
  example: []
  syntax:
    content: public Task CompleteAsync(string lockToken)
    content.vb: Public Function CompleteAsync(lockToken As String) As Task
    parameters:
    - id: lockToken
      type: System.String
    return:
      type: System.Threading.Tasks.Task
      description: The lock identifier for the previously received message
  overload: Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message)
  id: CompleteAsync(Microsoft.Azure.Devices.Client.Message)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: CompleteAsync(Message)
  nameWithType: DeviceClient.CompleteAsync(Message)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync(Microsoft.Azure.Devices.Client.Message)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CompleteAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 604
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nDeletes a received message from the device queue\n"
  example: []
  syntax:
    content: public Task CompleteAsync(Message message)
    content.vb: Public Function CompleteAsync(message As Message) As Task
    parameters:
    - id: message
      type: Microsoft.Azure.Devices.Client.Message
    return:
      type: System.Threading.Tasks.Task
      description: The previously received message
  overload: Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(System.String)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(System.String)
  id: AbandonAsync(System.String)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: AbandonAsync(String)
  nameWithType: DeviceClient.AbandonAsync(String)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(System.String)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: AbandonAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 618
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nPuts a received message back onto the device queue\n"
  example: []
  syntax:
    content: public Task AbandonAsync(string lockToken)
    content.vb: Public Function AbandonAsync(lockToken As String) As Task
    parameters:
    - id: lockToken
      type: System.String
    return:
      type: System.Threading.Tasks.Task
      description: The previously received message
  overload: Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message)
  id: AbandonAsync(Microsoft.Azure.Devices.Client.Message)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: AbandonAsync(Message)
  nameWithType: DeviceClient.AbandonAsync(Message)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync(Microsoft.Azure.Devices.Client.Message)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: AbandonAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 632
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nPuts a received message back onto the device queue\n"
  example: []
  syntax:
    content: public Task AbandonAsync(Message message)
    content.vb: Public Function AbandonAsync(message As Message) As Task
    parameters:
    - id: message
      type: Microsoft.Azure.Devices.Client.Message
    return:
      type: System.Threading.Tasks.Task
      description: The lock identifier for the previously received message
  overload: Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(System.String)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(System.String)
  id: RejectAsync(System.String)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: RejectAsync(String)
  nameWithType: DeviceClient.RejectAsync(String)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(System.String)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: RejectAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 646
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nDeletes a received message from the device queue and indicates to the server that the message could not be processed.\n"
  example: []
  syntax:
    content: public Task RejectAsync(string lockToken)
    content.vb: Public Function RejectAsync(lockToken As String) As Task
    parameters:
    - id: lockToken
      type: System.String
    return:
      type: System.Threading.Tasks.Task
      description: The previously received message
  overload: Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(Microsoft.Azure.Devices.Client.Message)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(Microsoft.Azure.Devices.Client.Message)
  id: RejectAsync(Microsoft.Azure.Devices.Client.Message)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: RejectAsync(Message)
  nameWithType: DeviceClient.RejectAsync(Message)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync(Microsoft.Azure.Devices.Client.Message)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: RejectAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 660
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nDeletes a received message from the device queue and indicates to the server that the message could not be processed.\n"
  example: []
  syntax:
    content: public Task RejectAsync(Message message)
    content.vb: Public Function RejectAsync(message As Message) As Task
    parameters:
    - id: message
      type: Microsoft.Azure.Devices.Client.Message
    return:
      type: System.Threading.Tasks.Task
      description: The lock identifier for the previously received message
  overload: Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message)
  id: SendEventAsync(Microsoft.Azure.Devices.Client.Message)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: SendEventAsync(Message)
  nameWithType: DeviceClient.SendEventAsync(Message)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync(Microsoft.Azure.Devices.Client.Message)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: SendEventAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 674
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nSends an event to device hub\n"
  example: []
  syntax:
    content: public Task SendEventAsync(Message message)
    content.vb: Public Function SendEventAsync(message As Message) As Task
    parameters:
    - id: message
      type: Microsoft.Azure.Devices.Client.Message
    return:
      type: System.Threading.Tasks.Task
      description: The message containing the event
  overload: Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})
  id: SendEventBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message})
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: SendEventBatchAsync(IEnumerable<Message>)
  nameWithType: DeviceClient.SendEventBatchAsync(IEnumerable<Message>)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable<Microsoft.Azure.Devices.Client.Message>)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: SendEventBatchAsync
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 688
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nSends a batch of events to device hub\n"
  example: []
  syntax:
    content: public Task SendEventBatchAsync(IEnumerable<Message> messages)
    content.vb: Public Function SendEventBatchAsync(messages As IEnumerable(Of Message)) As Task
    parameters:
    - id: messages
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message}
    return:
      type: System.Threading.Tasks.Task
      description: The task containing the event
  overload: Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync*
  nameWithType.vb: DeviceClient.SendEventBatchAsync(IEnumerable(Of Message))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Devices.Client.Message))
  name.vb: SendEventBatchAsync(IEnumerable(Of Message))
- uid: Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandler(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object)
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandler(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object)
  id: SetMethodHandler(System.String,Microsoft.Azure.Devices.Client.MethodCallback,System.Object)
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: SetMethodHandler(String, MethodCallback, Object)
  nameWithType: DeviceClient.SetMethodHandler(String, MethodCallback, Object)
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandler(System.String, Microsoft.Azure.Devices.Client.MethodCallback, System.Object)
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: SetMethodHandler
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 798
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  summary: "\nRegisters a new delgate for the named method. If a delegate is already associated with\nthe named method, it will be replaced with the new delegate.\n<param name=\"methodName\">The name of the method to associate with the delegate.</param>\n<param name=\"methodHandler\">The delegate to be used when a method with the given name is called by the cloud service.</param>\n<param name=\"userContext\">generic parameter to be interpreted by the client code.</param>\n"
  example: []
  syntax:
    content: public void SetMethodHandler(string methodName, MethodCallback methodHandler, object userContext)
    content.vb: Public Sub SetMethodHandler(methodName As String, methodHandler As MethodCallback, userContext As Object)
    parameters:
    - id: methodName
      type: System.String
    - id: methodHandler
      type: Microsoft.Azure.Devices.Client.MethodCallback
    - id: userContext
      type: System.Object
  overload: Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.Client.DeviceClient.Dispose
  commentId: M:Microsoft.Azure.Devices.Client.DeviceClient.Dispose
  id: Dispose
  parent: Microsoft.Azure.Devices.Client.DeviceClient
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DeviceClient.Dispose()
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.Dispose()
  type: Method
  source:
    remote:
      path: device/Microsoft.Azure.Devices.Client/DeviceClient.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Dispose
    path: src/azure-iot-sdks/device/Microsoft.Azure.Devices.Client/DeviceClient.cs
    startLine: 876
  assemblies:
  - Microsoft.Azure.Devices.Client.UWP
  namespace: Microsoft.Azure.Devices.Client
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Azure.Devices.Client.DeviceClient.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices.Client
  commentId: N:Microsoft.Azure.Devices.Client
  isExternal: false
  name: Microsoft.Azure.Devices.Client
  nameWithType: Microsoft.Azure.Devices.Client
  fullName: Microsoft.Azure.Devices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.Client.DeviceClient.OperationTimeoutInMilliseconds*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.OperationTimeoutInMilliseconds
  isExternal: false
  name: OperationTimeoutInMilliseconds
  nameWithType: DeviceClient.OperationTimeoutInMilliseconds
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.OperationTimeoutInMilliseconds
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Microsoft.Azure.Devices.Client.DeviceClient.RetryPolicy*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.RetryPolicy
  isExternal: false
  name: RetryPolicy
  nameWithType: DeviceClient.RetryPolicy
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.RetryPolicy
- uid: Microsoft.Azure.Devices.Client.RetryPolicyType
  commentId: T:Microsoft.Azure.Devices.Client.RetryPolicyType
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: RetryPolicyType
  nameWithType: RetryPolicyType
  fullName: Microsoft.Azure.Devices.Client.RetryPolicyType
- uid: Microsoft.Azure.Devices.Client.DeviceClient.Create*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.Create
  isExternal: false
  name: Create
  nameWithType: DeviceClient.Create
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Devices.Client.IAuthenticationMethod
  commentId: T:Microsoft.Azure.Devices.Client.IAuthenticationMethod
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: IAuthenticationMethod
  nameWithType: IAuthenticationMethod
  fullName: Microsoft.Azure.Devices.Client.IAuthenticationMethod
- uid: Microsoft.Azure.Devices.Client.DeviceClient
  commentId: T:Microsoft.Azure.Devices.Client.DeviceClient
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: DeviceClient
  nameWithType: DeviceClient
  fullName: Microsoft.Azure.Devices.Client.DeviceClient
- uid: Microsoft.Azure.Devices.Client.TransportType
  commentId: T:Microsoft.Azure.Devices.Client.TransportType
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: TransportType
  nameWithType: TransportType
  fullName: Microsoft.Azure.Devices.Client.TransportType
- uid: Microsoft.Azure.Devices.Client.ITransportSettings[]
  name: ITransportSettings[]
  nameWithType: ITransportSettings[]
  fullName: Microsoft.Azure.Devices.Client.ITransportSettings[]
  nameWithType.vb: ITransportSettings()
  fullname.vb: Microsoft.Azure.Devices.Client.ITransportSettings()
  name.vb: ITransportSettings()
  spec.csharp:
  - uid: Microsoft.Azure.Devices.Client.ITransportSettings
    name: ITransportSettings
    nameWithType: ITransportSettings
    fullName: Microsoft.Azure.Devices.Client.ITransportSettings
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Azure.Devices.Client.ITransportSettings
    name: ITransportSettings
    nameWithType: ITransportSettings
    fullName: Microsoft.Azure.Devices.Client.ITransportSettings
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString
  isExternal: false
  name: CreateFromConnectionString
  nameWithType: DeviceClient.CreateFromConnectionString
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CreateFromConnectionString
- uid: Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync
  isExternal: false
  name: OpenAsync
  nameWithType: DeviceClient.OpenAsync
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.OpenAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync
  isExternal: false
  name: CloseAsync
  nameWithType: DeviceClient.CloseAsync
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CloseAsync
- uid: Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync
  isExternal: false
  name: ReceiveAsync
  nameWithType: DeviceClient.ReceiveAsync
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.ReceiveAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Devices.Client.Message}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Devices.Client.Message}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Message>
  nameWithType: Task<Message>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Devices.Client.Message>
  nameWithType.vb: Task(Of Message)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Devices.Client.Message)
  name.vb: Task(Of Message)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Devices.Client.Message
    name: Message
    nameWithType: Message
    fullName: Microsoft.Azure.Devices.Client.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Devices.Client.Message
    name: Message
    nameWithType: Message
    fullName: Microsoft.Azure.Devices.Client.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync
  isExternal: false
  name: CompleteAsync
  nameWithType: DeviceClient.CompleteAsync
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.CompleteAsync
- uid: Microsoft.Azure.Devices.Client.Message
  commentId: T:Microsoft.Azure.Devices.Client.Message
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: Microsoft.Azure.Devices.Client.Message
- uid: Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync
  isExternal: false
  name: AbandonAsync
  nameWithType: DeviceClient.AbandonAsync
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.AbandonAsync
- uid: Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync
  isExternal: false
  name: RejectAsync
  nameWithType: DeviceClient.RejectAsync
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.RejectAsync
- uid: Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync
  isExternal: false
  name: SendEventAsync
  nameWithType: DeviceClient.SendEventAsync
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.SendEventAsync
- uid: Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync
  isExternal: false
  name: SendEventBatchAsync
  nameWithType: DeviceClient.SendEventBatchAsync
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.SendEventBatchAsync
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.Message}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Message>
  nameWithType: IEnumerable<Message>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Devices.Client.Message>
  nameWithType.vb: IEnumerable(Of Message)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Devices.Client.Message)
  name.vb: IEnumerable(Of Message)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Devices.Client.Message
    name: Message
    nameWithType: Message
    fullName: Microsoft.Azure.Devices.Client.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Devices.Client.Message
    name: Message
    nameWithType: Message
    fullName: Microsoft.Azure.Devices.Client.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandler*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandler
  isExternal: false
  name: SetMethodHandler
  nameWithType: DeviceClient.SetMethodHandler
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.SetMethodHandler
- uid: Microsoft.Azure.Devices.Client.MethodCallback
  commentId: T:Microsoft.Azure.Devices.Client.MethodCallback
  parent: Microsoft.Azure.Devices.Client
  isExternal: false
  name: MethodCallback
  nameWithType: MethodCallback
  fullName: Microsoft.Azure.Devices.Client.MethodCallback
- uid: Microsoft.Azure.Devices.Client.DeviceClient.Dispose*
  commentId: Overload:Microsoft.Azure.Devices.Client.DeviceClient.Dispose
  isExternal: false
  name: Dispose
  nameWithType: DeviceClient.Dispose
  fullName: Microsoft.Azure.Devices.Client.DeviceClient.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
