### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection
  commentId: T:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection
  id: ReadOnlyDictionary45`2.ValueCollection
  parent: Microsoft.Azure.Devices.Common
  children:
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.Count
  - Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator
  langs:
  - csharp
  - vb
  name: ReadOnlyDictionary45<TKey, TValue>.ValueCollection
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection
  type: Class
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
      commit: 894d3f2aeb2a4223676878b18671ee3bab459f52
    id: ValueCollection
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 605
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: 'public sealed class ValueCollection : ICollection<TValue>, ICollection'
    content.vb: >-
      Public NotInheritable Class ValueCollection
          Inherits ICollection(Of TValue)
          Implements ICollection
  inheritance:
  - System.Object
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection
  name.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo(`1[],System.Int32)
  id: CopyTo(`1[],System.Int32)
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: CopyTo(TValue[], Int32)
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.CopyTo(TValue[], Int32)
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.CopyTo(TValue[], System.Int32)
  type: Method
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
      commit: 894d3f2aeb2a4223676878b18671ee3bab459f52
    id: CopyTo
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 659
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public void CopyTo(TValue[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As TValue(), arrayIndex As Integer)
    parameters:
    - id: array
      type: '{TValue}[]'
    - id: arrayIndex
      type: System.Int32
  overload: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.CopyTo(TValue(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.CopyTo(TValue(), System.Int32)
  name.vb: CopyTo(TValue(), Int32)
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.Count
  commentId: P:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.Count
  id: Count
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.Count
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.Count
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
      commit: 894d3f2aeb2a4223676878b18671ee3bab459f52
    id: Count
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 664
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.Count*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.Count
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator
  commentId: M:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.GetEnumerator()
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
      commit: 894d3f2aeb2a4223676878b18671ee3bab459f52
    id: GetEnumerator
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/ReadOnlyDictionary45.cs
    startLine: 688
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public IEnumerator<TValue> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of TValue)
    return:
      type: IEnumerator{{TValue}}
  overload: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator*
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.GetEnumerator()
references:
- uid: Microsoft.Azure.Devices.Common
  commentId: N:Microsoft.Azure.Devices.Common
  isExternal: false
  name: Microsoft.Azure.Devices.Common
  nameWithType: Microsoft.Azure.Devices.Common
  fullName: Microsoft.Azure.Devices.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo*
  commentId: Overload:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.CopyTo
  isExternal: false
  name: CopyTo
  nameWithType: ReadOnlyDictionary45.ValueCollection.CopyTo
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.ValueCollection.CopyTo
- uid: '{TValue}[]'
  name: TValue[]
  nameWithType: TValue[]
  fullName: TValue[]
  nameWithType.vb: TValue()
  fullname.vb: TValue()
  name.vb: TValue()
  spec.csharp:
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.Count*
  commentId: Overload:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.Count
  isExternal: false
  name: Count
  nameWithType: ReadOnlyDictionary45<TKey, TValue>.ValueCollection.Count
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45<TKey, TValue>.ValueCollection.Count
  nameWithType.vb: ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.Count
  fullname.vb: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45(Of TKey, TValue).ValueCollection.Count
- uid: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator*
  commentId: Overload:Microsoft.Azure.Devices.Common.ReadOnlyDictionary45`2.ValueCollection.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: ReadOnlyDictionary45.ValueCollection.GetEnumerator
  fullName: Microsoft.Azure.Devices.Common.ReadOnlyDictionary45.ValueCollection.GetEnumerator
- uid: IEnumerator{{TValue}}
  commentId: '!:IEnumerator{`1}'
  definition: IEnumerator`1
  name: IEnumerator<TValue>
  nameWithType: IEnumerator<TValue>
  fullName: IEnumerator<TValue>
  nameWithType.vb: IEnumerator(Of TValue)
  fullname.vb: IEnumerator(Of TValue)
  name.vb: IEnumerator(Of TValue)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullname.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
