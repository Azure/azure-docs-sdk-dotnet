### YamlMime:ManagedReference
items:
- uid: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes
  commentId: T:Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes
  id: PowerBIToken.ClaimTypes
  parent: Microsoft.PowerBI.Security
  children:
  - Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.ReportId
  - Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.Roles
  - Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.Username
  - Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.Version
  - Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.WorkspaceCollectionName
  - Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.WorkspaceId
  langs:
  - csharp
  - vb
  name: PowerBIToken.ClaimTypes
  nameWithType: PowerBIToken.ClaimTypes
  fullName: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes
  type: Class
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
      commit: 50f6de73083175b63344a2f61eea978622f8d42e
    id: ClaimTypes
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 16
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe Power BI supported claim types\n"
  example: []
  syntax:
    content: public static class ClaimTypes
    content.vb: Public Module ClaimTypes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.Version
  commentId: F:Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.Version
  id: Version
  parent: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: PowerBIToken.ClaimTypes.Version
  fullName: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.Version
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
      commit: 50f6de73083175b63344a2f61eea978622f8d42e
    id: Version
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 21
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe version claim\n"
  example: []
  syntax:
    content: public const string Version = "ver"
    content.vb: Public Const Version As String = "ver"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.WorkspaceCollectionName
  commentId: F:Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.WorkspaceCollectionName
  id: WorkspaceCollectionName
  parent: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes
  langs:
  - csharp
  - vb
  name: WorkspaceCollectionName
  nameWithType: PowerBIToken.ClaimTypes.WorkspaceCollectionName
  fullName: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.WorkspaceCollectionName
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
      commit: 50f6de73083175b63344a2f61eea978622f8d42e
    id: WorkspaceCollectionName
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 26
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe workspace collection claim\n"
  example: []
  syntax:
    content: public const string WorkspaceCollectionName = "wcn"
    content.vb: Public Const WorkspaceCollectionName As String = "wcn"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.WorkspaceId
  commentId: F:Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.WorkspaceId
  id: WorkspaceId
  parent: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes
  langs:
  - csharp
  - vb
  name: WorkspaceId
  nameWithType: PowerBIToken.ClaimTypes.WorkspaceId
  fullName: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.WorkspaceId
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
      commit: 50f6de73083175b63344a2f61eea978622f8d42e
    id: WorkspaceId
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 31
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe workspace id claim\n"
  example: []
  syntax:
    content: public const string WorkspaceId = "wid"
    content.vb: Public Const WorkspaceId As String = "wid"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.ReportId
  commentId: F:Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.ReportId
  id: ReportId
  parent: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes
  langs:
  - csharp
  - vb
  name: ReportId
  nameWithType: PowerBIToken.ClaimTypes.ReportId
  fullName: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.ReportId
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
      commit: 50f6de73083175b63344a2f61eea978622f8d42e
    id: ReportId
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 36
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe report id claim\n"
  example: []
  syntax:
    content: public const string ReportId = "rid"
    content.vb: Public Const ReportId As String = "rid"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.Username
  commentId: F:Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.Username
  id: Username
  parent: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: PowerBIToken.ClaimTypes.Username
  fullName: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.Username
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
      commit: 50f6de73083175b63344a2f61eea978622f8d42e
    id: Username
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 41
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe RLS username claim\n"
  example: []
  syntax:
    content: public const string Username = "username"
    content.vb: Public Const Username As String = "username"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.Roles
  commentId: F:Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.Roles
  id: Roles
  parent: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: PowerBIToken.ClaimTypes.Roles
  fullName: Microsoft.PowerBI.Security.PowerBIToken.ClaimTypes.Roles
  type: Field
  source:
    remote:
      path: sdk/PowerBI.Core/Security/PowerBIToken.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
      commit: 50f6de73083175b63344a2f61eea978622f8d42e
    id: Roles
    path: src/PowerBI-CSharp/sdk/PowerBI.Core/Security/PowerBIToken.cs
    startLine: 46
  assemblies:
  - Microsoft.PowerBI.Core
  namespace: Microsoft.PowerBI.Security
  summary: "\nThe RLS roles claim\n"
  example: []
  syntax:
    content: public const string Roles = "roles"
    content.vb: Public Const Roles As String = "roles"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.PowerBI.Security
  commentId: N:Microsoft.PowerBI.Security
  isExternal: false
  name: Microsoft.PowerBI.Security
  nameWithType: Microsoft.PowerBI.Security
  fullName: Microsoft.PowerBI.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
