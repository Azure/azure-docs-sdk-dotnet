### YamlMime:ManagedReference
items:
- uid: Microsoft.PowerBI.Api.V1.Models.Import
  commentId: T:Microsoft.PowerBI.Api.V1.Models.Import
  id: Import
  parent: Microsoft.PowerBI.Api.V1.Models
  children:
  - Microsoft.PowerBI.Api.V1.Models.Import.#ctor
  - Microsoft.PowerBI.Api.V1.Models.Import.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Report},System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Dataset})
  - Microsoft.PowerBI.Api.V1.Models.Import.Datasets
  - Microsoft.PowerBI.Api.V1.Models.Import.Id
  - Microsoft.PowerBI.Api.V1.Models.Import.ImportState
  - Microsoft.PowerBI.Api.V1.Models.Import.Name
  - Microsoft.PowerBI.Api.V1.Models.Import.Reports
  langs:
  - csharp
  - vb
  name: Import
  nameWithType: Import
  fullName: Microsoft.PowerBI.Api.V1.Models.Import
  type: Class
  source:
    remote:
      path: sdk/PowerBI.Api/Source/Models/Import.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: Import
    path: src/PowerBI-CSharp/sdk/PowerBI.Api/Source/Models/Import.cs
    startLine: 16
  assemblies:
  - Microsoft.PowerBI.Api
  namespace: Microsoft.PowerBI.Api.V1.Models
  summary: "\nThe import object\n"
  example: []
  syntax:
    content: public class Import
    content.vb: Public Class Import
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.PowerBI.Api.V1.Models.Import.#ctor
  commentId: M:Microsoft.PowerBI.Api.V1.Models.Import.#ctor
  id: '#ctor'
  parent: Microsoft.PowerBI.Api.V1.Models.Import
  langs:
  - csharp
  - vb
  name: Import()
  nameWithType: Import.Import()
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.Import()
  type: Constructor
  source:
    remote:
      path: sdk/PowerBI.Api/Source/Models/Import.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: .ctor
    path: src/PowerBI-CSharp/sdk/PowerBI.Api/Source/Models/Import.cs
    startLine: 21
  assemblies:
  - Microsoft.PowerBI.Api
  namespace: Microsoft.PowerBI.Api.V1.Models
  summary: "\nInitializes a new instance of the Import class.\n"
  example: []
  syntax:
    content: public Import()
    content.vb: Public Sub New
  overload: Microsoft.PowerBI.Api.V1.Models.Import.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Api.V1.Models.Import.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Report},System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Dataset})
  commentId: M:Microsoft.PowerBI.Api.V1.Models.Import.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Report},System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Dataset})
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Report},System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Dataset})'
  parent: Microsoft.PowerBI.Api.V1.Models.Import
  langs:
  - csharp
  - vb
  name: Import(String, String, String, IList<Report>, IList<Dataset>)
  nameWithType: Import.Import(String, String, String, IList<Report>, IList<Dataset>)
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.Import(System.String, System.String, System.String, System.Collections.Generic.IList<Microsoft.PowerBI.Api.V1.Models.Report>, System.Collections.Generic.IList<Microsoft.PowerBI.Api.V1.Models.Dataset>)
  type: Constructor
  source:
    remote:
      path: sdk/PowerBI.Api/Source/Models/Import.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: .ctor
    path: src/PowerBI-CSharp/sdk/PowerBI.Api/Source/Models/Import.cs
    startLine: 26
  assemblies:
  - Microsoft.PowerBI.Api
  namespace: Microsoft.PowerBI.Api.V1.Models
  summary: "\nInitializes a new instance of the Import class.\n"
  example: []
  syntax:
    content: public Import(string id = null, string name = null, string importState = null, IList<Report> reports = null, IList<Dataset> datasets = null)
    content.vb: Public Sub New(id As String = Nothing, name As String = Nothing, importState As String = Nothing, reports As IList(Of Report) = Nothing, datasets As IList(Of Dataset) = Nothing)
    parameters:
    - id: id
      type: System.String
    - id: name
      type: System.String
    - id: importState
      type: System.String
    - id: reports
      type: System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Report}
    - id: datasets
      type: System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Dataset}
  overload: Microsoft.PowerBI.Api.V1.Models.Import.#ctor*
  nameWithType.vb: Import.Import(String, String, String, IList(Of Report), IList(Of Dataset))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.PowerBI.Api.V1.Models.Import.Import(System.String, System.String, System.String, System.Collections.Generic.IList(Of Microsoft.PowerBI.Api.V1.Models.Report), System.Collections.Generic.IList(Of Microsoft.PowerBI.Api.V1.Models.Dataset))
  name.vb: Import(String, String, String, IList(Of Report), IList(Of Dataset))
- uid: Microsoft.PowerBI.Api.V1.Models.Import.Id
  commentId: P:Microsoft.PowerBI.Api.V1.Models.Import.Id
  id: Id
  parent: Microsoft.PowerBI.Api.V1.Models.Import
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Import.Id
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.Id
  type: Property
  source:
    remote:
      path: sdk/PowerBI.Api/Source/Models/Import.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: Id
    path: src/PowerBI-CSharp/sdk/PowerBI.Api/Source/Models/Import.cs
    startLine: 38
  assemblies:
  - Microsoft.PowerBI.Api
  namespace: Microsoft.PowerBI.Api.V1.Models
  summary: "\nThe import id\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.PowerBI.Api.V1.Models.Import.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Api.V1.Models.Import.Name
  commentId: P:Microsoft.PowerBI.Api.V1.Models.Import.Name
  id: Name
  parent: Microsoft.PowerBI.Api.V1.Models.Import
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Import.Name
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.Name
  type: Property
  source:
    remote:
      path: sdk/PowerBI.Api/Source/Models/Import.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: Name
    path: src/PowerBI-CSharp/sdk/PowerBI.Api/Source/Models/Import.cs
    startLine: 44
  assemblies:
  - Microsoft.PowerBI.Api
  namespace: Microsoft.PowerBI.Api.V1.Models
  summary: "\nThe import name name\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.PowerBI.Api.V1.Models.Import.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Api.V1.Models.Import.ImportState
  commentId: P:Microsoft.PowerBI.Api.V1.Models.Import.ImportState
  id: ImportState
  parent: Microsoft.PowerBI.Api.V1.Models.Import
  langs:
  - csharp
  - vb
  name: ImportState
  nameWithType: Import.ImportState
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.ImportState
  type: Property
  source:
    remote:
      path: sdk/PowerBI.Api/Source/Models/Import.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: ImportState
    path: src/PowerBI-CSharp/sdk/PowerBI.Api/Source/Models/Import.cs
    startLine: 50
  assemblies:
  - Microsoft.PowerBI.Api
  namespace: Microsoft.PowerBI.Api.V1.Models
  summary: "\nThe import upload state\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "importState")]

      public string ImportState { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="importState")>

      Public Property ImportState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.PowerBI.Api.V1.Models.Import.ImportState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: importState
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Api.V1.Models.Import.Reports
  commentId: P:Microsoft.PowerBI.Api.V1.Models.Import.Reports
  id: Reports
  parent: Microsoft.PowerBI.Api.V1.Models.Import
  langs:
  - csharp
  - vb
  name: Reports
  nameWithType: Import.Reports
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.Reports
  type: Property
  source:
    remote:
      path: sdk/PowerBI.Api/Source/Models/Import.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: Reports
    path: src/PowerBI-CSharp/sdk/PowerBI.Api/Source/Models/Import.cs
    startLine: 56
  assemblies:
  - Microsoft.PowerBI.Api
  namespace: Microsoft.PowerBI.Api.V1.Models
  summary: "\nThe reports associated with this import\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "reports")]

      public IList<Report> Reports { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="reports")>

      Public Property Reports As IList(Of Report)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Report}
  overload: Microsoft.PowerBI.Api.V1.Models.Import.Reports*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: reports
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.PowerBI.Api.V1.Models.Import.Datasets
  commentId: P:Microsoft.PowerBI.Api.V1.Models.Import.Datasets
  id: Datasets
  parent: Microsoft.PowerBI.Api.V1.Models.Import
  langs:
  - csharp
  - vb
  name: Datasets
  nameWithType: Import.Datasets
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.Datasets
  type: Property
  source:
    remote:
      path: sdk/PowerBI.Api/Source/Models/Import.cs
      branch: master
      repo: https://github.com/Microsoft/PowerBI-CSharp
    id: Datasets
    path: src/PowerBI-CSharp/sdk/PowerBI.Api/Source/Models/Import.cs
    startLine: 62
  assemblies:
  - Microsoft.PowerBI.Api
  namespace: Microsoft.PowerBI.Api.V1.Models
  summary: "\nThe datasets associated with this import\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "datasets")]

      public IList<Dataset> Datasets { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="datasets")>

      Public Property Datasets As IList(Of Dataset)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Dataset}
  overload: Microsoft.PowerBI.Api.V1.Models.Import.Datasets*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: datasets
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.PowerBI.Api.V1.Models
  commentId: N:Microsoft.PowerBI.Api.V1.Models
  isExternal: false
  name: Microsoft.PowerBI.Api.V1.Models
  nameWithType: Microsoft.PowerBI.Api.V1.Models
  fullName: Microsoft.PowerBI.Api.V1.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.PowerBI.Api.V1.Models.Import.#ctor*
  commentId: Overload:Microsoft.PowerBI.Api.V1.Models.Import.#ctor
  isExternal: false
  name: Import
  nameWithType: Import.Import
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.Import
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Report}
  commentId: T:System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Report}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Report>
  nameWithType: IList<Report>
  fullName: System.Collections.Generic.IList<Microsoft.PowerBI.Api.V1.Models.Report>
  nameWithType.vb: IList(Of Report)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.PowerBI.Api.V1.Models.Report)
  name.vb: IList(Of Report)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.PowerBI.Api.V1.Models.Report
    name: Report
    nameWithType: Report
    fullName: Microsoft.PowerBI.Api.V1.Models.Report
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.PowerBI.Api.V1.Models.Report
    name: Report
    nameWithType: Report
    fullName: Microsoft.PowerBI.Api.V1.Models.Report
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Dataset}
  commentId: T:System.Collections.Generic.IList{Microsoft.PowerBI.Api.V1.Models.Dataset}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Dataset>
  nameWithType: IList<Dataset>
  fullName: System.Collections.Generic.IList<Microsoft.PowerBI.Api.V1.Models.Dataset>
  nameWithType.vb: IList(Of Dataset)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.PowerBI.Api.V1.Models.Dataset)
  name.vb: IList(Of Dataset)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.PowerBI.Api.V1.Models.Dataset
    name: Dataset
    nameWithType: Dataset
    fullName: Microsoft.PowerBI.Api.V1.Models.Dataset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.PowerBI.Api.V1.Models.Dataset
    name: Dataset
    nameWithType: Dataset
    fullName: Microsoft.PowerBI.Api.V1.Models.Dataset
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.PowerBI.Api.V1.Models.Import.Id*
  commentId: Overload:Microsoft.PowerBI.Api.V1.Models.Import.Id
  isExternal: false
  name: Id
  nameWithType: Import.Id
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.Id
- uid: Microsoft.PowerBI.Api.V1.Models.Import.Name*
  commentId: Overload:Microsoft.PowerBI.Api.V1.Models.Import.Name
  isExternal: false
  name: Name
  nameWithType: Import.Name
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.Name
- uid: Microsoft.PowerBI.Api.V1.Models.Import.ImportState*
  commentId: Overload:Microsoft.PowerBI.Api.V1.Models.Import.ImportState
  isExternal: false
  name: ImportState
  nameWithType: Import.ImportState
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.ImportState
- uid: Microsoft.PowerBI.Api.V1.Models.Import.Reports*
  commentId: Overload:Microsoft.PowerBI.Api.V1.Models.Import.Reports
  isExternal: false
  name: Reports
  nameWithType: Import.Reports
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.Reports
- uid: Microsoft.PowerBI.Api.V1.Models.Import.Datasets*
  commentId: Overload:Microsoft.PowerBI.Api.V1.Models.Import.Datasets
  isExternal: false
  name: Datasets
  nameWithType: Import.Datasets
  fullName: Microsoft.PowerBI.Api.V1.Models.Import.Datasets
