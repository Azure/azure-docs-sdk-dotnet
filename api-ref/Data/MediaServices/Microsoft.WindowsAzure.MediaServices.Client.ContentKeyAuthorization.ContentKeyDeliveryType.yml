### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  id: ContentKeyDeliveryType
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.BaselineHttp
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.FairPlay
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.None
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.PlayReadyLicense
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.Widevine
  langs:
  - csharp
  - vb
  name: ContentKeyDeliveryType
  nameWithType: ContentKeyDeliveryType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  type: Enum
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/ContentKeyDeliveryType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ContentKeyDeliveryType
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/ContentKeyDeliveryType.cs
    startLine: 21
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nDelivery method of the content key to the client.\n"
  example: []
  syntax:
    content: public enum ContentKeyDeliveryType
    content.vb: Public Enum ContentKeyDeliveryType
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.None
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.None
  id: None
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: ContentKeyDeliveryType.None
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.None
  type: Field
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/ContentKeyDeliveryType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: None
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/ContentKeyDeliveryType.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nNone.\n"
  example: []
  syntax:
    content: None = 0
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.PlayReadyLicense
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.PlayReadyLicense
  id: PlayReadyLicense
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  langs:
  - csharp
  - vb
  name: PlayReadyLicense
  nameWithType: ContentKeyDeliveryType.PlayReadyLicense
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.PlayReadyLicense
  type: Field
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/ContentKeyDeliveryType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: PlayReadyLicense
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/ContentKeyDeliveryType.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nUse PlayReady License acquistion protocol\n"
  example: []
  syntax:
    content: PlayReadyLicense = 1
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.BaselineHttp
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.BaselineHttp
  id: BaselineHttp
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  langs:
  - csharp
  - vb
  name: BaselineHttp
  nameWithType: ContentKeyDeliveryType.BaselineHttp
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.BaselineHttp
  type: Field
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/ContentKeyDeliveryType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: BaselineHttp
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/ContentKeyDeliveryType.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nUse MPEG Baseline HTTP key protocol.\n"
  example: []
  syntax:
    content: BaselineHttp = 2
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.Widevine
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.Widevine
  id: Widevine
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  langs:
  - csharp
  - vb
  name: Widevine
  nameWithType: ContentKeyDeliveryType.Widevine
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.Widevine
  type: Field
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/ContentKeyDeliveryType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Widevine
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/ContentKeyDeliveryType.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nUse Widevine license server.\n"
  example: []
  syntax:
    content: Widevine = 3
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.FairPlay
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.FairPlay
  id: FairPlay
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  langs:
  - csharp
  - vb
  name: FairPlay
  nameWithType: ContentKeyDeliveryType.FairPlay
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType.FairPlay
  type: Field
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/ContentKeyDeliveryType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: FairPlay
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/ContentKeyDeliveryType.cs
    startLine: 46
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nSend FairPlay SPC to Key Delivery server and get CKC back.\n"
  example: []
  syntax:
    content: FairPlay = 4
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: ContentKeyDeliveryType
  nameWithType: ContentKeyDeliveryType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentKeyDeliveryType
