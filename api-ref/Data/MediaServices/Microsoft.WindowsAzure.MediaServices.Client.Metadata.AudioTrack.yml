### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  id: AudioTrack
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Bitrate
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.BitsPerSample
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Channels
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Codec
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.EncoderVersion
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Id
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Language
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.SamplingRate
  langs:
  - csharp
  - vb
  name: AudioTrack
  nameWithType: AudioTrack
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  type: Class
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AudioTrack.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: AudioTrack
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AudioTrack.cs
    startLine: 22
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nRepresents an audio track contained in the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.IAssetFile\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class AudioTrack
    content.vb: Public Class AudioTrack
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Id
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Id
  id: Id
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: AudioTrack.Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Id
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AudioTrack.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: Id
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AudioTrack.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGet the zero-based index of the audio track.\n<remarks>\nThis is not necessarily the TrackID as used in an MP4 file.\n</remarks>\n"
  example: []
  syntax:
    content: public int Id { get; }
    content.vb: Public ReadOnly Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Bitrate
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Bitrate
  id: Bitrate
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  langs:
  - csharp
  - vb
  name: Bitrate
  nameWithType: AudioTrack.Bitrate
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Bitrate
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AudioTrack.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: Bitrate
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AudioTrack.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGets the average video bit rate in bits per second, as calculated from the media file. Counts only the elementary stream payload, and does not include the packaging overhead.\n"
  example: []
  syntax:
    content: public int Bitrate { get; }
    content.vb: Public ReadOnly Property Bitrate As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Bitrate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.BitsPerSample
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.BitsPerSample
  id: BitsPerSample
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  langs:
  - csharp
  - vb
  name: BitsPerSample
  nameWithType: AudioTrack.BitsPerSample
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.BitsPerSample
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AudioTrack.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: BitsPerSample
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AudioTrack.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGet the bits per sample for the audio track.\n"
  example: []
  syntax:
    content: public int BitsPerSample { get; }
    content.vb: Public ReadOnly Property BitsPerSample As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.BitsPerSample*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Channels
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Channels
  id: Channels
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  langs:
  - csharp
  - vb
  name: Channels
  nameWithType: AudioTrack.Channels
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Channels
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AudioTrack.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: Channels
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AudioTrack.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGet the number of audio channels in the audio track.\n"
  example: []
  syntax:
    content: public int Channels { get; }
    content.vb: Public ReadOnly Property Channels As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Channels*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Codec
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Codec
  id: Codec
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  langs:
  - csharp
  - vb
  name: Codec
  nameWithType: AudioTrack.Codec
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Codec
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AudioTrack.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: Codec
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AudioTrack.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGet the audio codec used for encoding the audio track.\n"
  example: []
  syntax:
    content: public string Codec { get; }
    content.vb: Public ReadOnly Property Codec As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Codec*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Language
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Language
  id: Language
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: AudioTrack.Language
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Language
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AudioTrack.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: Language
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AudioTrack.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGet the language.\n"
  example: []
  syntax:
    content: public string Language { get; }
    content.vb: Public ReadOnly Property Language As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Language*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.EncoderVersion
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.EncoderVersion
  id: EncoderVersion
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  langs:
  - csharp
  - vb
  name: EncoderVersion
  nameWithType: AudioTrack.EncoderVersion
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.EncoderVersion
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AudioTrack.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: EncoderVersion
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AudioTrack.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGet the optional encoder version string, required for EAC3.\n"
  example: []
  syntax:
    content: public string EncoderVersion { get; }
    content.vb: Public ReadOnly Property EncoderVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.EncoderVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.SamplingRate
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.SamplingRate
  id: SamplingRate
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  langs:
  - csharp
  - vb
  name: SamplingRate
  nameWithType: AudioTrack.SamplingRate
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.SamplingRate
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AudioTrack.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: SamplingRate
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AudioTrack.cs
    startLine: 65
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGet the audio sampling rate in samples/sec or Hz.\n"
  example: []
  syntax:
    content: public int SamplingRate { get; }
    content.vb: Public ReadOnly Property SamplingRate As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.SamplingRate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IAssetFile
  nameWithType: IAssetFile
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client.Metadata
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Id*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Id
  isExternal: false
  name: Id
  nameWithType: AudioTrack.Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Bitrate*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Bitrate
  isExternal: false
  name: Bitrate
  nameWithType: AudioTrack.Bitrate
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Bitrate
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.BitsPerSample*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.BitsPerSample
  isExternal: false
  name: BitsPerSample
  nameWithType: AudioTrack.BitsPerSample
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.BitsPerSample
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Channels*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Channels
  isExternal: false
  name: Channels
  nameWithType: AudioTrack.Channels
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Channels
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Codec*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Codec
  isExternal: false
  name: Codec
  nameWithType: AudioTrack.Codec
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Codec
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Language*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Language
  isExternal: false
  name: Language
  nameWithType: AudioTrack.Language
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.Language
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.EncoderVersion*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.EncoderVersion
  isExternal: false
  name: EncoderVersion
  nameWithType: AudioTrack.EncoderVersion
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.EncoderVersion
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.SamplingRate*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.SamplingRate
  isExternal: false
  name: SamplingRate
  nameWithType: AudioTrack.SamplingRate
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack.SamplingRate
