### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer
  id: MediaServicesLicenseTemplateSerializer
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Deserialize(System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Serialize(Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate)
  langs:
  - csharp
  - vb
  name: MediaServicesLicenseTemplateSerializer
  nameWithType: MediaServicesLicenseTemplateSerializer
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer
  type: Class
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/MediaServicesLicenseTemplateSerializer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MediaServicesLicenseTemplateSerializer
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/MediaServicesLicenseTemplateSerializer.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nThis class is used to serialize and deserialize the Media Services License Template Format.\n"
  example: []
  syntax:
    content: public static class MediaServicesLicenseTemplateSerializer
    content.vb: Public Module MediaServicesLicenseTemplateSerializer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Serialize(Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Serialize(Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate)
  id: Serialize(Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate)
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer
  langs:
  - csharp
  - vb
  name: Serialize(PlayReadyLicenseResponseTemplate)
  nameWithType: MediaServicesLicenseTemplateSerializer.Serialize(PlayReadyLicenseResponseTemplate)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Serialize(Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate)
  type: Method
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/MediaServicesLicenseTemplateSerializer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Serialize
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/MediaServicesLicenseTemplateSerializer.cs
    startLine: 68
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nSerializes a PlayReadyLicenseResponseTemplate to a string containing an xml representation of\nthe license response template.\n"
  example: []
  syntax:
    content: public static string Serialize(PlayReadyLicenseResponseTemplate responseTemplate)
    content.vb: Public Shared Function Serialize(responseTemplate As PlayReadyLicenseResponseTemplate) As String
    parameters:
    - id: responseTemplate
      type: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate
      description: The PlayReadyLicenseResponseTemplate instance to serialize to a string.
    return:
      type: System.String
      description: ''
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Serialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Deserialize(System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Deserialize(System.String)
  id: Deserialize(System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(String)
  nameWithType: MediaServicesLicenseTemplateSerializer.Deserialize(String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Deserialize(System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/MediaServicesLicenseTemplateSerializer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Deserialize
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/MediaServicesLicenseTemplateSerializer.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nDeserializes a string containing an Xml representation of a PlayReadyLicenseResponseTemplate\nback into a PlayReadyLicenseResponseTemplate class instance.\n"
  example: []
  syntax:
    content: public static PlayReadyLicenseResponseTemplate Deserialize(string templateXml)
    content.vb: Public Shared Function Deserialize(templateXml As String) As PlayReadyLicenseResponseTemplate
    parameters:
    - id: templateXml
      type: System.String
      description: Contains the Xml representation of a PlayReadyLicenseResponseTemplate
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate
      description: ''
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Deserialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Serialize*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Serialize
  isExternal: false
  name: Serialize
  nameWithType: MediaServicesLicenseTemplateSerializer.Serialize
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Serialize
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: PlayReadyLicenseResponseTemplate
  nameWithType: PlayReadyLicenseResponseTemplate
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyLicenseResponseTemplate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Deserialize*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Deserialize
  isExternal: false
  name: Deserialize
  nameWithType: MediaServicesLicenseTemplateSerializer.Deserialize
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.MediaServicesLicenseTemplateSerializer.Deserialize
