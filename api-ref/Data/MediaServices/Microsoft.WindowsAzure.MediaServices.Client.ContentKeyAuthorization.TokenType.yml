### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType
  id: TokenType
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType.JWT
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType.SWT
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType.Undefined
  langs:
  - csharp
  - vb
  name: TokenType
  nameWithType: TokenType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType
  type: Enum
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/TokenType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: TokenType
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/TokenType.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nEnum TokenType.Represents  token formats supported by Key Delivery service\n"
  example: []
  syntax:
    content: public enum TokenType
    content.vb: Public Enum TokenType
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType.Undefined
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType.Undefined
  id: Undefined
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType
  langs:
  - csharp
  - vb
  name: Undefined
  nameWithType: TokenType.Undefined
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType.Undefined
  type: Field
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/TokenType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Undefined
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/TokenType.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nThe undefined value is used to avoid defaulting to one of supported types.\n"
  example: []
  syntax:
    content: Undefined = 0
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType.SWT
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType.SWT
  id: SWT
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType
  langs:
  - csharp
  - vb
  name: SWT
  nameWithType: TokenType.SWT
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType.SWT
  type: Field
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/TokenType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SWT
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/TokenType.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  syntax:
    content: SWT = 1
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType.JWT
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType.JWT
  id: JWT
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType
  langs:
  - csharp
  - vb
  name: JWT
  nameWithType: TokenType.JWT
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType.JWT
  type: Field
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/TokenType.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: JWT
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/TokenType.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  syntax:
    content: JWT = 2
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: TokenType
  nameWithType: TokenType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.TokenType
