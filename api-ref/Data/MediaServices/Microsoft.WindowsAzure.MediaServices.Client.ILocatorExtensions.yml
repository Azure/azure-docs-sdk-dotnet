### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions
  id: ILocatorExtensions
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.ClientManifestFileExtension
  - Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  - Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsv3Uri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  - Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetMpegDashUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  - Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetSmoothStreamingUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  - Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.HlsStreamingParameter
  - Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.Hlsv3StreamingParameter
  - Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.ManifestFileExtension
  - Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.MpegDashStreamingParameter
  langs:
  - csharp
  - vb
  name: ILocatorExtensions
  nameWithType: ILocatorExtensions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions
  type: Class
  source:
    remote:
      path: MediaServices.Client.Extensions/ILocatorExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: ILocatorExtensions
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/ILocatorExtensions.cs
    startLine: 23
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nContains extension methods and helpers for the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.ILocator\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: public static class ILocatorExtensions
    content.vb: Public Module ILocatorExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.ManifestFileExtension
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.ManifestFileExtension
  id: ManifestFileExtension
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions
  langs:
  - csharp
  - vb
  name: ManifestFileExtension
  nameWithType: ILocatorExtensions.ManifestFileExtension
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.ManifestFileExtension
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/ILocatorExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: ManifestFileExtension
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/ILocatorExtensions.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents the manifest file extension.\n"
  example: []
  syntax:
    content: public const string ManifestFileExtension = ".ism"
    content.vb: Public Const ManifestFileExtension As String = ".ism"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.ClientManifestFileExtension
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.ClientManifestFileExtension
  id: ClientManifestFileExtension
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions
  langs:
  - csharp
  - vb
  name: ClientManifestFileExtension
  nameWithType: ILocatorExtensions.ClientManifestFileExtension
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.ClientManifestFileExtension
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/ILocatorExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: ClientManifestFileExtension
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/ILocatorExtensions.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents the client manifest file extension for Smooth Streaming.\n"
  example: []
  syntax:
    content: public const string ClientManifestFileExtension = ".ismc"
    content.vb: Public Const ClientManifestFileExtension As String = ".ismc"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.HlsStreamingParameter
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.HlsStreamingParameter
  id: HlsStreamingParameter
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions
  langs:
  - csharp
  - vb
  name: HlsStreamingParameter
  nameWithType: ILocatorExtensions.HlsStreamingParameter
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.HlsStreamingParameter
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/ILocatorExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: HlsStreamingParameter
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/ILocatorExtensions.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents the URL dynamic packaging parameter for HLS.\n"
  example: []
  syntax:
    content: public const string HlsStreamingParameter = "(format=m3u8-aapl)"
    content.vb: Public Const HlsStreamingParameter As String = "(format=m3u8-aapl)"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.Hlsv3StreamingParameter
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.Hlsv3StreamingParameter
  id: Hlsv3StreamingParameter
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions
  langs:
  - csharp
  - vb
  name: Hlsv3StreamingParameter
  nameWithType: ILocatorExtensions.Hlsv3StreamingParameter
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.Hlsv3StreamingParameter
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/ILocatorExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: Hlsv3StreamingParameter
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/ILocatorExtensions.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents the URL dynamic packaging parameter for HLS.\n"
  example: []
  syntax:
    content: public const string Hlsv3StreamingParameter = "(format=m3u8-aapl-v3)"
    content.vb: Public Const Hlsv3StreamingParameter As String = "(format=m3u8-aapl-v3)"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.MpegDashStreamingParameter
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.MpegDashStreamingParameter
  id: MpegDashStreamingParameter
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions
  langs:
  - csharp
  - vb
  name: MpegDashStreamingParameter
  nameWithType: ILocatorExtensions.MpegDashStreamingParameter
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.MpegDashStreamingParameter
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/ILocatorExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: MpegDashStreamingParameter
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/ILocatorExtensions.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents the URL dynamic packaging parameter for MPEG-DASH.\n"
  example: []
  syntax:
    content: public const string MpegDashStreamingParameter = "(format=mpd-time-csf)"
    content.vb: Public Const MpegDashStreamingParameter As String = "(format=mpd-time-csf)"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetSmoothStreamingUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetSmoothStreamingUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  id: GetSmoothStreamingUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions
  langs:
  - csharp
  - vb
  name: GetSmoothStreamingUri(ILocator)
  nameWithType: ILocatorExtensions.GetSmoothStreamingUri(ILocator)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetSmoothStreamingUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/ILocatorExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: GetSmoothStreamingUri
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/ILocatorExtensions.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns the Smooth Streaming URL of the <span class=\"paramref\">originLocator</span>; otherwise, null.\n"
  example: []
  syntax:
    content: public static Uri GetSmoothStreamingUri(this ILocator originLocator)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSmoothStreamingUri(originLocator As ILocator) As Uri
    parameters:
    - id: originLocator
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.ILocator" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> representing the Smooth Streaming URL of the <span class="paramref">originLocator</span>; otherwise, null.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetSmoothStreamingUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  id: GetHlsUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions
  langs:
  - csharp
  - vb
  name: GetHlsUri(ILocator)
  nameWithType: ILocatorExtensions.GetHlsUri(ILocator)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/ILocatorExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: GetHlsUri
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/ILocatorExtensions.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns the HLS version 4 URL of the <span class=\"paramref\">originLocator</span>; otherwise, null.\n"
  example: []
  syntax:
    content: public static Uri GetHlsUri(this ILocator originLocator)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetHlsUri(originLocator As ILocator) As Uri
    parameters:
    - id: originLocator
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.ILocator" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> representing the HLS version 4 URL of the <span class="paramref">originLocator</span>; otherwise, null.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsv3Uri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsv3Uri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  id: GetHlsv3Uri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions
  langs:
  - csharp
  - vb
  name: GetHlsv3Uri(ILocator)
  nameWithType: ILocatorExtensions.GetHlsv3Uri(ILocator)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsv3Uri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/ILocatorExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: GetHlsv3Uri
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/ILocatorExtensions.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns the HLS version 3 URL of the <span class=\"paramref\">originLocator</span>; otherwise, null.\n"
  example: []
  syntax:
    content: public static Uri GetHlsv3Uri(this ILocator originLocator)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetHlsv3Uri(originLocator As ILocator) As Uri
    parameters:
    - id: originLocator
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.ILocator" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> representing the HLS version 3 URL of the <span class="paramref">originLocator</span>; otherwise, null.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsv3Uri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetMpegDashUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetMpegDashUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  id: GetMpegDashUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions
  langs:
  - csharp
  - vb
  name: GetMpegDashUri(ILocator)
  nameWithType: ILocatorExtensions.GetMpegDashUri(ILocator)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetMpegDashUri(Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/ILocatorExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: GetMpegDashUri
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/ILocatorExtensions.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns the MPEG-DASH URL of the <span class=\"paramref\">originLocator</span>; otherwise, null.\n"
  example: []
  syntax:
    content: public static Uri GetMpegDashUri(this ILocator originLocator)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetMpegDashUri(originLocator As ILocator) As Uri
    parameters:
    - id: originLocator
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.ILocator" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> representing the MPEG-DASH URL of the <span class="paramref">originLocator</span>; otherwise, null.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetMpegDashUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ILocator
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: ILocator
  nameWithType: ILocator
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetSmoothStreamingUri*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetSmoothStreamingUri
  isExternal: false
  name: GetSmoothStreamingUri
  nameWithType: ILocatorExtensions.GetSmoothStreamingUri
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetSmoothStreamingUri
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsUri*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsUri
  isExternal: false
  name: GetHlsUri
  nameWithType: ILocatorExtensions.GetHlsUri
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsUri
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsv3Uri*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsv3Uri
  isExternal: false
  name: GetHlsv3Uri
  nameWithType: ILocatorExtensions.GetHlsv3Uri
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetHlsv3Uri
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetMpegDashUri*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetMpegDashUri
  isExternal: false
  name: GetMpegDashUri
  nameWithType: ILocatorExtensions.GetMpegDashUri
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocatorExtensions.GetMpegDashUri
