### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions
  id: IAssetFileExtensions
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile)
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadata(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile,Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadataAsync(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile)
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile,Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  langs:
  - csharp
  - vb
  name: IAssetFileExtensions
  nameWithType: IAssetFileExtensions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions
  type: Class
  source:
    remote:
      path: MediaServices.Client.Extensions/IAssetFileExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: IAssetFileExtensions
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/IAssetFileExtensions.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nContains extension methods and helpers for the <see cref=\"!:IAssetFiles\"></see> interface.\n"
  example: []
  syntax:
    content: public static class IAssetFileExtensions
    content.vb: Public Module IAssetFileExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadataAsync(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadataAsync(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  id: GetMetadataAsync(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions
  langs:
  - csharp
  - vb
  name: GetMetadataAsync(IAssetFile, ILocator, CancellationToken)
  nameWithType: IAssetFileExtensions.GetMetadataAsync(IAssetFile, ILocator, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadataAsync(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile, Microsoft.WindowsAzure.MediaServices.Client.ILocator, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/IAssetFileExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: GetMetadataAsync
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/IAssetFileExtensions.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns a <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref> instance to retrieve the <span class=\"paramref\">assetFile</span> metadata.\n"
  example: []
  syntax:
    content: public static Task<AssetFileMetadata> GetMetadataAsync(this IAssetFile assetFile, ILocator sasLocator, CancellationToken cancellationToken)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetMetadataAsync(assetFile As IAssetFile, sasLocator As ILocator, cancellationToken As CancellationToken) As Task(Of AssetFileMetadata)
    parameters:
    - id: assetFile
      type: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.IAssetFile" data-throw-if-not-resolved="false"></xref> instance from where to get the metadata.
    - id: sasLocator
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.ILocator" data-throw-if-not-resolved="false"></xref> instance.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> instance used for cancellation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> instance to retrieve the <span class="paramref">assetFile</span> metadata.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadataAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadata(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile,Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadata(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile,Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  id: GetMetadata(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile,Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions
  langs:
  - csharp
  - vb
  name: GetMetadata(IAssetFile, ILocator)
  nameWithType: IAssetFileExtensions.GetMetadata(IAssetFile, ILocator)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadata(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile, Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/IAssetFileExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: GetMetadata
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/IAssetFileExtensions.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns a <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata\" data-throw-if-not-resolved=\"false\"></xref> instance with the <span class=\"paramref\">assetFile</span> metadata.\n"
  example: []
  syntax:
    content: public static AssetFileMetadata GetMetadata(this IAssetFile assetFile, ILocator sasLocator)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetMetadata(assetFile As IAssetFile, sasLocator As ILocator) As AssetFileMetadata
    parameters:
    - id: assetFile
      type: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.IAssetFile" data-throw-if-not-resolved="false"></xref> instance from where to get the metadata.
    - id: sasLocator
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.ILocator" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
      description: A <xref href="Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata" data-throw-if-not-resolved="false"></xref> instance with the <span class="paramref">assetFile</span> metadata.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadata*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile)
  id: GetSasUri(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions
  langs:
  - csharp
  - vb
  name: GetSasUri(IAssetFile)
  nameWithType: IAssetFileExtensions.GetSasUri(IAssetFile)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/IAssetFileExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: GetSasUri
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/IAssetFileExtensions.cs
    startLine: 96
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns the SAS URL of the <span class=\"paramref\">assetFile</span> for progressive download using the SAS locator with the longest expiration time; otherwise, null.\n"
  example: []
  syntax:
    content: public static Uri GetSasUri(this IAssetFile assetFile)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSasUri(assetFile As IAssetFile) As Uri
    parameters:
    - id: assetFile
      type: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.IAssetFile" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> representing the SAS URL of the <span class="paramref">assetFile</span> for progressive download; otherwise, null.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile,Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile,Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  id: GetSasUri(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile,Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions
  langs:
  - csharp
  - vb
  name: GetSasUri(IAssetFile, ILocator)
  nameWithType: IAssetFileExtensions.GetSasUri(IAssetFile, ILocator)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile, Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/IAssetFileExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: GetSasUri
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/IAssetFileExtensions.cs
    startLine: 128
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns the SAS URL of the <span class=\"paramref\">assetFile</span> for progressive download using the <span class=\"paramref\">sasLocator</span>.\n"
  example: []
  syntax:
    content: public static Uri GetSasUri(this IAssetFile assetFile, ILocator sasLocator)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSasUri(assetFile As IAssetFile, sasLocator As ILocator) As Uri
    parameters:
    - id: assetFile
      type: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.IAssetFile" data-throw-if-not-resolved="false"></xref> instance.
    - id: sasLocator
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.ILocator" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> representing the SAS URL of the <span class="paramref">assetFile</span> for progressive download; otherwise, null.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile)
  id: GetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions
  langs:
  - csharp
  - vb
  name: GetMediaContext(IAssetFile)
  nameWithType: IAssetFileExtensions.GetMediaContext(IAssetFile)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.IAssetFile)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/IAssetFileExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: GetMediaContext
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/IAssetFileExtensions.cs
    startLine: 160
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns the parent <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public static MediaContextBase GetMediaContext(this IAssetFile assetFile)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetMediaContext(assetFile As IAssetFile) As MediaContextBase
    parameters:
    - id: assetFile
      type: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.IAssetFile" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
      description: The parent <xref href="Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase" data-throw-if-not-resolved="false"></xref> instance.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMediaContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IAssetFile
  nameWithType: IAssetFile
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ILocator
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: ILocator
  nameWithType: ILocator
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadataAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadataAsync
  isExternal: false
  name: GetMetadataAsync
  nameWithType: IAssetFileExtensions.GetMetadataAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadataAsync
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AssetFileMetadata>
  nameWithType: Task<AssetFileMetadata>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata>
  nameWithType.vb: Task(Of AssetFileMetadata)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata)
  name.vb: Task(Of AssetFileMetadata)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
    name: AssetFileMetadata
    nameWithType: AssetFileMetadata
    fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
    name: AssetFileMetadata
    nameWithType: AssetFileMetadata
    fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  isExternal: false
  name: AssetFileMetadata
  nameWithType: AssetFileMetadata
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadata*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadata
  isExternal: false
  name: GetMetadata
  nameWithType: IAssetFileExtensions.GetMetadata
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMetadata
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client.Metadata
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri
  isExternal: false
  name: GetSasUri
  nameWithType: IAssetFileExtensions.GetSasUri
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetSasUri
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: MediaContextBase
  nameWithType: MediaContextBase
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMediaContext*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMediaContext
  isExternal: false
  name: GetMediaContext
  nameWithType: IAssetFileExtensions.GetMediaContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFileExtensions.GetMediaContext
