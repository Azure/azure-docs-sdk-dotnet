### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  id: IAssetFile
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Asset
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.AssetFileOptions
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentChecksum
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentFileSize
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Created
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Delete
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DeleteAsync
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Download(System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DownloadAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DownloadProgressChanged
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionKeyId
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionScheme
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionVersion
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Id
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.InitializationVector
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsEncrypted
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsPrimary
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.LastModified
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.MimeType
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Name
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ParentAssetId
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Update
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UpdateAsync
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload(System.IO.Stream)
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload(System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync(System.IO.Stream,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadProgressChanged
  langs:
  - csharp
  - vb
  name: IAssetFile
  nameWithType: IAssetFile
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  type: Interface
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IAssetFile
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents a file belonging to an Asset.\n"
  example: []
  syntax:
    content: public interface IAssetFile
    content.vb: Public Interface IAssetFile
  see:
  - linkId: Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetFiles
    commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetFiles
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Id
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Id
  id: Id
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IAssetFile.Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Id
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Id
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Id { get; }
    content.vb: ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.MimeType
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.MimeType
  id: MimeType
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: MimeType
  nameWithType: IAssetFile.MimeType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.MimeType
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MimeType
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 81
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string MimeType { get; set; }
    content.vb: Property MimeType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.MimeType*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Created
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Created
  id: Created
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: IAssetFile.Created
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Created
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Created
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: DateTime Created { get; }
    content.vb: ReadOnly Property Created As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Created*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.LastModified
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.LastModified
  id: LastModified
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: IAssetFile.LastModified
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.LastModified
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LastModified
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 92
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: DateTime LastModified { get; }
    content.vb: ReadOnly Property LastModified As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.LastModified*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsPrimary
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsPrimary
  id: IsPrimary
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: IsPrimary
  nameWithType: IAssetFile.IsPrimary
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsPrimary
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IsPrimary
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: bool IsPrimary { get; set; }
    content.vb: Property IsPrimary As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsPrimary*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentFileSize
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentFileSize
  id: ContentFileSize
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: ContentFileSize
  nameWithType: IAssetFile.ContentFileSize
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentFileSize
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ContentFileSize
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: long ContentFileSize { get; set; }
    content.vb: Property ContentFileSize As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentFileSize*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentChecksum
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentChecksum
  id: ContentChecksum
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: ContentChecksum
  nameWithType: IAssetFile.ContentChecksum
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentChecksum
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ContentChecksum
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 108
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: >-
      [Obsolete]

      string ContentChecksum { get; }
    content.vb: >-
      <Obsolete>

      ReadOnly Property ContentChecksum As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentChecksum*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Name
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Name
  id: Name
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IAssetFile.Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Name
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Name
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 114
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Name { get; }
    content.vb: ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ParentAssetId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ParentAssetId
  id: ParentAssetId
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: ParentAssetId
  nameWithType: IAssetFile.ParentAssetId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ParentAssetId
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ParentAssetId
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 119
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string ParentAssetId { get; }
    content.vb: ReadOnly Property ParentAssetId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ParentAssetId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionVersion
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionVersion
  id: EncryptionVersion
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: EncryptionVersion
  nameWithType: IAssetFile.EncryptionVersion
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionVersion
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptionVersion
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 124
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string EncryptionVersion { get; }
    content.vb: ReadOnly Property EncryptionVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionVersion*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionScheme
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionScheme
  id: EncryptionScheme
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: EncryptionScheme
  nameWithType: IAssetFile.EncryptionScheme
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionScheme
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptionScheme
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 129
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string EncryptionScheme { get; }
    content.vb: ReadOnly Property EncryptionScheme As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionScheme*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsEncrypted
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsEncrypted
  id: IsEncrypted
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: IsEncrypted
  nameWithType: IAssetFile.IsEncrypted
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsEncrypted
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IsEncrypted
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 134
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: bool IsEncrypted { get; }
    content.vb: ReadOnly Property IsEncrypted As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsEncrypted*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionKeyId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionKeyId
  id: EncryptionKeyId
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: EncryptionKeyId
  nameWithType: IAssetFile.EncryptionKeyId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionKeyId
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptionKeyId
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 139
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string EncryptionKeyId { get; }
    content.vb: ReadOnly Property EncryptionKeyId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionKeyId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.InitializationVector
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.InitializationVector
  id: InitializationVector
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: InitializationVector
  nameWithType: IAssetFile.InitializationVector
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.InitializationVector
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: InitializationVector
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 144
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string InitializationVector { get; }
    content.vb: ReadOnly Property InitializationVector As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.InitializationVector*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.AssetFileOptions
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.AssetFileOptions
  id: AssetFileOptions
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: AssetFileOptions
  nameWithType: IAssetFile.AssetFileOptions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.AssetFileOptions
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AssetFileOptions
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 149
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: AssetFileOptions AssetFileOptions { get; }
    content.vb: ReadOnly Property AssetFileOptions As AssetFileOptions
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.AssetFileOptions
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.AssetFileOptions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DownloadProgressChanged
  commentId: E:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DownloadProgressChanged
  id: DownloadProgressChanged
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: DownloadProgressChanged
  nameWithType: IAssetFile.DownloadProgressChanged
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DownloadProgressChanged
  type: Event
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DownloadProgressChanged
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nOccurs when a file download progresses.\n"
  example: []
  syntax:
    content: event EventHandler<DownloadProgressChangedEventArgs> DownloadProgressChanged
    content.vb: Event DownloadProgressChanged As EventHandler(Of DownloadProgressChangedEventArgs)
    return:
      type: System.EventHandler{Microsoft.WindowsAzure.MediaServices.Client.DownloadProgressChangedEventArgs}
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadProgressChanged
  commentId: E:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadProgressChanged
  id: UploadProgressChanged
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: UploadProgressChanged
  nameWithType: IAssetFile.UploadProgressChanged
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadProgressChanged
  type: Event
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UploadProgressChanged
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nOccurs when the upload progress is updated.\n"
  example: []
  syntax:
    content: event EventHandler<UploadProgressChangedEventArgs> UploadProgressChanged
    content.vb: Event UploadProgressChanged As EventHandler(Of UploadProgressChangedEventArgs)
    return:
      type: System.EventHandler{Microsoft.WindowsAzure.MediaServices.Client.UploadProgressChangedEventArgs}
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Asset
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Asset
  id: Asset
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: Asset
  nameWithType: IAssetFile.Asset
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Asset
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Asset
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the asset that this file belongs to.\n"
  example: []
  syntax:
    content: IAsset Asset { get; }
    content.vb: ReadOnly Property Asset As IAsset
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.IAsset
      description: The parent <xref href="Microsoft.WindowsAzure.MediaServices.Client.IAsset" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Asset*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DownloadAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DownloadAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  id: DownloadAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: DownloadAsync(String, BlobTransferClient, ILocator, CancellationToken)
  nameWithType: IAssetFile.DownloadAsync(String, BlobTransferClient, ILocator, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DownloadAsync(System.String, Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient, Microsoft.WindowsAzure.MediaServices.Client.ILocator, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DownloadAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAsynchronously downloads the represented file to the specified destination path.\n"
  example: []
  syntax:
    content: Task DownloadAsync(string destinationPath, BlobTransferClient blobTransferClient, ILocator locator, CancellationToken cancellationToken)
    content.vb: Function DownloadAsync(destinationPath As String, blobTransferClient As BlobTransferClient, locator As ILocator, cancellationToken As CancellationToken) As Task
    parameters:
    - id: destinationPath
      type: System.String
      description: The path to download the file to.
    - id: blobTransferClient
      type: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient" data-throw-if-not-resolved="false"></xref> which is used to download files.
    - id: locator
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: An asset <xref href="Microsoft.WindowsAzure.MediaServices.Client.ILocator" data-throw-if-not-resolved="false"></xref> which defines permissions associated with the Asset.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA function delegate that returns the future result to be available through the Task.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DownloadAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Download(System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Download(System.String)
  id: Download(System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: Download(String)
  nameWithType: IAssetFile.Download(String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Download(System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Download
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nDownloads the represented file to the specified destination path.\n"
  example: []
  syntax:
    content: void Download(string destinationPath)
    content.vb: Sub Download(destinationPath As String)
    parameters:
    - id: destinationPath
      type: System.String
      description: The path to download the file to.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Download*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UpdateAsync
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UpdateAsync
  id: UpdateAsync
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: UpdateAsync()
  nameWithType: IAssetFile.UpdateAsync()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UpdateAsync()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UpdateAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 68
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAsynchronously updates this instance.\n"
  example: []
  syntax:
    content: Task UpdateAsync()
    content.vb: Function UpdateAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UpdateAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Update
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Update
  id: Update
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: IAssetFile.Update()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Update()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Update
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSaves this instance.\n"
  example: []
  syntax:
    content: void Update()
    content.vb: Sub Update
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Update*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Delete
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Delete
  id: Delete
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: IAssetFile.Delete()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Delete()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Delete
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nDeletes this instance.\n"
  example: []
  syntax:
    content: void Delete()
    content.vb: Sub Delete
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Delete*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  nameWithType: IAssetFile.DeleteAsync()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DeleteAsync()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DeleteAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAsynchronously deletes this instance.\n"
  example: []
  syntax:
    content: Task DeleteAsync()
    content.vb: Function DeleteAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DeleteAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  id: UploadAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: UploadAsync(String, BlobTransferClient, ILocator, CancellationToken)
  nameWithType: IAssetFile.UploadAsync(String, BlobTransferClient, ILocator, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync(System.String, Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient, Microsoft.WindowsAzure.MediaServices.Client.ILocator, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UploadAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 94
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUploads the file with given path asynchronously\n"
  example: []
  syntax:
    content: Task UploadAsync(string path, BlobTransferClient blobTransferClient, ILocator locator, CancellationToken token)
    content.vb: Function UploadAsync(path As String, blobTransferClient As BlobTransferClient, locator As ILocator, token As CancellationToken) As Task
    parameters:
    - id: path
      type: System.String
      description: 'The path of a file to upload. The file name will be used as the asset file''s name in Azure. '
    - id: blobTransferClient
      type: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient" data-throw-if-not-resolved="false"></xref> which is used to upload files.
    - id: locator
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: A locator <xref href="Microsoft.WindowsAzure.MediaServices.Client.ILocator" data-throw-if-not-resolved="false"></xref> which defines permissions associated with the Asset.
    - id: token
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to use for canceling upload operation.
    return:
      type: System.Threading.Tasks.Task
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync(System.IO.Stream,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync(System.IO.Stream,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  id: UploadAsync(System.IO.Stream,Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient,Microsoft.WindowsAzure.MediaServices.Client.ILocator,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: UploadAsync(Stream, BlobTransferClient, ILocator, CancellationToken)
  nameWithType: IAssetFile.UploadAsync(Stream, BlobTransferClient, ILocator, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync(System.IO.Stream, Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient, Microsoft.WindowsAzure.MediaServices.Client.ILocator, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UploadAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUploads a stream asynchronously\n"
  example: []
  syntax:
    content: Task UploadAsync(Stream stream, BlobTransferClient blobTransferClient, ILocator locator, CancellationToken token)
    content.vb: Function UploadAsync(stream As Stream, blobTransferClient As BlobTransferClient, locator As ILocator, token As CancellationToken) As Task
    parameters:
    - id: stream
      type: System.IO.Stream
      description: Stream to be uploaded. Must have the position set to the start of the data.
    - id: blobTransferClient
      type: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient" data-throw-if-not-resolved="false"></xref> which is used to upload files.
    - id: locator
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: A locator <xref href="Microsoft.WindowsAzure.MediaServices.Client.ILocator" data-throw-if-not-resolved="false"></xref> which defines permissions associated with the Asset.
    - id: token
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to use for canceling upload operation.
    return:
      type: System.Threading.Tasks.Task
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload(System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload(System.String)
  id: Upload(System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: Upload(String)
  nameWithType: IAssetFile.Upload(String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload(System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Upload
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 110
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUploads the file with given path \n"
  example: []
  syntax:
    content: void Upload(string path)
    content.vb: Sub Upload(path As String)
    parameters:
    - id: path
      type: System.String
      description: The path of a file to upload.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload(System.IO.Stream)
  id: Upload(System.IO.Stream)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile
  langs:
  - csharp
  - vb
  name: Upload(Stream)
  nameWithType: IAssetFile.Upload(Stream)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/IAssetFile.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Upload
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/IAssetFile.cs
    startLine: 116
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUploads a stream\n"
  example: []
  syntax:
    content: void Upload(Stream stream)
    content.vb: Sub Upload(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: Stream to be uploaded. Must have the position set to the start of the data.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload*
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetFiles
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IAsset.AssetFiles
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Id*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Id
  isExternal: false
  name: Id
  nameWithType: IAssetFile.Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.MimeType*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.MimeType
  isExternal: false
  name: MimeType
  nameWithType: IAssetFile.MimeType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.MimeType
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Created*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Created
  isExternal: false
  name: Created
  nameWithType: IAssetFile.Created
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Created
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.LastModified*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.LastModified
  isExternal: false
  name: LastModified
  nameWithType: IAssetFile.LastModified
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.LastModified
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsPrimary*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsPrimary
  isExternal: false
  name: IsPrimary
  nameWithType: IAssetFile.IsPrimary
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsPrimary
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentFileSize*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentFileSize
  isExternal: false
  name: ContentFileSize
  nameWithType: IAssetFile.ContentFileSize
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentFileSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentChecksum*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentChecksum
  isExternal: false
  name: ContentChecksum
  nameWithType: IAssetFile.ContentChecksum
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ContentChecksum
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Name*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Name
  isExternal: false
  name: Name
  nameWithType: IAssetFile.Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Name
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ParentAssetId*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ParentAssetId
  isExternal: false
  name: ParentAssetId
  nameWithType: IAssetFile.ParentAssetId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.ParentAssetId
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionVersion*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionVersion
  isExternal: false
  name: EncryptionVersion
  nameWithType: IAssetFile.EncryptionVersion
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionVersion
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionScheme*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionScheme
  isExternal: false
  name: EncryptionScheme
  nameWithType: IAssetFile.EncryptionScheme
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionScheme
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsEncrypted*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsEncrypted
  isExternal: false
  name: IsEncrypted
  nameWithType: IAssetFile.IsEncrypted
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.IsEncrypted
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionKeyId*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionKeyId
  isExternal: false
  name: EncryptionKeyId
  nameWithType: IAssetFile.EncryptionKeyId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.EncryptionKeyId
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.InitializationVector*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.InitializationVector
  isExternal: false
  name: InitializationVector
  nameWithType: IAssetFile.InitializationVector
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.InitializationVector
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.AssetFileOptions*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.AssetFileOptions
  isExternal: false
  name: AssetFileOptions
  nameWithType: IAssetFile.AssetFileOptions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.AssetFileOptions
- uid: Microsoft.WindowsAzure.MediaServices.Client.AssetFileOptions
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.AssetFileOptions
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: AssetFileOptions
  nameWithType: AssetFileOptions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AssetFileOptions
- uid: System.EventHandler{Microsoft.WindowsAzure.MediaServices.Client.DownloadProgressChangedEventArgs}
  commentId: T:System.EventHandler{Microsoft.WindowsAzure.MediaServices.Client.DownloadProgressChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<DownloadProgressChangedEventArgs>
  nameWithType: EventHandler<DownloadProgressChangedEventArgs>
  fullName: System.EventHandler<Microsoft.WindowsAzure.MediaServices.Client.DownloadProgressChangedEventArgs>
  nameWithType.vb: EventHandler(Of DownloadProgressChangedEventArgs)
  fullname.vb: System.EventHandler(Of Microsoft.WindowsAzure.MediaServices.Client.DownloadProgressChangedEventArgs)
  name.vb: EventHandler(Of DownloadProgressChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.DownloadProgressChangedEventArgs
    name: DownloadProgressChangedEventArgs
    nameWithType: DownloadProgressChangedEventArgs
    fullName: Microsoft.WindowsAzure.MediaServices.Client.DownloadProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.DownloadProgressChangedEventArgs
    name: DownloadProgressChangedEventArgs
    nameWithType: DownloadProgressChangedEventArgs
    fullName: Microsoft.WindowsAzure.MediaServices.Client.DownloadProgressChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Microsoft.WindowsAzure.MediaServices.Client.UploadProgressChangedEventArgs}
  commentId: T:System.EventHandler{Microsoft.WindowsAzure.MediaServices.Client.UploadProgressChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<UploadProgressChangedEventArgs>
  nameWithType: EventHandler<UploadProgressChangedEventArgs>
  fullName: System.EventHandler<Microsoft.WindowsAzure.MediaServices.Client.UploadProgressChangedEventArgs>
  nameWithType.vb: EventHandler(Of UploadProgressChangedEventArgs)
  fullname.vb: System.EventHandler(Of Microsoft.WindowsAzure.MediaServices.Client.UploadProgressChangedEventArgs)
  name.vb: EventHandler(Of UploadProgressChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.UploadProgressChangedEventArgs
    name: UploadProgressChangedEventArgs
    nameWithType: UploadProgressChangedEventArgs
    fullName: Microsoft.WindowsAzure.MediaServices.Client.UploadProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.UploadProgressChangedEventArgs
    name: UploadProgressChangedEventArgs
    nameWithType: UploadProgressChangedEventArgs
    fullName: Microsoft.WindowsAzure.MediaServices.Client.UploadProgressChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IAsset
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IAsset
  nameWithType: IAsset
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Asset*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Asset
  isExternal: false
  name: Asset
  nameWithType: IAssetFile.Asset
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Asset
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: BlobTransferClient
  nameWithType: BlobTransferClient
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ILocator
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: ILocator
  nameWithType: ILocator
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DownloadAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DownloadAsync
  isExternal: false
  name: DownloadAsync
  nameWithType: IAssetFile.DownloadAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DownloadAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Download*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Download
  isExternal: false
  name: Download
  nameWithType: IAssetFile.Download
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Download
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UpdateAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UpdateAsync
  isExternal: false
  name: UpdateAsync
  nameWithType: IAssetFile.UpdateAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UpdateAsync
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Update*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Update
  isExternal: false
  name: Update
  nameWithType: IAssetFile.Update
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Update
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Delete*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Delete
  isExternal: false
  name: Delete
  nameWithType: IAssetFile.Delete
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Delete
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DeleteAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: IAssetFile.DeleteAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.DeleteAsync
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync
  isExternal: false
  name: UploadAsync
  nameWithType: IAssetFile.UploadAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.UploadAsync
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload
  isExternal: false
  name: Upload
  nameWithType: IAssetFile.Upload
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAssetFile.Upload
