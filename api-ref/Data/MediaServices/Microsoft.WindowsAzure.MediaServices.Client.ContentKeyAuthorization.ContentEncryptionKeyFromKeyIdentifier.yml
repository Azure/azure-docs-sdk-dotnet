### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier
  id: ContentEncryptionKeyFromKeyIdentifier
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.#ctor(System.Guid)
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.KeyIdentifier
  langs:
  - csharp
  - vb
  name: ContentEncryptionKeyFromKeyIdentifier
  nameWithType: ContentEncryptionKeyFromKeyIdentifier
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier
  type: Class
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyContentKey.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ContentEncryptionKeyFromKeyIdentifier
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/PlayReadyContentKey.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nConfigures the license server to embed the content key identified by the KeyIdentifier property of the ContentEncryptionKeyFromKeyIdentifier\nin the returned license.  This is not typcially used but does allow a specific content key identifier to be put in the license template.\nNote that if the content key returned in the license does not match the content key needed to play the content (which is configured in the\nheader) the player will be unable to play the content.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1")]

      public class ContentEncryptionKeyFromKeyIdentifier : PlayReadyContentKey
    content.vb: >-
      <DataContract(Namespace:="http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1")>

      Public Class ContentEncryptionKeyFromKeyIdentifier
          Inherits PlayReadyContentKey
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyContentKey
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.KeyIdentifier
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.KeyIdentifier
  id: KeyIdentifier
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier
  langs:
  - csharp
  - vb
  name: KeyIdentifier
  nameWithType: ContentEncryptionKeyFromKeyIdentifier.KeyIdentifier
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.KeyIdentifier
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyContentKey.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: KeyIdentifier
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/PlayReadyContentKey.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nIdentifier of the content key to embed in the license.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Guid KeyIdentifier { get; }
    content.vb: >-
      <DataMember>

      Public ReadOnly Property KeyIdentifier As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.KeyIdentifier*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.#ctor(System.Guid)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier
  langs:
  - csharp
  - vb
  name: ContentEncryptionKeyFromKeyIdentifier(Guid)
  nameWithType: ContentEncryptionKeyFromKeyIdentifier.ContentEncryptionKeyFromKeyIdentifier(Guid)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.ContentEncryptionKeyFromKeyIdentifier(System.Guid)
  type: Constructor
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/PlayReadyContentKey.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/PlayReadyContentKey.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  syntax:
    content: public ContentEncryptionKeyFromKeyIdentifier(Guid keyIdentifier)
    content.vb: Public Sub New(keyIdentifier As Guid)
    parameters:
    - id: keyIdentifier
      type: System.Guid
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyContentKey
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyContentKey
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: PlayReadyContentKey
  nameWithType: PlayReadyContentKey
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.PlayReadyContentKey
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.KeyIdentifier*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.KeyIdentifier
  isExternal: false
  name: KeyIdentifier
  nameWithType: ContentEncryptionKeyFromKeyIdentifier.KeyIdentifier
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.KeyIdentifier
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.#ctor
  isExternal: false
  name: ContentEncryptionKeyFromKeyIdentifier
  nameWithType: ContentEncryptionKeyFromKeyIdentifier.ContentEncryptionKeyFromKeyIdentifier
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ContentEncryptionKeyFromKeyIdentifier.ContentEncryptionKeyFromKeyIdentifier
