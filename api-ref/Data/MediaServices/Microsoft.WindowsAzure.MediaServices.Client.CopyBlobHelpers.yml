### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers
  id: CopyBlobHelpers
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobAsync(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobsAsync(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.MaxNumberOfConcurrentCopyFromBlobOperations
  langs:
  - csharp
  - vb
  name: CopyBlobHelpers
  nameWithType: CopyBlobHelpers
  fullName: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers
  type: Class
  source:
    remote:
      path: MediaServices.Client.Extensions/CopyBlobHelpers.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: CopyBlobHelpers
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/CopyBlobHelpers.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nContains helper methods for copying blobs.\n"
  example: []
  syntax:
    content: public static class CopyBlobHelpers
    content.vb: Public Module CopyBlobHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.MaxNumberOfConcurrentCopyFromBlobOperations
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.MaxNumberOfConcurrentCopyFromBlobOperations
  id: MaxNumberOfConcurrentCopyFromBlobOperations
  parent: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers
  langs:
  - csharp
  - vb
  name: MaxNumberOfConcurrentCopyFromBlobOperations
  nameWithType: CopyBlobHelpers.MaxNumberOfConcurrentCopyFromBlobOperations
  fullName: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.MaxNumberOfConcurrentCopyFromBlobOperations
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/CopyBlobHelpers.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: MaxNumberOfConcurrentCopyFromBlobOperations
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/CopyBlobHelpers.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents the maximum number of concurrent Copy Blob operations when copying content from a source container to a destination container.\n"
  example: []
  syntax:
    content: public const int MaxNumberOfConcurrentCopyFromBlobOperations = 750
    content.vb: Public Const MaxNumberOfConcurrentCopyFromBlobOperations As Integer = 750
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobsAsync(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobsAsync(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,System.Threading.CancellationToken)
  id: CopyBlobsAsync(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers
  langs:
  - csharp
  - vb
  name: CopyBlobsAsync(CloudBlobContainer, CloudBlobContainer, BlobRequestOptions, CancellationToken)
  nameWithType: CopyBlobHelpers.CopyBlobsAsync(CloudBlobContainer, CloudBlobContainer, BlobRequestOptions, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobsAsync(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/CopyBlobHelpers.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: CopyBlobsAsync
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/CopyBlobHelpers.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns a <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> instance for the copy blobs operation from <span class=\"paramref\">sourceContainer</span> to <span class=\"paramref\">destinationContainer</span>.\n"
  example: []
  syntax:
    content: public static Task CopyBlobsAsync(CloudBlobContainer sourceContainer, CloudBlobContainer destinationContainer, BlobRequestOptions options, CancellationToken cancellationToken)
    content.vb: Public Shared Function CopyBlobsAsync(sourceContainer As CloudBlobContainer, destinationContainer As CloudBlobContainer, options As BlobRequestOptions, cancellationToken As CancellationToken) As Task
    parameters:
    - id: sourceContainer
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
      description: The <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer" data-throw-if-not-resolved="false"></xref> instance that contains the blobs to be copied into <span class="paramref">destinationContainer</span>.
    - id: destinationContainer
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
      description: The <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer" data-throw-if-not-resolved="false"></xref> instance where the blobs from <span class="paramref">sourceContainer</span> will be copied.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: The <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> instance used for cancellation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> instance for the copy blobs operation from <span class="paramref">sourceContainer</span> to <span class="paramref">destinationContainer</span>.
  overload: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobAsync(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobAsync(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,System.Threading.CancellationToken)
  id: CopyBlobAsync(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers
  langs:
  - csharp
  - vb
  name: CopyBlobAsync(CloudBlockBlob, CloudBlockBlob, BlobRequestOptions, CancellationToken)
  nameWithType: CopyBlobHelpers.CopyBlobAsync(CloudBlockBlob, CloudBlockBlob, BlobRequestOptions, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobAsync(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/CopyBlobHelpers.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: CopyBlobAsync
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/CopyBlobHelpers.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns a <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> instance for the copy blob operation from <span class=\"paramref\">sourceBlob</span> to <span class=\"paramref\">destinationBlob</span>.\n"
  example: []
  syntax:
    content: public static Task CopyBlobAsync(CloudBlockBlob sourceBlob, CloudBlockBlob destinationBlob, BlobRequestOptions options, CancellationToken cancellationToken)
    content.vb: Public Shared Function CopyBlobAsync(sourceBlob As CloudBlockBlob, destinationBlob As CloudBlockBlob, options As BlobRequestOptions, cancellationToken As CancellationToken) As Task
    parameters:
    - id: sourceBlob
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
      description: The <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob" data-throw-if-not-resolved="false"></xref> instance to be copied to <span class="paramref">destinationBlob</span>.
    - id: destinationBlob
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
      description: The <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob" data-throw-if-not-resolved="false"></xref> instance where <span class="paramref">sourceBlob</span> will be copied.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: The <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> instance used for cancellation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> instance for the copy blob operation from <span class="paramref">sourceBlob</span> to <span class="paramref">destinationBlob</span>.
  overload: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: true
  name: CloudBlobContainer
  nameWithType: CloudBlobContainer
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: true
  name: BlobRequestOptions
  nameWithType: BlobRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobsAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobsAsync
  isExternal: false
  name: CopyBlobsAsync
  nameWithType: CopyBlobHelpers.CopyBlobsAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobsAsync
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.Storage.Blob
  commentId: N:Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  nameWithType: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: true
  name: CloudBlockBlob
  nameWithType: CloudBlockBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
- uid: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobAsync
  isExternal: false
  name: CopyBlobAsync
  nameWithType: CopyBlobHelpers.CopyBlobAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.CopyBlobHelpers.CopyBlobAsync
