### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  id: AcsTokenProvider
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String})
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AccessToken
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddress
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddressList
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientId
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientSecret
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAccessToken
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAuthorizationHeader
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.MediaServicesAccessScope
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.MediaServicesAccountName
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ParseTokenExpiration(System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.PublicAcsBaseAddressList
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshToken
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshTokenRetryPolicy
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.Scope
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.SetAcsToken(System.Byte[])
  - Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.TokenExpiration
  langs:
  - csharp
  - vb
  name: AcsTokenProvider
  nameWithType: AcsTokenProvider
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  type: Class
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AcsTokenProvider
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: 'public abstract class AcsTokenProvider : ITokenProvider'
    content.vb: >-
      Public MustInherit Class AcsTokenProvider
          Implements ITokenProvider
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.WindowsAzure.MediaServices.Client.MediaServicesCredentials
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.PublicAcsBaseAddressList
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.PublicAcsBaseAddressList
  id: PublicAcsBaseAddressList
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: PublicAcsBaseAddressList
  nameWithType: AcsTokenProvider.PublicAcsBaseAddressList
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.PublicAcsBaseAddressList
  type: Field
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: PublicAcsBaseAddressList
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: protected static IList<string> PublicAcsBaseAddressList
    content.vb: Protected Shared PublicAcsBaseAddressList As IList(Of String)
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.MediaServicesAccessScope
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.MediaServicesAccessScope
  id: MediaServicesAccessScope
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: MediaServicesAccessScope
  nameWithType: AcsTokenProvider.MediaServicesAccessScope
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.MediaServicesAccessScope
  type: Field
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MediaServicesAccessScope
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: protected const string MediaServicesAccessScope = "urn:WindowsAzureMediaServices"
    content.vb: Protected Const MediaServicesAccessScope As String = "urn:WindowsAzureMediaServices"
    return:
      type: System.String
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddressList
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddressList
  id: AcsBaseAddressList
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: AcsBaseAddressList
  nameWithType: AcsTokenProvider.AcsBaseAddressList
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddressList
  type: Property
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AcsBaseAddressList
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nThe access control endpoints to authenticate against.\n"
  example: []
  syntax:
    content: public IList<string> AcsBaseAddressList { get; }
    content.vb: Public ReadOnly Property AcsBaseAddressList As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddressList*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddress
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddress
  id: AcsBaseAddress
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: AcsBaseAddress
  nameWithType: AcsTokenProvider.AcsBaseAddress
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddress
  type: Property
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AcsBaseAddress
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 66
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nThe access control endpoint to authenticate against.\n"
  example: []
  syntax:
    content: public string AcsBaseAddress { get; set; }
    content.vb: Public Property AcsBaseAddress As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientSecret
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientSecret
  id: ClientSecret
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: ClientSecret
  nameWithType: AcsTokenProvider.ClientSecret
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientSecret
  type: Property
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ClientSecret
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 75
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nThe Microsoft WindowsAzure Media Services account key to authenticate with.\n"
  example: []
  syntax:
    content: public string ClientSecret { get; set; }
    content.vb: Public Property ClientSecret As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientSecret*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientId
  id: ClientId
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: AcsTokenProvider.ClientId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientId
  type: Property
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ClientId
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nThe Microsoft WindowsAzure Media Services account name to authenticate with.\n"
  example: []
  syntax:
    content: public string ClientId { get; set; }
    content.vb: Public Property ClientId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.Scope
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.Scope
  id: Scope
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: AcsTokenProvider.Scope
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.Scope
  type: Property
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Scope
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 85
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nThe scope of authorization.\n"
  example: []
  syntax:
    content: public string Scope { get; set; }
    content.vb: Public Property Scope As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.Scope*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.MediaServicesAccountName
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.MediaServicesAccountName
  id: MediaServicesAccountName
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: MediaServicesAccountName
  nameWithType: AcsTokenProvider.MediaServicesAccountName
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.MediaServicesAccountName
  type: Property
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MediaServicesAccountName
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public string MediaServicesAccountName { get; }
    content.vb: Public ReadOnly Property MediaServicesAccountName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.MediaServicesAccountName*
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.MediaServicesAccountName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String})
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String})'
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: AcsTokenProvider(String, String, String, IList<String>)
  nameWithType: AcsTokenProvider.AcsTokenProvider(String, String, String, IList<String>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsTokenProvider(System.String, System.String, System.String, System.Collections.Generic.IList<System.String>)
  type: Constructor
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public AcsTokenProvider(string clientId, string clientSecret, string scope, IList<string> acsBaseAddressList)
    content.vb: Public Sub New(clientId As String, clientSecret As String, scope As String, acsBaseAddressList As IList(Of String))
    parameters:
    - id: clientId
      type: System.String
    - id: clientSecret
      type: System.String
    - id: scope
      type: System.String
    - id: acsBaseAddressList
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.#ctor*
  nameWithType.vb: AcsTokenProvider.AcsTokenProvider(String, String, String, IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsTokenProvider(System.String, System.String, System.String, System.Collections.Generic.IList(Of System.String))
  name.vb: AcsTokenProvider(String, String, String, IList(Of String))
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AccessToken
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AccessToken
  id: AccessToken
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: AccessToken
  nameWithType: AcsTokenProvider.AccessToken
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AccessToken
  type: Property
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AccessToken
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 113
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets OAuth Access Token to be used for web requests.\n"
  example: []
  syntax:
    content: public string AccessToken { get; set; }
    content.vb: Public Property AccessToken As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AccessToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.TokenExpiration
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.TokenExpiration
  id: TokenExpiration
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: TokenExpiration
  nameWithType: AcsTokenProvider.TokenExpiration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.TokenExpiration
  type: Property
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: TokenExpiration
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 118
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets Expiration time in UTC of OAuth Access Token used in web requests.\n"
  example: []
  syntax:
    content: public DateTime TokenExpiration { get; set; }
    content.vb: Public Property TokenExpiration As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.TokenExpiration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshTokenRetryPolicy
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshTokenRetryPolicy
  id: RefreshTokenRetryPolicy
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: RefreshTokenRetryPolicy
  nameWithType: AcsTokenProvider.RefreshTokenRetryPolicy
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshTokenRetryPolicy
  type: Property
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: RefreshTokenRetryPolicy
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 123
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRetryPolicy used for acquiring a token\n"
  example: []
  syntax:
    content: public RetryPolicy RefreshTokenRetryPolicy { get; set; }
    content.vb: Public Property RefreshTokenRetryPolicy As RetryPolicy
    parameters: []
    return:
      type: Microsoft.Practices.TransientFaultHandling.RetryPolicy
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshTokenRetryPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshToken
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshToken
  id: RefreshToken
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: RefreshToken()
  nameWithType: AcsTokenProvider.RefreshToken()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshToken()
  type: Method
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: RefreshToken
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 138
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRequests ACS token from the server and stores it for future use.\n"
  example: []
  syntax:
    content: public void RefreshToken()
    content.vb: Public Sub RefreshToken
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.SetAcsToken(System.Byte[])
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.SetAcsToken(System.Byte[])
  id: SetAcsToken(System.Byte[])
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: SetAcsToken(Byte[])
  nameWithType: AcsTokenProvider.SetAcsToken(Byte[])
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.SetAcsToken(System.Byte[])
  type: Method
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SetAcsToken
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 165
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nStores ACS token info for future use.\n"
  example: []
  syntax:
    content: public void SetAcsToken(byte[] acsResponse)
    content.vb: Public Sub SetAcsToken(acsResponse As Byte())
    parameters:
    - id: acsResponse
      type: System.Byte[]
      description: Response received from ACS server.
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.SetAcsToken*
  nameWithType.vb: AcsTokenProvider.SetAcsToken(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.SetAcsToken(System.Byte())
  name.vb: SetAcsToken(Byte())
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ParseTokenExpiration(System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ParseTokenExpiration(System.String)
  id: ParseTokenExpiration(System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: ParseTokenExpiration(String)
  nameWithType: AcsTokenProvider.ParseTokenExpiration(String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ParseTokenExpiration(System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ParseTokenExpiration
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 192
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public static DateTime ParseTokenExpiration(string token)
    content.vb: Public Shared Function ParseTokenExpiration(token As String) As Date
    parameters:
    - id: token
      type: System.String
    return:
      type: System.DateTime
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ParseTokenExpiration*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAccessToken
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAccessToken
  id: GetAccessToken
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: GetAccessToken()
  nameWithType: AcsTokenProvider.GetAccessToken()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAccessToken()
  type: Method
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetAccessToken
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 226
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the access token to use.\n"
  example: []
  syntax:
    content: public Tuple<string, DateTimeOffset> GetAccessToken()
    content.vb: Public Function GetAccessToken As Tuple(Of String, DateTimeOffset)
    return:
      type: System.Tuple{System.String,System.DateTimeOffset}
      description: A tuple of access token and its expiration time.
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAccessToken*
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAuthorizationHeader
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAuthorizationHeader
  id: GetAuthorizationHeader
  parent: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider
  langs:
  - csharp
  - vb
  name: GetAuthorizationHeader()
  nameWithType: AcsTokenProvider.GetAuthorizationHeader()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAuthorizationHeader()
  type: Method
  source:
    remote:
      path: src/net/Client/AcsTokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetAuthorizationHeader
    path: src/azure-sdk-for-media-services/src/net/Client/AcsTokenProvider.cs
    startLine: 238
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public string GetAuthorizationHeader()
    content.vb: Public Function GetAuthorizationHeader As String
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAuthorizationHeader*
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: ITokenProvider
  nameWithType: ITokenProvider
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddressList*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddressList
  isExternal: false
  name: AcsBaseAddressList
  nameWithType: AcsTokenProvider.AcsBaseAddressList
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddressList
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddress*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddress
  isExternal: false
  name: AcsBaseAddress
  nameWithType: AcsTokenProvider.AcsBaseAddress
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsBaseAddress
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientSecret*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientSecret
  isExternal: false
  name: ClientSecret
  nameWithType: AcsTokenProvider.ClientSecret
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientSecret
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientId*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientId
  isExternal: false
  name: ClientId
  nameWithType: AcsTokenProvider.ClientId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ClientId
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.Scope*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.Scope
  isExternal: false
  name: Scope
  nameWithType: AcsTokenProvider.Scope
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.Scope
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.MediaServicesAccountName*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.MediaServicesAccountName
  isExternal: false
  name: MediaServicesAccountName
  nameWithType: AcsTokenProvider.MediaServicesAccountName
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.MediaServicesAccountName
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.MediaServicesAccountName
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.MediaServicesAccountName
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
  isExternal: false
  name: MediaServicesAccountName
  nameWithType: ITokenProvider.MediaServicesAccountName
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.MediaServicesAccountName
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.#ctor
  isExternal: false
  name: AcsTokenProvider
  nameWithType: AcsTokenProvider.AcsTokenProvider
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AcsTokenProvider
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AccessToken*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AccessToken
  isExternal: false
  name: AccessToken
  nameWithType: AcsTokenProvider.AccessToken
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.AccessToken
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.TokenExpiration*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.TokenExpiration
  isExternal: false
  name: TokenExpiration
  nameWithType: AcsTokenProvider.TokenExpiration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.TokenExpiration
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshTokenRetryPolicy*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshTokenRetryPolicy
  isExternal: false
  name: RefreshTokenRetryPolicy
  nameWithType: AcsTokenProvider.RefreshTokenRetryPolicy
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshTokenRetryPolicy
- uid: Microsoft.Practices.TransientFaultHandling.RetryPolicy
  commentId: T:Microsoft.Practices.TransientFaultHandling.RetryPolicy
  parent: Microsoft.Practices.TransientFaultHandling
  isExternal: true
  name: RetryPolicy
  nameWithType: RetryPolicy
  fullName: Microsoft.Practices.TransientFaultHandling.RetryPolicy
- uid: Microsoft.Practices.TransientFaultHandling
  commentId: N:Microsoft.Practices.TransientFaultHandling
  isExternal: false
  name: Microsoft.Practices.TransientFaultHandling
  nameWithType: Microsoft.Practices.TransientFaultHandling
  fullName: Microsoft.Practices.TransientFaultHandling
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshToken*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshToken
  isExternal: false
  name: RefreshToken
  nameWithType: AcsTokenProvider.RefreshToken
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.RefreshToken
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.SetAcsToken*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.SetAcsToken
  isExternal: false
  name: SetAcsToken
  nameWithType: AcsTokenProvider.SetAcsToken
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.SetAcsToken
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ParseTokenExpiration*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ParseTokenExpiration
  isExternal: false
  name: ParseTokenExpiration
  nameWithType: AcsTokenProvider.ParseTokenExpiration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.ParseTokenExpiration
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAccessToken*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAccessToken
  isExternal: false
  name: GetAccessToken
  nameWithType: AcsTokenProvider.GetAccessToken
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAccessToken
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
  isExternal: false
  name: GetAccessToken()
  nameWithType: ITokenProvider.GetAccessToken()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken
    name: GetAccessToken
    nameWithType: ITokenProvider.GetAccessToken
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken
    name: GetAccessToken
    nameWithType: ITokenProvider.GetAccessToken
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{System.String,System.DateTimeOffset}
  commentId: T:System.Tuple{System.String,System.DateTimeOffset}
  parent: System
  definition: System.Tuple`2
  name: Tuple<String, DateTimeOffset>
  nameWithType: Tuple<String, DateTimeOffset>
  fullName: System.Tuple<System.String, System.DateTimeOffset>
  nameWithType.vb: Tuple(Of String, DateTimeOffset)
  fullname.vb: System.Tuple(Of System.String, System.DateTimeOffset)
  name.vb: Tuple(Of String, DateTimeOffset)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullname.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAuthorizationHeader*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAuthorizationHeader
  isExternal: false
  name: GetAuthorizationHeader
  nameWithType: AcsTokenProvider.GetAuthorizationHeader
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AcsTokenProvider.GetAuthorizationHeader
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
  isExternal: false
  name: GetAuthorizationHeader()
  nameWithType: ITokenProvider.GetAuthorizationHeader()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader
    name: GetAuthorizationHeader
    nameWithType: ITokenProvider.GetAuthorizationHeader
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader
    name: GetAuthorizationHeader
    nameWithType: ITokenProvider.GetAuthorizationHeader
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
