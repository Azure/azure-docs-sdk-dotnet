### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  id: IMediaDataServiceContext
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink(System.Object,System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject(System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object,System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery``2(System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink(System.Object,System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject(System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(System.Uri,System.String,System.Data.Services.Client.OperationParameter[])
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute``1(System.Uri)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.Object,System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.String,System.Boolean,System.Data.Services.Client.OperationParameter[])
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Uri,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync(System.Object,System.Data.Services.Client.DataServiceRequest[])
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.IgnoreResourceNotFoundException
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty(System.Object,System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Uri,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink(System.Object,System.String,System.Object)
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject(System.Object)
  langs:
  - csharp
  - vb
  name: IMediaDataServiceContext
  nameWithType: IMediaDataServiceContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  type: Interface
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IMediaDataServiceContext
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 23
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public interface IMediaDataServiceContext
    content.vb: Public Interface IMediaDataServiceContext
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.IgnoreResourceNotFoundException
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.IgnoreResourceNotFoundException
  id: IgnoreResourceNotFoundException
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: IgnoreResourceNotFoundException
  nameWithType: IMediaDataServiceContext.IgnoreResourceNotFoundException
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.IgnoreResourceNotFoundException
  type: Property
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IgnoreResourceNotFoundException
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets or sets whether an exception is raised when a 404 error (resource not found) is returned by the data service.\n"
  example: []
  syntax:
    content: bool IgnoreResourceNotFoundException { get; set; }
    content.vb: Property IgnoreResourceNotFoundException As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.IgnoreResourceNotFoundException*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery``2(System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery``2(System.String)
  id: CreateQuery``2(System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: CreateQuery<TIinterface, TData>(String)
  nameWithType: IMediaDataServiceContext.CreateQuery<TIinterface, TData>(String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery<TIinterface, TData>(System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateQuery
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: IQueryable<TIinterface> CreateQuery<TIinterface, TData>(string entitySetName)
    content.vb: Function CreateQuery(Of TIinterface, TData)(entitySetName As String) As IQueryable(Of TIinterface)
    parameters:
    - id: entitySetName
      type: System.String
    typeParameters:
    - id: TIinterface
    - id: TData
    return:
      type: System.Linq.IQueryable{{TIinterface}}
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery*
  nameWithType.vb: IMediaDataServiceContext.CreateQuery(Of TIinterface, TData)(String)
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery(Of TIinterface, TData)(System.String)
  name.vb: CreateQuery(Of TIinterface, TData)(String)
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object)
  id: AttachTo(System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: AttachTo(String, Object)
  nameWithType: IMediaDataServiceContext.AttachTo(String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AttachTo
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: void AttachTo(string entitySetName, object entity)
    content.vb: Sub AttachTo(entitySetName As String, entity As Object)
    parameters:
    - id: entitySetName
      type: System.String
    - id: entity
      type: System.Object
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String,System.Object,System.String)
  id: AttachTo(System.String,System.Object,System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: AttachTo(String, Object, String)
  nameWithType: IMediaDataServiceContext.AttachTo(String, Object, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo(System.String, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AttachTo
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 65
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: void AttachTo(string entitySetName, object entity, string etag)
    content.vb: Sub AttachTo(entitySetName As String, entity As Object, etag As String)
    parameters:
    - id: entitySetName
      type: System.String
    - id: entity
      type: System.Object
    - id: etag
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject(System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject(System.Object)
  id: DeleteObject(System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: DeleteObject(Object)
  nameWithType: IMediaDataServiceContext.DeleteObject(Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject(System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DeleteObject
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nChanges the state of the specified object to be deleted in the System.Data.Services.Client.DataServiceContext.\nRemarks:\nExisting objects in the Added state become detached.\n"
  example: []
  syntax:
    content: void DeleteObject(object entity)
    content.vb: Sub DeleteObject(entity As Object)
    parameters:
    - id: entity
      type: System.Object
      description: The tracked entity to be changed to the deleted state.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute``1(System.Uri)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute``1(System.Uri)
  id: Execute``1(System.Uri)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: Execute<TElement>(Uri)
  nameWithType: IMediaDataServiceContext.Execute<TElement>(Uri)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute<TElement>(System.Uri)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Execute
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 82
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSends a request to the data service to execute a specific URI.Not supported\nby the WCF Data Services 5.0 client for Silverlight.\n"
  example: []
  syntax:
    content: IEnumerable<TElement> Execute<TElement>(Uri requestUri)
    content.vb: Function Execute(Of TElement)(requestUri As Uri) As IEnumerable(Of TElement)
    parameters:
    - id: requestUri
      type: System.Uri
      description: The URI to which the query request will be sent. The URI may be any valid data service URI. Can contain $ query parameters.
    typeParameters:
    - id: TElement
      description: The type that the query returns.
    return:
      type: System.Collections.Generic.IEnumerable{{TElement}}
      description: The results of the query operation.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute*
  nameWithType.vb: IMediaDataServiceContext.Execute(Of TElement)(Uri)
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(Of TElement)(System.Uri)
  name.vb: Execute(Of TElement)(Uri)
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(System.Uri,System.String,System.Data.Services.Client.OperationParameter[])
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(System.Uri,System.String,System.Data.Services.Client.OperationParameter[])
  id: Execute(System.Uri,System.String,System.Data.Services.Client.OperationParameter[])
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: Execute(Uri, String, OperationParameter[])
  nameWithType: IMediaDataServiceContext.Execute(Uri, String, OperationParameter[])
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(System.Uri, System.String, System.Data.Services.Client.OperationParameter[])
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Execute
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 94
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSends a request to the data service to execute a specific URI by using a\nspecific HTTP method.Not supported by the WCF Data Services 5.0 client for\nSilverlight.\nThis overload expects the requestUri to end with a ServiceOperation or ServiceAction that returns void.\n"
  example: []
  syntax:
    content: OperationResponse Execute(Uri requestUri, string httpMethod, params OperationParameter[] operationParameters)
    content.vb: Function Execute(requestUri As Uri, httpMethod As String, ParamArray operationParameters As OperationParameter()) As OperationResponse
    parameters:
    - id: requestUri
      type: System.Uri
      description: The URI to which the query request will be sent. The URI may be any valid data service URI. Can contain $ query parameters.
    - id: httpMethod
      type: System.String
      description: The HTTP data transfer method used by the client.
    - id: operationParameters
      type: System.Data.Services.Client.OperationParameter[]
      description: The operation parameters used.
    return:
      type: System.Data.Services.Client.OperationResponse
      description: The response of the operation.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute*
  nameWithType.vb: IMediaDataServiceContext.Execute(Uri, String, OperationParameter())
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(System.Uri, System.String, System.Data.Services.Client.OperationParameter())
  name.vb: Execute(Uri, String, OperationParameter())
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject(System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject(System.String,System.Object)
  id: AddObject(System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: AddObject(String, Object)
  nameWithType: IMediaDataServiceContext.AddObject(String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AddObject
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: void AddObject(string entitySetName, object entity)
    content.vb: Sub AddObject(entitySetName As String, entity As Object)
    parameters:
    - id: entitySetName
      type: System.String
    - id: entity
      type: System.Object
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty(System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty(System.Object,System.String)
  id: LoadProperty(System.Object,System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: LoadProperty(Object, String)
  nameWithType: IMediaDataServiceContext.LoadProperty(Object, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LoadProperty
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 120
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLoads deferred content for a specified property from the data service.Not\nsupported by the WCF Data Services 5.0 client for Silverlight.\nRemarks:\nIf entity is in in detached or added state, this method will throw an InvalidOperationException\nsince there is nothing it can load from the server.  If entity is in unchanged\nor modified state, this method will load its collection or reference elements\nas unchanged with unchanged bindings.  If entity is in deleted state, this\nmethod will load the entities linked to by its collection or reference property\nin the unchanged state with bindings in the deleted state.\n"
  example: []
  syntax:
    content: QueryOperationResponse LoadProperty(object entity, string propertyName)
    content.vb: Function LoadProperty(entity As Object, propertyName As String) As QueryOperationResponse
    parameters:
    - id: entity
      type: System.Object
      description: The entity that contains the property to load.
    - id: propertyName
      type: System.String
      description: The name of the property of the specified entity to load.
    return:
      type: System.Data.Services.Client.QueryOperationResponse
      description: The response to the load operation.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject(System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject(System.Object)
  id: UpdateObject(System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: UpdateObject(Object)
  nameWithType: IMediaDataServiceContext.UpdateObject(Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject(System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UpdateObject
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 126
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nChanges the state of the specified object in the System.Data.Services.Client.DataServiceContext to System.Data.Services.Client.EntityStates.Modified.\n"
  example: []
  syntax:
    content: void UpdateObject(object entity)
    content.vb: Sub UpdateObject(entity As Object)
    parameters:
    - id: entity
      type: System.Object
      description: The tracked entity to be assigned to the System.Data.Services.Client.EntityStates.Modified state.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink(System.Object,System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink(System.Object,System.String,System.Object)
  id: SetLink(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: SetLink(Object, String, Object)
  nameWithType: IMediaDataServiceContext.SetLink(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink(System.Object, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SetLink
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 148
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nNotifies the System.Data.Services.Client.DataServiceContext that a new link\nexists between the objects specified and that the link is represented by\nthe property specified by the sourceProperty parameter.\nRemarks:\nNotifies the context that a modified link exists between the source and target\nobjects and that the link is represented via the source.sourceProperty which\nis a reference.  The context adds this link to the set of modified created\nlinks to be sent to the data service on the next call to SaveChanges(). \nLinks are one way relationships. If a back pointer exists (ie. two way association),\nthis method should be called a second time to notify the context object of\nthe second link. \n"
  example: []
  syntax:
    content: void SetLink(object source, string sourceProperty, object target)
    content.vb: Sub SetLink(source As Object, sourceProperty As String, target As Object)
    parameters:
    - id: source
      type: System.Object
      description: The source object for the new link.
    - id: sourceProperty
      type: System.String
      description: The property on the source object that identifies the target object of the new link.
    - id: target
      type: System.Object
      description: >
        The child object involved in the new link that is to be initialized by calling

        this method. The target object must be a subtype of the type identified by

        the sourceProperty parameter. If target is set to null, the call represents

        a delete link operation.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink(System.Object,System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink(System.Object,System.String,System.Object)
  id: AddLink(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: AddLink(Object, String, Object)
  nameWithType: IMediaDataServiceContext.AddLink(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink(System.Object, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AddLink
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 165
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: void AddLink(object source, string sourceProperty, object target)
    content.vb: Sub AddLink(source As Object, sourceProperty As String, target As Object)
    parameters:
    - id: source
      type: System.Object
    - id: sourceProperty
      type: System.String
    - id: target
      type: System.Object
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges
  id: SaveChanges
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: SaveChanges()
  nameWithType: IMediaDataServiceContext.SaveChanges()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges()
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SaveChanges
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 174
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSaves the changes that the System.Data.Services.Client.DataServiceContext\nis tracking to storage.Not supported by the WCF Data Services 5.0 client\nfor Silverlight. \n"
  example: []
  syntax:
    content: IMediaDataServiceResponse SaveChanges()
    content.vb: Function SaveChanges As IMediaDataServiceResponse
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
      description: >-
        A System.Data.Services.Client.DataServiceResponse that contains status, headers,

        and errors that result from the call to System.Data.Services.Client.DataServiceContext.SaveChanges.Remarks.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink(System.Object,System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink(System.Object,System.String,System.Object)
  id: DeleteLink(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: DeleteLink(Object, String, Object)
  nameWithType: IMediaDataServiceContext.DeleteLink(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink(System.Object, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DeleteLink
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 192
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nChanges the state of the link to deleted in the list of links being tracked\nby the System.Data.Services.Client.DataServiceContext.\nRemarks:\nNotifies the context that a link exists between the source and target object\nand that the link is represented via the source.sourceProperty which is a\ncollection.  The context adds this link to the set of deleted links to be\nsent to the data service on the next call to SaveChanges().  If the specified\nlink exists in the \"Added\" state, then the link is detached (see DetachLink\nmethod) instead. \n"
  example: []
  syntax:
    content: void DeleteLink(object source, string sourceProperty, object target)
    content.vb: Sub DeleteLink(source As Object, sourceProperty As String, target As Object)
    parameters:
    - id: source
      type: System.Object
      description: The source object in the link to be marked for deletion.
    - id: sourceProperty
      type: System.String
      description: The name of the navigation property on the source object that is used to access the target object.
    - id: target
      type: System.Object
      description: >-
        The target object involved in the link that is bound to the source object.

        The target object must be of the type identified by the source property or

        a subtype.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)
  id: AddRelatedObject(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: AddRelatedObject(Object, String, Object)
  nameWithType: IMediaDataServiceContext.AddRelatedObject(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject(System.Object, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AddRelatedObject
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 200
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAdds a related object to the context and creates the link that defines the relationship between the two objects in a single request.\n"
  example: []
  syntax:
    content: void AddRelatedObject(object source, string sourceProperty, object target)
    content.vb: Sub AddRelatedObject(source As Object, sourceProperty As String, target As Object)
    parameters:
    - id: source
      type: System.Object
      description: The parent object that is being tracked by the context.
    - id: sourceProperty
      type: System.String
      description: The name of the navigation property that returns the related object based on an association between the two entities.
    - id: target
      type: System.Object
      description: The related object that is being added.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
  id: ExecuteAsync``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: ExecuteAsync<T>(DataServiceQueryContinuation<T>, Object)
  nameWithType: IMediaDataServiceContext.ExecuteAsync<T>(DataServiceQueryContinuation<T>, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync<T>(System.Data.Services.Client.DataServiceQueryContinuation<T>, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAsync
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 209
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nExecutes the operation asynchronously.\n"
  example: []
  syntax:
    content: Task<IEnumerable<T>> ExecuteAsync<T>(DataServiceQueryContinuation<T> continuation, object state)
    content.vb: Function ExecuteAsync(Of T)(continuation As DataServiceQueryContinuation(Of T), state As Object) As Task(Of IEnumerable(Of T))
    parameters:
    - id: continuation
      type: System.Data.Services.Client.DataServiceQueryContinuation{{T}}
      description: The continuation.
    - id: state
      type: System.Object
      description: The state.
    typeParameters:
    - id: T
      description: The type of the element.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync*
  nameWithType.vb: IMediaDataServiceContext.ExecuteAsync(Of T)(DataServiceQueryContinuation(Of T), Object)
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(Of T)(System.Data.Services.Client.DataServiceQueryContinuation(Of T), System.Object)
  name.vb: ExecuteAsync(Of T)(DataServiceQueryContinuation(Of T), Object)
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Uri,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync``1(System.Uri,System.Object)
  id: ExecuteAsync``1(System.Uri,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: ExecuteAsync<T>(Uri, Object)
  nameWithType: IMediaDataServiceContext.ExecuteAsync<T>(Uri, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync<T>(System.Uri, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAsync
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 218
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nExecutes the operation asynchronously.\n"
  example: []
  syntax:
    content: Task<IEnumerable<T>> ExecuteAsync<T>(Uri requestUri, object state)
    content.vb: Function ExecuteAsync(Of T)(requestUri As Uri, state As Object) As Task(Of IEnumerable(Of T))
    parameters:
    - id: requestUri
      type: System.Uri
      description: The request URI.
    - id: state
      type: System.Object
      description: The state.
    typeParameters:
    - id: T
      description: The type of the element.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync*
  nameWithType.vb: IMediaDataServiceContext.ExecuteAsync(Of T)(Uri, Object)
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(Of T)(System.Uri, System.Object)
  name.vb: ExecuteAsync(Of T)(Uri, Object)
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.Object,System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.Object,System.String)
  id: ExecuteAsync(System.Uri,System.Object,System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: ExecuteAsync(Uri, Object, String)
  nameWithType: IMediaDataServiceContext.ExecuteAsync(Uri, Object, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAsync
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 227
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nExecutes the asynchronously.\n"
  example: []
  syntax:
    content: Task<OperationResponse> ExecuteAsync(Uri requestUri, object state, string httpMethod)
    content.vb: Function ExecuteAsync(requestUri As Uri, state As Object, httpMethod As String) As Task(Of OperationResponse)
    parameters:
    - id: requestUri
      type: System.Uri
      description: The request URI.
    - id: state
      type: System.Object
      description: The state.
    - id: httpMethod
      type: System.String
      description: The HTTP method.
    return:
      type: System.Threading.Tasks.Task{System.Data.Services.Client.OperationResponse}
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.String,System.Boolean,System.Data.Services.Client.OperationParameter[])
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri,System.String,System.Boolean,System.Data.Services.Client.OperationParameter[])
  id: ExecuteAsync(System.Uri,System.String,System.Boolean,System.Data.Services.Client.OperationParameter[])
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: ExecuteAsync(Uri, String, Boolean, OperationParameter[])
  nameWithType: IMediaDataServiceContext.ExecuteAsync(Uri, String, Boolean, OperationParameter[])
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri, System.String, System.Boolean, System.Data.Services.Client.OperationParameter[])
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteAsync
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 237
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nExecutes the url method asynchronously.\n"
  example: []
  syntax:
    content: Task<IEnumerable<string>> ExecuteAsync(Uri requestUri, string httpMethod, bool singleResult, params OperationParameter[] parameters)
    content.vb: Function ExecuteAsync(requestUri As Uri, httpMethod As String, singleResult As Boolean, ParamArray parameters As OperationParameter()) As Task(Of IEnumerable(Of String))
    parameters:
    - id: requestUri
      type: System.Uri
      description: The request URI.
    - id: httpMethod
      type: System.String
      description: The HTTP method.
    - id: singleResult
      type: System.Boolean
      description: Whether a single result is expected or not.
    - id: parameters
      type: System.Data.Services.Client.OperationParameter[]
      description: OperationParameters to be sent with the Execute request.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync*
  nameWithType.vb: IMediaDataServiceContext.ExecuteAsync(Uri, String, Boolean, OperationParameter())
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(System.Uri, System.String, System.Boolean, System.Data.Services.Client.OperationParameter())
  name.vb: ExecuteAsync(Uri, String, Boolean, OperationParameter())
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync(System.Object,System.Data.Services.Client.DataServiceRequest[])
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync(System.Object,System.Data.Services.Client.DataServiceRequest[])
  id: ExecuteBatchAsync(System.Object,System.Data.Services.Client.DataServiceRequest[])
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: ExecuteBatchAsync(Object, DataServiceRequest[])
  nameWithType: IMediaDataServiceContext.ExecuteBatchAsync(Object, DataServiceRequest[])
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync(System.Object, System.Data.Services.Client.DataServiceRequest[])
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExecuteBatchAsync
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 245
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: >
    Executes the batch operation asynchronously.
  example: []
  syntax:
    content: Task<DataServiceResponse> ExecuteBatchAsync(object state, params DataServiceRequest[] queries)
    content.vb: Function ExecuteBatchAsync(state As Object, ParamArray queries As DataServiceRequest()) As Task(Of DataServiceResponse)
    parameters:
    - id: state
      type: System.Object
      description: The state.
    - id: queries
      type: System.Data.Services.Client.DataServiceRequest[]
      description: The queries.
    return:
      type: System.Threading.Tasks.Task{System.Data.Services.Client.DataServiceResponse}
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync*
  nameWithType.vb: IMediaDataServiceContext.ExecuteBatchAsync(Object, DataServiceRequest())
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync(System.Object, System.Data.Services.Client.DataServiceRequest())
  name.vb: ExecuteBatchAsync(Object, DataServiceRequest())
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.Object)
  id: GetReadStreamAsync(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: GetReadStreamAsync(Object, DataServiceRequestArgs, Object)
  nameWithType: IMediaDataServiceContext.GetReadStreamAsync(Object, DataServiceRequestArgs, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync(System.Object, System.Data.Services.Client.DataServiceRequestArgs, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetReadStreamAsync
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 254
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the read stream asynchronously.\n"
  example: []
  syntax:
    content: Task<DataServiceStreamResponse> GetReadStreamAsync(object entity, DataServiceRequestArgs args, object state)
    content.vb: Function GetReadStreamAsync(entity As Object, args As DataServiceRequestArgs, state As Object) As Task(Of DataServiceStreamResponse)
    parameters:
    - id: entity
      type: System.Object
      description: The entity.
    - id: args
      type: System.Data.Services.Client.DataServiceRequestArgs
      description: The args.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.Threading.Tasks.Task{System.Data.Services.Client.DataServiceStreamResponse}
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Object)
  id: LoadPropertyAsync(System.Object,System.String,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: LoadPropertyAsync(Object, String, Object)
  nameWithType: IMediaDataServiceContext.LoadPropertyAsync(Object, String, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LoadPropertyAsync
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 263
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLoads the property asynchronously.\n"
  example: []
  syntax:
    content: Task<QueryOperationResponse> LoadPropertyAsync(object entity, string propertyName, object state)
    content.vb: Function LoadPropertyAsync(entity As Object, propertyName As String, state As Object) As Task(Of QueryOperationResponse)
    parameters:
    - id: entity
      type: System.Object
      description: The entity.
    - id: propertyName
      type: System.String
      description: Name of the property.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.Threading.Tasks.Task{System.Data.Services.Client.QueryOperationResponse}
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.Object)
  id: LoadPropertyAsync(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: LoadPropertyAsync(Object, String, DataServiceQueryContinuation, Object)
  nameWithType: IMediaDataServiceContext.LoadPropertyAsync(Object, String, DataServiceQueryContinuation, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object, System.String, System.Data.Services.Client.DataServiceQueryContinuation, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LoadPropertyAsync
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 273
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLoads the property asynchronously.\n"
  example: []
  syntax:
    content: Task<QueryOperationResponse> LoadPropertyAsync(object entity, string propertyName, DataServiceQueryContinuation continuation, object state)
    content.vb: Function LoadPropertyAsync(entity As Object, propertyName As String, continuation As DataServiceQueryContinuation, state As Object) As Task(Of QueryOperationResponse)
    parameters:
    - id: entity
      type: System.Object
      description: The entity.
    - id: propertyName
      type: System.String
      description: Name of the property.
    - id: continuation
      type: System.Data.Services.Client.DataServiceQueryContinuation
      description: The continuation.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.Threading.Tasks.Task{System.Data.Services.Client.QueryOperationResponse}
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Uri,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object,System.String,System.Uri,System.Object)
  id: LoadPropertyAsync(System.Object,System.String,System.Uri,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: LoadPropertyAsync(Object, String, Uri, Object)
  nameWithType: IMediaDataServiceContext.LoadPropertyAsync(Object, String, Uri, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync(System.Object, System.String, System.Uri, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LoadPropertyAsync
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 283
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLoads the property asynchronously.\n"
  example: []
  syntax:
    content: Task<QueryOperationResponse> LoadPropertyAsync(object entity, string propertyName, Uri nextLinkUri, object state)
    content.vb: Function LoadPropertyAsync(entity As Object, propertyName As String, nextLinkUri As Uri, state As Object) As Task(Of QueryOperationResponse)
    parameters:
    - id: entity
      type: System.Object
      description: The entity.
    - id: propertyName
      type: System.String
      description: Name of the property.
    - id: nextLinkUri
      type: System.Uri
      description: The next link URI.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.Threading.Tasks.Task{System.Data.Services.Client.QueryOperationResponse}
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Object)
  id: SaveChangesAsync(System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: SaveChangesAsync(Object)
  nameWithType: IMediaDataServiceContext.SaveChangesAsync(Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SaveChangesAsync
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 290
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSaves the changes asynchronously.\n"
  example: []
  syntax:
    content: Task<IMediaDataServiceResponse> SaveChangesAsync(object state)
    content.vb: Function SaveChangesAsync(state As Object) As Task(Of IMediaDataServiceResponse)
    parameters:
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object)
  id: SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: SaveChangesAsync(SaveChangesOptions, Object)
  nameWithType: IMediaDataServiceContext.SaveChangesAsync(SaveChangesOptions, Object)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions, System.Object)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SaveChangesAsync
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 298
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSaves the changes asynchronously.\n"
  example: []
  syntax:
    content: Task<IMediaDataServiceResponse> SaveChangesAsync(SaveChangesOptions options, object state)
    content.vb: Function SaveChangesAsync(options As SaveChangesOptions, state As Object) As Task(Of IMediaDataServiceResponse)
    parameters:
    - id: options
      type: System.Data.Services.Client.SaveChangesOptions
      description: The options.
    - id: state
      type: System.Object
      description: The state.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object,System.Threading.CancellationToken)
  id: SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions,System.Object,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  langs:
  - csharp
  - vb
  name: SaveChangesAsync(SaveChangesOptions, Object, CancellationToken)
  nameWithType: IMediaDataServiceContext.SaveChangesAsync(SaveChangesOptions, Object, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync(System.Data.Services.Client.SaveChangesOptions, System.Object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/net/Client/IMediaDataServiceContext.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SaveChangesAsync
    path: src/azure-sdk-for-media-services/src/net/Client/IMediaDataServiceContext.cs
    startLine: 307
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSaves the changes asynchronously.\n"
  example: []
  syntax:
    content: Task<IMediaDataServiceResponse> SaveChangesAsync(SaveChangesOptions options, object state, CancellationToken token)
    content.vb: Function SaveChangesAsync(options As SaveChangesOptions, state As Object, token As CancellationToken) As Task(Of IMediaDataServiceResponse)
    parameters:
    - id: options
      type: System.Data.Services.Client.SaveChangesOptions
      description: The options.
    - id: state
      type: System.Object
      description: The state.
    - id: token
      type: System.Threading.CancellationToken
      description: <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
      description: A function delegate that returns the future result to be available through the Task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync*
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.IgnoreResourceNotFoundException*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.IgnoreResourceNotFoundException
  isExternal: false
  name: IgnoreResourceNotFoundException
  nameWithType: IMediaDataServiceContext.IgnoreResourceNotFoundException
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.IgnoreResourceNotFoundException
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery
  isExternal: false
  name: CreateQuery<TIinterface, TData>
  nameWithType: IMediaDataServiceContext.CreateQuery<TIinterface, TData>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery<TIinterface, TData>
  nameWithType.vb: IMediaDataServiceContext.CreateQuery(Of TIinterface, TData)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.CreateQuery(Of TIinterface, TData)
  name.vb: CreateQuery(Of TIinterface, TData)
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.IQueryable{{TIinterface}}
  commentId: T:System.Linq.IQueryable{``0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TIinterface>
  nameWithType: IQueryable<TIinterface>
  fullName: System.Linq.IQueryable<TIinterface>
  nameWithType.vb: IQueryable(Of TIinterface)
  fullname.vb: System.Linq.IQueryable(Of TIinterface)
  name.vb: IQueryable(Of TIinterface)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TIinterface
    nameWithType: TIinterface
    fullName: TIinterface
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIinterface
    nameWithType: TIinterface
    fullName: TIinterface
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo
  isExternal: false
  name: AttachTo
  nameWithType: IMediaDataServiceContext.AttachTo
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AttachTo
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject
  isExternal: false
  name: DeleteObject
  nameWithType: IMediaDataServiceContext.DeleteObject
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteObject
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute
  isExternal: false
  name: Execute<TElement>
  nameWithType: IMediaDataServiceContext.Execute<TElement>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute<TElement>
  nameWithType.vb: IMediaDataServiceContext.Execute(Of TElement)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.Execute(Of TElement)
  name.vb: Execute(Of TElement)
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Collections.Generic.IEnumerable{{TElement}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TElement>
  nameWithType: IEnumerable<TElement>
  fullName: System.Collections.Generic.IEnumerable<TElement>
  nameWithType.vb: IEnumerable(Of TElement)
  fullname.vb: System.Collections.Generic.IEnumerable(Of TElement)
  name.vb: IEnumerable(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Data.Services.Client.OperationParameter[]
  name: OperationParameter[]
  nameWithType: OperationParameter[]
  fullName: System.Data.Services.Client.OperationParameter[]
  nameWithType.vb: OperationParameter()
  fullname.vb: System.Data.Services.Client.OperationParameter()
  name.vb: OperationParameter()
  spec.csharp:
  - uid: System.Data.Services.Client.OperationParameter
    name: OperationParameter
    nameWithType: OperationParameter
    fullName: System.Data.Services.Client.OperationParameter
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Data.Services.Client.OperationParameter
    name: OperationParameter
    nameWithType: OperationParameter
    fullName: System.Data.Services.Client.OperationParameter
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Data.Services.Client.OperationResponse
  commentId: T:System.Data.Services.Client.OperationResponse
  parent: System.Data.Services.Client
  isExternal: true
  name: OperationResponse
  nameWithType: OperationResponse
  fullName: System.Data.Services.Client.OperationResponse
- uid: System.Data.Services.Client
  commentId: N:System.Data.Services.Client
  isExternal: false
  name: System.Data.Services.Client
  nameWithType: System.Data.Services.Client
  fullName: System.Data.Services.Client
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject
  isExternal: false
  name: AddObject
  nameWithType: IMediaDataServiceContext.AddObject
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddObject
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty
  isExternal: false
  name: LoadProperty
  nameWithType: IMediaDataServiceContext.LoadProperty
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadProperty
- uid: System.Data.Services.Client.QueryOperationResponse
  commentId: T:System.Data.Services.Client.QueryOperationResponse
  parent: System.Data.Services.Client
  isExternal: true
  name: QueryOperationResponse
  nameWithType: QueryOperationResponse
  fullName: System.Data.Services.Client.QueryOperationResponse
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject
  isExternal: false
  name: UpdateObject
  nameWithType: IMediaDataServiceContext.UpdateObject
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.UpdateObject
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink
  isExternal: false
  name: SetLink
  nameWithType: IMediaDataServiceContext.SetLink
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SetLink
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink
  isExternal: false
  name: AddLink
  nameWithType: IMediaDataServiceContext.AddLink
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddLink
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges
  isExternal: false
  name: SaveChanges
  nameWithType: IMediaDataServiceContext.SaveChanges
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChanges
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IMediaDataServiceResponse
  nameWithType: IMediaDataServiceResponse
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink
  isExternal: false
  name: DeleteLink
  nameWithType: IMediaDataServiceContext.DeleteLink
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.DeleteLink
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject
  isExternal: false
  name: AddRelatedObject
  nameWithType: IMediaDataServiceContext.AddRelatedObject
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.AddRelatedObject
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync
  isExternal: false
  name: ExecuteAsync<T>
  nameWithType: IMediaDataServiceContext.ExecuteAsync<T>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync<T>
  nameWithType.vb: IMediaDataServiceContext.ExecuteAsync(Of T)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteAsync(Of T)
  name.vb: ExecuteAsync(Of T)
- uid: System.Data.Services.Client.DataServiceQueryContinuation{{T}}
  commentId: T:System.Data.Services.Client.DataServiceQueryContinuation{``0}
  parent: System.Data.Services.Client
  definition: System.Data.Services.Client.DataServiceQueryContinuation`1
  name: DataServiceQueryContinuation<T>
  nameWithType: DataServiceQueryContinuation<T>
  fullName: System.Data.Services.Client.DataServiceQueryContinuation<T>
  nameWithType.vb: DataServiceQueryContinuation(Of T)
  fullname.vb: System.Data.Services.Client.DataServiceQueryContinuation(Of T)
  name.vb: DataServiceQueryContinuation(Of T)
  spec.csharp:
  - uid: System.Data.Services.Client.DataServiceQueryContinuation`1
    name: DataServiceQueryContinuation
    nameWithType: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Data.Services.Client.DataServiceQueryContinuation`1
    name: DataServiceQueryContinuation
    nameWithType: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<T>>
  nameWithType: Task<IEnumerable<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<T>>
  nameWithType.vb: Task(Of IEnumerable(Of T))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of T))
  name.vb: Task(Of IEnumerable(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Services.Client.DataServiceQueryContinuation`1
  commentId: T:System.Data.Services.Client.DataServiceQueryContinuation`1
  isExternal: true
  name: DataServiceQueryContinuation<T>
  nameWithType: DataServiceQueryContinuation<T>
  fullName: System.Data.Services.Client.DataServiceQueryContinuation<T>
  nameWithType.vb: DataServiceQueryContinuation(Of T)
  fullname.vb: System.Data.Services.Client.DataServiceQueryContinuation(Of T)
  name.vb: DataServiceQueryContinuation(Of T)
  spec.csharp:
  - uid: System.Data.Services.Client.DataServiceQueryContinuation`1
    name: DataServiceQueryContinuation
    nameWithType: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Data.Services.Client.DataServiceQueryContinuation`1
    name: DataServiceQueryContinuation
    nameWithType: DataServiceQueryContinuation
    fullName: System.Data.Services.Client.DataServiceQueryContinuation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{System.Data.Services.Client.OperationResponse}
  commentId: T:System.Threading.Tasks.Task{System.Data.Services.Client.OperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationResponse>
  nameWithType: Task<OperationResponse>
  fullName: System.Threading.Tasks.Task<System.Data.Services.Client.OperationResponse>
  nameWithType.vb: Task(Of OperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.Services.Client.OperationResponse)
  name.vb: Task(Of OperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Services.Client.OperationResponse
    name: OperationResponse
    nameWithType: OperationResponse
    fullName: System.Data.Services.Client.OperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Services.Client.OperationResponse
    name: OperationResponse
    nameWithType: OperationResponse
    fullName: System.Data.Services.Client.OperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<String>>
  nameWithType: Task<IEnumerable<String>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<System.String>>
  nameWithType.vb: Task(Of IEnumerable(Of String))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Task(Of IEnumerable(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync
  isExternal: false
  name: ExecuteBatchAsync
  nameWithType: IMediaDataServiceContext.ExecuteBatchAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.ExecuteBatchAsync
- uid: System.Data.Services.Client.DataServiceRequest[]
  name: DataServiceRequest[]
  nameWithType: DataServiceRequest[]
  fullName: System.Data.Services.Client.DataServiceRequest[]
  nameWithType.vb: DataServiceRequest()
  fullname.vb: System.Data.Services.Client.DataServiceRequest()
  name.vb: DataServiceRequest()
  spec.csharp:
  - uid: System.Data.Services.Client.DataServiceRequest
    name: DataServiceRequest
    nameWithType: DataServiceRequest
    fullName: System.Data.Services.Client.DataServiceRequest
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Data.Services.Client.DataServiceRequest
    name: DataServiceRequest
    nameWithType: DataServiceRequest
    fullName: System.Data.Services.Client.DataServiceRequest
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.Data.Services.Client.DataServiceResponse}
  commentId: T:System.Threading.Tasks.Task{System.Data.Services.Client.DataServiceResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DataServiceResponse>
  nameWithType: Task<DataServiceResponse>
  fullName: System.Threading.Tasks.Task<System.Data.Services.Client.DataServiceResponse>
  nameWithType.vb: Task(Of DataServiceResponse)
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.Services.Client.DataServiceResponse)
  name.vb: Task(Of DataServiceResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Services.Client.DataServiceResponse
    name: DataServiceResponse
    nameWithType: DataServiceResponse
    fullName: System.Data.Services.Client.DataServiceResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Services.Client.DataServiceResponse
    name: DataServiceResponse
    nameWithType: DataServiceResponse
    fullName: System.Data.Services.Client.DataServiceResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync
  isExternal: false
  name: GetReadStreamAsync
  nameWithType: IMediaDataServiceContext.GetReadStreamAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.GetReadStreamAsync
- uid: System.Data.Services.Client.DataServiceRequestArgs
  commentId: T:System.Data.Services.Client.DataServiceRequestArgs
  parent: System.Data.Services.Client
  isExternal: true
  name: DataServiceRequestArgs
  nameWithType: DataServiceRequestArgs
  fullName: System.Data.Services.Client.DataServiceRequestArgs
- uid: System.Threading.Tasks.Task{System.Data.Services.Client.DataServiceStreamResponse}
  commentId: T:System.Threading.Tasks.Task{System.Data.Services.Client.DataServiceStreamResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DataServiceStreamResponse>
  nameWithType: Task<DataServiceStreamResponse>
  fullName: System.Threading.Tasks.Task<System.Data.Services.Client.DataServiceStreamResponse>
  nameWithType.vb: Task(Of DataServiceStreamResponse)
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.Services.Client.DataServiceStreamResponse)
  name.vb: Task(Of DataServiceStreamResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Services.Client.DataServiceStreamResponse
    name: DataServiceStreamResponse
    nameWithType: DataServiceStreamResponse
    fullName: System.Data.Services.Client.DataServiceStreamResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Services.Client.DataServiceStreamResponse
    name: DataServiceStreamResponse
    nameWithType: DataServiceStreamResponse
    fullName: System.Data.Services.Client.DataServiceStreamResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync
  isExternal: false
  name: LoadPropertyAsync
  nameWithType: IMediaDataServiceContext.LoadPropertyAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.LoadPropertyAsync
- uid: System.Threading.Tasks.Task{System.Data.Services.Client.QueryOperationResponse}
  commentId: T:System.Threading.Tasks.Task{System.Data.Services.Client.QueryOperationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<QueryOperationResponse>
  nameWithType: Task<QueryOperationResponse>
  fullName: System.Threading.Tasks.Task<System.Data.Services.Client.QueryOperationResponse>
  nameWithType.vb: Task(Of QueryOperationResponse)
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.Services.Client.QueryOperationResponse)
  name.vb: Task(Of QueryOperationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Services.Client.QueryOperationResponse
    name: QueryOperationResponse
    nameWithType: QueryOperationResponse
    fullName: System.Data.Services.Client.QueryOperationResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Services.Client.QueryOperationResponse
    name: QueryOperationResponse
    nameWithType: QueryOperationResponse
    fullName: System.Data.Services.Client.QueryOperationResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Services.Client.DataServiceQueryContinuation
  commentId: T:System.Data.Services.Client.DataServiceQueryContinuation
  parent: System.Data.Services.Client
  isExternal: true
  name: DataServiceQueryContinuation
  nameWithType: DataServiceQueryContinuation
  fullName: System.Data.Services.Client.DataServiceQueryContinuation
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync
  isExternal: false
  name: SaveChangesAsync
  nameWithType: IMediaDataServiceContext.SaveChangesAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext.SaveChangesAsync
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IMediaDataServiceResponse>
  nameWithType: Task<IMediaDataServiceResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse>
  nameWithType.vb: Task(Of IMediaDataServiceResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse)
  name.vb: Task(Of IMediaDataServiceResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
    name: IMediaDataServiceResponse
    nameWithType: IMediaDataServiceResponse
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
    name: IMediaDataServiceResponse
    nameWithType: IMediaDataServiceResponse
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Services.Client.SaveChangesOptions
  commentId: T:System.Data.Services.Client.SaveChangesOptions
  parent: System.Data.Services.Client
  isExternal: true
  name: SaveChangesOptions
  nameWithType: SaveChangesOptions
  fullName: System.Data.Services.Client.SaveChangesOptions
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
