### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  id: ErrorMessages
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AnalogVideoOplValueError
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AtLeastOneLicenseTemplateRequired
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateCannotBeSetOnNonPersistentLicense
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalAudioOplValueError
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalVideoOplValueError
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.Culture
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationCannotBeSetOnNonPersistentLicense
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.FirstPlayExpirationCannotBeSetOnNonPersistentLicense
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.GracePeriodCannotBeSetOnNonPersistentLicense
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.InvalidTwoBitConfigurationData
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyContentKeyRequired
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyPlayRightRequired
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ResourceManager
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalAudioOplValueError
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalVideoOplValueError
  langs:
  - csharp
  - vb
  name: ErrorMessages
  nameWithType: ErrorMessages
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  type: Class
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ErrorMessages
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nA strongly-typed resource class, for looking up localized strings, etc.\n"
  example: []
  syntax:
    content: public class ErrorMessages
    content.vb: Public Class ErrorMessages
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ResourceManager
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ResourceManager
  id: ResourceManager
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: ResourceManager
  nameWithType: ErrorMessages.ResourceManager
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ResourceManager
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ResourceManager
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nReturns the cached ResourceManager instance used by this class.\n"
  example: []
  syntax:
    content: public static ResourceManager ResourceManager { get; }
    content.vb: Public Shared ReadOnly Property ResourceManager As ResourceManager
    parameters: []
    return:
      type: System.Resources.ResourceManager
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ResourceManager*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.Culture
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.Culture
  id: Culture
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: ErrorMessages.Culture
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.Culture
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Culture
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nOverrides the current thread's CurrentUICulture property for all\nresource lookups using this strongly typed resource class.\n"
  example: []
  syntax:
    content: public static CultureInfo Culture { get; set; }
    content.vb: Public Shared Property Culture As CultureInfo
    parameters: []
    return:
      type: System.Globalization.CultureInfo
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.Culture*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AnalogVideoOplValueError
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AnalogVideoOplValueError
  id: AnalogVideoOplValueError
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: AnalogVideoOplValueError
  nameWithType: ErrorMessages.AnalogVideoOplValueError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AnalogVideoOplValueError
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AnalogVideoOplValueError
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to The value can only be set to null, 100, 150, or 200..\n"
  example: []
  syntax:
    content: public static string AnalogVideoOplValueError { get; }
    content.vb: Public Shared ReadOnly Property AnalogVideoOplValueError As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AnalogVideoOplValueError*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AtLeastOneLicenseTemplateRequired
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AtLeastOneLicenseTemplateRequired
  id: AtLeastOneLicenseTemplateRequired
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: AtLeastOneLicenseTemplateRequired
  nameWithType: ErrorMessages.AtLeastOneLicenseTemplateRequired
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AtLeastOneLicenseTemplateRequired
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AtLeastOneLicenseTemplateRequired
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to A PlayReadyLicenseResponseTemplate must have at least one PlayReadyLicenseTemplate.\n"
  example: []
  syntax:
    content: public static string AtLeastOneLicenseTemplateRequired { get; }
    content.vb: Public Shared ReadOnly Property AtLeastOneLicenseTemplateRequired As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AtLeastOneLicenseTemplateRequired*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError
  id: BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError
  nameWithType: ErrorMessages.BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 102
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to Set BeginDate or RelativeBeginDate but not both.\n"
  example: []
  syntax:
    content: public static string BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError { get; }
    content.vb: Public Shared ReadOnly Property BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateCannotBeSetOnNonPersistentLicense
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateCannotBeSetOnNonPersistentLicense
  id: BeginDateCannotBeSetOnNonPersistentLicense
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: BeginDateCannotBeSetOnNonPersistentLicense
  nameWithType: ErrorMessages.BeginDateCannotBeSetOnNonPersistentLicense
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateCannotBeSetOnNonPersistentLicense
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: BeginDateCannotBeSetOnNonPersistentLicense
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 113
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to BeginDate cannot be set on Non Persistent licenses..\n"
  example: []
  syntax:
    content: public static string BeginDateCannotBeSetOnNonPersistentLicense { get; }
    content.vb: Public Shared ReadOnly Property BeginDateCannotBeSetOnNonPersistentLicense As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateCannotBeSetOnNonPersistentLicense*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalAudioOplValueError
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalAudioOplValueError
  id: CompressedDigitalAudioOplValueError
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: CompressedDigitalAudioOplValueError
  nameWithType: ErrorMessages.CompressedDigitalAudioOplValueError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalAudioOplValueError
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CompressedDigitalAudioOplValueError
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 124
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to The value can only be set to null, 100, 150, 200, 250, or 300..\n"
  example: []
  syntax:
    content: public static string CompressedDigitalAudioOplValueError { get; }
    content.vb: Public Shared ReadOnly Property CompressedDigitalAudioOplValueError As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalAudioOplValueError*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalVideoOplValueError
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalVideoOplValueError
  id: CompressedDigitalVideoOplValueError
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: CompressedDigitalVideoOplValueError
  nameWithType: ErrorMessages.CompressedDigitalVideoOplValueError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalVideoOplValueError
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CompressedDigitalVideoOplValueError
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 135
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to The value can only be set to null, 400, or 500..\n"
  example: []
  syntax:
    content: public static string CompressedDigitalVideoOplValueError { get; }
    content.vb: Public Shared ReadOnly Property CompressedDigitalVideoOplValueError As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalVideoOplValueError*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError
  id: DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError
  nameWithType: ErrorMessages.DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 146
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to PlayReady does not allow passing to unknown outputs if the DigitalVideoOnlyContentRestriction is enabled..\n"
  example: []
  syntax:
    content: public static string DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError { get; }
    content.vb: Public Shared ReadOnly Property DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationCannotBeSetOnNonPersistentLicense
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationCannotBeSetOnNonPersistentLicense
  id: ExpirationCannotBeSetOnNonPersistentLicense
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: ExpirationCannotBeSetOnNonPersistentLicense
  nameWithType: ErrorMessages.ExpirationCannotBeSetOnNonPersistentLicense
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationCannotBeSetOnNonPersistentLicense
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExpirationCannotBeSetOnNonPersistentLicense
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 157
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to ExpirationDate cannot be set on Non Persistent licenses..\n"
  example: []
  syntax:
    content: public static string ExpirationCannotBeSetOnNonPersistentLicense { get; }
    content.vb: Public Shared ReadOnly Property ExpirationCannotBeSetOnNonPersistentLicense As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationCannotBeSetOnNonPersistentLicense*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError
  id: ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError
  nameWithType: ErrorMessages.ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 168
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to Set ExpirationDate or RelativeExpirationDate but not both.\n"
  example: []
  syntax:
    content: public static string ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError { get; }
    content.vb: Public Shared ReadOnly Property ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.FirstPlayExpirationCannotBeSetOnNonPersistentLicense
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.FirstPlayExpirationCannotBeSetOnNonPersistentLicense
  id: FirstPlayExpirationCannotBeSetOnNonPersistentLicense
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: FirstPlayExpirationCannotBeSetOnNonPersistentLicense
  nameWithType: ErrorMessages.FirstPlayExpirationCannotBeSetOnNonPersistentLicense
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.FirstPlayExpirationCannotBeSetOnNonPersistentLicense
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: FirstPlayExpirationCannotBeSetOnNonPersistentLicense
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 179
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to FirstPlayExpiration cannot be set on the PlayRight of a Non Persistent license..\n"
  example: []
  syntax:
    content: public static string FirstPlayExpirationCannotBeSetOnNonPersistentLicense { get; }
    content.vb: Public Shared ReadOnly Property FirstPlayExpirationCannotBeSetOnNonPersistentLicense As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.FirstPlayExpirationCannotBeSetOnNonPersistentLicense*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.GracePeriodCannotBeSetOnNonPersistentLicense
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.GracePeriodCannotBeSetOnNonPersistentLicense
  id: GracePeriodCannotBeSetOnNonPersistentLicense
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: GracePeriodCannotBeSetOnNonPersistentLicense
  nameWithType: ErrorMessages.GracePeriodCannotBeSetOnNonPersistentLicense
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.GracePeriodCannotBeSetOnNonPersistentLicense
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GracePeriodCannotBeSetOnNonPersistentLicense
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 190
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to GracePeriod cannot be set on Non Persistent licenses..\n"
  example: []
  syntax:
    content: public static string GracePeriodCannotBeSetOnNonPersistentLicense { get; }
    content.vb: Public Shared ReadOnly Property GracePeriodCannotBeSetOnNonPersistentLicense As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.GracePeriodCannotBeSetOnNonPersistentLicense*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.InvalidTwoBitConfigurationData
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.InvalidTwoBitConfigurationData
  id: InvalidTwoBitConfigurationData
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: InvalidTwoBitConfigurationData
  nameWithType: ErrorMessages.InvalidTwoBitConfigurationData
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.InvalidTwoBitConfigurationData
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: InvalidTwoBitConfigurationData
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 201
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to ConfigurationData must be 0, 1, 2, or 3.\n"
  example: []
  syntax:
    content: public static string InvalidTwoBitConfigurationData { get; }
    content.vb: Public Shared ReadOnly Property InvalidTwoBitConfigurationData As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.InvalidTwoBitConfigurationData*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyContentKeyRequired
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyContentKeyRequired
  id: PlayReadyContentKeyRequired
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: PlayReadyContentKeyRequired
  nameWithType: ErrorMessages.PlayReadyContentKeyRequired
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyContentKeyRequired
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: PlayReadyContentKeyRequired
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 212
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to Each PlayReadyLicenseTemplate in the PlayReadyLicenseResponseTemplate must have either a ContentEncryptionKeyFromHeader or a ContentEncryptionKeyFromKeyIdentifier.\n"
  example: []
  syntax:
    content: public static string PlayReadyContentKeyRequired { get; }
    content.vb: Public Shared ReadOnly Property PlayReadyContentKeyRequired As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyContentKeyRequired*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyPlayRightRequired
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyPlayRightRequired
  id: PlayReadyPlayRightRequired
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: PlayReadyPlayRightRequired
  nameWithType: ErrorMessages.PlayReadyPlayRightRequired
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyPlayRightRequired
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: PlayReadyPlayRightRequired
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 223
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to Each PlayReadyLicenseTemplate in the PlayReadyLicenseResponseTemplate must have a PlayReadyPlayRight.\n"
  example: []
  syntax:
    content: public static string PlayReadyPlayRightRequired { get; }
    content.vb: Public Shared ReadOnly Property PlayReadyPlayRightRequired As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyPlayRightRequired*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalAudioOplValueError
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalAudioOplValueError
  id: UncompressedDigitalAudioOplValueError
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: UncompressedDigitalAudioOplValueError
  nameWithType: ErrorMessages.UncompressedDigitalAudioOplValueError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalAudioOplValueError
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UncompressedDigitalAudioOplValueError
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 234
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to The value can only be set to null, 100, 150, 200, 250, or 300..\n"
  example: []
  syntax:
    content: public static string UncompressedDigitalAudioOplValueError { get; }
    content.vb: Public Shared ReadOnly Property UncompressedDigitalAudioOplValueError As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalAudioOplValueError*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalVideoOplValueError
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalVideoOplValueError
  id: UncompressedDigitalVideoOplValueError
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages
  langs:
  - csharp
  - vb
  name: UncompressedDigitalVideoOplValueError
  nameWithType: ErrorMessages.UncompressedDigitalVideoOplValueError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalVideoOplValueError
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UncompressedDigitalVideoOplValueError
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ErrorMessages.Designer.cs
    startLine: 245
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nLooks up a localized string similar to The value can only be set to null, 100, 250, 270, or 300..\n"
  example: []
  syntax:
    content: public static string UncompressedDigitalVideoOplValueError { get; }
    content.vb: Public Shared ReadOnly Property UncompressedDigitalVideoOplValueError As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalVideoOplValueError*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ResourceManager*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ResourceManager
  isExternal: false
  name: ResourceManager
  nameWithType: ErrorMessages.ResourceManager
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ResourceManager
- uid: System.Resources.ResourceManager
  commentId: T:System.Resources.ResourceManager
  parent: System.Resources
  isExternal: true
  name: ResourceManager
  nameWithType: ResourceManager
  fullName: System.Resources.ResourceManager
- uid: System.Resources
  commentId: N:System.Resources
  isExternal: false
  name: System.Resources
  nameWithType: System.Resources
  fullName: System.Resources
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.Culture*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.Culture
  isExternal: false
  name: Culture
  nameWithType: ErrorMessages.Culture
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.Culture
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: false
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AnalogVideoOplValueError*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AnalogVideoOplValueError
  isExternal: false
  name: AnalogVideoOplValueError
  nameWithType: ErrorMessages.AnalogVideoOplValueError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AnalogVideoOplValueError
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AtLeastOneLicenseTemplateRequired*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AtLeastOneLicenseTemplateRequired
  isExternal: false
  name: AtLeastOneLicenseTemplateRequired
  nameWithType: ErrorMessages.AtLeastOneLicenseTemplateRequired
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.AtLeastOneLicenseTemplateRequired
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError
  isExternal: false
  name: BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError
  nameWithType: ErrorMessages.BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateAndRelativeBeginDateCannotbeSetSimultaneouslyError
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateCannotBeSetOnNonPersistentLicense*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateCannotBeSetOnNonPersistentLicense
  isExternal: false
  name: BeginDateCannotBeSetOnNonPersistentLicense
  nameWithType: ErrorMessages.BeginDateCannotBeSetOnNonPersistentLicense
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.BeginDateCannotBeSetOnNonPersistentLicense
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalAudioOplValueError*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalAudioOplValueError
  isExternal: false
  name: CompressedDigitalAudioOplValueError
  nameWithType: ErrorMessages.CompressedDigitalAudioOplValueError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalAudioOplValueError
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalVideoOplValueError*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalVideoOplValueError
  isExternal: false
  name: CompressedDigitalVideoOplValueError
  nameWithType: ErrorMessages.CompressedDigitalVideoOplValueError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.CompressedDigitalVideoOplValueError
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError
  isExternal: false
  name: DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError
  nameWithType: ErrorMessages.DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.DigitalVideoOnlyMutuallyExclusiveWithPassingToUnknownOutputError
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationCannotBeSetOnNonPersistentLicense*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationCannotBeSetOnNonPersistentLicense
  isExternal: false
  name: ExpirationCannotBeSetOnNonPersistentLicense
  nameWithType: ErrorMessages.ExpirationCannotBeSetOnNonPersistentLicense
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationCannotBeSetOnNonPersistentLicense
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError
  isExternal: false
  name: ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError
  nameWithType: ErrorMessages.ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.ExpirationDateAndRelativeExpirationDateCannotbeSetSimultaneouslyError
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.FirstPlayExpirationCannotBeSetOnNonPersistentLicense*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.FirstPlayExpirationCannotBeSetOnNonPersistentLicense
  isExternal: false
  name: FirstPlayExpirationCannotBeSetOnNonPersistentLicense
  nameWithType: ErrorMessages.FirstPlayExpirationCannotBeSetOnNonPersistentLicense
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.FirstPlayExpirationCannotBeSetOnNonPersistentLicense
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.GracePeriodCannotBeSetOnNonPersistentLicense*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.GracePeriodCannotBeSetOnNonPersistentLicense
  isExternal: false
  name: GracePeriodCannotBeSetOnNonPersistentLicense
  nameWithType: ErrorMessages.GracePeriodCannotBeSetOnNonPersistentLicense
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.GracePeriodCannotBeSetOnNonPersistentLicense
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.InvalidTwoBitConfigurationData*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.InvalidTwoBitConfigurationData
  isExternal: false
  name: InvalidTwoBitConfigurationData
  nameWithType: ErrorMessages.InvalidTwoBitConfigurationData
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.InvalidTwoBitConfigurationData
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyContentKeyRequired*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyContentKeyRequired
  isExternal: false
  name: PlayReadyContentKeyRequired
  nameWithType: ErrorMessages.PlayReadyContentKeyRequired
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyContentKeyRequired
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyPlayRightRequired*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyPlayRightRequired
  isExternal: false
  name: PlayReadyPlayRightRequired
  nameWithType: ErrorMessages.PlayReadyPlayRightRequired
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.PlayReadyPlayRightRequired
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalAudioOplValueError*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalAudioOplValueError
  isExternal: false
  name: UncompressedDigitalAudioOplValueError
  nameWithType: ErrorMessages.UncompressedDigitalAudioOplValueError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalAudioOplValueError
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalVideoOplValueError*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalVideoOplValueError
  isExternal: false
  name: UncompressedDigitalVideoOplValueError
  nameWithType: ErrorMessages.UncompressedDigitalVideoOplValueError
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ErrorMessages.UncompressedDigitalVideoOplValueError
