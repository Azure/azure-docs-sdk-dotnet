### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions
  id: IJobExtensions
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.IJob)
  - Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetOverallProgress(Microsoft.WindowsAzure.MediaServices.Client.IJob)
  - Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask(Microsoft.WindowsAzure.MediaServices.Client.IJob,System.Action{Microsoft.WindowsAzure.MediaServices.Client.IJob},System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask(Microsoft.WindowsAzure.MediaServices.Client.IJob,System.Int32,System.Action{Microsoft.WindowsAzure.MediaServices.Client.IJob},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IJobExtensions
  nameWithType: IJobExtensions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions
  type: Class
  source:
    remote:
      path: MediaServices.Client.Extensions/IJobExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: IJobExtensions
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/IJobExtensions.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nContains extension methods and helpers for the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.IJob\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: public static class IJobExtensions
    content.vb: Public Module IJobExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetOverallProgress(Microsoft.WindowsAzure.MediaServices.Client.IJob)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetOverallProgress(Microsoft.WindowsAzure.MediaServices.Client.IJob)
  id: GetOverallProgress(Microsoft.WindowsAzure.MediaServices.Client.IJob)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions
  langs:
  - csharp
  - vb
  name: GetOverallProgress(IJob)
  nameWithType: IJobExtensions.GetOverallProgress(IJob)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetOverallProgress(Microsoft.WindowsAzure.MediaServices.Client.IJob)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/IJobExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: GetOverallProgress
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/IJobExtensions.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns the overall progress of the <span class=\"paramref\">job</span> by aggregating the progress of all its tasks.\n"
  example: []
  syntax:
    content: public static double GetOverallProgress(this IJob job)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOverallProgress(job As IJob) As Double
    parameters:
    - id: job
      type: Microsoft.WindowsAzure.MediaServices.Client.IJob
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.IJob" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: System.Double
      description: The overall progress of the <span class="paramref">job</span> by aggregating the progress of all its tasks.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetOverallProgress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask(Microsoft.WindowsAzure.MediaServices.Client.IJob,System.Int32,System.Action{Microsoft.WindowsAzure.MediaServices.Client.IJob},System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask(Microsoft.WindowsAzure.MediaServices.Client.IJob,System.Int32,System.Action{Microsoft.WindowsAzure.MediaServices.Client.IJob},System.Threading.CancellationToken)
  id: StartExecutionProgressTask(Microsoft.WindowsAzure.MediaServices.Client.IJob,System.Int32,System.Action{Microsoft.WindowsAzure.MediaServices.Client.IJob},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions
  langs:
  - csharp
  - vb
  name: StartExecutionProgressTask(IJob, Int32, Action<IJob>, CancellationToken)
  nameWithType: IJobExtensions.StartExecutionProgressTask(IJob, Int32, Action<IJob>, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask(Microsoft.WindowsAzure.MediaServices.Client.IJob, System.Int32, System.Action<Microsoft.WindowsAzure.MediaServices.Client.IJob>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/IJobExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: StartExecutionProgressTask
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/IJobExtensions.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns a started <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> to monitor the <span class=\"paramref\">job</span> progress by invoking the <span class=\"paramref\">executionProgressChangedCallback</span> when its state or overall progress change.\n"
  example: []
  syntax:
    content: public static Task<IJob> StartExecutionProgressTask(this IJob job, int jobRefreshIntervalInMilliseconds, Action<IJob> executionProgressChangedCallback, CancellationToken cancellationToken)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function StartExecutionProgressTask(job As IJob, jobRefreshIntervalInMilliseconds As Integer, executionProgressChangedCallback As Action(Of IJob), cancellationToken As CancellationToken) As Task(Of IJob)
    parameters:
    - id: job
      type: Microsoft.WindowsAzure.MediaServices.Client.IJob
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.IJob" data-throw-if-not-resolved="false"></xref> instance.
    - id: jobRefreshIntervalInMilliseconds
      type: System.Int32
      description: The time interval in milliseconds to refresh the <span class="paramref">job</span>.
    - id: executionProgressChangedCallback
      type: System.Action{Microsoft.WindowsAzure.MediaServices.Client.IJob}
      description: A callback that is invoked when the <span class="paramref">job</span> state or overall progress change.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> instance used for cancellation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IJob}
      description: A started <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> instance to monitor the <span class="paramref">job</span> progress by invoking the <span class="paramref">executionProgressChangedCallback</span> when its state or overall progress change.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask*
  nameWithType.vb: IJobExtensions.StartExecutionProgressTask(IJob, Int32, Action(Of IJob), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask(Microsoft.WindowsAzure.MediaServices.Client.IJob, System.Int32, System.Action(Of Microsoft.WindowsAzure.MediaServices.Client.IJob), System.Threading.CancellationToken)
  name.vb: StartExecutionProgressTask(IJob, Int32, Action(Of IJob), CancellationToken)
- uid: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask(Microsoft.WindowsAzure.MediaServices.Client.IJob,System.Action{Microsoft.WindowsAzure.MediaServices.Client.IJob},System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask(Microsoft.WindowsAzure.MediaServices.Client.IJob,System.Action{Microsoft.WindowsAzure.MediaServices.Client.IJob},System.Threading.CancellationToken)
  id: StartExecutionProgressTask(Microsoft.WindowsAzure.MediaServices.Client.IJob,System.Action{Microsoft.WindowsAzure.MediaServices.Client.IJob},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions
  langs:
  - csharp
  - vb
  name: StartExecutionProgressTask(IJob, Action<IJob>, CancellationToken)
  nameWithType: IJobExtensions.StartExecutionProgressTask(IJob, Action<IJob>, CancellationToken)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask(Microsoft.WindowsAzure.MediaServices.Client.IJob, System.Action<Microsoft.WindowsAzure.MediaServices.Client.IJob>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/IJobExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: StartExecutionProgressTask
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/IJobExtensions.cs
    startLine: 100
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns a started <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> to monitor the <span class=\"paramref\">job</span> progress by invoking the <span class=\"paramref\">executionProgressChangedCallback</span> when its state or overall progress change.\n"
  example: []
  syntax:
    content: public static Task<IJob> StartExecutionProgressTask(this IJob job, Action<IJob> executionProgressChangedCallback, CancellationToken cancellationToken)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function StartExecutionProgressTask(job As IJob, executionProgressChangedCallback As Action(Of IJob), cancellationToken As CancellationToken) As Task(Of IJob)
    parameters:
    - id: job
      type: Microsoft.WindowsAzure.MediaServices.Client.IJob
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.IJob" data-throw-if-not-resolved="false"></xref> instance.
    - id: executionProgressChangedCallback
      type: System.Action{Microsoft.WindowsAzure.MediaServices.Client.IJob}
      description: A callback that is invoked when the <span class="paramref">job</span> state or overall progress change.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> instance used for cancellation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IJob}
      description: A started <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> instance to monitor the <span class="paramref">job</span> progress by invoking the <span class="paramref">executionProgressChangedCallback</span> when its state or overall progress change.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask*
  nameWithType.vb: IJobExtensions.StartExecutionProgressTask(IJob, Action(Of IJob), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask(Microsoft.WindowsAzure.MediaServices.Client.IJob, System.Action(Of Microsoft.WindowsAzure.MediaServices.Client.IJob), System.Threading.CancellationToken)
  name.vb: StartExecutionProgressTask(IJob, Action(Of IJob), CancellationToken)
- uid: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.IJob)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.IJob)
  id: GetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.IJob)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions
  langs:
  - csharp
  - vb
  name: GetMediaContext(IJob)
  nameWithType: IJobExtensions.GetMediaContext(IJob)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.IJob)
  type: Method
  source:
    remote:
      path: MediaServices.Client.Extensions/IJobExtensions.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: GetMediaContext
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/IJobExtensions.cs
    startLine: 110
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns the parent <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public static MediaContextBase GetMediaContext(this IJob job)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetMediaContext(job As IJob) As MediaContextBase
    parameters:
    - id: job
      type: Microsoft.WindowsAzure.MediaServices.Client.IJob
      description: The <xref href="Microsoft.WindowsAzure.MediaServices.Client.IJob" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
      description: The parent <xref href="Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase" data-throw-if-not-resolved="false"></xref> instance.
  overload: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetMediaContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.IJob
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IJob
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IJob
  nameWithType: IJob
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IJob
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetOverallProgress*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetOverallProgress
  isExternal: false
  name: GetOverallProgress
  nameWithType: IJobExtensions.GetOverallProgress
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetOverallProgress
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask
  isExternal: false
  name: StartExecutionProgressTask
  nameWithType: IJobExtensions.StartExecutionProgressTask
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.StartExecutionProgressTask
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Action{Microsoft.WindowsAzure.MediaServices.Client.IJob}
  commentId: T:System.Action{Microsoft.WindowsAzure.MediaServices.Client.IJob}
  parent: System
  definition: System.Action`1
  name: Action<IJob>
  nameWithType: Action<IJob>
  fullName: System.Action<Microsoft.WindowsAzure.MediaServices.Client.IJob>
  nameWithType.vb: Action(Of IJob)
  fullname.vb: System.Action(Of Microsoft.WindowsAzure.MediaServices.Client.IJob)
  name.vb: Action(Of IJob)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IJob
    name: IJob
    nameWithType: IJob
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IJob
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IJob
    name: IJob
    nameWithType: IJob
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IJob
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IJob}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IJob}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IJob>
  nameWithType: Task<IJob>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.MediaServices.Client.IJob>
  nameWithType.vb: Task(Of IJob)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.MediaServices.Client.IJob)
  name.vb: Task(Of IJob)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IJob
    name: IJob
    nameWithType: IJob
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IJob
    name: IJob
    nameWithType: IJob
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IJob
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: MediaContextBase
  nameWithType: MediaContextBase
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
- uid: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetMediaContext*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetMediaContext
  isExternal: false
  name: GetMediaContext
  nameWithType: IJobExtensions.GetMediaContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IJobExtensions.GetMediaContext
