### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ILocator
  id: ILocator
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicy
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicyId
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.Asset
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.AssetId
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.BaseUri
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.ContentAccessComponent
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.Delete
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.DeleteAsync
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.ExpirationDateTime
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.Id
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.Name
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.Path
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.StartTime
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.Type
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update(System.DateTime)
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update(System.Nullable{System.DateTime},System.DateTime)
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync(System.DateTime)
  - Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync(System.Nullable{System.DateTime},System.DateTime)
  langs:
  - csharp
  - vb
  name: ILocator
  nameWithType: ILocator
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  type: Interface
  source:
    remote:
      path: src/net/Client/Entities/ILocator.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ILocator
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ILocator.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents the application of an access policy to an asset.\n"
  remarks: A locator provides access to an asset using the <xref href="Microsoft.WindowsAzure.MediaServices.Client.ILocator.Path" data-throw-if-not-resolved="false"></xref> property.
  example: []
  syntax:
    content: public interface ILocator
    content.vb: Public Interface ILocator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Id
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Id
  id: Id
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ILocator.Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Id
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Id
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 504
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Id { get; }
    content.vb: ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AssetId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.AssetId
  id: AssetId
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: AssetId
  nameWithType: ILocator.AssetId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AssetId
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AssetId
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 509
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string AssetId { get; }
    content.vb: ReadOnly Property AssetId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AssetId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.StartTime
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.StartTime
  id: StartTime
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: ILocator.StartTime
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.StartTime
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: StartTime
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 514
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: DateTime? StartTime { get; }
    content.vb: ReadOnly Property StartTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.StartTime*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.ExpirationDateTime
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.ExpirationDateTime
  id: ExpirationDateTime
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: ExpirationDateTime
  nameWithType: ILocator.ExpirationDateTime
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.ExpirationDateTime
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExpirationDateTime
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 519
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: DateTime ExpirationDateTime { get; }
    content.vb: ReadOnly Property ExpirationDateTime As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.ExpirationDateTime*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicyId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicyId
  id: AccessPolicyId
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: AccessPolicyId
  nameWithType: ILocator.AccessPolicyId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicyId
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AccessPolicyId
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 524
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string AccessPolicyId { get; }
    content.vb: ReadOnly Property AccessPolicyId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicyId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Type
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Type
  id: Type
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ILocator.Type
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Type
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Type
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 529
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: LocatorType Type { get; }
    content.vb: ReadOnly Property Type As LocatorType
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.LocatorType
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Type*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Path
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Path
  id: Path
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: ILocator.Path
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Path
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Path
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 534
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Path { get; }
    content.vb: ReadOnly Property Path As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Path*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.BaseUri
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.BaseUri
  id: BaseUri
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: ILocator.BaseUri
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.BaseUri
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: BaseUri
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 540
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string BaseUri { get; }
    content.vb: ReadOnly Property BaseUri As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.BaseUri*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.ContentAccessComponent
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.ContentAccessComponent
  id: ContentAccessComponent
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: ContentAccessComponent
  nameWithType: ILocator.ContentAccessComponent
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.ContentAccessComponent
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ContentAccessComponent
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 546
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string ContentAccessComponent { get; }
    content.vb: ReadOnly Property ContentAccessComponent As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.ContentAccessComponent*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Name
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Name
  id: Name
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ILocator.Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Name
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Name
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 552
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Name { get; }
    content.vb: ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicy
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicy
  id: AccessPolicy
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: AccessPolicy
  nameWithType: ILocator.AccessPolicy
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicy
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ILocator.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AccessPolicy
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ILocator.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy\" data-throw-if-not-resolved=\"false\"></xref> that defines this locator.\n"
  example: []
  syntax:
    content: IAccessPolicy AccessPolicy { get; }
    content.vb: ReadOnly Property AccessPolicy As IAccessPolicy
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicy*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Asset
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Asset
  id: Asset
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: Asset
  nameWithType: ILocator.Asset
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Asset
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ILocator.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Asset
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ILocator.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.IAsset\" data-throw-if-not-resolved=\"false\"></xref> that this locator is attached to.\n"
  example: []
  syntax:
    content: IAsset Asset { get; }
    content.vb: ReadOnly Property Asset As IAsset
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Asset*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync(System.DateTime)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync(System.DateTime)
  id: UpdateAsync(System.DateTime)
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: UpdateAsync(DateTime)
  nameWithType: ILocator.UpdateAsync(DateTime)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync(System.DateTime)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/ILocator.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UpdateAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ILocator.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAsynchronously updates the expiration time of an Origin locator.\n"
  example: []
  syntax:
    content: Task UpdateAsync(DateTime expiryTime)
    content.vb: Function UpdateAsync(expiryTime As Date) As Task
    parameters:
    - id: expiryTime
      type: System.DateTime
      description: The new expiration time for the origin locator.
    return:
      type: System.Threading.Tasks.Task
      description: A function delegate that returns the future result to be available through the Task&lt;ILocator&gt;.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: When locator is not an Origin Locator.
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update(System.DateTime)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update(System.DateTime)
  id: Update(System.DateTime)
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: Update(DateTime)
  nameWithType: ILocator.Update(DateTime)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update(System.DateTime)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/ILocator.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Update
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ILocator.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUpdates the expiration time of an Origin locator.\n"
  example: []
  syntax:
    content: void Update(DateTime expiryTime)
    content.vb: Sub Update(expiryTime As Date)
    parameters:
    - id: expiryTime
      type: System.DateTime
      description: The new expiration time for the origin locator.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: When locator is not an Origin Locator.
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync(System.Nullable{System.DateTime},System.DateTime)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync(System.Nullable{System.DateTime},System.DateTime)
  id: UpdateAsync(System.Nullable{System.DateTime},System.DateTime)
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: UpdateAsync(Nullable<DateTime>, DateTime)
  nameWithType: ILocator.UpdateAsync(Nullable<DateTime>, DateTime)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync(System.Nullable<System.DateTime>, System.DateTime)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/ILocator.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UpdateAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ILocator.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAsynchronously updates the start time or expiration time of an Origin locator.\n"
  example: []
  syntax:
    content: Task UpdateAsync(DateTime? startTime, DateTime expiryTime)
    content.vb: Function UpdateAsync(startTime As Date?, expiryTime As Date) As Task
    parameters:
    - id: startTime
      type: System.Nullable{System.DateTime}
      description: The new start time for the origin locator.
    - id: expiryTime
      type: System.DateTime
      description: The new expiration time for the origin locator.
    return:
      type: System.Threading.Tasks.Task
      description: A function delegate that returns the future result to be available through the Task&lt;ILocator&gt;.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: When locator is not an Origin Locator.
  nameWithType.vb: ILocator.UpdateAsync(Nullable(Of DateTime), DateTime)
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync(System.Nullable(Of System.DateTime), System.DateTime)
  name.vb: UpdateAsync(Nullable(Of DateTime), DateTime)
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update(System.Nullable{System.DateTime},System.DateTime)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update(System.Nullable{System.DateTime},System.DateTime)
  id: Update(System.Nullable{System.DateTime},System.DateTime)
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: Update(Nullable<DateTime>, DateTime)
  nameWithType: ILocator.Update(Nullable<DateTime>, DateTime)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update(System.Nullable<System.DateTime>, System.DateTime)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/ILocator.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Update
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ILocator.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUpdates the start time or expiration time of an Origin locator.\n"
  example: []
  syntax:
    content: void Update(DateTime? startTime, DateTime expiryTime)
    content.vb: Sub Update(startTime As Date?, expiryTime As Date)
    parameters:
    - id: startTime
      type: System.Nullable{System.DateTime}
      description: The new start time for the origin locator.
    - id: expiryTime
      type: System.DateTime
      description: The new expiration time for the origin locator.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: When locator is not an Origin Locator.
  nameWithType.vb: ILocator.Update(Nullable(Of DateTime), DateTime)
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update(System.Nullable(Of System.DateTime), System.DateTime)
  name.vb: Update(Nullable(Of DateTime), DateTime)
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ILocator.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  nameWithType: ILocator.DeleteAsync()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.DeleteAsync()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/ILocator.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DeleteAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ILocator.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAsynchronously revokes the specified Locator, denying any access it provided.\n"
  example: []
  syntax:
    content: Task DeleteAsync()
    content.vb: Function DeleteAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A function delegate that returns the future result to be available through the Task&lt;ILocator&gt;.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.DeleteAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Delete
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Delete
  id: Delete
  parent: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: ILocator.Delete()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Delete()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/ILocator.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Delete
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ILocator.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nDeletes the specified Locator, revoking any access it provided.\n"
  example: []
  syntax:
    content: void Delete()
    content.vb: Sub Delete
  overload: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Delete*
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Path
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Path
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Id*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Id
  isExternal: false
  name: Id
  nameWithType: ILocator.Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AssetId*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.AssetId
  isExternal: false
  name: AssetId
  nameWithType: ILocator.AssetId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AssetId
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.StartTime*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.StartTime
  isExternal: false
  name: StartTime
  nameWithType: ILocator.StartTime
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.StartTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.ExpirationDateTime*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.ExpirationDateTime
  isExternal: false
  name: ExpirationDateTime
  nameWithType: ILocator.ExpirationDateTime
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.ExpirationDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicyId*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicyId
  isExternal: false
  name: AccessPolicyId
  nameWithType: ILocator.AccessPolicyId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicyId
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Type*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Type
  isExternal: false
  name: Type
  nameWithType: ILocator.Type
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Type
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorType
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.LocatorType
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: LocatorType
  nameWithType: LocatorType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorType
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Path*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Path
  isExternal: false
  name: Path
  nameWithType: ILocator.Path
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Path
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.BaseUri*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.BaseUri
  isExternal: false
  name: BaseUri
  nameWithType: ILocator.BaseUri
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.BaseUri
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.ContentAccessComponent*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.ContentAccessComponent
  isExternal: false
  name: ContentAccessComponent
  nameWithType: ILocator.ContentAccessComponent
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.ContentAccessComponent
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Name*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Name
  isExternal: false
  name: Name
  nameWithType: ILocator.Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Name
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IAccessPolicy
  nameWithType: IAccessPolicy
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicy*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicy
  isExternal: false
  name: AccessPolicy
  nameWithType: ILocator.AccessPolicy
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.AccessPolicy
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IAsset
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IAsset
  nameWithType: IAsset
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Asset*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Asset
  isExternal: false
  name: Asset
  nameWithType: ILocator.Asset
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Asset
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync
  isExternal: false
  name: UpdateAsync
  nameWithType: ILocator.UpdateAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.UpdateAsync
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update
  isExternal: false
  name: Update
  nameWithType: ILocator.Update
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Update
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.DeleteAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: ILocator.DeleteAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.DeleteAsync
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Delete*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ILocator.Delete
  isExternal: false
  name: Delete
  nameWithType: ILocator.Delete
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator.Delete
