### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  id: IContentKeyAuthorizationPolicy
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Delete
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.DeleteAsync
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Id
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Name
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Options
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Update
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.UpdateAsync
  langs:
  - csharp
  - vb
  name: IContentKeyAuthorizationPolicy
  nameWithType: IContentKeyAuthorizationPolicy
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  type: Interface
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IContentKeyAuthorizationPolicy
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
    startLine: 22
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  syntax:
    content: public interface IContentKeyAuthorizationPolicy
    content.vb: Public Interface IContentKeyAuthorizationPolicy
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Id
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Id
  id: Id
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IContentKeyAuthorizationPolicy.Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Id
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Id
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nGets the id.\n"
  example: []
  syntax:
    content: string Id { get; }
    content.vb: ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
      description: "\nThe id.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Name
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Name
  id: Name
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IContentKeyAuthorizationPolicy.Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Name
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Name
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nGets or sets the name.\n"
  example: []
  syntax:
    content: string Name { get; set; }
    content.vb: Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\nThe name.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Name*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.UpdateAsync
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.UpdateAsync
  id: UpdateAsync
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  langs:
  - csharp
  - vb
  name: UpdateAsync()
  nameWithType: IContentKeyAuthorizationPolicy.UpdateAsync()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.UpdateAsync()
  type: Method
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UpdateAsync
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nAsynchronously updates this instance.\n"
  example: []
  syntax:
    content: Task<IContentKeyAuthorizationPolicy> UpdateAsync()
    content.vb: Function UpdateAsync As Task(Of IContentKeyAuthorizationPolicy)
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy}
      description: Task to wait on for operation completion.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.UpdateAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Update
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Update
  id: Update
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: IContentKeyAuthorizationPolicy.Update()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Update()
  type: Method
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Update
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nUpdates this instance.\n"
  example: []
  syntax:
    content: void Update()
    content.vb: Sub Update
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Update*
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Delete
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Delete
  id: Delete
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: IContentKeyAuthorizationPolicy.Delete()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Delete()
  type: Method
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Delete
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nDeletes the IContentKeyAuthorizationPolicy.\n"
  example: []
  syntax:
    content: void Delete()
    content.vb: Sub Delete
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Delete*
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  nameWithType: IContentKeyAuthorizationPolicy.DeleteAsync()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.DeleteAsync()
  type: Method
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DeleteAsync
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nDeletes the IContentKeyAuthorizationPolicy asynchronously.\n"
  example: []
  syntax:
    content: Task<IMediaDataServiceResponse> DeleteAsync()
    content.vb: Function DeleteAsync As Task(Of IMediaDataServiceResponse)
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
      description: Task to wait on for operation completion.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.DeleteAsync*
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Options
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Options
  id: Options
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: IContentKeyAuthorizationPolicy.Options
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Options
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Options
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/IContentKeyAuthorizationPolicy.cs
    startLine: 65
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nGets a collection of <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption\" data-throw-if-not-resolved=\"false\"></xref> contained by the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: IList<IContentKeyAuthorizationPolicyOption> Options { get; }
    content.vb: ReadOnly Property Options As IList(Of IContentKeyAuthorizationPolicyOption)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption}
      description: A collection of files contained by the Asset.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Options*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Id*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Id
  isExternal: false
  name: Id
  nameWithType: IContentKeyAuthorizationPolicy.Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Name*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Name
  isExternal: false
  name: Name
  nameWithType: IContentKeyAuthorizationPolicy.Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Name
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.UpdateAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.UpdateAsync
  isExternal: false
  name: UpdateAsync
  nameWithType: IContentKeyAuthorizationPolicy.UpdateAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.UpdateAsync
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IContentKeyAuthorizationPolicy>
  nameWithType: Task<IContentKeyAuthorizationPolicy>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy>
  nameWithType.vb: Task(Of IContentKeyAuthorizationPolicy)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy)
  name.vb: Task(Of IContentKeyAuthorizationPolicy)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
    name: IContentKeyAuthorizationPolicy
    nameWithType: IContentKeyAuthorizationPolicy
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
    name: IContentKeyAuthorizationPolicy
    nameWithType: IContentKeyAuthorizationPolicy
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Update*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Update
  isExternal: false
  name: Update
  nameWithType: IContentKeyAuthorizationPolicy.Update
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Update
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Delete*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Delete
  isExternal: false
  name: Delete
  nameWithType: IContentKeyAuthorizationPolicy.Delete
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Delete
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.DeleteAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: IContentKeyAuthorizationPolicy.DeleteAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.DeleteAsync
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IMediaDataServiceResponse>
  nameWithType: Task<IMediaDataServiceResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse>
  nameWithType.vb: Task(Of IMediaDataServiceResponse)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse)
  name.vb: Task(Of IMediaDataServiceResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
    name: IMediaDataServiceResponse
    nameWithType: IMediaDataServiceResponse
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
    name: IMediaDataServiceResponse
    nameWithType: IMediaDataServiceResponse
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: IContentKeyAuthorizationPolicyOption
  nameWithType: IContentKeyAuthorizationPolicyOption
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
  isExternal: false
  name: IContentKeyAuthorizationPolicy
  nameWithType: IContentKeyAuthorizationPolicy
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Options*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Options
  isExternal: false
  name: Options
  nameWithType: IContentKeyAuthorizationPolicy.Options
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicy.Options
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption}
  commentId: T:System.Collections.Generic.IList{Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IContentKeyAuthorizationPolicyOption>
  nameWithType: IList<IContentKeyAuthorizationPolicyOption>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption>
  nameWithType.vb: IList(Of IContentKeyAuthorizationPolicyOption)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption)
  name.vb: IList(Of IContentKeyAuthorizationPolicyOption)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption
    name: IContentKeyAuthorizationPolicyOption
    nameWithType: IContentKeyAuthorizationPolicyOption
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption
    name: IContentKeyAuthorizationPolicyOption
    nameWithType: IContentKeyAuthorizationPolicyOption
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.IContentKeyAuthorizationPolicyOption
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
