### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  id: BlobTransferClient
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.#ctor(System.TimeSpan)
  - Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob(System.Uri,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.UInt64,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String},System.Int64,System.Int64)
  - Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob(System.Uri,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.UInt64,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String})
  - Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.NumberOfConcurrentTransfers
  - Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.ParallelTransferThreadCount
  - Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.TransferCompleted
  - Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.TransferProgressChanged
  - Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.String,System.String,System.Func{System.String})
  - Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri,System.String,System.IO.Stream,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.String,System.String,System.Func{System.String})
  - Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri,System.String,System.IO.Stream,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String})
  - Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri,System.String,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String})
  langs:
  - csharp
  - vb
  name: BlobTransferClient
  nameWithType: BlobTransferClient
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  type: Class
  source:
    remote:
      path: src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: BlobTransferClient
    path: src/azure-sdk-for-media-services/src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Common.BlobTransfer
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents a client to operate on Windows Azure Blobs.\n"
  example: []
  syntax:
    content: public class BlobTransferClient
    content.vb: Public Class BlobTransferClient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.TransferCompleted
  commentId: E:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.TransferCompleted
  id: TransferCompleted
  parent: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  langs:
  - csharp
  - vb
  name: TransferCompleted
  nameWithType: BlobTransferClient.TransferCompleted
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.TransferCompleted
  type: Event
  source:
    remote:
      path: src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: TransferCompleted
    path: src/azure-sdk-for-media-services/src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Common.BlobTransfer
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nOccurs when upload/download operation has been completed or cancelled.\n"
  example: []
  syntax:
    content: public event EventHandler<BlobTransferCompleteEventArgs> TransferCompleted
    content.vb: Public Event TransferCompleted As EventHandler(Of BlobTransferCompleteEventArgs)
    return:
      type: System.EventHandler{Microsoft.WindowsAzure.MediaServices.Client.BlobTransferCompleteEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.ParallelTransferThreadCount
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.ParallelTransferThreadCount
  id: ParallelTransferThreadCount
  parent: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  langs:
  - csharp
  - vb
  name: ParallelTransferThreadCount
  nameWithType: BlobTransferClient.ParallelTransferThreadCount
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.ParallelTransferThreadCount
  type: Property
  source:
    remote:
      path: src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ParallelTransferThreadCount
    path: src/azure-sdk-for-media-services/src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Common.BlobTransfer
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets or sets the number of threads to use to for each blob transfer.\n/// "
  remarks: The default value is 10.
  example: []
  syntax:
    content: public int ParallelTransferThreadCount { get; set; }
    content.vb: Public Property ParallelTransferThreadCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.ParallelTransferThreadCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.NumberOfConcurrentTransfers
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.NumberOfConcurrentTransfers
  id: NumberOfConcurrentTransfers
  parent: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  langs:
  - csharp
  - vb
  name: NumberOfConcurrentTransfers
  nameWithType: BlobTransferClient.NumberOfConcurrentTransfers
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.NumberOfConcurrentTransfers
  type: Property
  source:
    remote:
      path: src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: NumberOfConcurrentTransfers
    path: src/azure-sdk-for-media-services/src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Common.BlobTransfer
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets or sets the number of concurrent blob transfers allowed.\n"
  remarks: The default value is 2.
  example: []
  syntax:
    content: public int NumberOfConcurrentTransfers { get; set; }
    content.vb: Public Property NumberOfConcurrentTransfers As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.NumberOfConcurrentTransfers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.TransferProgressChanged
  commentId: E:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.TransferProgressChanged
  id: TransferProgressChanged
  parent: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  langs:
  - csharp
  - vb
  name: TransferProgressChanged
  nameWithType: BlobTransferClient.TransferProgressChanged
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.TransferProgressChanged
  type: Event
  source:
    remote:
      path: src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: TransferProgressChanged
    path: src/azure-sdk-for-media-services/src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Common.BlobTransfer
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nOccurs when file transfer progress changed.\n"
  example: []
  syntax:
    content: public event EventHandler<BlobTransferProgressChangedEventArgs> TransferProgressChanged
    content.vb: Public Event TransferProgressChanged As EventHandler(Of BlobTransferProgressChangedEventArgs)
    return:
      type: System.EventHandler{Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.#ctor(System.TimeSpan)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.#ctor(System.TimeSpan)
  id: '#ctor(System.TimeSpan)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  langs:
  - csharp
  - vb
  name: BlobTransferClient(TimeSpan)
  nameWithType: BlobTransferClient.BlobTransferClient(TimeSpan)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.BlobTransferClient(System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/azure-sdk-for-media-services/src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
    startLine: 65
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Common.BlobTransfer
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nConstructs a <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public BlobTransferClient(TimeSpan forceSharedAccessSignatureRetry = null)
    content.vb: Public Sub New(forceSharedAccessSignatureRetry As TimeSpan = Nothing)
    parameters:
    - id: forceSharedAccessSignatureRetry
      type: System.TimeSpan
  overload: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri,System.String,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri,System.String,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String})
  id: UploadBlob(System.Uri,System.String,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String})
  parent: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  langs:
  - csharp
  - vb
  name: UploadBlob(Uri, String, String, FileEncryption, CancellationToken, IRetryPolicy, Func<String>)
  nameWithType: BlobTransferClient.UploadBlob(Uri, String, String, FileEncryption, CancellationToken, IRetryPolicy, Func<String>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri, System.String, System.String, Microsoft.WindowsAzure.MediaServices.Client.FileEncryption, System.Threading.CancellationToken, Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy, System.Func<System.String>)
  type: Method
  source:
    remote:
      path: src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UploadBlob
    path: src/azure-sdk-for-media-services/src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Common.BlobTransfer
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUploads file to a blob storage.\n"
  example: []
  syntax:
    content: public virtual Task UploadBlob(Uri url, string localFile, string contentType, FileEncryption fileEncryption, CancellationToken cancellationToken, IRetryPolicy retryPolicy, Func<string> getSharedAccessSignature = null)
    content.vb: Public Overridable Function UploadBlob(url As Uri, localFile As String, contentType As String, fileEncryption As FileEncryption, cancellationToken As CancellationToken, retryPolicy As IRetryPolicy, getSharedAccessSignature As Func(Of String) = Nothing) As Task
    parameters:
    - id: url
      type: System.Uri
      description: "The URL where file needs to be uploaded. If blob has private write permissions then \nappropriate sas url need to be passed"
    - id: localFile
      type: System.String
      description: The full path of local file.
    - id: contentType
      type: System.String
      description: Content type of the blob
    - id: fileEncryption
      type: Microsoft.WindowsAzure.MediaServices.Client.FileEncryption
      description: The file encryption if file needs to be stored encrypted. Pass null if no encryption required
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    - id: retryPolicy
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
      description: The RetryPolicy delegate returns a ShouldRetry delegate, which can be used to implement a custom retry policy.RetryPolicies class can bee used to get default policies
    - id: getSharedAccessSignature
      type: System.Func{System.String}
      description: A callback function which returns Sas signature for the file to be downloaded
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overload: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob*
  nameWithType.vb: BlobTransferClient.UploadBlob(Uri, String, String, FileEncryption, CancellationToken, IRetryPolicy, Func(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri, System.String, System.String, Microsoft.WindowsAzure.MediaServices.Client.FileEncryption, System.Threading.CancellationToken, Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy, System.Func(Of System.String))
  name.vb: UploadBlob(Uri, String, String, FileEncryption, CancellationToken, IRetryPolicy, Func(Of String))
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.String,System.String,System.Func{System.String})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.String,System.String,System.Func{System.String})
  id: UploadBlob(System.Uri,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.String,System.String,System.Func{System.String})
  parent: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  langs:
  - csharp
  - vb
  name: UploadBlob(Uri, String, FileEncryption, CancellationToken, CloudBlobClient, IRetryPolicy, String, String, Func<String>)
  nameWithType: BlobTransferClient.UploadBlob(Uri, String, FileEncryption, CancellationToken, CloudBlobClient, IRetryPolicy, String, String, Func<String>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri, System.String, Microsoft.WindowsAzure.MediaServices.Client.FileEncryption, System.Threading.CancellationToken, Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient, Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy, System.String, System.String, System.Func<System.String>)
  type: Method
  source:
    remote:
      path: src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UploadBlob
    path: src/azure-sdk-for-media-services/src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
    startLine: 119
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Common.BlobTransfer
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUploads file to a blob storage.\n"
  example: []
  syntax:
    content: public virtual Task UploadBlob(Uri url, string localFile, FileEncryption fileEncryption, CancellationToken cancellationToken, CloudBlobClient client, IRetryPolicy retryPolicy, string contentType = null, string subDirectory = "", Func<string> getSharedAccessSignature = null)
    content.vb: Public Overridable Function UploadBlob(url As Uri, localFile As String, fileEncryption As FileEncryption, cancellationToken As CancellationToken, client As CloudBlobClient, retryPolicy As IRetryPolicy, contentType As String = Nothing, subDirectory As String = "", getSharedAccessSignature As Func(Of String) = Nothing) As Task
    parameters:
    - id: url
      type: System.Uri
      description: The URL where file needs to be uploaded.If blob has private write permissions then appropriate sas url need to be passed
    - id: localFile
      type: System.String
      description: The full path of local file.
    - id: fileEncryption
      type: Microsoft.WindowsAzure.MediaServices.Client.FileEncryption
      description: The file encryption if file needs to be stored encrypted. Pass null if no encryption required
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    - id: client
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
      description: >-
        The client which will be used to upload file. Use client if request need to be signed with client credentials. When upload performed using Sas url,

        then client can be null
    - id: retryPolicy
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
      description: The RetryPolicy delegate returns a ShouldRetry delegate, which can be used to implement a custom retry policy.RetryPolicies class can bee used to get default policies
    - id: contentType
      type: System.String
      description: Content type of the blob
    - id: subDirectory
      type: System.String
      description: Virtual subdirectory for this file in the blog container.
    - id: getSharedAccessSignature
      type: System.Func{System.String}
      description: A callback function which returns Sas signature for the file to be downloaded
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overload: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob*
  nameWithType.vb: BlobTransferClient.UploadBlob(Uri, String, FileEncryption, CancellationToken, CloudBlobClient, IRetryPolicy, String, String, Func(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri, System.String, Microsoft.WindowsAzure.MediaServices.Client.FileEncryption, System.Threading.CancellationToken, Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient, Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy, System.String, System.String, System.Func(Of System.String))
  name.vb: UploadBlob(Uri, String, FileEncryption, CancellationToken, CloudBlobClient, IRetryPolicy, String, String, Func(Of String))
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob(System.Uri,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.UInt64,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob(System.Uri,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.UInt64,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String})
  id: DownloadBlob(System.Uri,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.UInt64,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String})
  parent: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  langs:
  - csharp
  - vb
  name: DownloadBlob(Uri, String, FileEncryption, UInt64, CancellationToken, IRetryPolicy, Func<String>)
  nameWithType: BlobTransferClient.DownloadBlob(Uri, String, FileEncryption, UInt64, CancellationToken, IRetryPolicy, Func<String>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob(System.Uri, System.String, Microsoft.WindowsAzure.MediaServices.Client.FileEncryption, System.UInt64, System.Threading.CancellationToken, Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy, System.Func<System.String>)
  type: Method
  source:
    remote:
      path: src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DownloadBlob
    path: src/azure-sdk-for-media-services/src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
    startLine: 158
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Common.BlobTransfer
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nDownloads the specified blob to the specified location.\n"
  example: []
  syntax:
    content: public virtual Task DownloadBlob(Uri uri, string localFile, FileEncryption fileEncryption, ulong initializationVector, CancellationToken cancellationToken, IRetryPolicy retryPolicy, Func<string> getSharedAccessSignature = null)
    content.vb: Public Overridable Function DownloadBlob(uri As Uri, localFile As String, fileEncryption As FileEncryption, initializationVector As ULong, cancellationToken As CancellationToken, retryPolicy As IRetryPolicy, getSharedAccessSignature As Func(Of String) = Nothing) As Task
    parameters:
    - id: uri
      type: System.Uri
      description: The blob url  from which file  needs to be downloaded.If blob has private read permissions then appropriate sas url need to be passed
    - id: localFile
      type: System.String
      description: 'The full path where file will be saved '
    - id: fileEncryption
      type: Microsoft.WindowsAzure.MediaServices.Client.FileEncryption
      description: The file encryption if file has been encrypted. Pass null if no encryption has been used
    - id: initializationVector
      type: System.UInt64
      description: The initialization vector if encryption has been used.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    - id: retryPolicy
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
      description: The RetryPolicy delegate returns a ShouldRetry delegate, which can be used to implement a custom retry policy.RetryPolicies class can bee used to get default policies
    - id: getSharedAccessSignature
      type: System.Func{System.String}
      description: A callback function which returns Sas signature for the file to be downloaded
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overload: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob*
  nameWithType.vb: BlobTransferClient.DownloadBlob(Uri, String, FileEncryption, UInt64, CancellationToken, IRetryPolicy, Func(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob(System.Uri, System.String, Microsoft.WindowsAzure.MediaServices.Client.FileEncryption, System.UInt64, System.Threading.CancellationToken, Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy, System.Func(Of System.String))
  name.vb: DownloadBlob(Uri, String, FileEncryption, UInt64, CancellationToken, IRetryPolicy, Func(Of String))
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob(System.Uri,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.UInt64,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String},System.Int64,System.Int64)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob(System.Uri,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.UInt64,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String},System.Int64,System.Int64)
  id: DownloadBlob(System.Uri,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.UInt64,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String},System.Int64,System.Int64)
  parent: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  langs:
  - csharp
  - vb
  name: DownloadBlob(Uri, String, FileEncryption, UInt64, CloudBlobClient, CancellationToken, IRetryPolicy, Func<String>, Int64, Int64)
  nameWithType: BlobTransferClient.DownloadBlob(Uri, String, FileEncryption, UInt64, CloudBlobClient, CancellationToken, IRetryPolicy, Func<String>, Int64, Int64)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob(System.Uri, System.String, Microsoft.WindowsAzure.MediaServices.Client.FileEncryption, System.UInt64, Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient, System.Threading.CancellationToken, Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy, System.Func<System.String>, System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: DownloadBlob
    path: src/azure-sdk-for-media-services/src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
    startLine: 185
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Common.BlobTransfer
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nDownloads the specified blob to the specified location.\n"
  example: []
  syntax:
    content: public virtual Task DownloadBlob(Uri uri, string localFile, FileEncryption fileEncryption, ulong initializationVector, CloudBlobClient client, CancellationToken cancellationToken, IRetryPolicy retryPolicy, Func<string> getSharedAccessSignature = null, long start = 0L, long length = -1L)
    content.vb: Public Overridable Function DownloadBlob(uri As Uri, localFile As String, fileEncryption As FileEncryption, initializationVector As ULong, client As CloudBlobClient, cancellationToken As CancellationToken, retryPolicy As IRetryPolicy, getSharedAccessSignature As Func(Of String) = Nothing, start As Long = 0L, length As Long = -1L) As Task
    parameters:
    - id: uri
      type: System.Uri
      description: The blob url from which file a needs should be downloaded. If blob has private read permissions then an appropriate SAS url need to be passed.
    - id: localFile
      type: System.String
      description: The full path where file will be saved.
    - id: fileEncryption
      type: Microsoft.WindowsAzure.MediaServices.Client.FileEncryption
      description: The file encryption if file has been encrypted. Pass null if no encryption has been used.
    - id: initializationVector
      type: System.UInt64
      description: The initialization vector if encryption has been used.
    - id: client
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
      description: The azure client to access a blob.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel the download operation.
    - id: retryPolicy
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
      description: The RetryPolicy delegate returns a ShouldRetry delegate, which can be used to implement a custom retry policy.RetryPolicies class can bee used to get default policies
    - id: getSharedAccessSignature
      type: System.Func{System.String}
      description: A callback function which returns Sas signature for the file to be downloaded
    - id: start
      type: System.Int64
      description: Start pos to download
    - id: length
      type: System.Int64
      description: Number of bytes to download, -1 to download all.
    return:
      type: System.Threading.Tasks.Task
      description: A task that downloads the specified blob.
  overload: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob*
  nameWithType.vb: BlobTransferClient.DownloadBlob(Uri, String, FileEncryption, UInt64, CloudBlobClient, CancellationToken, IRetryPolicy, Func(Of String), Int64, Int64)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob(System.Uri, System.String, Microsoft.WindowsAzure.MediaServices.Client.FileEncryption, System.UInt64, Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient, System.Threading.CancellationToken, Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy, System.Func(Of System.String), System.Int64, System.Int64)
  name.vb: DownloadBlob(Uri, String, FileEncryption, UInt64, CloudBlobClient, CancellationToken, IRetryPolicy, Func(Of String), Int64, Int64)
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri,System.String,System.IO.Stream,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri,System.String,System.IO.Stream,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String})
  id: UploadBlob(System.Uri,System.String,System.IO.Stream,System.String,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.Func{System.String})
  parent: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  langs:
  - csharp
  - vb
  name: UploadBlob(Uri, String, Stream, String, FileEncryption, CancellationToken, IRetryPolicy, Func<String>)
  nameWithType: BlobTransferClient.UploadBlob(Uri, String, Stream, String, FileEncryption, CancellationToken, IRetryPolicy, Func<String>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri, System.String, System.IO.Stream, System.String, Microsoft.WindowsAzure.MediaServices.Client.FileEncryption, System.Threading.CancellationToken, Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy, System.Func<System.String>)
  type: Method
  source:
    remote:
      path: src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UploadBlob
    path: src/azure-sdk-for-media-services/src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
    startLine: 276
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Common.BlobTransfer
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUploads stream to a blob storage.\n"
  example: []
  syntax:
    content: public virtual Task UploadBlob(Uri url, string name, Stream stream, string contentType, FileEncryption fileEncryption, CancellationToken cancellationToken, IRetryPolicy retryPolicy, Func<string> getSharedAccessSignature = null)
    content.vb: Public Overridable Function UploadBlob(url As Uri, name As String, stream As Stream, contentType As String, fileEncryption As FileEncryption, cancellationToken As CancellationToken, retryPolicy As IRetryPolicy, getSharedAccessSignature As Func(Of String) = Nothing) As Task
    parameters:
    - id: url
      type: System.Uri
      description: "The URL where file needs to be uploaded. If blob has private write permissions then \nappropriate sas url need to be passed"
    - id: name
      type: System.String
      description: Name for the stream
    - id: stream
      type: System.IO.Stream
      description: Stream to be uploaded
    - id: contentType
      type: System.String
      description: Content type of the blob
    - id: fileEncryption
      type: Microsoft.WindowsAzure.MediaServices.Client.FileEncryption
      description: The file encryption if file needs to be stored encrypted. Pass null if no encryption required
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    - id: retryPolicy
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
      description: The RetryPolicy delegate returns a ShouldRetry delegate, which can be used to implement a custom retry policy.RetryPolicies class can bee used to get default policies
    - id: getSharedAccessSignature
      type: System.Func{System.String}
      description: A callback function which returns Sas signature for the file to be downloaded
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overload: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob*
  nameWithType.vb: BlobTransferClient.UploadBlob(Uri, String, Stream, String, FileEncryption, CancellationToken, IRetryPolicy, Func(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri, System.String, System.IO.Stream, System.String, Microsoft.WindowsAzure.MediaServices.Client.FileEncryption, System.Threading.CancellationToken, Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy, System.Func(Of System.String))
  name.vb: UploadBlob(Uri, String, Stream, String, FileEncryption, CancellationToken, IRetryPolicy, Func(Of String))
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri,System.String,System.IO.Stream,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.String,System.String,System.Func{System.String})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri,System.String,System.IO.Stream,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.String,System.String,System.Func{System.String})
  id: UploadBlob(System.Uri,System.String,System.IO.Stream,Microsoft.WindowsAzure.MediaServices.Client.FileEncryption,System.Threading.CancellationToken,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient,Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy,System.String,System.String,System.Func{System.String})
  parent: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  langs:
  - csharp
  - vb
  name: UploadBlob(Uri, String, Stream, FileEncryption, CancellationToken, CloudBlobClient, IRetryPolicy, String, String, Func<String>)
  nameWithType: BlobTransferClient.UploadBlob(Uri, String, Stream, FileEncryption, CancellationToken, CloudBlobClient, IRetryPolicy, String, String, Func<String>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri, System.String, System.IO.Stream, Microsoft.WindowsAzure.MediaServices.Client.FileEncryption, System.Threading.CancellationToken, Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient, Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy, System.String, System.String, System.Func<System.String>)
  type: Method
  source:
    remote:
      path: src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: UploadBlob
    path: src/azure-sdk-for-media-services/src/net/Client/Common/Common.BlobTransfer/BlobTransferClient.cs
    startLine: 315
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Common.BlobTransfer
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nUploads a stream to a blob storage.\n"
  example: []
  syntax:
    content: public virtual Task UploadBlob(Uri url, string name, Stream stream, FileEncryption fileEncryption, CancellationToken cancellationToken, CloudBlobClient client, IRetryPolicy retryPolicy, string contentType = null, string subDirectory = "", Func<string> getSharedAccessSignature = null)
    content.vb: Public Overridable Function UploadBlob(url As Uri, name As String, stream As Stream, fileEncryption As FileEncryption, cancellationToken As CancellationToken, client As CloudBlobClient, retryPolicy As IRetryPolicy, contentType As String = Nothing, subDirectory As String = "", getSharedAccessSignature As Func(Of String) = Nothing) As Task
    parameters:
    - id: url
      type: System.Uri
      description: The URL where file needs to be uploaded.If blob has private write permissions then appropriate sas url need to be passed
    - id: name
      type: System.String
      description: Name for the stream
    - id: stream
      type: System.IO.Stream
      description: Stream to be uploaded
    - id: fileEncryption
      type: Microsoft.WindowsAzure.MediaServices.Client.FileEncryption
      description: The file encryption if file needs to be stored encrypted. Pass null if no encryption required
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    - id: client
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
      description: >-
        The client which will be used to upload file. Use client if request need to be signed with client credentials. When upload performed using Sas url,

        then client can be null
    - id: retryPolicy
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
      description: The RetryPolicy delegate returns a ShouldRetry delegate, which can be used to implement a custom retry policy.RetryPolicies class can bee used to get default policies
    - id: contentType
      type: System.String
      description: Content type of the blob
    - id: subDirectory
      type: System.String
      description: Virtual subdirectory for this file in the blog container.
    - id: getSharedAccessSignature
      type: System.Func{System.String}
      description: A callback function which returns Sas signature for the file to be downloaded
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overload: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob*
  nameWithType.vb: BlobTransferClient.UploadBlob(Uri, String, Stream, FileEncryption, CancellationToken, CloudBlobClient, IRetryPolicy, String, String, Func(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob(System.Uri, System.String, System.IO.Stream, Microsoft.WindowsAzure.MediaServices.Client.FileEncryption, System.Threading.CancellationToken, Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient, Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy, System.String, System.String, System.Func(Of System.String))
  name.vb: UploadBlob(Uri, String, Stream, FileEncryption, CancellationToken, CloudBlobClient, IRetryPolicy, String, String, Func(Of String))
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{Microsoft.WindowsAzure.MediaServices.Client.BlobTransferCompleteEventArgs}
  commentId: T:System.EventHandler{Microsoft.WindowsAzure.MediaServices.Client.BlobTransferCompleteEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BlobTransferCompleteEventArgs>
  nameWithType: EventHandler<BlobTransferCompleteEventArgs>
  fullName: System.EventHandler<Microsoft.WindowsAzure.MediaServices.Client.BlobTransferCompleteEventArgs>
  nameWithType.vb: EventHandler(Of BlobTransferCompleteEventArgs)
  fullname.vb: System.EventHandler(Of Microsoft.WindowsAzure.MediaServices.Client.BlobTransferCompleteEventArgs)
  name.vb: EventHandler(Of BlobTransferCompleteEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferCompleteEventArgs
    name: BlobTransferCompleteEventArgs
    nameWithType: BlobTransferCompleteEventArgs
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferCompleteEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferCompleteEventArgs
    name: BlobTransferCompleteEventArgs
    nameWithType: BlobTransferCompleteEventArgs
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferCompleteEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.ParallelTransferThreadCount*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.ParallelTransferThreadCount
  isExternal: false
  name: ParallelTransferThreadCount
  nameWithType: BlobTransferClient.ParallelTransferThreadCount
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.ParallelTransferThreadCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.NumberOfConcurrentTransfers*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.NumberOfConcurrentTransfers
  isExternal: false
  name: NumberOfConcurrentTransfers
  nameWithType: BlobTransferClient.NumberOfConcurrentTransfers
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.NumberOfConcurrentTransfers
- uid: System.EventHandler{Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs}
  commentId: T:System.EventHandler{Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BlobTransferProgressChangedEventArgs>
  nameWithType: EventHandler<BlobTransferProgressChangedEventArgs>
  fullName: System.EventHandler<Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs>
  nameWithType.vb: EventHandler(Of BlobTransferProgressChangedEventArgs)
  fullname.vb: System.EventHandler(Of Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs)
  name.vb: EventHandler(Of BlobTransferProgressChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs
    name: BlobTransferProgressChangedEventArgs
    nameWithType: BlobTransferProgressChangedEventArgs
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs
    name: BlobTransferProgressChangedEventArgs
    nameWithType: BlobTransferProgressChangedEventArgs
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferProgressChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: BlobTransferClient
  nameWithType: BlobTransferClient
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.#ctor
  isExternal: false
  name: BlobTransferClient
  nameWithType: BlobTransferClient.BlobTransferClient
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.BlobTransferClient
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob
  isExternal: false
  name: UploadBlob
  nameWithType: BlobTransferClient.UploadBlob
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.UploadBlob
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.MediaServices.Client.FileEncryption
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.FileEncryption
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: FileEncryption
  nameWithType: FileEncryption
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FileEncryption
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: true
  name: IRetryPolicy
  nameWithType: IRetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullname.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies
  commentId: N:Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.RetryPolicies
  nameWithType: Microsoft.WindowsAzure.Storage.RetryPolicies
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: true
  name: CloudBlobClient
  nameWithType: CloudBlobClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
- uid: Microsoft.WindowsAzure.Storage.Blob
  commentId: N:Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  nameWithType: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob
  isExternal: false
  name: DownloadBlob
  nameWithType: BlobTransferClient.DownloadBlob
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BlobTransferClient.DownloadBlob
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
