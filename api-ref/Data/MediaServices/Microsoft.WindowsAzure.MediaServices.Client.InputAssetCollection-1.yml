### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  id: InputAssetCollection`1
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.#ctor
  - Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Add(`0)
  - Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  - Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Clear
  - Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Contains(`0)
  - Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.CopyTo(`0[],System.Int32)
  - Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Count
  - Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.GetEnumerator
  - Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.IsReadOnly
  - Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Item(System.Int32)
  - Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Remove(`0)
  - Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: InputAssetCollection<T>
  nameWithType: InputAssetCollection<T>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>
  type: Class
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: InputAssetCollection
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nEnumerable for task input assets.\n"
  example: []
  syntax:
    content: 'public class InputAssetCollection<T> : ICollection<T>, IEnumerable<T>, IEnumerable'
    content.vb: >-
      Public Class InputAssetCollection(Of T)
          Implements ICollection(Of T), IEnumerable(Of T), IEnumerable
    typeParameters:
    - id: T
      description: The type of element.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: InputAssetCollection(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T)
  name.vb: InputAssetCollection(Of T)
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.#ctor
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  langs:
  - csharp
  - vb
  name: InputAssetCollection()
  nameWithType: InputAssetCollection<T>.InputAssetCollection()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.InputAssetCollection()
  type: Constructor
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public InputAssetCollection()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.#ctor*
  nameWithType.vb: InputAssetCollection(Of T).InputAssetCollection()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).InputAssetCollection()
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Count
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Count
  id: Count
  parent: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: InputAssetCollection<T>.Count
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.Count
  type: Property
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Count
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the count of element within a enumerable.\n"
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Count*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Count
  nameWithType.vb: InputAssetCollection(Of T).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).Count
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.IsReadOnly
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.IsReadOnly
  id: IsReadOnly
  parent: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: InputAssetCollection<T>.IsReadOnly
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.IsReadOnly
  type: Property
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IsReadOnly
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets a value indicating whether the <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref> is read-only.\n"
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only; otherwise, false.
  overload: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{{T}}.IsReadOnly
  nameWithType.vb: InputAssetCollection(Of T).IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).IsReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Item(System.Int32)
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: InputAssetCollection<T>.Item[Int32]
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: this[]
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 73
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.IAsset\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.\n"
  example: []
  syntax:
    content: public T this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As T
    parameters:
    - id: index
      type: System.Int32
      description: The index.
    return:
      type: '{T}'
      description: The item.
  overload: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Item*
  nameWithType.vb: InputAssetCollection(Of T).Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.GetEnumerator
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: InputAssetCollection<T>.GetEnumerator()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetEnumerator
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 86
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: "\nA <xref href=\"System.Collections.Generic.IEnumerator%601\" data-throw-if-not-resolved=\"false\"></xref> that can be used to iterate through the collection.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: InputAssetCollection(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).GetEnumerator()
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: InputAssetCollection<T>.IEnumerable.GetEnumerator()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\nAn <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to iterate through the collection.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: InputAssetCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Add(`0)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Add(`0)
  id: Add(`0)
  parent: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: InputAssetCollection<T>.Add(T)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.Add(T)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Add
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 108
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAdds the specified item to a collection.\n"
  example: []
  syntax:
    content: public void Add(T item)
    content.vb: Public Sub Add(item As T)
    parameters:
    - id: item
      type: '{T}'
      description: The asset.
  overload: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Add*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Add({T})
  nameWithType.vb: InputAssetCollection(Of T).Add(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).Add(T)
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Clear
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Clear
  id: Clear
  parent: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: InputAssetCollection<T>.Clear()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.Clear()
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Clear
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 121
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRemoves all items from the <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\nThe <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref> is read-only.\n"
  implements:
  - System.Collections.Generic.ICollection{{T}}.Clear
  nameWithType.vb: InputAssetCollection(Of T).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).Clear()
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Remove(`0)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Remove(`0)
  id: Remove(`0)
  parent: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: InputAssetCollection<T>.Remove(T)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.Remove(T)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Remove
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 138
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRemoves the first occurrence of a specific object from the <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Remove(T item)
    content.vb: Public Function Remove(item As T) As Boolean
    parameters:
    - id: item
      type: '{T}'
      description: The object to remove from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: "\ntrue if <span class=\"paramref\">item</span> was successfully removed from the <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, false. This method also returns false if <span class=\"paramref\">item</span> is not found in the original <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\nThe <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref> is read-only.\n"
  implements:
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  nameWithType.vb: InputAssetCollection(Of T).Remove(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).Remove(T)
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Contains(`0)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Contains(`0)
  id: Contains(`0)
  parent: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: InputAssetCollection<T>.Contains(T)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.Contains(T)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Contains
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 152
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nDetermines whether the <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref> contains a specific value.\n"
  example: []
  syntax:
    content: public bool Contains(T item)
    content.vb: Public Function Contains(item As T) As Boolean
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: "\ntrue if <span class=\"paramref\">item</span> is found in the <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, false.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Contains*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  nameWithType.vb: InputAssetCollection(Of T).Contains(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).Contains(T)
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.CopyTo(`0[],System.Int32)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], Int32)
  nameWithType: InputAssetCollection<T>.CopyTo(T[], Int32)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.CopyTo(T[], System.Int32)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CopyTo
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 162
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nCopies to.\n"
  example: []
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
    parameters:
    - id: array
      type: '{T}[]'
      description: The array.
    - id: arrayIndex
      type: System.Int32
      description: Index of the array.
  overload: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  nameWithType.vb: InputAssetCollection(Of T).CopyTo(T(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<T>)
  nameWithType: InputAssetCollection<T>.AddRange(IEnumerable<T>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/InputAssetCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AddRange
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/InputAssetCollection.cs
    startLine: 171
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAdds the range of assets to a collection.\n"
  example: []
  syntax:
    content: public void AddRange(IEnumerable<T> assets)
    content.vb: Public Sub AddRange(assets As IEnumerable(Of T))
    parameters:
    - id: assets
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The assets to add.
  overload: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.AddRange*
  nameWithType.vb: InputAssetCollection(Of T).AddRange(IEnumerable(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  isExternal: false
  name: InputAssetCollection<T>
  nameWithType: InputAssetCollection<T>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>
  nameWithType.vb: InputAssetCollection(Of T)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T)
  name.vb: InputAssetCollection(Of T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
    name: InputAssetCollection
    nameWithType: InputAssetCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
    name: InputAssetCollection
    nameWithType: InputAssetCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.#ctor
  isExternal: false
  name: InputAssetCollection
  nameWithType: InputAssetCollection.InputAssetCollection
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection.InputAssetCollection
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Count*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Count
  isExternal: false
  name: Count
  nameWithType: InputAssetCollection<T>.Count
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.Count
  nameWithType.vb: InputAssetCollection(Of T).Count
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).Count
- uid: System.Collections.Generic.ICollection{{T}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.IsReadOnly*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: InputAssetCollection<T>.IsReadOnly
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.IsReadOnly
  nameWithType.vb: InputAssetCollection(Of T).IsReadOnly
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{{T}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IAsset
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IAsset
  nameWithType: IAsset
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Item*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Item
  isExternal: false
  name: Item
  nameWithType: InputAssetCollection<T>.Item
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>.Item
  nameWithType.vb: InputAssetCollection(Of T).Item
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T).Item
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.GetEnumerator*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: InputAssetCollection.GetEnumerator
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: InputAssetCollection.IEnumerable.GetEnumerator
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: InputAssetCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Add*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Add
  isExternal: false
  name: Add
  nameWithType: InputAssetCollection.Add
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection.Add
- uid: System.Collections.Generic.ICollection{{T}}.Add({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Clear*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Clear
  isExternal: false
  name: Clear
  nameWithType: InputAssetCollection.Clear
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection.Clear
- uid: System.Collections.Generic.ICollection{{T}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Remove*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Remove
  isExternal: false
  name: Remove
  nameWithType: InputAssetCollection.Remove
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection.Remove
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Contains*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.Contains
  isExternal: false
  name: Contains
  nameWithType: InputAssetCollection.Contains
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection.Contains
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.CopyTo*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.CopyTo
  isExternal: false
  name: CopyTo
  nameWithType: InputAssetCollection.CopyTo
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection.CopyTo
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}[]'
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullname.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.AddRange*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1.AddRange
  isExternal: false
  name: AddRange
  nameWithType: InputAssetCollection.AddRange
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection.AddRange
