### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction
  id: ExplicitAnalogTelevisionRestriction
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.#ctor(System.Byte,System.Boolean)
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.BestEffort
  - Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.ConfigurationData
  langs:
  - csharp
  - vb
  name: ExplicitAnalogTelevisionRestriction
  nameWithType: ExplicitAnalogTelevisionRestriction
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction
  type: Class
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ExplicitAnalogTelevisionRestriction.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ExplicitAnalogTelevisionRestriction
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ExplicitAnalogTelevisionRestriction.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nConfigures the Explicit Analog Television Output Restriction in the license.  This is a form of video output protection.\nFor further details see the PlayReady Compliance Rules.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1")]

      public class ExplicitAnalogTelevisionRestriction
    content.vb: >-
      <DataContract(Namespace:="http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1")>

      Public Class ExplicitAnalogTelevisionRestriction
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: http://schemas.microsoft.com/Azure/MediaServices/KeyDelivery/PlayReadyTemplate/v1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.BestEffort
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.BestEffort
  id: BestEffort
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction
  langs:
  - csharp
  - vb
  name: BestEffort
  nameWithType: ExplicitAnalogTelevisionRestriction.BestEffort
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.BestEffort
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ExplicitAnalogTelevisionRestriction.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: BestEffort
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ExplicitAnalogTelevisionRestriction.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nControls whether the Explicit Analog Television Output Restriction is enforced on a Best Effort basis or not.\nIf true, then the PlayReady client must make its best effort to enforce the restriction but can allow video content\nto flow to Analog Television Outputs if it cannot support the restriction.  If false, the PlayReady client must\nenforce the restriction.  For further details see the PlayReady Compliance Rules.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool BestEffort { get; }
    content.vb: >-
      <DataMember>

      Public ReadOnly Property BestEffort As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.BestEffort*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.ConfigurationData
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.ConfigurationData
  id: ConfigurationData
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction
  langs:
  - csharp
  - vb
  name: ConfigurationData
  nameWithType: ExplicitAnalogTelevisionRestriction.ConfigurationData
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.ConfigurationData
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ExplicitAnalogTelevisionRestriction.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ConfigurationData
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ExplicitAnalogTelevisionRestriction.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  summary: "\nConfigures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public byte ConfigurationData { get; }
    content.vb: >-
      <DataMember>

      Public ReadOnly Property ConfigurationData As Byte
    parameters: []
    return:
      type: System.Byte
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.ConfigurationData*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.#ctor(System.Byte,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.#ctor(System.Byte,System.Boolean)
  id: '#ctor(System.Byte,System.Boolean)'
  parent: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction
  langs:
  - csharp
  - vb
  name: ExplicitAnalogTelevisionRestriction(Byte, Boolean)
  nameWithType: ExplicitAnalogTelevisionRestriction.ExplicitAnalogTelevisionRestriction(Byte, Boolean)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.ExplicitAnalogTelevisionRestriction(System.Byte, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/ExplicitAnalogTelevisionRestriction.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/ExplicitAnalogTelevisionRestriction.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  syntax:
    content: public ExplicitAnalogTelevisionRestriction(byte configurationData, bool bestEffort = false)
    content.vb: Public Sub New(configurationData As Byte, bestEffort As Boolean = False)
    parameters:
    - id: configurationData
      type: System.Byte
    - id: bestEffort
      type: System.Boolean
  overload: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.BestEffort*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.BestEffort
  isExternal: false
  name: BestEffort
  nameWithType: ExplicitAnalogTelevisionRestriction.BestEffort
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.BestEffort
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.ConfigurationData*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.ConfigurationData
  isExternal: false
  name: ConfigurationData
  nameWithType: ExplicitAnalogTelevisionRestriction.ConfigurationData
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.ConfigurationData
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.#ctor
  isExternal: false
  name: ExplicitAnalogTelevisionRestriction
  nameWithType: ExplicitAnalogTelevisionRestriction.ExplicitAnalogTelevisionRestriction
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ContentKeyAuthorization.ExplicitAnalogTelevisionRestriction.ExplicitAnalogTelevisionRestriction
