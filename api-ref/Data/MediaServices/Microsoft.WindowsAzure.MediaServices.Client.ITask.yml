### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ITask
  id: ITask
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.Configuration
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionKeyId
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionScheme
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionVersion
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.EndTime
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.ErrorDetails
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.GetClearConfiguration
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.HistoricalEvents
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.Id
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.InitializationVector
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.InputAssets
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.MediaProcessorId
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.Name
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.Options
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.OutputAssets
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.PerfMessage
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.Priority
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.Progress
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.RunningDuration
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.StartTime
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.State
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskBody
  - Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskNotificationSubscriptions
  langs:
  - csharp
  - vb
  name: ITask
  nameWithType: ITask
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask
  type: Interface
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ITask
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ITask.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nDescribes a task within a job in the system.\n"
  example: []
  syntax:
    content: public interface ITask
    content.vb: Public Interface ITask
  seealso:
  - linkId: Microsoft.WindowsAzure.MediaServices.Client.IJob
    commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IJob
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Id
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.Id
  id: Id
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ITask.Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Id
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Id
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 416
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Id { get; }
    content.vb: ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Name
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.Name
  id: Name
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ITask.Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Name
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Name
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 421
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Name { get; set; }
    content.vb: Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.Name*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.MediaProcessorId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.MediaProcessorId
  id: MediaProcessorId
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: MediaProcessorId
  nameWithType: ITask.MediaProcessorId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.MediaProcessorId
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MediaProcessorId
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 427
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string MediaProcessorId { get; set; }
    content.vb: Property MediaProcessorId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.MediaProcessorId*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.State
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.State
  id: State
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: State
  nameWithType: ITask.State
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.State
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: State
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 433
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: JobState State { get; }
    content.vb: ReadOnly Property State As JobState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.JobState
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.State*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.PerfMessage
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.PerfMessage
  id: PerfMessage
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: PerfMessage
  nameWithType: ITask.PerfMessage
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.PerfMessage
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: PerfMessage
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 438
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string PerfMessage { get; }
    content.vb: ReadOnly Property PerfMessage As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.PerfMessage*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Priority
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.Priority
  id: Priority
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: ITask.Priority
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Priority
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Priority
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 443
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: int Priority { get; set; }
    content.vb: Property Priority As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.Priority*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.StartTime
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.StartTime
  id: StartTime
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: ITask.StartTime
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.StartTime
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: StartTime
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 449
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: DateTime? StartTime { get; }
    content.vb: ReadOnly Property StartTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.StartTime*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.EndTime
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.EndTime
  id: EndTime
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: ITask.EndTime
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.EndTime
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EndTime
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 454
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: DateTime? EndTime { get; }
    content.vb: ReadOnly Property EndTime As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.EndTime*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.RunningDuration
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.RunningDuration
  id: RunningDuration
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: RunningDuration
  nameWithType: ITask.RunningDuration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.RunningDuration
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: RunningDuration
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 459
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: TimeSpan RunningDuration { get; }
    content.vb: ReadOnly Property RunningDuration As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.RunningDuration*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskBody
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskBody
  id: TaskBody
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: TaskBody
  nameWithType: ITask.TaskBody
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskBody
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: TaskBody
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 464
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string TaskBody { get; set; }
    content.vb: Property TaskBody As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskBody*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Configuration
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.Configuration
  id: Configuration
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: ITask.Configuration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Configuration
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Configuration
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 470
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string Configuration { get; set; }
    content.vb: Property Configuration As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.Configuration*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Options
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.Options
  id: Options
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: ITask.Options
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Options
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Options
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 476
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: TaskOptions Options { get; }
    content.vb: ReadOnly Property Options As TaskOptions
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.TaskOptions
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.Options*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.InitializationVector
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.InitializationVector
  id: InitializationVector
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: InitializationVector
  nameWithType: ITask.InitializationVector
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.InitializationVector
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: InitializationVector
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 481
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string InitializationVector { get; }
    content.vb: ReadOnly Property InitializationVector As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.InitializationVector*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionVersion
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionVersion
  id: EncryptionVersion
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: EncryptionVersion
  nameWithType: ITask.EncryptionVersion
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionVersion
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptionVersion
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 486
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string EncryptionVersion { get; }
    content.vb: ReadOnly Property EncryptionVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionVersion*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionScheme
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionScheme
  id: EncryptionScheme
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: EncryptionScheme
  nameWithType: ITask.EncryptionScheme
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionScheme
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptionScheme
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 491
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string EncryptionScheme { get; }
    content.vb: ReadOnly Property EncryptionScheme As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionScheme*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionKeyId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionKeyId
  id: EncryptionKeyId
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: EncryptionKeyId
  nameWithType: ITask.EncryptionKeyId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionKeyId
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ApiClasses.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: EncryptionKeyId
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ApiClasses.cs
    startLine: 496
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  example: []
  syntax:
    content: string EncryptionKeyId { get; }
    content.vb: ReadOnly Property EncryptionKeyId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionKeyId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.InputAssets
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.InputAssets
  id: InputAssets
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: InputAssets
  nameWithType: ITask.InputAssets
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.InputAssets
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: InputAssets
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ITask.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the collection of input assets for the task.\n"
  example: []
  syntax:
    content: InputAssetCollection<IAsset> InputAssets { get; }
    content.vb: ReadOnly Property InputAssets As InputAssetCollection(Of IAsset)
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection{Microsoft.WindowsAzure.MediaServices.Client.IAsset}
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.InputAssets*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.OutputAssets
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.OutputAssets
  id: OutputAssets
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: OutputAssets
  nameWithType: ITask.OutputAssets
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.OutputAssets
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: OutputAssets
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ITask.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the collection of output assets for the task.\n"
  example: []
  syntax:
    content: OutputAssetCollection OutputAssets { get; }
    content.vb: ReadOnly Property OutputAssets As OutputAssetCollection
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.OutputAssetCollection
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.OutputAssets*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Progress
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.Progress
  id: Progress
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ITask.Progress
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Progress
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Progress
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ITask.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the percentage of completion of the task.\n"
  example: []
  syntax:
    content: double Progress { get; }
    content.vb: ReadOnly Property Progress As Double
    parameters: []
    return:
      type: System.Double
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.Progress*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.ErrorDetails
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.ErrorDetails
  id: ErrorDetails
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: ErrorDetails
  nameWithType: ITask.ErrorDetails
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.ErrorDetails
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ErrorDetails
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ITask.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets a collection of <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail\" data-throw-if-not-resolved=\"false\"></xref> objects describing the errors encountered during task execution.\n"
  example: []
  syntax:
    content: ReadOnlyCollection<ErrorDetail> ErrorDetails { get; }
    content.vb: ReadOnly Property ErrorDetails As ReadOnlyCollection(Of ErrorDetail)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail}
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.ErrorDetails*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskNotificationSubscriptions
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskNotificationSubscriptions
  id: TaskNotificationSubscriptions
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: TaskNotificationSubscriptions
  nameWithType: ITask.TaskNotificationSubscriptions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskNotificationSubscriptions
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: TaskNotificationSubscriptions
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ITask.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets a collection of task notification subscription.\n"
  example: []
  syntax:
    content: TaskNotificationSubscriptionCollection TaskNotificationSubscriptions { get; }
    content.vb: ReadOnly Property TaskNotificationSubscriptions As TaskNotificationSubscriptionCollection
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.TaskNotificationSubscriptionCollection
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskNotificationSubscriptions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.HistoricalEvents
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITask.HistoricalEvents
  id: HistoricalEvents
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: HistoricalEvents
  nameWithType: ITask.HistoricalEvents
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.HistoricalEvents
  type: Property
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: HistoricalEvents
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ITask.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets a collection of <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent\" data-throw-if-not-resolved=\"false\"></xref> objects decribing events associated with task execution.\n"
  example: []
  syntax:
    content: ReadOnlyCollection<TaskHistoricalEvent> HistoricalEvents { get; }
    content.vb: ReadOnly Property HistoricalEvents As ReadOnlyCollection(Of TaskHistoricalEvent)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent}
      description: "\nThe historical events.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.HistoricalEvents*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.GetClearConfiguration
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ITask.GetClearConfiguration
  id: GetClearConfiguration
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITask
  langs:
  - csharp
  - vb
  name: GetClearConfiguration()
  nameWithType: ITask.GetClearConfiguration()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.GetClearConfiguration()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/ITask.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetClearConfiguration
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/ITask.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the decrypted configuration data.\n"
  example: []
  syntax:
    content: string GetClearConfiguration()
    content.vb: Function GetClearConfiguration As String
    return:
      type: System.String
      description: A string containing the configuration data. If the data was encrypted, the configuration returned is decrypted.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITask.GetClearConfiguration*
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.IJob
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IJob
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IJob
  nameWithType: IJob
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IJob
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Id*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.Id
  isExternal: false
  name: Id
  nameWithType: ITask.Id
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Name*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.Name
  isExternal: false
  name: Name
  nameWithType: ITask.Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Name
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.MediaProcessorId*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.MediaProcessorId
  isExternal: false
  name: MediaProcessorId
  nameWithType: ITask.MediaProcessorId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.MediaProcessorId
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.State*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.State
  isExternal: false
  name: State
  nameWithType: ITask.State
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.State
- uid: Microsoft.WindowsAzure.MediaServices.Client.JobState
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.JobState
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: JobState
  nameWithType: JobState
  fullName: Microsoft.WindowsAzure.MediaServices.Client.JobState
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.PerfMessage*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.PerfMessage
  isExternal: false
  name: PerfMessage
  nameWithType: ITask.PerfMessage
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.PerfMessage
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Priority*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.Priority
  isExternal: false
  name: Priority
  nameWithType: ITask.Priority
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.StartTime*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.StartTime
  isExternal: false
  name: StartTime
  nameWithType: ITask.StartTime
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.StartTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.EndTime*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.EndTime
  isExternal: false
  name: EndTime
  nameWithType: ITask.EndTime
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.EndTime
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.RunningDuration*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.RunningDuration
  isExternal: false
  name: RunningDuration
  nameWithType: ITask.RunningDuration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.RunningDuration
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskBody*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskBody
  isExternal: false
  name: TaskBody
  nameWithType: ITask.TaskBody
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskBody
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Configuration*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.Configuration
  isExternal: false
  name: Configuration
  nameWithType: ITask.Configuration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Configuration
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Options*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.Options
  isExternal: false
  name: Options
  nameWithType: ITask.Options
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Options
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskOptions
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.TaskOptions
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: TaskOptions
  nameWithType: TaskOptions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskOptions
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.InitializationVector*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.InitializationVector
  isExternal: false
  name: InitializationVector
  nameWithType: ITask.InitializationVector
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.InitializationVector
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionVersion*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionVersion
  isExternal: false
  name: EncryptionVersion
  nameWithType: ITask.EncryptionVersion
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionVersion
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionScheme*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionScheme
  isExternal: false
  name: EncryptionScheme
  nameWithType: ITask.EncryptionScheme
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionScheme
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionKeyId*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionKeyId
  isExternal: false
  name: EncryptionKeyId
  nameWithType: ITask.EncryptionKeyId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.EncryptionKeyId
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.InputAssets*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.InputAssets
  isExternal: false
  name: InputAssets
  nameWithType: ITask.InputAssets
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.InputAssets
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection{Microsoft.WindowsAzure.MediaServices.Client.IAsset}
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection{Microsoft.WindowsAzure.MediaServices.Client.IAsset}
  parent: Microsoft.WindowsAzure.MediaServices.Client
  definition: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  name: InputAssetCollection<IAsset>
  nameWithType: InputAssetCollection<IAsset>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<Microsoft.WindowsAzure.MediaServices.Client.IAsset>
  nameWithType.vb: InputAssetCollection(Of IAsset)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of Microsoft.WindowsAzure.MediaServices.Client.IAsset)
  name.vb: InputAssetCollection(Of IAsset)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
    name: InputAssetCollection
    nameWithType: InputAssetCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset
    name: IAsset
    nameWithType: IAsset
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
    name: InputAssetCollection
    nameWithType: InputAssetCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset
    name: IAsset
    nameWithType: IAsset
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
  isExternal: false
  name: InputAssetCollection<T>
  nameWithType: InputAssetCollection<T>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection<T>
  nameWithType.vb: InputAssetCollection(Of T)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection(Of T)
  name.vb: InputAssetCollection(Of T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
    name: InputAssetCollection
    nameWithType: InputAssetCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection`1
    name: InputAssetCollection
    nameWithType: InputAssetCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.InputAssetCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.OutputAssets*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.OutputAssets
  isExternal: false
  name: OutputAssets
  nameWithType: ITask.OutputAssets
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.OutputAssets
- uid: Microsoft.WindowsAzure.MediaServices.Client.OutputAssetCollection
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.OutputAssetCollection
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: OutputAssetCollection
  nameWithType: OutputAssetCollection
  fullName: Microsoft.WindowsAzure.MediaServices.Client.OutputAssetCollection
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.Progress*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.Progress
  isExternal: false
  name: Progress
  nameWithType: ITask.Progress
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.Progress
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
  isExternal: false
  name: ErrorDetail
  nameWithType: ErrorDetail
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.ErrorDetails*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.ErrorDetails
  isExternal: false
  name: ErrorDetails
  nameWithType: ITask.ErrorDetails
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.ErrorDetails
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<ErrorDetail>
  nameWithType: ReadOnlyCollection<ErrorDetail>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail>
  nameWithType.vb: ReadOnlyCollection(Of ErrorDetail)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail)
  name.vb: ReadOnlyCollection(Of ErrorDetail)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
    name: ErrorDetail
    nameWithType: ErrorDetail
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
    name: ErrorDetail
    nameWithType: ErrorDetail
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ErrorDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskNotificationSubscriptions*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskNotificationSubscriptions
  isExternal: false
  name: TaskNotificationSubscriptions
  nameWithType: ITask.TaskNotificationSubscriptions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.TaskNotificationSubscriptions
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskNotificationSubscriptionCollection
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.TaskNotificationSubscriptionCollection
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: TaskNotificationSubscriptionCollection
  nameWithType: TaskNotificationSubscriptionCollection
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskNotificationSubscriptionCollection
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
  isExternal: false
  name: TaskHistoricalEvent
  nameWithType: TaskHistoricalEvent
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.HistoricalEvents*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.HistoricalEvents
  isExternal: false
  name: HistoricalEvents
  nameWithType: ITask.HistoricalEvents
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.HistoricalEvents
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<TaskHistoricalEvent>
  nameWithType: ReadOnlyCollection<TaskHistoricalEvent>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent>
  nameWithType.vb: ReadOnlyCollection(Of TaskHistoricalEvent)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent)
  name.vb: ReadOnlyCollection(Of TaskHistoricalEvent)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
    name: TaskHistoricalEvent
    nameWithType: TaskHistoricalEvent
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
    name: TaskHistoricalEvent
    nameWithType: TaskHistoricalEvent
    fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskHistoricalEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask.GetClearConfiguration*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITask.GetClearConfiguration
  isExternal: false
  name: GetClearConfiguration
  nameWithType: ITask.GetClearConfiguration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask.GetClearConfiguration
