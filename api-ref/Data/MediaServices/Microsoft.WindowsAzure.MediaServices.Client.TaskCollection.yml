### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  id: TaskCollection
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.#ctor
  - Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew(System.String,Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor,System.String,Microsoft.WindowsAzure.MediaServices.Client.TaskOptions)
  - Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew(System.String,Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor,System.String,Microsoft.WindowsAzure.MediaServices.Client.TaskOptions,Microsoft.WindowsAzure.MediaServices.Client.ITask)
  - Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Count
  - Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.GetEnumerator
  - Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.IsReadOnly
  - Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Item(System.Int32)
  - Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.MediaContext
  - Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: TaskCollection
  nameWithType: TaskCollection
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  type: Class
  source:
    remote:
      path: src/net/Client/Collections/TaskCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: TaskCollection
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/TaskCollection.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nA collection of tasks.\n"
  example: []
  syntax:
    content: 'public class TaskCollection : IEnumerable<ITask>, IEnumerable'
    content.vb: >-
      Public Class TaskCollection
          Implements IEnumerable(Of ITask), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.ITask}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.#ctor
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  langs:
  - csharp
  - vb
  name: TaskCollection()
  nameWithType: TaskCollection.TaskCollection()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.TaskCollection()
  type: Constructor
  source:
    remote:
      path: src/net/Client/Collections/TaskCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: .ctor
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/TaskCollection.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.TaskCollection\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TaskCollection()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Count
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Count
  id: Count
  parent: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TaskCollection.Count
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Count
  type: Property
  source:
    remote:
      path: src/net/Client/Collections/TaskCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Count
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/TaskCollection.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the count of elements in collection.\n"
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.IsReadOnly
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.IsReadOnly
  id: IsReadOnly
  parent: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: TaskCollection.IsReadOnly
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.IsReadOnly
  type: Property
  source:
    remote:
      path: src/net/Client/Collections/TaskCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: IsReadOnly
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/TaskCollection.cs
    startLine: 66
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets a value indicating whether this instance is read only.\n"
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is read only; otherwise, <code>false</code>.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Item(System.Int32)
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: TaskCollection.Item[Int32]
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/net/Client/Collections/TaskCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: this[]
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/TaskCollection.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.ITask\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.\n"
  example: []
  syntax:
    content: public ITask this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As ITask
    parameters:
    - id: index
      type: System.Int32
      description: The index.
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ITask
      description: The task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Item*
  nameWithType.vb: TaskCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.GetEnumerator
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TaskCollection.GetEnumerator()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/TaskCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetEnumerator
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/TaskCollection.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: public IEnumerator<ITask> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of ITask)
    return:
      type: System.Collections.Generic.IEnumerator{Microsoft.WindowsAzure.MediaServices.Client.ITask}
      description: "\nA <xref href=\"System.Collections.Generic.IEnumerator%601\" data-throw-if-not-resolved=\"false\"></xref> that can be used to iterate through the collection.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.ITask}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: TaskCollection.IEnumerable.GetEnumerator()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/TaskCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/TaskCollection.cs
    startLine: 100
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\nAn <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to iterate through the collection.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: TaskCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew(System.String,Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor,System.String,Microsoft.WindowsAzure.MediaServices.Client.TaskOptions)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew(System.String,Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor,System.String,Microsoft.WindowsAzure.MediaServices.Client.TaskOptions)
  id: AddNew(System.String,Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor,System.String,Microsoft.WindowsAzure.MediaServices.Client.TaskOptions)
  parent: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  langs:
  - csharp
  - vb
  name: AddNew(String, IMediaProcessor, String, TaskOptions)
  nameWithType: TaskCollection.AddNew(String, IMediaProcessor, String, TaskOptions)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew(System.String, Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor, System.String, Microsoft.WindowsAzure.MediaServices.Client.TaskOptions)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/TaskCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AddNew
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/TaskCollection.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAdds a new task.\n"
  example: []
  syntax:
    content: public ITask AddNew(string taskName, IMediaProcessor mediaProcessor, string configuration, TaskOptions options)
    content.vb: Public Function AddNew(taskName As String, mediaProcessor As IMediaProcessor, configuration As String, options As TaskOptions) As ITask
    parameters:
    - id: taskName
      type: System.String
      description: The task name.
    - id: mediaProcessor
      type: Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor
      description: The media processor id.
    - id: configuration
      type: System.String
      description: The configuration.
    - id: options
      type: Microsoft.WindowsAzure.MediaServices.Client.TaskOptions
      description: The options.
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ITask
      description: The new task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew(System.String,Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor,System.String,Microsoft.WindowsAzure.MediaServices.Client.TaskOptions,Microsoft.WindowsAzure.MediaServices.Client.ITask)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew(System.String,Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor,System.String,Microsoft.WindowsAzure.MediaServices.Client.TaskOptions,Microsoft.WindowsAzure.MediaServices.Client.ITask)
  id: AddNew(System.String,Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor,System.String,Microsoft.WindowsAzure.MediaServices.Client.TaskOptions,Microsoft.WindowsAzure.MediaServices.Client.ITask)
  parent: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  langs:
  - csharp
  - vb
  name: AddNew(String, IMediaProcessor, String, TaskOptions, ITask)
  nameWithType: TaskCollection.AddNew(String, IMediaProcessor, String, TaskOptions, ITask)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew(System.String, Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor, System.String, Microsoft.WindowsAzure.MediaServices.Client.TaskOptions, Microsoft.WindowsAzure.MediaServices.Client.ITask)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/TaskCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AddNew
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/TaskCollection.cs
    startLine: 164
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAdds a new task.\n"
  example: []
  syntax:
    content: public ITask AddNew(string taskName, IMediaProcessor mediaProcessor, string configuration, TaskOptions options, ITask parentTask)
    content.vb: Public Function AddNew(taskName As String, mediaProcessor As IMediaProcessor, configuration As String, options As TaskOptions, parentTask As ITask) As ITask
    parameters:
    - id: taskName
      type: System.String
      description: The task name.
    - id: mediaProcessor
      type: Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor
      description: The media processor.
    - id: configuration
      type: System.String
      description: The configuration.
    - id: options
      type: Microsoft.WindowsAzure.MediaServices.Client.TaskOptions
      description: The options.
    - id: parentTask
      type: Microsoft.WindowsAzure.MediaServices.Client.ITask
      description: The parent task.
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ITask
      description: The new task.
  overload: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.MediaContext
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.MediaContext
  id: MediaContext
  parent: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  langs:
  - csharp
  - vb
  name: MediaContext
  nameWithType: TaskCollection.MediaContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.MediaContext
  type: Property
  source:
    remote:
      path: src/net/Client/Collections/TaskCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MediaContext
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/TaskCollection.cs
    startLine: 192
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public MediaContextBase MediaContext { get; set; }
    content.vb: Public Property MediaContext As MediaContextBase
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  overload: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.MediaContext*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.ITask}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.ITask}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ITask>
  nameWithType: IEnumerable<ITask>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.MediaServices.Client.ITask>
  nameWithType.vb: IEnumerable(Of ITask)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.MediaServices.Client.ITask)
  name.vb: IEnumerable(Of ITask)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ITask
    name: ITask
    nameWithType: ITask
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ITask
    name: ITask
    nameWithType: ITask
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: TaskCollection
  nameWithType: TaskCollection
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.#ctor
  isExternal: false
  name: TaskCollection
  nameWithType: TaskCollection.TaskCollection
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.TaskCollection
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Count*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Count
  isExternal: false
  name: Count
  nameWithType: TaskCollection.Count
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.IsReadOnly*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: TaskCollection.IsReadOnly
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITask
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ITask
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: ITask
  nameWithType: ITask
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Item*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Item
  isExternal: false
  name: Item
  nameWithType: TaskCollection.Item
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.Item
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.GetEnumerator*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: TaskCollection.GetEnumerator
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.ITask}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.ITask}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.ITask}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<ITask>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.MediaServices.Client.ITask>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of ITask).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.MediaServices.Client.ITask).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<ITask>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.MediaServices.Client.ITask>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of ITask).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.MediaServices.Client.ITask).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Microsoft.WindowsAzure.MediaServices.Client.ITask}
  commentId: T:System.Collections.Generic.IEnumerator{Microsoft.WindowsAzure.MediaServices.Client.ITask}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<ITask>
  nameWithType: IEnumerator<ITask>
  fullName: System.Collections.Generic.IEnumerator<Microsoft.WindowsAzure.MediaServices.Client.ITask>
  nameWithType.vb: IEnumerator(Of ITask)
  fullname.vb: System.Collections.Generic.IEnumerator(Of Microsoft.WindowsAzure.MediaServices.Client.ITask)
  name.vb: IEnumerator(Of ITask)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ITask
    name: ITask
    nameWithType: ITask
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ITask
    name: ITask
    nameWithType: ITask
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ITask
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: TaskCollection.IEnumerable.GetEnumerator
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: TaskCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew
  isExternal: false
  name: AddNew
  nameWithType: TaskCollection.AddNew
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.AddNew
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IMediaProcessor
  nameWithType: IMediaProcessor
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaProcessor
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskOptions
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.TaskOptions
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: TaskOptions
  nameWithType: TaskOptions
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskOptions
- uid: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.MediaContext*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.MediaContext
  isExternal: false
  name: MediaContext
  nameWithType: TaskCollection.MediaContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.TaskCollection.MediaContext
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: MediaContextBase
  nameWithType: MediaContextBase
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
