### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  id: MediaProcessorNames
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaEncoder
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaFaceDetector
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaHyperlapse
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaIndexer
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaIndexer2Preview
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaMotionDetector
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaOCR
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaStabilizer
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaVideoThumbnails
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.MediaEncoderPremiumWorkflow
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.MediaEncoderStandard
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.StorageDecryption
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.WindowsAzureMediaEncoder
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.WindowsAzureMediaEncryptor
  - Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.WindowsAzureMediaPackager
  langs:
  - csharp
  - vb
  name: MediaProcessorNames
  nameWithType: MediaProcessorNames
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  type: Class
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: MediaProcessorNames
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 22
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nContains string constants with the available media processors' names.\n"
  example: []
  syntax:
    content: public static class MediaProcessorNames
    content.vb: Public Module MediaProcessorNames
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaFaceDetector
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaFaceDetector
  id: AzureMediaFaceDetector
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: AzureMediaFaceDetector
  nameWithType: MediaProcessorNames.AzureMediaFaceDetector
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaFaceDetector
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: AzureMediaFaceDetector
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you run encoding tasks using the processor 'Azure Media Face Detector'.\n"
  example: []
  syntax:
    content: public const string AzureMediaFaceDetector = "Azure Media Face Detector"
    content.vb: Public Const AzureMediaFaceDetector As String = "Azure Media Face Detector"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaHyperlapse
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaHyperlapse
  id: AzureMediaHyperlapse
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: AzureMediaHyperlapse
  nameWithType: MediaProcessorNames.AzureMediaHyperlapse
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaHyperlapse
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: AzureMediaHyperlapse
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you run encoding tasks using the processor 'Azure Media Hyperlapse'.\n"
  example: []
  syntax:
    content: public const string AzureMediaHyperlapse = "Azure Media Hyperlapse"
    content.vb: Public Const AzureMediaHyperlapse As String = "Azure Media Hyperlapse"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaIndexer
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaIndexer
  id: AzureMediaIndexer
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: AzureMediaIndexer
  nameWithType: MediaProcessorNames.AzureMediaIndexer
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaIndexer
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: AzureMediaIndexer
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you run encoding tasks using the processor 'Azure Media Indexer'.\n"
  example: []
  syntax:
    content: public const string AzureMediaIndexer = "Azure Media Indexer"
    content.vb: Public Const AzureMediaIndexer As String = "Azure Media Indexer"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaIndexer2Preview
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaIndexer2Preview
  id: AzureMediaIndexer2Preview
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: AzureMediaIndexer2Preview
  nameWithType: MediaProcessorNames.AzureMediaIndexer2Preview
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaIndexer2Preview
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: AzureMediaIndexer2Preview
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you run encoding tasks using the processor 'Azure Media Indexer 2 Preview'.\n"
  example: []
  syntax:
    content: public const string AzureMediaIndexer2Preview = "Azure Media Indexer 2 Preview"
    content.vb: Public Const AzureMediaIndexer2Preview As String = "Azure Media Indexer 2 Preview"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaMotionDetector
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaMotionDetector
  id: AzureMediaMotionDetector
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: AzureMediaMotionDetector
  nameWithType: MediaProcessorNames.AzureMediaMotionDetector
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaMotionDetector
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: AzureMediaMotionDetector
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you run encoding tasks using the processor 'Azure Media Motion Detector'.\n"
  example: []
  syntax:
    content: public const string AzureMediaMotionDetector = "Azure Media Motion Detector"
    content.vb: Public Const AzureMediaMotionDetector As String = "Azure Media Motion Detector"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaOCR
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaOCR
  id: AzureMediaOCR
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: AzureMediaOCR
  nameWithType: MediaProcessorNames.AzureMediaOCR
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaOCR
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: AzureMediaOCR
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you run encoding tasks using the processor 'Azure Media OCR'.\n"
  example: []
  syntax:
    content: public const string AzureMediaOCR = "Azure Media OCR"
    content.vb: Public Const AzureMediaOCR As String = "Azure Media OCR"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaStabilizer
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaStabilizer
  id: AzureMediaStabilizer
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: AzureMediaStabilizer
  nameWithType: MediaProcessorNames.AzureMediaStabilizer
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaStabilizer
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: AzureMediaStabilizer
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you run encoding tasks using the processor 'Azure Media Stabilizer'.\n"
  example: []
  syntax:
    content: public const string AzureMediaStabilizer = "Azure Media Stabilizer"
    content.vb: Public Const AzureMediaStabilizer As String = "Azure Media Stabilizer"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaVideoThumbnails
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaVideoThumbnails
  id: AzureMediaVideoThumbnails
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: AzureMediaVideoThumbnails
  nameWithType: MediaProcessorNames.AzureMediaVideoThumbnails
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaVideoThumbnails
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: AzureMediaVideoThumbnails
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you run encoding tasks using the processor 'Azure Media Video Thumbnails'.\n"
  example: []
  syntax:
    content: public const string AzureMediaVideoThumbnails = "Azure Media Video Thumbnails"
    content.vb: Public Const AzureMediaVideoThumbnails As String = "Azure Media Video Thumbnails"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.MediaEncoderPremiumWorkflow
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.MediaEncoderPremiumWorkflow
  id: MediaEncoderPremiumWorkflow
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: MediaEncoderPremiumWorkflow
  nameWithType: MediaProcessorNames.MediaEncoderPremiumWorkflow
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.MediaEncoderPremiumWorkflow
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: MediaEncoderPremiumWorkflow
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you run encoding tasks using the processor 'Media Encoder Premium Workflow'.\n"
  example: []
  syntax:
    content: public const string MediaEncoderPremiumWorkflow = "Media Encoder Premium Workflow"
    content.vb: Public Const MediaEncoderPremiumWorkflow As String = "Media Encoder Premium Workflow"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.MediaEncoderStandard
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.MediaEncoderStandard
  id: MediaEncoderStandard
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: MediaEncoderStandard
  nameWithType: MediaProcessorNames.MediaEncoderStandard
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.MediaEncoderStandard
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: MediaEncoderStandard
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you run encoding tasks using the processor 'Media Encoder Standard'.\n"
  example: []
  syntax:
    content: public const string MediaEncoderStandard = "Media Encoder Standard"
    content.vb: Public Const MediaEncoderStandard As String = "Media Encoder Standard"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.StorageDecryption
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.StorageDecryption
  id: StorageDecryption
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: StorageDecryption
  nameWithType: MediaProcessorNames.StorageDecryption
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.StorageDecryption
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: StorageDecryption
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you decrypt media assets that were encrypted using storage encryption.\n"
  example: []
  syntax:
    content: public const string StorageDecryption = "Storage Decryption"
    content.vb: Public Const StorageDecryption As String = "Storage Decryption"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.WindowsAzureMediaEncoder
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.WindowsAzureMediaEncoder
  id: WindowsAzureMediaEncoder
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: WindowsAzureMediaEncoder
  nameWithType: MediaProcessorNames.WindowsAzureMediaEncoder
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.WindowsAzureMediaEncoder
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: WindowsAzureMediaEncoder
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 85
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you run encoding tasks using the processor 'Windows Azure Media Encoder'.\n"
  example: []
  syntax:
    content: >-
      [Obsolete]

      public const string WindowsAzureMediaEncoder = "Windows Azure Media Encoder"
    content.vb: >-
      <Obsolete>

      Public Const WindowsAzureMediaEncoder As String = "Windows Azure Media Encoder"
    return:
      type: System.String
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaEncoder
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaEncoder
  id: AzureMediaEncoder
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: AzureMediaEncoder
  nameWithType: MediaProcessorNames.AzureMediaEncoder
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.AzureMediaEncoder
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: AzureMediaEncoder
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you run encoding tasks using the processor 'Azure Media Encoder'.\n"
  example: []
  syntax:
    content: >-
      [Obsolete]

      public const string AzureMediaEncoder = "Azure Media Encoder"
    content.vb: >-
      <Obsolete>

      Public Const AzureMediaEncoder As String = "Azure Media Encoder"
    return:
      type: System.String
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.WindowsAzureMediaPackager
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.WindowsAzureMediaPackager
  id: WindowsAzureMediaPackager
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: WindowsAzureMediaPackager
  nameWithType: MediaProcessorNames.WindowsAzureMediaPackager
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.WindowsAzureMediaPackager
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: WindowsAzureMediaPackager
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 98
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you convert media assets from MP4 to Smooth Streaming format. Also, lets you convert media assets \nfrom Smooth Streaming to the Apple HTTP Live Streaming (HLS) format.\n"
  example: []
  syntax:
    content: >-
      [Obsolete]

      public const string WindowsAzureMediaPackager = "Windows Azure Media Packager"
    content.vb: >-
      <Obsolete>

      Public Const WindowsAzureMediaPackager As String = "Windows Azure Media Packager"
    return:
      type: System.String
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.WindowsAzureMediaEncryptor
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.WindowsAzureMediaEncryptor
  id: WindowsAzureMediaEncryptor
  parent: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames
  langs:
  - csharp
  - vb
  name: WindowsAzureMediaEncryptor
  nameWithType: MediaProcessorNames.WindowsAzureMediaEncryptor
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaProcessorNames.WindowsAzureMediaEncryptor
  type: Field
  source:
    remote:
      path: MediaServices.Client.Extensions/MediaProcessorNames.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: WindowsAzureMediaEncryptor
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/MediaProcessorNames.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nLets you encrypt media assets using PlayReady Protection.\n"
  example: []
  syntax:
    content: >-
      [Obsolete]

      public const string WindowsAzureMediaEncryptor = "Windows Azure Media Encryptor"
    content.vb: >-
      <Obsolete>

      Public Const WindowsAzureMediaEncryptor As String = "Windows Azure Media Encryptor"
    return:
      type: System.String
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
