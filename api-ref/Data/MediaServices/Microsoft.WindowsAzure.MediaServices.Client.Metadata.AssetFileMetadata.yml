### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  id: AssetFileMetadata
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.AudioTracks
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Duration
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Name
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Size
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Sources
  - Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.VideoTracks
  langs:
  - csharp
  - vb
  name: AssetFileMetadata
  nameWithType: AssetFileMetadata
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  type: Class
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: AssetFileMetadata
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nRepresents a media file produced by the encoding <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.IJob\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class AssetFileMetadata
    content.vb: Public Class AssetFileMetadata
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Name
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Name
  id: Name
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AssetFileMetadata.Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Name
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: Name
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGets the name of the media file.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Size
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Size
  id: Size
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: AssetFileMetadata.Size
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Size
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: Size
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGets the size of the media file in bytes.\n"
  example: []
  syntax:
    content: public long Size { get; }
    content.vb: Public ReadOnly Property Size As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Size*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Duration
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Duration
  id: Duration
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: AssetFileMetadata.Duration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Duration
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: Duration
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGets the play back duration of the media file.\n"
  example: []
  syntax:
    content: public TimeSpan Duration { get; }
    content.vb: Public ReadOnly Property Duration As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Duration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Sources
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Sources
  id: Sources
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  langs:
  - csharp
  - vb
  name: Sources
  nameWithType: AssetFileMetadata.Sources
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Sources
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: Sources
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGets a collection of source media files that was processed in order to produce this output media file.\n"
  example: []
  syntax:
    content: public IEnumerable<Source> Sources { get; }
    content.vb: Public ReadOnly Property Sources As IEnumerable(Of Source)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.Metadata.Source}
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Sources*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.AudioTracks
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.AudioTracks
  id: AudioTracks
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  langs:
  - csharp
  - vb
  name: AudioTracks
  nameWithType: AssetFileMetadata.AudioTracks
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.AudioTracks
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: AudioTracks
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGets a collection of audio tracks contained in the media file.\n"
  example: []
  syntax:
    content: public IEnumerable<AudioTrack> AudioTracks { get; }
    content.vb: Public ReadOnly Property AudioTracks As IEnumerable(Of AudioTrack)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack}
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.AudioTracks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.VideoTracks
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.VideoTracks
  id: VideoTracks
  parent: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata
  langs:
  - csharp
  - vb
  name: VideoTracks
  nameWithType: AssetFileMetadata.VideoTracks
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.VideoTracks
  type: Property
  source:
    remote:
      path: MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
      branch: dev
      repo: https://github.com/Azure/azure-sdk-for-media-services-extensions
    id: VideoTracks
    path: src/azure-sdk-for-media-services-extensions/MediaServices.Client.Extensions/Metadata/AssetFileMetadata.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client.Extensions
  namespace: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  summary: "\nGets a collection of video tracks contained in the media file.\n"
  example: []
  syntax:
    content: public IEnumerable<VideoTrack> VideoTracks { get; }
    content.vb: Public ReadOnly Property VideoTracks As IEnumerable(Of VideoTrack)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.Metadata.VideoTrack}
  overload: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.VideoTracks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.IJob
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IJob
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IJob
  nameWithType: IJob
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IJob
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client.Metadata
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client.Metadata
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Name*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Name
  isExternal: false
  name: Name
  nameWithType: AssetFileMetadata.Name
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Size*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Size
  isExternal: false
  name: Size
  nameWithType: AssetFileMetadata.Size
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Size
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Duration*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Duration
  isExternal: false
  name: Duration
  nameWithType: AssetFileMetadata.Duration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Duration
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Sources*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Sources
  isExternal: false
  name: Sources
  nameWithType: AssetFileMetadata.Sources
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.Sources
- uid: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.Metadata.Source}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.Metadata.Source}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Source>
  nameWithType: IEnumerable<Source>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.MediaServices.Client.Metadata.Source>
  nameWithType.vb: IEnumerable(Of Source)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.MediaServices.Client.Metadata.Source)
  name.vb: IEnumerable(Of Source)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.Source
    name: Source
    nameWithType: Source
    fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.Source
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.Source
    name: Source
    nameWithType: Source
    fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.Source
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.AudioTracks*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.AudioTracks
  isExternal: false
  name: AudioTracks
  nameWithType: AssetFileMetadata.AudioTracks
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.AudioTracks
- uid: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AudioTrack>
  nameWithType: IEnumerable<AudioTrack>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack>
  nameWithType.vb: IEnumerable(Of AudioTrack)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack)
  name.vb: IEnumerable(Of AudioTrack)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
    name: AudioTrack
    nameWithType: AudioTrack
    fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
    name: AudioTrack
    nameWithType: AudioTrack
    fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AudioTrack
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.VideoTracks*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.VideoTracks
  isExternal: false
  name: VideoTracks
  nameWithType: AssetFileMetadata.VideoTracks
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.AssetFileMetadata.VideoTracks
- uid: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.Metadata.VideoTrack}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.Metadata.VideoTrack}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<VideoTrack>
  nameWithType: IEnumerable<VideoTrack>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.MediaServices.Client.Metadata.VideoTrack>
  nameWithType.vb: IEnumerable(Of VideoTrack)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.MediaServices.Client.Metadata.VideoTrack)
  name.vb: IEnumerable(Of VideoTrack)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.VideoTrack
    name: VideoTrack
    nameWithType: VideoTrack
    fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.VideoTrack
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.Metadata.VideoTrack
    name: VideoTrack
    nameWithType: VideoTrack
    fullName: Microsoft.WindowsAzure.MediaServices.Client.Metadata.VideoTrack
  - name: )
    nameWithType: )
    fullName: )
