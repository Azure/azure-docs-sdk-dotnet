### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration
  id: FairPlayConfiguration
  parent: Microsoft.WindowsAzure.MediaServices.Client.FairPlay
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ASkId
  - Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ContentEncryptionIV
  - Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Guid,System.Guid,System.Byte[])
  - Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfx
  - Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfxPasswordId
  langs:
  - csharp
  - vb
  name: FairPlayConfiguration
  nameWithType: FairPlayConfiguration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration
  type: Class
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/FairPlayConfiguration.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: FairPlayConfiguration
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/FairPlayConfiguration.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.FairPlay
  summary: "\nConfiguration for FairPlay Authorization Policy Option.\nKey Delivery will use these values for generating FairPlay CKC.\n"
  example: []
  syntax:
    content: public class FairPlayConfiguration
    content.vb: Public Class FairPlayConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ASkId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ASkId
  id: ASkId
  parent: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration
  langs:
  - csharp
  - vb
  name: ASkId
  nameWithType: FairPlayConfiguration.ASkId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ASkId
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/FairPlayConfiguration.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ASkId
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/FairPlayConfiguration.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.FairPlay
  summary: "\nId of the Key that must be used as FairPlay ASk.\n"
  example: []
  syntax:
    content: public Guid ASkId { get; set; }
    content.vb: Public Property ASkId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ASkId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfxPasswordId
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfxPasswordId
  id: FairPlayPfxPasswordId
  parent: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration
  langs:
  - csharp
  - vb
  name: FairPlayPfxPasswordId
  nameWithType: FairPlayConfiguration.FairPlayPfxPasswordId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfxPasswordId
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/FairPlayConfiguration.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: FairPlayPfxPasswordId
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/FairPlayConfiguration.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.FairPlay
  summary: "\nId of the Password Key encrypting FairPlay certificate in PKCS 12 (pfx) format.\n"
  example: []
  syntax:
    content: public Guid FairPlayPfxPasswordId { get; set; }
    content.vb: Public Property FairPlayPfxPasswordId As Guid
    parameters: []
    return:
      type: System.Guid
  overload: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfxPasswordId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfx
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfx
  id: FairPlayPfx
  parent: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration
  langs:
  - csharp
  - vb
  name: FairPlayPfx
  nameWithType: FairPlayConfiguration.FairPlayPfx
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfx
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/FairPlayConfiguration.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: FairPlayPfx
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/FairPlayConfiguration.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.FairPlay
  summary: "\nBase64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key).\n"
  example: []
  syntax:
    content: public string FairPlayPfx { get; set; }
    content.vb: Public Property FairPlayPfx As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfx*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ContentEncryptionIV
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ContentEncryptionIV
  id: ContentEncryptionIV
  parent: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration
  langs:
  - csharp
  - vb
  name: ContentEncryptionIV
  nameWithType: FairPlayConfiguration.ContentEncryptionIV
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ContentEncryptionIV
  type: Property
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/FairPlayConfiguration.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ContentEncryptionIV
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/FairPlayConfiguration.cs
    startLine: 46
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.FairPlay
  summary: "\nInitialization Vector in hex used for encrypting protected content.\n"
  example: []
  syntax:
    content: public string ContentEncryptionIV { get; set; }
    content.vb: Public Property ContentEncryptionIV As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ContentEncryptionIV*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Guid,System.Guid,System.Byte[])
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Guid,System.Guid,System.Byte[])
  id: CreateSerializedFairPlayOptionConfiguration(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Guid,System.Guid,System.Byte[])
  parent: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration
  langs:
  - csharp
  - vb
  name: CreateSerializedFairPlayOptionConfiguration(X509Certificate2, String, Guid, Guid, Byte[])
  nameWithType: FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration(X509Certificate2, String, Guid, Guid, Byte[])
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration(System.Security.Cryptography.X509Certificates.X509Certificate2, System.String, System.Guid, System.Guid, System.Byte[])
  type: Method
  source:
    remote:
      path: src/net/Client/ContentKeyAuthorization/Templates/FairPlayConfiguration.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateSerializedFairPlayOptionConfiguration
    path: src/azure-sdk-for-media-services/src/net/Client/ContentKeyAuthorization/Templates/FairPlayConfiguration.cs
    startLine: 58
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client.FairPlay
  summary: "\nCreates a string that can be used as FairPlay Policy Option Configuration.\n"
  example: []
  syntax:
    content: public static string CreateSerializedFairPlayOptionConfiguration(X509Certificate2 appCertificate, string pfxPassword, Guid pfxPasswordKeyId, Guid askId, byte[] contentIv)
    content.vb: Public Shared Function CreateSerializedFairPlayOptionConfiguration(appCertificate As X509Certificate2, pfxPassword As String, pfxPasswordKeyId As Guid, askId As Guid, contentIv As Byte()) As String
    parameters:
    - id: appCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: FairPlay application certificate.
    - id: pfxPassword
      type: System.String
      description: Password protecting FairPlay application certificate.
    - id: pfxPasswordKeyId
      type: System.Guid
      description: "Id of the key storing the password protecting \nFairPlay application certificate."
    - id: askId
      type: System.Guid
      description: Id of the FairPlay Aplication Secret key.
    - id: contentIv
      type: System.Byte[]
      description: Initialization Vector used for encrypting the content.
    return:
      type: System.String
      description: String that can be used as FairPlay Policy Option Configuration.
  overload: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration*
  nameWithType.vb: FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration(X509Certificate2, String, Guid, Guid, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration(System.Security.Cryptography.X509Certificates.X509Certificate2, System.String, System.Guid, System.Guid, System.Byte())
  name.vb: CreateSerializedFairPlayOptionConfiguration(X509Certificate2, String, Guid, Guid, Byte())
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.FairPlay
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client.FairPlay
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client.FairPlay
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client.FairPlay
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FairPlay
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ASkId*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ASkId
  isExternal: false
  name: ASkId
  nameWithType: FairPlayConfiguration.ASkId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ASkId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfxPasswordId*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfxPasswordId
  isExternal: false
  name: FairPlayPfxPasswordId
  nameWithType: FairPlayConfiguration.FairPlayPfxPasswordId
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfxPasswordId
- uid: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfx*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfx
  isExternal: false
  name: FairPlayPfx
  nameWithType: FairPlayConfiguration.FairPlayPfx
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.FairPlayPfx
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ContentEncryptionIV*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ContentEncryptionIV
  isExternal: false
  name: ContentEncryptionIV
  nameWithType: FairPlayConfiguration.ContentEncryptionIV
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.ContentEncryptionIV
- uid: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration
  isExternal: false
  name: CreateSerializedFairPlayOptionConfiguration
  nameWithType: FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration
  fullName: Microsoft.WindowsAzure.MediaServices.Client.FairPlay.FairPlayConfiguration.CreateSerializedFairPlayOptionConfiguration
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
