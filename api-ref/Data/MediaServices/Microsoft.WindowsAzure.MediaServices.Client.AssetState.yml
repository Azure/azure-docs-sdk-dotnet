### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.AssetState
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.AssetState
  id: AssetState
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.AssetState.Deleted
  - Microsoft.WindowsAzure.MediaServices.Client.AssetState.Initialized
  - Microsoft.WindowsAzure.MediaServices.Client.AssetState.Published
  langs:
  - csharp
  - vb
  name: AssetState
  nameWithType: AssetState
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AssetState
  type: Enum
  source:
    remote:
      path: src/net/Client/Entities/AssetState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: AssetState
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/AssetState.cs
    startLine: 21
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSpecifies the allowed states of an asset.\n"
  example: []
  syntax:
    content: public enum AssetState
    content.vb: Public Enum AssetState
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.WindowsAzure.MediaServices.Client.AssetState.Initialized
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.AssetState.Initialized
  id: Initialized
  parent: Microsoft.WindowsAzure.MediaServices.Client.AssetState
  langs:
  - csharp
  - vb
  name: Initialized
  nameWithType: AssetState.Initialized
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AssetState.Initialized
  type: Field
  source:
    remote:
      path: src/net/Client/Entities/AssetState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Initialized
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/AssetState.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSpecifies that the asset is in initialized state.\n"
  remarks: This is the default. Assets in this state may not be used for Jobs or Tasks. Assets are allowed to have locators with full control while in this state.
  example: []
  syntax:
    content: Initialized = 0
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.AssetState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.AssetState.Published
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.AssetState.Published
  id: Published
  parent: Microsoft.WindowsAzure.MediaServices.Client.AssetState
  langs:
  - csharp
  - vb
  name: Published
  nameWithType: AssetState.Published
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AssetState.Published
  type: Field
  source:
    remote:
      path: src/net/Client/Entities/AssetState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Published
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/AssetState.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSpecifies that the asset is published.\n"
  remarks: Published Assets can be used in Job and Tasks, but are immutable. Assets are only allowed to have read and list locators in this state.
  example: []
  syntax:
    content: Published = 1
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.AssetState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.AssetState.Deleted
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.AssetState.Deleted
  id: Deleted
  parent: Microsoft.WindowsAzure.MediaServices.Client.AssetState
  langs:
  - csharp
  - vb
  name: Deleted
  nameWithType: AssetState.Deleted
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AssetState.Deleted
  type: Field
  source:
    remote:
      path: src/net/Client/Entities/AssetState.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Deleted
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/AssetState.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nSpecifies that the asset has been deleted.\n"
  remarks: Deleted Assets cannot be used in Job or Tasks, and do not actually exist and are only exposed for tracking purposes.
  example: []
  syntax:
    content: Deleted = 2
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.AssetState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: Microsoft.WindowsAzure.MediaServices.Client.AssetState
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.AssetState
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: AssetState
  nameWithType: AssetState
  fullName: Microsoft.WindowsAzure.MediaServices.Client.AssetState
