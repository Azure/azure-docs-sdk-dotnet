### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  id: LocatorBaseCollection
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(System.String,Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.LocatorSet
  langs:
  - csharp
  - vb
  name: LocatorBaseCollection
  nameWithType: LocatorBaseCollection
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  type: Class
  source:
    remote:
      path: src/net/Client/Collections/LocatorBaseCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LocatorBaseCollection
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/LocatorBaseCollection.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents a collection of <xref href=\"Microsoft.WindowsAzure.MediaServices.Client.ILocator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class LocatorBaseCollection : CloudBaseCollection<ILocator>, IQueryable<ILocator>, IEnumerable<ILocator>, IQueryable, IEnumerable'
    content.vb: >-
      Public Class LocatorBaseCollection
          Inherits CloudBaseCollection(Of ILocator)
          Implements IQueryable(Of ILocator), IEnumerable(Of ILocator), IQueryable, IEnumerable
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  - Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  implements:
  - System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  - System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  - System.Linq.IQueryable
  - System.Collections.IEnumerable
  inheritedMembers:
  - Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.Queryable
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.MediaContext
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.ElementType
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.Expression
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.Provider
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.GetEnumerator
  - Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.System#Collections#IEnumerable#GetEnumerator
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.LocatorSet
  commentId: F:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.LocatorSet
  id: LocatorSet
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  langs:
  - csharp
  - vb
  name: LocatorSet
  nameWithType: LocatorBaseCollection.LocatorSet
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.LocatorSet
  type: Field
  source:
    remote:
      path: src/net/Client/Collections/LocatorBaseCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LocatorSet
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/LocatorBaseCollection.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nThe entity set name for locators.\n"
  example: []
  syntax:
    content: public const string LocatorSet = "Locators"
    content.vb: Public Const LocatorSet As String = "Locators"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  id: CreateSasLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  langs:
  - csharp
  - vb
  name: CreateSasLocatorAsync(IAsset, IAccessPolicy)
  nameWithType: LocatorBaseCollection.CreateSasLocatorAsync(IAsset, IAccessPolicy)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/LocatorBaseCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateSasLocatorAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/LocatorBaseCollection.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAsynchronously creates a SAS Locator with the specified access policy and asset.\n"
  example: []
  syntax:
    content: public Task<ILocator> CreateSasLocatorAsync(IAsset asset, IAccessPolicy accessPolicy)
    content.vb: Public Function CreateSasLocatorAsync(asset As IAsset, accessPolicy As IAccessPolicy) As Task(Of ILocator)
    parameters:
    - id: asset
      type: Microsoft.WindowsAzure.MediaServices.Client.IAsset
      description: The asset to create a SAS Locator for.
    - id: accessPolicy
      type: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
      description: The AccessPolicy that governs access for the locator.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
      description: A function delegate that returns the future result to be available through the Task&lt;ILocator&gt;.
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <span class="paramref">asset</span> is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <span class="paramref">accessPolicy</span> is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  id: CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  langs:
  - csharp
  - vb
  name: CreateSasLocator(IAsset, IAccessPolicy)
  nameWithType: LocatorBaseCollection.CreateSasLocator(IAsset, IAccessPolicy)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/LocatorBaseCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateSasLocator
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/LocatorBaseCollection.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nCreates a SAS Locator with the specified access policy and asset.\n"
  example: []
  syntax:
    content: public ILocator CreateSasLocator(IAsset asset, IAccessPolicy accessPolicy)
    content.vb: Public Function CreateSasLocator(asset As IAsset, accessPolicy As IAccessPolicy) As ILocator
    parameters:
    - id: asset
      type: Microsoft.WindowsAzure.MediaServices.Client.IAsset
      description: The asset to create a SAS Locator for.
    - id: accessPolicy
      type: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
      description: The AccessPolicy that governs access for the locator.
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: A locator granting access specified by <span class="paramref">accessPolicy</span> to the provided <span class="paramref">asset</span>.
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <span class="paramref">asset</span> is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <span class="paramref">accessPolicy</span> is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  id: CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  langs:
  - csharp
  - vb
  name: CreateSasLocator(IAsset, IAccessPolicy, Nullable<DateTime>, String)
  nameWithType: LocatorBaseCollection.CreateSasLocator(IAsset, IAccessPolicy, Nullable<DateTime>, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy, System.Nullable<System.DateTime>, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/LocatorBaseCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateSasLocator
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/LocatorBaseCollection.cs
    startLine: 98
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nCreates a SAS Locator with the specified access policy and asset.\n"
  example: []
  syntax:
    content: public ILocator CreateSasLocator(IAsset asset, IAccessPolicy accessPolicy, DateTime? startTime, string name = null)
    content.vb: Public Function CreateSasLocator(asset As IAsset, accessPolicy As IAccessPolicy, startTime As Date?, name As String = Nothing) As ILocator
    parameters:
    - id: asset
      type: Microsoft.WindowsAzure.MediaServices.Client.IAsset
      description: The asset to create a SAS Locator for.
    - id: accessPolicy
      type: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
      description: The AccessPolicy that governs access for the locator.
    - id: startTime
      type: System.Nullable{System.DateTime}
      description: The access start time of the locator.
    - id: name
      type: System.String
      description: The locator name.
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: "\nA locator granting access specified by <span class=\"paramref\">accessPolicy</span> to the provided <span class=\"paramref\">asset</span>.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <span class="paramref">asset</span> is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <span class="paramref">asset</span> is null.
  nameWithType.vb: LocatorBaseCollection.CreateSasLocator(IAsset, IAccessPolicy, Nullable(Of DateTime), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator(Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy, System.Nullable(Of System.DateTime), System.String)
  name.vb: CreateSasLocator(IAsset, IAccessPolicy, Nullable(Of DateTime), String)
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  id: CreateSasLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  langs:
  - csharp
  - vb
  name: CreateSasLocatorAsync(IAsset, IAccessPolicy, Nullable<DateTime>, String)
  nameWithType: LocatorBaseCollection.CreateSasLocatorAsync(IAsset, IAccessPolicy, Nullable<DateTime>, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy, System.Nullable<System.DateTime>, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/LocatorBaseCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateSasLocatorAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/LocatorBaseCollection.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nAsynchronously creates a SAS Locator with the specified access policy and asset.\n"
  example: []
  syntax:
    content: public Task<ILocator> CreateSasLocatorAsync(IAsset asset, IAccessPolicy accessPolicy, DateTime? startTime, string name = null)
    content.vb: Public Function CreateSasLocatorAsync(asset As IAsset, accessPolicy As IAccessPolicy, startTime As Date?, name As String = Nothing) As Task(Of ILocator)
    parameters:
    - id: asset
      type: Microsoft.WindowsAzure.MediaServices.Client.IAsset
      description: The asset to create a SAS Locator for.
    - id: accessPolicy
      type: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
      description: The AccessPolicy that governs access for the locator.
    - id: startTime
      type: System.Nullable{System.DateTime}
      description: The access start time of the locator.
    - id: name
      type: System.String
      description: The locator name.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
      description: "\nA function delegate that returns the future result to be available through the Task&lt;ILocator&gt;.\n"
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <span class="paramref">asset</span> is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <span class="paramref">asset</span> is null.
  nameWithType.vb: LocatorBaseCollection.CreateSasLocatorAsync(IAsset, IAccessPolicy, Nullable(Of DateTime), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy, System.Nullable(Of System.DateTime), System.String)
  name.vb: CreateSasLocatorAsync(IAsset, IAccessPolicy, Nullable(Of DateTime), String)
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  id: CreateLocatorAsync(System.String,Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  langs:
  - csharp
  - vb
  name: CreateLocatorAsync(String, LocatorType, IAsset, IAccessPolicy, Nullable<DateTime>, String)
  nameWithType: LocatorBaseCollection.CreateLocatorAsync(String, LocatorType, IAsset, IAccessPolicy, Nullable<DateTime>, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(System.String, Microsoft.WindowsAzure.MediaServices.Client.LocatorType, Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy, System.Nullable<System.DateTime>, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/LocatorBaseCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateLocatorAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/LocatorBaseCollection.cs
    startLine: 150
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nCreates the locator async.\n"
  example: []
  syntax:
    content: public Task<ILocator> CreateLocatorAsync(string locatorId, LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy, DateTime? startTime, string name = null)
    content.vb: Public Function CreateLocatorAsync(locatorId As String, locatorType As LocatorType, asset As IAsset, accessPolicy As IAccessPolicy, startTime As Date?, name As String = Nothing) As Task(Of ILocator)
    parameters:
    - id: locatorId
      type: System.String
      description: The locator Id.
    - id: locatorType
      type: Microsoft.WindowsAzure.MediaServices.Client.LocatorType
      description: Type of the locator.
    - id: asset
      type: Microsoft.WindowsAzure.MediaServices.Client.IAsset
      description: The asset.
    - id: accessPolicy
      type: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
      description: The access policy.
    - id: startTime
      type: System.Nullable{System.DateTime}
      description: The start time.
    - id: name
      type: System.String
      description: The name.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
      description: A function delegate that returns the future result to be available through the Task&lt;ILocator&gt;.
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync*
  nameWithType.vb: LocatorBaseCollection.CreateLocatorAsync(String, LocatorType, IAsset, IAccessPolicy, Nullable(Of DateTime), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(System.String, Microsoft.WindowsAzure.MediaServices.Client.LocatorType, Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy, System.Nullable(Of System.DateTime), System.String)
  name.vb: CreateLocatorAsync(String, LocatorType, IAsset, IAccessPolicy, Nullable(Of DateTime), String)
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  id: CreateLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  langs:
  - csharp
  - vb
  name: CreateLocatorAsync(LocatorType, IAsset, IAccessPolicy, Nullable<DateTime>, String)
  nameWithType: LocatorBaseCollection.CreateLocatorAsync(LocatorType, IAsset, IAccessPolicy, Nullable<DateTime>, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.LocatorType, Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy, System.Nullable<System.DateTime>, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/LocatorBaseCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateLocatorAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/LocatorBaseCollection.cs
    startLine: 205
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nCreates the locator asynchronous.\n"
  example: []
  syntax:
    content: public Task<ILocator> CreateLocatorAsync(LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy, DateTime? startTime, string name = null)
    content.vb: Public Function CreateLocatorAsync(locatorType As LocatorType, asset As IAsset, accessPolicy As IAccessPolicy, startTime As Date?, name As String = Nothing) As Task(Of ILocator)
    parameters:
    - id: locatorType
      type: Microsoft.WindowsAzure.MediaServices.Client.LocatorType
      description: Type of the locator.
    - id: asset
      type: Microsoft.WindowsAzure.MediaServices.Client.IAsset
      description: The asset.
    - id: accessPolicy
      type: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
      description: The access policy.
    - id: startTime
      type: System.Nullable{System.DateTime}
      description: The start time.
    - id: name
      type: System.String
      description: The name.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
      description: Task&lt;ILocator&gt;.
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync*
  nameWithType.vb: LocatorBaseCollection.CreateLocatorAsync(LocatorType, IAsset, IAccessPolicy, Nullable(Of DateTime), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.LocatorType, Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy, System.Nullable(Of System.DateTime), System.String)
  name.vb: CreateLocatorAsync(LocatorType, IAsset, IAccessPolicy, Nullable(Of DateTime), String)
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  id: CreateLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  langs:
  - csharp
  - vb
  name: CreateLocatorAsync(LocatorType, IAsset, IAccessPolicy)
  nameWithType: LocatorBaseCollection.CreateLocatorAsync(LocatorType, IAsset, IAccessPolicy)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync(Microsoft.WindowsAzure.MediaServices.Client.LocatorType, Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/LocatorBaseCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateLocatorAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/LocatorBaseCollection.cs
    startLine: 211
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public Task<ILocator> CreateLocatorAsync(LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy)
    content.vb: Public Function CreateLocatorAsync(locatorType As LocatorType, asset As IAsset, accessPolicy As IAccessPolicy) As Task(Of ILocator)
    parameters:
    - id: locatorType
      type: Microsoft.WindowsAzure.MediaServices.Client.LocatorType
    - id: asset
      type: Microsoft.WindowsAzure.MediaServices.Client.IAsset
    - id: accessPolicy
      type: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(System.String,Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(System.String,Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  id: CreateLocator(System.String,Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  langs:
  - csharp
  - vb
  name: CreateLocator(String, LocatorType, IAsset, IAccessPolicy, Nullable<DateTime>, String)
  nameWithType: LocatorBaseCollection.CreateLocator(String, LocatorType, IAsset, IAccessPolicy, Nullable<DateTime>, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(System.String, Microsoft.WindowsAzure.MediaServices.Client.LocatorType, Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy, System.Nullable<System.DateTime>, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/LocatorBaseCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateLocator
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/LocatorBaseCollection.cs
    startLine: 230
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nCreates the locator.\n"
  example: []
  syntax:
    content: public ILocator CreateLocator(string locatorId, LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy, DateTime? startTime, string name = null)
    content.vb: Public Function CreateLocator(locatorId As String, locatorType As LocatorType, asset As IAsset, accessPolicy As IAccessPolicy, startTime As Date?, name As String = Nothing) As ILocator
    parameters:
    - id: locatorId
      type: System.String
      description: "The locator identifier.\nExample of acceptable formats: \nLocator identifier prefix followed by guid - nb:lid:UUID:8b54eb99-754e-4f33-9261-2bb9866ff41f \nGuid - 8b54eb99-754e-4f33-9261-2bb9866ff41f\n"
    - id: locatorType
      type: Microsoft.WindowsAzure.MediaServices.Client.LocatorType
      description: Type of the locator.
    - id: asset
      type: Microsoft.WindowsAzure.MediaServices.Client.IAsset
      description: The asset.
    - id: accessPolicy
      type: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
      description: The access policy.
    - id: startTime
      type: System.Nullable{System.DateTime}
      description: The start time.
    - id: name
      type: System.String
      description: The locator name
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: A locator enabling access to the specified <span class="paramref">asset</span>.
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator*
  nameWithType.vb: LocatorBaseCollection.CreateLocator(String, LocatorType, IAsset, IAccessPolicy, Nullable(Of DateTime), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(System.String, Microsoft.WindowsAzure.MediaServices.Client.LocatorType, Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy, System.Nullable(Of System.DateTime), System.String)
  name.vb: CreateLocator(String, LocatorType, IAsset, IAccessPolicy, Nullable(Of DateTime), String)
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  id: CreateLocator(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy,System.Nullable{System.DateTime},System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  langs:
  - csharp
  - vb
  name: CreateLocator(LocatorType, IAsset, IAccessPolicy, Nullable<DateTime>, String)
  nameWithType: LocatorBaseCollection.CreateLocator(LocatorType, IAsset, IAccessPolicy, Nullable<DateTime>, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(Microsoft.WindowsAzure.MediaServices.Client.LocatorType, Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy, System.Nullable<System.DateTime>, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/LocatorBaseCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateLocator
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/LocatorBaseCollection.cs
    startLine: 243
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public ILocator CreateLocator(LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy, DateTime? startTime, string name = null)
    content.vb: Public Function CreateLocator(locatorType As LocatorType, asset As IAsset, accessPolicy As IAccessPolicy, startTime As Date?, name As String = Nothing) As ILocator
    parameters:
    - id: locatorType
      type: Microsoft.WindowsAzure.MediaServices.Client.LocatorType
    - id: asset
      type: Microsoft.WindowsAzure.MediaServices.Client.IAsset
    - id: accessPolicy
      type: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
    - id: startTime
      type: System.Nullable{System.DateTime}
    - id: name
      type: System.String
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator*
  nameWithType.vb: LocatorBaseCollection.CreateLocator(LocatorType, IAsset, IAccessPolicy, Nullable(Of DateTime), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(Microsoft.WindowsAzure.MediaServices.Client.LocatorType, Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy, System.Nullable(Of System.DateTime), System.String)
  name.vb: CreateLocator(LocatorType, IAsset, IAccessPolicy, Nullable(Of DateTime), String)
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  id: CreateLocator(Microsoft.WindowsAzure.MediaServices.Client.LocatorType,Microsoft.WindowsAzure.MediaServices.Client.IAsset,Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  parent: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection
  langs:
  - csharp
  - vb
  name: CreateLocator(LocatorType, IAsset, IAccessPolicy)
  nameWithType: LocatorBaseCollection.CreateLocator(LocatorType, IAsset, IAccessPolicy)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator(Microsoft.WindowsAzure.MediaServices.Client.LocatorType, Microsoft.WindowsAzure.MediaServices.Client.IAsset, Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy)
  type: Method
  source:
    remote:
      path: src/net/Client/Collections/LocatorBaseCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: CreateLocator
    path: src/azure-sdk-for-media-services/src/net/Client/Collections/LocatorBaseCollection.cs
    startLine: 255
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nCreates the locator.\n"
  example: []
  syntax:
    content: public ILocator CreateLocator(LocatorType locatorType, IAsset asset, IAccessPolicy accessPolicy)
    content.vb: Public Function CreateLocator(locatorType As LocatorType, asset As IAsset, accessPolicy As IAccessPolicy) As ILocator
    parameters:
    - id: locatorType
      type: Microsoft.WindowsAzure.MediaServices.Client.LocatorType
      description: Type of the locator.
    - id: asset
      type: Microsoft.WindowsAzure.MediaServices.Client.IAsset
      description: The asset.
    - id: accessPolicy
      type: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
      description: The access policy.
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.ILocator
      description: ILocator.
  overload: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ILocator
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: ILocator
  nameWithType: ILocator
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  parent: Microsoft.WindowsAzure.MediaServices.Client
  definition: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  name: BaseCollection<ILocator>
  nameWithType: BaseCollection<ILocator>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<Microsoft.WindowsAzure.MediaServices.Client.ILocator>
  nameWithType.vb: BaseCollection(Of ILocator)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  name.vb: BaseCollection(Of ILocator)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
    name: BaseCollection
    nameWithType: BaseCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
    name: ILocator
    nameWithType: ILocator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
    name: BaseCollection
    nameWithType: BaseCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
    name: ILocator
    nameWithType: ILocator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  parent: Microsoft.WindowsAzure.MediaServices.Client
  definition: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection`1
  name: CloudBaseCollection<ILocator>
  nameWithType: CloudBaseCollection<ILocator>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection<Microsoft.WindowsAzure.MediaServices.Client.ILocator>
  nameWithType.vb: CloudBaseCollection(Of ILocator)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  name.vb: CloudBaseCollection(Of ILocator)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection`1
    name: CloudBaseCollection
    nameWithType: CloudBaseCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
    name: ILocator
    nameWithType: ILocator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection`1
    name: CloudBaseCollection
    nameWithType: CloudBaseCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
    name: ILocator
    nameWithType: ILocator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  commentId: T:System.Linq.IQueryable{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ILocator>
  nameWithType: IQueryable<ILocator>
  fullName: System.Linq.IQueryable<Microsoft.WindowsAzure.MediaServices.Client.ILocator>
  nameWithType.vb: IQueryable(Of ILocator)
  fullname.vb: System.Linq.IQueryable(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  name.vb: IQueryable(Of ILocator)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
    name: ILocator
    nameWithType: ILocator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
    name: ILocator
    nameWithType: ILocator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ILocator>
  nameWithType: IEnumerable<ILocator>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.MediaServices.Client.ILocator>
  nameWithType.vb: IEnumerable(Of ILocator)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  name.vb: IEnumerable(Of ILocator)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
    name: ILocator
    nameWithType: ILocator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
    name: ILocator
    nameWithType: ILocator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.Queryable
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.Queryable
  parent: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  definition: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection`1.Queryable
  name: Queryable
  nameWithType: CloudBaseCollection<ILocator>.Queryable
  fullName: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection<Microsoft.WindowsAzure.MediaServices.Client.ILocator>.Queryable
  nameWithType.vb: CloudBaseCollection(Of ILocator).Queryable
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator).Queryable
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.MediaContext
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.MediaContext
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  definition: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.MediaContext
  name: MediaContext
  nameWithType: BaseCollection<ILocator>.MediaContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<Microsoft.WindowsAzure.MediaServices.Client.ILocator>.MediaContext
  nameWithType.vb: BaseCollection(Of ILocator).MediaContext
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator).MediaContext
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.ElementType
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.ElementType
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  definition: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.ElementType
  name: ElementType
  nameWithType: BaseCollection<ILocator>.ElementType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<Microsoft.WindowsAzure.MediaServices.Client.ILocator>.ElementType
  nameWithType.vb: BaseCollection(Of ILocator).ElementType
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator).ElementType
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.Expression
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.Expression
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  definition: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Expression
  name: Expression
  nameWithType: BaseCollection<ILocator>.Expression
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<Microsoft.WindowsAzure.MediaServices.Client.ILocator>.Expression
  nameWithType.vb: BaseCollection(Of ILocator).Expression
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator).Expression
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.Provider
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.Provider
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  definition: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Provider
  name: Provider
  nameWithType: BaseCollection<ILocator>.Provider
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<Microsoft.WindowsAzure.MediaServices.Client.ILocator>.Provider
  nameWithType.vb: BaseCollection(Of ILocator).Provider
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator).Provider
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.GetEnumerator
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.GetEnumerator
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  definition: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: BaseCollection<ILocator>.GetEnumerator()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<Microsoft.WindowsAzure.MediaServices.Client.ILocator>.GetEnumerator()
  nameWithType.vb: BaseCollection(Of ILocator).GetEnumerator()
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator).GetEnumerator()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: BaseCollection<ILocator>.GetEnumerator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<Microsoft.WindowsAzure.MediaServices.Client.ILocator>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: BaseCollection(Of ILocator).GetEnumerator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}.System#Collections#IEnumerable#GetEnumerator
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  definition: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: BaseCollection<ILocator>.IEnumerable.GetEnumerator()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<Microsoft.WindowsAzure.MediaServices.Client.ILocator>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: BaseCollection(Of ILocator).System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: BaseCollection<ILocator>.IEnumerable.GetEnumerator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<Microsoft.WindowsAzure.MediaServices.Client.ILocator>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: BaseCollection(Of ILocator).System.Collections.IEnumerable.GetEnumerator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
  isExternal: false
  name: BaseCollection<T>
  nameWithType: BaseCollection<T>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>
  nameWithType.vb: BaseCollection(Of T)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T)
  name.vb: BaseCollection(Of T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
    name: BaseCollection
    nameWithType: BaseCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1
    name: BaseCollection
    nameWithType: BaseCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection`1
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection`1
  isExternal: false
  name: CloudBaseCollection<T>
  nameWithType: CloudBaseCollection<T>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection<T>
  nameWithType.vb: CloudBaseCollection(Of T)
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection(Of T)
  name.vb: CloudBaseCollection(Of T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection`1
    name: CloudBaseCollection
    nameWithType: CloudBaseCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection`1
    name: CloudBaseCollection
    nameWithType: CloudBaseCollection
    fullName: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection`1.Queryable
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection`1.Queryable
  isExternal: false
  name: Queryable
  nameWithType: CloudBaseCollection<T>.Queryable
  fullName: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection<T>.Queryable
  nameWithType.vb: CloudBaseCollection(Of T).Queryable
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.CloudBaseCollection(Of T).Queryable
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.MediaContext
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.MediaContext
  isExternal: false
  name: MediaContext
  nameWithType: BaseCollection<T>.MediaContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.MediaContext
  nameWithType.vb: BaseCollection(Of T).MediaContext
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).MediaContext
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.ElementType
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.ElementType
  isExternal: false
  name: ElementType
  nameWithType: BaseCollection<T>.ElementType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.ElementType
  nameWithType.vb: BaseCollection(Of T).ElementType
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).ElementType
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Expression
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Expression
  isExternal: false
  name: Expression
  nameWithType: BaseCollection<T>.Expression
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.Expression
  nameWithType.vb: BaseCollection(Of T).Expression
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).Expression
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Provider
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.Provider
  isExternal: false
  name: Provider
  nameWithType: BaseCollection<T>.Provider
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.Provider
  nameWithType.vb: BaseCollection(Of T).Provider
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).Provider
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.GetEnumerator
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: BaseCollection<T>.GetEnumerator()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.GetEnumerator()
  nameWithType.vb: BaseCollection(Of T).GetEnumerator()
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).GetEnumerator()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: BaseCollection<T>.GetEnumerator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: BaseCollection(Of T).GetEnumerator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: BaseCollection<T>.IEnumerable.GetEnumerator()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: BaseCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: BaseCollection<T>.IEnumerable.GetEnumerator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: BaseCollection(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseCollection(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync
  isExternal: false
  name: CreateSasLocatorAsync
  nameWithType: LocatorBaseCollection.CreateSasLocatorAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocatorAsync
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAsset
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IAsset
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IAsset
  nameWithType: IAsset
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAsset
- uid: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IAccessPolicy
  nameWithType: IAccessPolicy
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IAccessPolicy
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.MediaServices.Client.ILocator}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ILocator>
  nameWithType: Task<ILocator>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.MediaServices.Client.ILocator>
  nameWithType.vb: Task(Of ILocator)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.MediaServices.Client.ILocator)
  name.vb: Task(Of ILocator)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
    name: ILocator
    nameWithType: ILocator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.ILocator
    name: ILocator
    nameWithType: ILocator
    fullName: Microsoft.WindowsAzure.MediaServices.Client.ILocator
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator
  isExternal: false
  name: CreateSasLocator
  nameWithType: LocatorBaseCollection.CreateSasLocator
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateSasLocator
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync
  isExternal: false
  name: CreateLocatorAsync
  nameWithType: LocatorBaseCollection.CreateLocatorAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocatorAsync
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorType
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.LocatorType
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: LocatorType
  nameWithType: LocatorType
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorType
- uid: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator
  isExternal: false
  name: CreateLocator
  nameWithType: LocatorBaseCollection.CreateLocator
  fullName: Microsoft.WindowsAzure.MediaServices.Client.LocatorBaseCollection.CreateLocator
