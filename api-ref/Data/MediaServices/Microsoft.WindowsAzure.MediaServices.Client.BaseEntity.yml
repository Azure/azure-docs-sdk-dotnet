### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.BaseEntity
  id: BaseEntity
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.GetMediaContext
  - Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty(Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext,Microsoft.WindowsAzure.MediaServices.Client.BaseEntity,System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty(Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext,System.String)
  - Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.SetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  langs:
  - csharp
  - vb
  name: BaseEntity
  nameWithType: BaseEntity
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity
  type: Class
  source:
    remote:
      path: src/net/Client/Entities/BaseEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: BaseEntity
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/BaseEntity.cs
    startLine: 20
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: 'public abstract class BaseEntity : IMediaContextContainer'
    content.vb: >-
      Public MustInherit Class BaseEntity
          Implements IMediaContextContainer
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.WindowsAzure.MediaServices.Client.BaseEntity`1
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.SetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.SetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  id: SetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity
  langs:
  - csharp
  - vb
  name: SetMediaContext(MediaContextBase)
  nameWithType: BaseEntity.SetMediaContext(MediaContextBase)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.SetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/BaseEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: SetMediaContext
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/BaseEntity.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public virtual void SetMediaContext(MediaContextBase value)
    content.vb: Public Overridable Sub SetMediaContext(value As MediaContextBase)
    parameters:
    - id: value
      type: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  overload: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.SetMediaContext*
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.SetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.GetMediaContext
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.GetMediaContext
  id: GetMediaContext
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity
  langs:
  - csharp
  - vb
  name: GetMediaContext()
  nameWithType: BaseEntity.GetMediaContext()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.GetMediaContext()
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/BaseEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetMediaContext
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/BaseEntity.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public virtual MediaContextBase GetMediaContext()
    content.vb: Public Overridable Function GetMediaContext As MediaContextBase
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  overload: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.GetMediaContext*
  implements:
  - Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.GetMediaContext
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty(Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext,System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty(Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext,System.String)
  id: LoadProperty(Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext,System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity
  langs:
  - csharp
  - vb
  name: LoadProperty(IMediaDataServiceContext, String)
  nameWithType: BaseEntity.LoadProperty(IMediaDataServiceContext, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty(Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/BaseEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LoadProperty
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/BaseEntity.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: protected void LoadProperty(IMediaDataServiceContext dataContext, string propertyName)
    content.vb: Protected Sub LoadProperty(dataContext As IMediaDataServiceContext, propertyName As String)
    parameters:
    - id: dataContext
      type: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
    - id: propertyName
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty(Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext,Microsoft.WindowsAzure.MediaServices.Client.BaseEntity,System.String)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty(Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext,Microsoft.WindowsAzure.MediaServices.Client.BaseEntity,System.String)
  id: LoadProperty(Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext,Microsoft.WindowsAzure.MediaServices.Client.BaseEntity,System.String)
  parent: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity
  langs:
  - csharp
  - vb
  name: LoadProperty(IMediaDataServiceContext, BaseEntity, String)
  nameWithType: BaseEntity.LoadProperty(IMediaDataServiceContext, BaseEntity, String)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty(Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext, Microsoft.WindowsAzure.MediaServices.Client.BaseEntity, System.String)
  type: Method
  source:
    remote:
      path: src/net/Client/Entities/BaseEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: LoadProperty
    path: src/azure-sdk-for-media-services/src/net/Client/Entities/BaseEntity.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: protected void LoadProperty(IMediaDataServiceContext dataContext, BaseEntity entity, string propertyName)
    content.vb: Protected Sub LoadProperty(dataContext As IMediaDataServiceContext, entity As BaseEntity, propertyName As String)
    parameters:
    - id: dataContext
      type: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
    - id: entity
      type: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity
    - id: propertyName
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IMediaContextContainer
  nameWithType: IMediaContextContainer
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.SetMediaContext*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.SetMediaContext
  isExternal: false
  name: SetMediaContext
  nameWithType: BaseEntity.SetMediaContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.SetMediaContext
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.SetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.SetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer
  isExternal: false
  name: SetMediaContext(MediaContextBase)
  nameWithType: IMediaContextContainer.SetMediaContext(MediaContextBase)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.SetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.SetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
    name: SetMediaContext
    nameWithType: IMediaContextContainer.SetMediaContext
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.SetMediaContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
    name: MediaContextBase
    nameWithType: MediaContextBase
    fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.SetMediaContext(Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase)
    name: SetMediaContext
    nameWithType: IMediaContextContainer.SetMediaContext
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.SetMediaContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
    name: MediaContextBase
    nameWithType: MediaContextBase
    fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: MediaContextBase
  nameWithType: MediaContextBase
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.GetMediaContext*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.GetMediaContext
  isExternal: false
  name: GetMediaContext
  nameWithType: BaseEntity.GetMediaContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.GetMediaContext
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.GetMediaContext
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.GetMediaContext
  parent: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer
  isExternal: false
  name: GetMediaContext()
  nameWithType: IMediaContextContainer.GetMediaContext()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.GetMediaContext()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.GetMediaContext
    name: GetMediaContext
    nameWithType: IMediaContextContainer.GetMediaContext
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.GetMediaContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.GetMediaContext
    name: GetMediaContext
    nameWithType: IMediaContextContainer.GetMediaContext
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaContextContainer.GetMediaContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty
  isExternal: false
  name: LoadProperty
  nameWithType: BaseEntity.LoadProperty
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity.LoadProperty
- uid: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: IMediaDataServiceContext
  nameWithType: IMediaDataServiceContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.IMediaDataServiceContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.BaseEntity
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: BaseEntity
  nameWithType: BaseEntity
  fullName: Microsoft.WindowsAzure.MediaServices.Client.BaseEntity
