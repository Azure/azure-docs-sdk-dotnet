### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection
  id: ChannelMetricsCollection
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetrics(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)
  - Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetricsAsync(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)
  - Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.MediaContext
  langs:
  - csharp
  - vb
  name: ChannelMetricsCollection
  nameWithType: ChannelMetricsCollection
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection
  type: Class
  source:
    remote:
      path: src/net/Client/Telemetry/ChannelMetricsCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ChannelMetricsCollection
    path: src/azure-sdk-for-media-services/src/net/Client/Telemetry/ChannelMetricsCollection.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nRepresents a collection of Channel Metrics written to Azure Table Storage \nby the Media Services Telemetry service.\n"
  example: []
  syntax:
    content: public sealed class ChannelMetricsCollection
    content.vb: Public NotInheritable Class ChannelMetricsCollection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetrics(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetrics(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)
  id: GetChannelMetrics(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)
  parent: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection
  langs:
  - csharp
  - vb
  name: GetChannelMetrics(String, String, String, String, DateTime, DateTime)
  nameWithType: ChannelMetricsCollection.GetChannelMetrics(String, String, String, String, DateTime, DateTime)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetrics(System.String, System.String, System.String, System.String, System.DateTime, System.DateTime)
  type: Method
  source:
    remote:
      path: src/net/Client/Telemetry/ChannelMetricsCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetChannelMetrics
    path: src/azure-sdk-for-media-services/src/net/Client/Telemetry/ChannelMetricsCollection.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGet metrics for a Media Services Channel.\n"
  example: []
  syntax:
    content: public ICollection<IChannelHeartbeat> GetChannelMetrics(string endpointAddress, string storageAccountKey, string mediaServicesAccountId, string channelId, DateTime start, DateTime end)
    content.vb: Public Function GetChannelMetrics(endpointAddress As String, storageAccountKey As String, mediaServicesAccountId As String, channelId As String, start As Date, end As Date) As ICollection(Of IChannelHeartbeat)
    parameters:
    - id: endpointAddress
      type: System.String
      description: The Telemetry endpoint address
    - id: storageAccountKey
      type: System.String
      description: The Storage account key.
    - id: mediaServicesAccountId
      type: System.String
      description: The Media Services account Id.
    - id: channelId
      type: System.String
      description: The Channel ID
    - id: start
      type: System.DateTime
      description: The start time.
    - id: end
      type: System.DateTime
      description: The end time.
    return:
      type: System.Collections.Generic.ICollection{Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat}
      description: The Channel metrics for the given channel within the given time range.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetrics*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetricsAsync(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetricsAsync(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)
  id: GetChannelMetricsAsync(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)
  parent: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection
  langs:
  - csharp
  - vb
  name: GetChannelMetricsAsync(String, String, String, String, DateTime, DateTime)
  nameWithType: ChannelMetricsCollection.GetChannelMetricsAsync(String, String, String, String, DateTime, DateTime)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetricsAsync(System.String, System.String, System.String, System.String, System.DateTime, System.DateTime)
  type: Method
  source:
    remote:
      path: src/net/Client/Telemetry/ChannelMetricsCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetChannelMetricsAsync
    path: src/azure-sdk-for-media-services/src/net/Client/Telemetry/ChannelMetricsCollection.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGet metrics for a Media Services Channel in in asynchronous mode.\n"
  example: []
  syntax:
    content: public Task<ICollection<IChannelHeartbeat>> GetChannelMetricsAsync(string endpointAddress, string storageAccountKey, string mediaServicesAccountId, string channelId, DateTime start, DateTime end)
    content.vb: Public Function GetChannelMetricsAsync(endpointAddress As String, storageAccountKey As String, mediaServicesAccountId As String, channelId As String, start As Date, end As Date) As Task(Of ICollection(Of IChannelHeartbeat))
    parameters:
    - id: endpointAddress
      type: System.String
      description: The Telemetry endpoint address
    - id: storageAccountKey
      type: System.String
      description: The Storage account key.
    - id: mediaServicesAccountId
      type: System.String
      description: The Media Services account Id.
    - id: channelId
      type: System.String
      description: The Channel ID
    - id: start
      type: System.DateTime
      description: The start time.
    - id: end
      type: System.DateTime
      description: The end time.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.ICollection{Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat}}
      description: The Task of the Channel metrics for the given channel within the given time range.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetricsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.MediaContext
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.MediaContext
  id: MediaContext
  parent: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection
  langs:
  - csharp
  - vb
  name: MediaContext
  nameWithType: ChannelMetricsCollection.MediaContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.MediaContext
  type: Property
  source:
    remote:
      path: src/net/Client/Telemetry/ChannelMetricsCollection.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MediaContext
    path: src/azure-sdk-for-media-services/src/net/Client/Telemetry/ChannelMetricsCollection.cs
    startLine: 139
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nMedia Context\n"
  example: []
  syntax:
    content: public MediaContextBase MediaContext { get; set; }
    content.vb: Public Property MediaContext As MediaContextBase
    parameters: []
    return:
      type: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  overload: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.MediaContext*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetrics*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetrics
  isExternal: false
  name: GetChannelMetrics
  nameWithType: ChannelMetricsCollection.GetChannelMetrics
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetrics
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Collections.Generic.ICollection{Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IChannelHeartbeat>
  nameWithType: ICollection<IChannelHeartbeat>
  fullName: System.Collections.Generic.ICollection<Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat>
  nameWithType.vb: ICollection(Of IChannelHeartbeat)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat)
  name.vb: ICollection(Of IChannelHeartbeat)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat
    name: IChannelHeartbeat
    nameWithType: IChannelHeartbeat
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat
    name: IChannelHeartbeat
    nameWithType: IChannelHeartbeat
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetricsAsync*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetricsAsync
  isExternal: false
  name: GetChannelMetricsAsync
  nameWithType: ChannelMetricsCollection.GetChannelMetricsAsync
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.GetChannelMetricsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.ICollection{Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.ICollection{Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ICollection<IChannelHeartbeat>>
  nameWithType: Task<ICollection<IChannelHeartbeat>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.ICollection<Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat>>
  nameWithType.vb: Task(Of ICollection(Of IChannelHeartbeat))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.ICollection(Of Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat))
  name.vb: Task(Of ICollection(Of IChannelHeartbeat))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat
    name: IChannelHeartbeat
    nameWithType: IChannelHeartbeat
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat
    name: IChannelHeartbeat
    nameWithType: IChannelHeartbeat
    fullName: Microsoft.WindowsAzure.MediaServices.Client.IChannelHeartbeat
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.MediaContext*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.MediaContext
  isExternal: false
  name: MediaContext
  nameWithType: ChannelMetricsCollection.MediaContext
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ChannelMetricsCollection.MediaContext
- uid: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
  parent: Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: MediaContextBase
  nameWithType: MediaContextBase
  fullName: Microsoft.WindowsAzure.MediaServices.Client.MediaContextBase
