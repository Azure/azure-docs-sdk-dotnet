### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
  id: ITokenProvider
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken
  - Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader
  - Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.MediaServicesAccountName
  langs:
  - csharp
  - vb
  name: ITokenProvider
  nameWithType: ITokenProvider
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
  type: Interface
  source:
    remote:
      path: src/net/Client/ITokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: ITokenProvider
    path: src/azure-sdk-for-media-services/src/net/Client/ITokenProvider.cs
    startLine: 23
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nA generic interface to a RFC6750 bearer token provider.\n"
  example: []
  syntax:
    content: public interface ITokenProvider
    content.vb: Public Interface ITokenProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.MediaServicesAccountName
  commentId: P:Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.MediaServicesAccountName
  id: MediaServicesAccountName
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
  langs:
  - csharp
  - vb
  name: MediaServicesAccountName
  nameWithType: ITokenProvider.MediaServicesAccountName
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.MediaServicesAccountName
  type: Property
  source:
    remote:
      path: src/net/Client/ITokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: MediaServicesAccountName
    path: src/azure-sdk-for-media-services/src/net/Client/ITokenProvider.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nThe media services account for which the token is being provided.\n"
  example: []
  syntax:
    content: string MediaServicesAccountName { get; }
    content.vb: ReadOnly Property MediaServicesAccountName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.MediaServicesAccountName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader
  id: GetAuthorizationHeader
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
  langs:
  - csharp
  - vb
  name: GetAuthorizationHeader()
  nameWithType: ITokenProvider.GetAuthorizationHeader()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader()
  type: Method
  source:
    remote:
      path: src/net/Client/ITokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetAuthorizationHeader
    path: src/azure-sdk-for-media-services/src/net/Client/ITokenProvider.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets a value for the Authorization header in RFC6750 format\n"
  example: []
  syntax:
    content: string GetAuthorizationHeader()
    content.vb: Function GetAuthorizationHeader As String
    return:
      type: System.String
      description: ''
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader*
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken
  id: GetAccessToken
  parent: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider
  langs:
  - csharp
  - vb
  name: GetAccessToken()
  nameWithType: ITokenProvider.GetAccessToken()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken()
  type: Method
  source:
    remote:
      path: src/net/Client/ITokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetAccessToken
    path: src/azure-sdk-for-media-services/src/net/Client/ITokenProvider.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets the access token to use.\n"
  example: []
  syntax:
    content: Tuple<string, DateTimeOffset> GetAccessToken()
    content.vb: Function GetAccessToken As Tuple(Of String, DateTimeOffset)
    return:
      type: System.Tuple{System.String,System.DateTimeOffset}
      description: A tuple containing access token and its expiration time.
  overload: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken*
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.MediaServicesAccountName*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.MediaServicesAccountName
  isExternal: false
  name: MediaServicesAccountName
  nameWithType: ITokenProvider.MediaServicesAccountName
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.MediaServicesAccountName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader
  isExternal: false
  name: GetAuthorizationHeader
  nameWithType: ITokenProvider.GetAuthorizationHeader
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAuthorizationHeader
- uid: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken
  isExternal: false
  name: GetAccessToken
  nameWithType: ITokenProvider.GetAccessToken
  fullName: Microsoft.WindowsAzure.MediaServices.Client.ITokenProvider.GetAccessToken
- uid: System.Tuple{System.String,System.DateTimeOffset}
  commentId: T:System.Tuple{System.String,System.DateTimeOffset}
  parent: System
  definition: System.Tuple`2
  name: Tuple<String, DateTimeOffset>
  nameWithType: Tuple<String, DateTimeOffset>
  fullName: System.Tuple<System.String, System.DateTimeOffset>
  nameWithType.vb: Tuple(Of String, DateTimeOffset)
  fullname.vb: System.Tuple(Of System.String, System.DateTimeOffset)
  name.vb: Tuple(Of String, DateTimeOffset)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullname.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
