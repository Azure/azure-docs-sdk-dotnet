### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.MediaServices.Client.Cache`1
  commentId: T:Microsoft.WindowsAzure.MediaServices.Client.Cache`1
  id: Cache`1
  parent: Microsoft.WindowsAzure.MediaServices.Client
  children:
  - Microsoft.WindowsAzure.MediaServices.Client.Cache`1.Dispose
  - Microsoft.WindowsAzure.MediaServices.Client.Cache`1.Dispose(System.Boolean)
  - Microsoft.WindowsAzure.MediaServices.Client.Cache`1.GetOrAdd(System.String,System.Func{`0},System.Func{System.DateTime})
  langs:
  - csharp
  - vb
  name: Cache<T>
  nameWithType: Cache<T>
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Cache<T>
  type: Class
  source:
    remote:
      path: src/net/Client/Cache.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Cache
    path: src/azure-sdk-for-media-services/src/net/Client/Cache.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nExtends standard MemoryCache making it strongly typed and adding\nconditional element loading if it is not present.\n"
  example: []
  syntax:
    content: 'public class Cache<T> : IDisposable'
    content.vb: >-
      Public Class Cache(Of T)
          Implements IDisposable
    typeParameters:
    - id: T
      description: Type of stored elements.
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: Cache(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.Cache(Of T)
  name.vb: Cache(Of T)
- uid: Microsoft.WindowsAzure.MediaServices.Client.Cache`1.GetOrAdd(System.String,System.Func{`0},System.Func{System.DateTime})
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.Cache`1.GetOrAdd(System.String,System.Func{`0},System.Func{System.DateTime})
  id: GetOrAdd(System.String,System.Func{`0},System.Func{System.DateTime})
  parent: Microsoft.WindowsAzure.MediaServices.Client.Cache`1
  langs:
  - csharp
  - vb
  name: GetOrAdd(String, Func<T>, Func<DateTime>)
  nameWithType: Cache<T>.GetOrAdd(String, Func<T>, Func<DateTime>)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Cache<T>.GetOrAdd(System.String, System.Func<T>, System.Func<System.DateTime>)
  type: Method
  source:
    remote:
      path: src/net/Client/Cache.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: GetOrAdd
    path: src/azure-sdk-for-media-services/src/net/Client/Cache.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  summary: "\nGets cached element or caches new if it doesn't exist.\n"
  example: []
  syntax:
    content: public T GetOrAdd(string key, Func<T> valueFactory, Func<DateTime> expirationFactory)
    content.vb: Public Function GetOrAdd(key As String, valueFactory As Func(Of T), expirationFactory As Func(Of Date)) As T
    parameters:
    - id: key
      type: System.String
      description: The key of the element.
    - id: valueFactory
      type: System.Func{{T}}
      description: Function returning the element that must be cached.
    - id: expirationFactory
      type: System.Func{System.DateTime}
      description: Function returning the expiration time in UTC of the cached element.
    return:
      type: '{T}'
      description: The element from cache or generated by valueFactory if it was not present.
  overload: Microsoft.WindowsAzure.MediaServices.Client.Cache`1.GetOrAdd*
  nameWithType.vb: Cache(Of T).GetOrAdd(String, Func(Of T), Func(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.Cache(Of T).GetOrAdd(System.String, System.Func(Of T), System.Func(Of System.DateTime))
  name.vb: GetOrAdd(String, Func(Of T), Func(Of DateTime))
- uid: Microsoft.WindowsAzure.MediaServices.Client.Cache`1.Dispose
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.Cache`1.Dispose
  id: Dispose
  parent: Microsoft.WindowsAzure.MediaServices.Client.Cache`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Cache<T>.Dispose()
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Cache<T>.Dispose()
  type: Method
  source:
    remote:
      path: src/net/Client/Cache.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Dispose
    path: src/azure-sdk-for-media-services/src/net/Client/Cache.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.WindowsAzure.MediaServices.Client.Cache`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: Cache(Of T).Dispose()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.Cache(Of T).Dispose()
- uid: Microsoft.WindowsAzure.MediaServices.Client.Cache`1.Dispose(System.Boolean)
  commentId: M:Microsoft.WindowsAzure.MediaServices.Client.Cache`1.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.WindowsAzure.MediaServices.Client.Cache`1
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: Cache<T>.Dispose(Boolean)
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Cache<T>.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/net/Client/Cache.cs
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-media-services
    id: Dispose
    path: src/azure-sdk-for-media-services/src/net/Client/Cache.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.MediaServices.Client
  namespace: Microsoft.WindowsAzure.MediaServices.Client
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  overload: Microsoft.WindowsAzure.MediaServices.Client.Cache`1.Dispose*
  nameWithType.vb: Cache(Of T).Dispose(Boolean)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.MediaServices.Client.Cache(Of T).Dispose(System.Boolean)
references:
- uid: Microsoft.WindowsAzure.MediaServices.Client
  commentId: N:Microsoft.WindowsAzure.MediaServices.Client
  isExternal: false
  name: Microsoft.WindowsAzure.MediaServices.Client
  nameWithType: Microsoft.WindowsAzure.MediaServices.Client
  fullName: Microsoft.WindowsAzure.MediaServices.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.MediaServices.Client.Cache`1.GetOrAdd*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Cache`1.GetOrAdd
  isExternal: false
  name: GetOrAdd
  nameWithType: Cache.GetOrAdd
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Cache.GetOrAdd
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{{T}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullname.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.DateTime}
  commentId: T:System.Func{System.DateTime}
  parent: System
  definition: System.Func`1
  name: Func<DateTime>
  nameWithType: Func<DateTime>
  fullName: System.Func<System.DateTime>
  nameWithType.vb: Func(Of DateTime)
  fullname.vb: System.Func(Of System.DateTime)
  name.vb: Func(Of DateTime)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.WindowsAzure.MediaServices.Client.Cache`1.Dispose*
  commentId: Overload:Microsoft.WindowsAzure.MediaServices.Client.Cache`1.Dispose
  isExternal: false
  name: Dispose
  nameWithType: Cache.Dispose
  fullName: Microsoft.WindowsAzure.MediaServices.Client.Cache.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
