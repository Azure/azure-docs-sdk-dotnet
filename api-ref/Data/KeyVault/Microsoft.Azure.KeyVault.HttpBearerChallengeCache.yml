### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.HttpBearerChallengeCache
  commentId: T:Microsoft.Azure.KeyVault.HttpBearerChallengeCache
  id: HttpBearerChallengeCache
  parent: Microsoft.Azure.KeyVault
  children:
  - Microsoft.Azure.KeyVault.HttpBearerChallengeCache.Clear
  - Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetChallengeForURL(System.Uri)
  - Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetInstance
  - Microsoft.Azure.KeyVault.HttpBearerChallengeCache.RemoveChallengeForURL(System.Uri)
  - Microsoft.Azure.KeyVault.HttpBearerChallengeCache.SetChallengeForURL(System.Uri,Microsoft.Azure.KeyVault.HttpBearerChallenge)
  langs:
  - csharp
  - vb
  name: HttpBearerChallengeCache
  nameWithType: HttpBearerChallengeCache
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallengeCache
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/Authentication/HttpBearerChallengeCache.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HttpBearerChallengeCache
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/Authentication/HttpBearerChallengeCache.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nSingleton class for handling caching of the http bearer challenge\n"
  example: []
  syntax:
    content: public sealed class HttpBearerChallengeCache
    content.vb: Public NotInheritable Class HttpBearerChallengeCache
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetInstance
  commentId: M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetInstance
  id: GetInstance
  parent: Microsoft.Azure.KeyVault.HttpBearerChallengeCache
  langs:
  - csharp
  - vb
  name: GetInstance()
  nameWithType: HttpBearerChallengeCache.GetInstance()
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetInstance()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/Authentication/HttpBearerChallengeCache.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetInstance
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/Authentication/HttpBearerChallengeCache.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets the singleton instance of <xref href=\"Microsoft.Azure.KeyVault.HttpBearerChallengeCache\" data-throw-if-not-resolved=\"false\"></xref> \n"
  example: []
  syntax:
    content: public static HttpBearerChallengeCache GetInstance()
    content.vb: Public Shared Function GetInstance As HttpBearerChallengeCache
    return:
      type: Microsoft.Azure.KeyVault.HttpBearerChallengeCache
      description: Instance of this class
  overload: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetChallengeForURL(System.Uri)
  commentId: M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetChallengeForURL(System.Uri)
  id: GetChallengeForURL(System.Uri)
  parent: Microsoft.Azure.KeyVault.HttpBearerChallengeCache
  langs:
  - csharp
  - vb
  name: GetChallengeForURL(Uri)
  nameWithType: HttpBearerChallengeCache.GetChallengeForURL(Uri)
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetChallengeForURL(System.Uri)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/Authentication/HttpBearerChallengeCache.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetChallengeForURL
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/Authentication/HttpBearerChallengeCache.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets the challenge for the cached URL.\n"
  example: []
  syntax:
    content: public HttpBearerChallenge GetChallengeForURL(Uri url)
    content.vb: Public Function GetChallengeForURL(url As Uri) As HttpBearerChallenge
    parameters:
    - id: url
      type: System.Uri
      description: the URL that the challenge is cached for.
    return:
      type: Microsoft.Azure.KeyVault.HttpBearerChallenge
      description: the cached challenge or null otherwise.
  overload: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetChallengeForURL*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.RemoveChallengeForURL(System.Uri)
  commentId: M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.RemoveChallengeForURL(System.Uri)
  id: RemoveChallengeForURL(System.Uri)
  parent: Microsoft.Azure.KeyVault.HttpBearerChallengeCache
  langs:
  - csharp
  - vb
  name: RemoveChallengeForURL(Uri)
  nameWithType: HttpBearerChallengeCache.RemoveChallengeForURL(Uri)
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.RemoveChallengeForURL(System.Uri)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/Authentication/HttpBearerChallengeCache.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveChallengeForURL
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/Authentication/HttpBearerChallengeCache.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nRemoves the cached challenge for the specified URL\n"
  example: []
  syntax:
    content: public void RemoveChallengeForURL(Uri url)
    content.vb: Public Sub RemoveChallengeForURL(url As Uri)
    parameters:
    - id: url
      type: System.Uri
      description: 'the URL to remove its cached challenge '
  overload: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.RemoveChallengeForURL*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.SetChallengeForURL(System.Uri,Microsoft.Azure.KeyVault.HttpBearerChallenge)
  commentId: M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.SetChallengeForURL(System.Uri,Microsoft.Azure.KeyVault.HttpBearerChallenge)
  id: SetChallengeForURL(System.Uri,Microsoft.Azure.KeyVault.HttpBearerChallenge)
  parent: Microsoft.Azure.KeyVault.HttpBearerChallengeCache
  langs:
  - csharp
  - vb
  name: SetChallengeForURL(Uri, HttpBearerChallenge)
  nameWithType: HttpBearerChallengeCache.SetChallengeForURL(Uri, HttpBearerChallenge)
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.SetChallengeForURL(System.Uri, Microsoft.Azure.KeyVault.HttpBearerChallenge)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/Authentication/HttpBearerChallengeCache.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SetChallengeForURL
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/Authentication/HttpBearerChallengeCache.cs
    startLine: 111
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nCaches the challenge for the specified URL\n"
  example: []
  syntax:
    content: public void SetChallengeForURL(Uri url, HttpBearerChallenge value)
    content.vb: Public Sub SetChallengeForURL(url As Uri, value As HttpBearerChallenge)
    parameters:
    - id: url
      type: System.Uri
      description: 'URL corresponding to challenge as cache key '
    - id: value
      type: Microsoft.Azure.KeyVault.HttpBearerChallenge
      description: 'the challenge '
  overload: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.SetChallengeForURL*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.Clear
  commentId: M:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.Clear
  id: Clear
  parent: Microsoft.Azure.KeyVault.HttpBearerChallengeCache
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: HttpBearerChallengeCache.Clear()
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.Clear()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/Authentication/HttpBearerChallengeCache.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Clear
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/Authentication/HttpBearerChallengeCache.cs
    startLine: 131
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nClears the cache\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.KeyVault
  commentId: N:Microsoft.Azure.KeyVault
  isExternal: false
  name: Microsoft.Azure.KeyVault
  nameWithType: Microsoft.Azure.KeyVault
  fullName: Microsoft.Azure.KeyVault
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.HttpBearerChallengeCache
  commentId: T:Microsoft.Azure.KeyVault.HttpBearerChallengeCache
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: HttpBearerChallengeCache
  nameWithType: HttpBearerChallengeCache
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallengeCache
- uid: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetInstance*
  commentId: Overload:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetInstance
  isExternal: false
  name: GetInstance
  nameWithType: HttpBearerChallengeCache.GetInstance
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetInstance
- uid: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetChallengeForURL*
  commentId: Overload:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetChallengeForURL
  isExternal: false
  name: GetChallengeForURL
  nameWithType: HttpBearerChallengeCache.GetChallengeForURL
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.GetChallengeForURL
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Azure.KeyVault.HttpBearerChallenge
  commentId: T:Microsoft.Azure.KeyVault.HttpBearerChallenge
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: HttpBearerChallenge
  nameWithType: HttpBearerChallenge
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallenge
- uid: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.RemoveChallengeForURL*
  commentId: Overload:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.RemoveChallengeForURL
  isExternal: false
  name: RemoveChallengeForURL
  nameWithType: HttpBearerChallengeCache.RemoveChallengeForURL
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.RemoveChallengeForURL
- uid: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.SetChallengeForURL*
  commentId: Overload:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.SetChallengeForURL
  isExternal: false
  name: SetChallengeForURL
  nameWithType: HttpBearerChallengeCache.SetChallengeForURL
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.SetChallengeForURL
- uid: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.Clear*
  commentId: Overload:Microsoft.Azure.KeyVault.HttpBearerChallengeCache.Clear
  isExternal: false
  name: Clear
  nameWithType: HttpBearerChallengeCache.Clear
  fullName: Microsoft.Azure.KeyVault.HttpBearerChallengeCache.Clear
