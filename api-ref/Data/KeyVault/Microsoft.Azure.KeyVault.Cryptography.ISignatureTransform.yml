### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform
  id: ISignatureTransform
  parent: Microsoft.Azure.KeyVault.Cryptography
  children:
  - Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Sign(System.Byte[])
  - Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Verify(System.Byte[],System.Byte[])
  langs:
  - csharp
  - vb
  name: ISignatureTransform
  nameWithType: ISignatureTransform
  fullName: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform
  type: Interface
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/ISignatureTransform.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ISignatureTransform
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/ISignatureTransform.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography
  summary: "\nAbstract signature transform.\n"
  example: []
  syntax:
    content: public interface ISignatureTransform
    content.vb: Public Interface ISignatureTransform
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Sign(System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Sign(System.Byte[])
  id: Sign(System.Byte[])
  parent: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform
  langs:
  - csharp
  - vb
  name: Sign(Byte[])
  nameWithType: ISignatureTransform.Sign(Byte[])
  fullName: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Sign(System.Byte[])
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/ISignatureTransform.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Sign
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/ISignatureTransform.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography
  summary: "\nSigns the supplied digest value.\n"
  example: []
  syntax:
    content: byte[] Sign(byte[] digest)
    content.vb: Function Sign(digest As Byte()) As Byte()
    parameters:
    - id: digest
      type: System.Byte[]
      description: The message digest.
    return:
      type: System.Byte[]
      description: The signature value.
  overload: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Sign*
  nameWithType.vb: ISignatureTransform.Sign(Byte())
  fullName.vb: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Sign(System.Byte())
  name.vb: Sign(Byte())
- uid: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Verify(System.Byte[],System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Verify(System.Byte[],System.Byte[])
  id: Verify(System.Byte[],System.Byte[])
  parent: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform
  langs:
  - csharp
  - vb
  name: Verify(Byte[], Byte[])
  nameWithType: ISignatureTransform.Verify(Byte[], Byte[])
  fullName: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Verify(System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/ISignatureTransform.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Verify
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/ISignatureTransform.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography
  summary: "\nVerifies that the supplied signature corresponds with\nthe supplied message digest.\n"
  example: []
  syntax:
    content: bool Verify(byte[] digest, byte[] signature)
    content.vb: Function Verify(digest As Byte(), signature As Byte()) As Boolean
    parameters:
    - id: digest
      type: System.Byte[]
      description: The message digest.
    - id: signature
      type: System.Byte[]
      description: The signature to be verified.
    return:
      type: System.Boolean
      description: true if the signature is valid.
  overload: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Verify*
  nameWithType.vb: ISignatureTransform.Verify(Byte(), Byte())
  fullName.vb: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Verify(System.Byte(), System.Byte())
  name.vb: Verify(Byte(), Byte())
references:
- uid: Microsoft.Azure.KeyVault.Cryptography
  commentId: N:Microsoft.Azure.KeyVault.Cryptography
  isExternal: false
  name: Microsoft.Azure.KeyVault.Cryptography
  nameWithType: Microsoft.Azure.KeyVault.Cryptography
  fullName: Microsoft.Azure.KeyVault.Cryptography
- uid: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Sign*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Sign
  isExternal: false
  name: Sign
  nameWithType: ISignatureTransform.Sign
  fullName: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Sign
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Verify*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Verify
  isExternal: false
  name: Verify
  nameWithType: ISignatureTransform.Verify
  fullName: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform.Verify
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
