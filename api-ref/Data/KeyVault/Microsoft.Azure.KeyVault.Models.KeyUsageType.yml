### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Models.KeyUsageType
  commentId: T:Microsoft.Azure.KeyVault.Models.KeyUsageType
  id: KeyUsageType
  parent: Microsoft.Azure.KeyVault.Models
  children:
  - Microsoft.Azure.KeyVault.Models.KeyUsageType.CRLSign
  - Microsoft.Azure.KeyVault.Models.KeyUsageType.DataEncipherment
  - Microsoft.Azure.KeyVault.Models.KeyUsageType.DecipherOnly
  - Microsoft.Azure.KeyVault.Models.KeyUsageType.DigitalSignature
  - Microsoft.Azure.KeyVault.Models.KeyUsageType.EncipherOnly
  - Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyAgreement
  - Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyCertSign
  - Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyEncipherment
  - Microsoft.Azure.KeyVault.Models.KeyUsageType.NonRepudiation
  langs:
  - csharp
  - vb
  name: KeyUsageType
  nameWithType: KeyUsageType
  fullName: Microsoft.Azure.KeyVault.Models.KeyUsageType
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyUsageType
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nDefines values for KeyUsageType.\n"
  example: []
  syntax:
    content: public static class KeyUsageType
    content.vb: Public Module KeyUsageType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.KeyVault.Models.KeyUsageType.DigitalSignature
  commentId: F:Microsoft.Azure.KeyVault.Models.KeyUsageType.DigitalSignature
  id: DigitalSignature
  parent: Microsoft.Azure.KeyVault.Models.KeyUsageType
  langs:
  - csharp
  - vb
  name: DigitalSignature
  nameWithType: KeyUsageType.DigitalSignature
  fullName: Microsoft.Azure.KeyVault.Models.KeyUsageType.DigitalSignature
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DigitalSignature
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  syntax:
    content: public const string DigitalSignature = "digitalSignature"
    content.vb: Public Const DigitalSignature As String = "digitalSignature"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.Models.KeyUsageType.NonRepudiation
  commentId: F:Microsoft.Azure.KeyVault.Models.KeyUsageType.NonRepudiation
  id: NonRepudiation
  parent: Microsoft.Azure.KeyVault.Models.KeyUsageType
  langs:
  - csharp
  - vb
  name: NonRepudiation
  nameWithType: KeyUsageType.NonRepudiation
  fullName: Microsoft.Azure.KeyVault.Models.KeyUsageType.NonRepudiation
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NonRepudiation
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  syntax:
    content: public const string NonRepudiation = "nonRepudiation"
    content.vb: Public Const NonRepudiation As String = "nonRepudiation"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyEncipherment
  commentId: F:Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyEncipherment
  id: KeyEncipherment
  parent: Microsoft.Azure.KeyVault.Models.KeyUsageType
  langs:
  - csharp
  - vb
  name: KeyEncipherment
  nameWithType: KeyUsageType.KeyEncipherment
  fullName: Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyEncipherment
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyEncipherment
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  syntax:
    content: public const string KeyEncipherment = "keyEncipherment"
    content.vb: Public Const KeyEncipherment As String = "keyEncipherment"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.Models.KeyUsageType.DataEncipherment
  commentId: F:Microsoft.Azure.KeyVault.Models.KeyUsageType.DataEncipherment
  id: DataEncipherment
  parent: Microsoft.Azure.KeyVault.Models.KeyUsageType
  langs:
  - csharp
  - vb
  name: DataEncipherment
  nameWithType: KeyUsageType.DataEncipherment
  fullName: Microsoft.Azure.KeyVault.Models.KeyUsageType.DataEncipherment
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataEncipherment
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  syntax:
    content: public const string DataEncipherment = "dataEncipherment"
    content.vb: Public Const DataEncipherment As String = "dataEncipherment"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyAgreement
  commentId: F:Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyAgreement
  id: KeyAgreement
  parent: Microsoft.Azure.KeyVault.Models.KeyUsageType
  langs:
  - csharp
  - vb
  name: KeyAgreement
  nameWithType: KeyUsageType.KeyAgreement
  fullName: Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyAgreement
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyAgreement
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  syntax:
    content: public const string KeyAgreement = "keyAgreement"
    content.vb: Public Const KeyAgreement As String = "keyAgreement"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyCertSign
  commentId: F:Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyCertSign
  id: KeyCertSign
  parent: Microsoft.Azure.KeyVault.Models.KeyUsageType
  langs:
  - csharp
  - vb
  name: KeyCertSign
  nameWithType: KeyUsageType.KeyCertSign
  fullName: Microsoft.Azure.KeyVault.Models.KeyUsageType.KeyCertSign
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyCertSign
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  syntax:
    content: public const string KeyCertSign = "keyCertSign"
    content.vb: Public Const KeyCertSign As String = "keyCertSign"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.Models.KeyUsageType.CRLSign
  commentId: F:Microsoft.Azure.KeyVault.Models.KeyUsageType.CRLSign
  id: CRLSign
  parent: Microsoft.Azure.KeyVault.Models.KeyUsageType
  langs:
  - csharp
  - vb
  name: CRLSign
  nameWithType: KeyUsageType.CRLSign
  fullName: Microsoft.Azure.KeyVault.Models.KeyUsageType.CRLSign
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CRLSign
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  syntax:
    content: public const string CRLSign = "cRLSign"
    content.vb: Public Const CRLSign As String = "cRLSign"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.Models.KeyUsageType.EncipherOnly
  commentId: F:Microsoft.Azure.KeyVault.Models.KeyUsageType.EncipherOnly
  id: EncipherOnly
  parent: Microsoft.Azure.KeyVault.Models.KeyUsageType
  langs:
  - csharp
  - vb
  name: EncipherOnly
  nameWithType: KeyUsageType.EncipherOnly
  fullName: Microsoft.Azure.KeyVault.Models.KeyUsageType.EncipherOnly
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncipherOnly
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  syntax:
    content: public const string EncipherOnly = "encipherOnly"
    content.vb: Public Const EncipherOnly As String = "encipherOnly"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.Models.KeyUsageType.DecipherOnly
  commentId: F:Microsoft.Azure.KeyVault.Models.KeyUsageType.DecipherOnly
  id: DecipherOnly
  parent: Microsoft.Azure.KeyVault.Models.KeyUsageType
  langs:
  - csharp
  - vb
  name: DecipherOnly
  nameWithType: KeyUsageType.DecipherOnly
  fullName: Microsoft.Azure.KeyVault.Models.KeyUsageType.DecipherOnly
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DecipherOnly
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyUsageType.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  syntax:
    content: public const string DecipherOnly = "decipherOnly"
    content.vb: Public Const DecipherOnly As String = "decipherOnly"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
