### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Models.OrganizationDetails
  commentId: T:Microsoft.Azure.KeyVault.Models.OrganizationDetails
  id: OrganizationDetails
  parent: Microsoft.Azure.KeyVault.Models
  children:
  - Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor
  - Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.AdministratorDetails})
  - Microsoft.Azure.KeyVault.Models.OrganizationDetails.AdminDetails
  - Microsoft.Azure.KeyVault.Models.OrganizationDetails.Id
  langs:
  - csharp
  - vb
  name: OrganizationDetails
  nameWithType: OrganizationDetails
  fullName: Microsoft.Azure.KeyVault.Models.OrganizationDetails
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/OrganizationDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OrganizationDetails
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/OrganizationDetails.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nDetails of the organization of the certificate issuer.\n"
  example: []
  syntax:
    content: public class OrganizationDetails
    content.vb: Public Class OrganizationDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor
  commentId: M:Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.Models.OrganizationDetails
  langs:
  - csharp
  - vb
  name: OrganizationDetails()
  nameWithType: OrganizationDetails.OrganizationDetails()
  fullName: Microsoft.Azure.KeyVault.Models.OrganizationDetails.OrganizationDetails()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/OrganizationDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/OrganizationDetails.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the OrganizationDetails class.\n"
  example: []
  syntax:
    content: public OrganizationDetails()
    content.vb: Public Sub New
  overload: Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.AdministratorDetails})
  commentId: M:Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.AdministratorDetails})
  id: '#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.AdministratorDetails})'
  parent: Microsoft.Azure.KeyVault.Models.OrganizationDetails
  langs:
  - csharp
  - vb
  name: OrganizationDetails(String, IList<AdministratorDetails>)
  nameWithType: OrganizationDetails.OrganizationDetails(String, IList<AdministratorDetails>)
  fullName: Microsoft.Azure.KeyVault.Models.OrganizationDetails.OrganizationDetails(System.String, System.Collections.Generic.IList<Microsoft.Azure.KeyVault.Models.AdministratorDetails>)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/OrganizationDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/OrganizationDetails.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the OrganizationDetails class.\n"
  example: []
  syntax:
    content: public OrganizationDetails(string id = null, IList<AdministratorDetails> adminDetails = null)
    content.vb: Public Sub New(id As String = Nothing, adminDetails As IList(Of AdministratorDetails) = Nothing)
    parameters:
    - id: id
      type: System.String
      description: Id of the organization.
    - id: adminDetails
      type: System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.AdministratorDetails}
      description: >-
        Details of the organization

        administrator.
  overload: Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor*
  nameWithType.vb: OrganizationDetails.OrganizationDetails(String, IList(Of AdministratorDetails))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.Models.OrganizationDetails.OrganizationDetails(System.String, System.Collections.Generic.IList(Of Microsoft.Azure.KeyVault.Models.AdministratorDetails))
  name.vb: OrganizationDetails(String, IList(Of AdministratorDetails))
- uid: Microsoft.Azure.KeyVault.Models.OrganizationDetails.Id
  commentId: P:Microsoft.Azure.KeyVault.Models.OrganizationDetails.Id
  id: Id
  parent: Microsoft.Azure.KeyVault.Models.OrganizationDetails
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: OrganizationDetails.Id
  fullName: Microsoft.Azure.KeyVault.Models.OrganizationDetails.Id
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/OrganizationDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/OrganizationDetails.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets id of the organization.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.OrganizationDetails.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.OrganizationDetails.AdminDetails
  commentId: P:Microsoft.Azure.KeyVault.Models.OrganizationDetails.AdminDetails
  id: AdminDetails
  parent: Microsoft.Azure.KeyVault.Models.OrganizationDetails
  langs:
  - csharp
  - vb
  name: AdminDetails
  nameWithType: OrganizationDetails.AdminDetails
  fullName: Microsoft.Azure.KeyVault.Models.OrganizationDetails.AdminDetails
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/OrganizationDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AdminDetails
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/OrganizationDetails.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets details of the organization administrator.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "admin_details")]

      public IList<AdministratorDetails> AdminDetails { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="admin_details")>

      Public Property AdminDetails As IList(Of AdministratorDetails)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.AdministratorDetails}
  overload: Microsoft.Azure.KeyVault.Models.OrganizationDetails.AdminDetails*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: admin_details
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.OrganizationDetails.#ctor
  isExternal: false
  name: OrganizationDetails
  nameWithType: OrganizationDetails.OrganizationDetails
  fullName: Microsoft.Azure.KeyVault.Models.OrganizationDetails.OrganizationDetails
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.AdministratorDetails}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.AdministratorDetails}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<AdministratorDetails>
  nameWithType: IList<AdministratorDetails>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.KeyVault.Models.AdministratorDetails>
  nameWithType.vb: IList(Of AdministratorDetails)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.KeyVault.Models.AdministratorDetails)
  name.vb: IList(Of AdministratorDetails)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails
    name: AdministratorDetails
    nameWithType: AdministratorDetails
    fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails
    name: AdministratorDetails
    nameWithType: AdministratorDetails
    fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.KeyVault.Models.OrganizationDetails.Id*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.OrganizationDetails.Id
  isExternal: false
  name: Id
  nameWithType: OrganizationDetails.Id
  fullName: Microsoft.Azure.KeyVault.Models.OrganizationDetails.Id
- uid: Microsoft.Azure.KeyVault.Models.OrganizationDetails.AdminDetails*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.OrganizationDetails.AdminDetails
  isExternal: false
  name: AdminDetails
  nameWithType: OrganizationDetails.AdminDetails
  fullName: Microsoft.Azure.KeyVault.Models.OrganizationDetails.AdminDetails
