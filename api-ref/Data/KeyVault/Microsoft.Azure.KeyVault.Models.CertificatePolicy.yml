### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  commentId: T:Microsoft.Azure.KeyVault.Models.CertificatePolicy
  id: CertificatePolicy
  parent: Microsoft.Azure.KeyVault.Models
  children:
  - Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor
  - Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor(System.String,Microsoft.Azure.KeyVault.Models.KeyProperties,Microsoft.Azure.KeyVault.Models.SecretProperties,Microsoft.Azure.KeyVault.Models.X509CertificateProperties,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.LifetimeAction},Microsoft.Azure.KeyVault.Models.IssuerParameters,Microsoft.Azure.KeyVault.Models.CertificateAttributes)
  - Microsoft.Azure.KeyVault.Models.CertificatePolicy.Attributes
  - Microsoft.Azure.KeyVault.Models.CertificatePolicy.Id
  - Microsoft.Azure.KeyVault.Models.CertificatePolicy.IssuerParameters
  - Microsoft.Azure.KeyVault.Models.CertificatePolicy.KeyProperties
  - Microsoft.Azure.KeyVault.Models.CertificatePolicy.LifetimeActions
  - Microsoft.Azure.KeyVault.Models.CertificatePolicy.SecretProperties
  - Microsoft.Azure.KeyVault.Models.CertificatePolicy.Validate
  - Microsoft.Azure.KeyVault.Models.CertificatePolicy.X509CertificateProperties
  langs:
  - csharp
  - vb
  name: CertificatePolicy
  nameWithType: CertificatePolicy
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificatePolicy
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nManagement policy for a certificate.\n"
  example: []
  syntax:
    content: public class CertificatePolicy
    content.vb: Public Class CertificatePolicy
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor
  commentId: M:Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  langs:
  - csharp
  - vb
  name: CertificatePolicy()
  nameWithType: CertificatePolicy.CertificatePolicy()
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.CertificatePolicy()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the CertificatePolicy class.\n"
  example: []
  syntax:
    content: public CertificatePolicy()
    content.vb: Public Sub New
  overload: Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor(System.String,Microsoft.Azure.KeyVault.Models.KeyProperties,Microsoft.Azure.KeyVault.Models.SecretProperties,Microsoft.Azure.KeyVault.Models.X509CertificateProperties,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.LifetimeAction},Microsoft.Azure.KeyVault.Models.IssuerParameters,Microsoft.Azure.KeyVault.Models.CertificateAttributes)
  commentId: M:Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor(System.String,Microsoft.Azure.KeyVault.Models.KeyProperties,Microsoft.Azure.KeyVault.Models.SecretProperties,Microsoft.Azure.KeyVault.Models.X509CertificateProperties,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.LifetimeAction},Microsoft.Azure.KeyVault.Models.IssuerParameters,Microsoft.Azure.KeyVault.Models.CertificateAttributes)
  id: '#ctor(System.String,Microsoft.Azure.KeyVault.Models.KeyProperties,Microsoft.Azure.KeyVault.Models.SecretProperties,Microsoft.Azure.KeyVault.Models.X509CertificateProperties,System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.LifetimeAction},Microsoft.Azure.KeyVault.Models.IssuerParameters,Microsoft.Azure.KeyVault.Models.CertificateAttributes)'
  parent: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  langs:
  - csharp
  - vb
  name: CertificatePolicy(String, KeyProperties, SecretProperties, X509CertificateProperties, IList<LifetimeAction>, IssuerParameters, CertificateAttributes)
  nameWithType: CertificatePolicy.CertificatePolicy(String, KeyProperties, SecretProperties, X509CertificateProperties, IList<LifetimeAction>, IssuerParameters, CertificateAttributes)
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.CertificatePolicy(System.String, Microsoft.Azure.KeyVault.Models.KeyProperties, Microsoft.Azure.KeyVault.Models.SecretProperties, Microsoft.Azure.KeyVault.Models.X509CertificateProperties, System.Collections.Generic.IList<Microsoft.Azure.KeyVault.Models.LifetimeAction>, Microsoft.Azure.KeyVault.Models.IssuerParameters, Microsoft.Azure.KeyVault.Models.CertificateAttributes)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the CertificatePolicy class.\n"
  example: []
  syntax:
    content: public CertificatePolicy(string id = null, KeyProperties keyProperties = null, SecretProperties secretProperties = null, X509CertificateProperties x509CertificateProperties = null, IList<LifetimeAction> lifetimeActions = null, IssuerParameters issuerParameters = null, CertificateAttributes attributes = null)
    content.vb: Public Sub New(id As String = Nothing, keyProperties As KeyProperties = Nothing, secretProperties As SecretProperties = Nothing, x509CertificateProperties As X509CertificateProperties = Nothing, lifetimeActions As IList(Of LifetimeAction) = Nothing, issuerParameters As IssuerParameters = Nothing, attributes As CertificateAttributes = Nothing)
    parameters:
    - id: id
      type: System.String
      description: The certificate id
    - id: keyProperties
      type: Microsoft.Azure.KeyVault.Models.KeyProperties
      description: >-
        Properties of the key backing a

        certificate.
    - id: secretProperties
      type: Microsoft.Azure.KeyVault.Models.SecretProperties
      description: >-
        Properties of the secret backing a

        certificate.
    - id: x509CertificateProperties
      type: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
      description: >-
        Properties of the X509

        component of a certificate.
    - id: lifetimeActions
      type: System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.LifetimeAction}
      description: >-
        Actions that will be performed by

        Key Vault over the lifetime of a certificate.
    - id: issuerParameters
      type: Microsoft.Azure.KeyVault.Models.IssuerParameters
      description: >-
        Parameters for the issuer of the

        X509 component of a certificate.
    - id: attributes
      type: Microsoft.Azure.KeyVault.Models.CertificateAttributes
      description: The certificate attributes.
  overload: Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor*
  nameWithType.vb: CertificatePolicy.CertificatePolicy(String, KeyProperties, SecretProperties, X509CertificateProperties, IList(Of LifetimeAction), IssuerParameters, CertificateAttributes)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.Models.CertificatePolicy.CertificatePolicy(System.String, Microsoft.Azure.KeyVault.Models.KeyProperties, Microsoft.Azure.KeyVault.Models.SecretProperties, Microsoft.Azure.KeyVault.Models.X509CertificateProperties, System.Collections.Generic.IList(Of Microsoft.Azure.KeyVault.Models.LifetimeAction), Microsoft.Azure.KeyVault.Models.IssuerParameters, Microsoft.Azure.KeyVault.Models.CertificateAttributes)
  name.vb: CertificatePolicy(String, KeyProperties, SecretProperties, X509CertificateProperties, IList(Of LifetimeAction), IssuerParameters, CertificateAttributes)
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Id
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.Id
  id: Id
  parent: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CertificatePolicy.Id
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Id
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets the certificate id\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.KeyProperties
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.KeyProperties
  id: KeyProperties
  parent: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  langs:
  - csharp
  - vb
  name: KeyProperties
  nameWithType: CertificatePolicy.KeyProperties
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.KeyProperties
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyProperties
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets properties of the key backing a certificate.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "key_props")]

      public KeyProperties KeyProperties { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="key_props")>

      Public Property KeyProperties As KeyProperties
    parameters: []
    return:
      type: Microsoft.Azure.KeyVault.Models.KeyProperties
  overload: Microsoft.Azure.KeyVault.Models.CertificatePolicy.KeyProperties*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: key_props
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.SecretProperties
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.SecretProperties
  id: SecretProperties
  parent: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  langs:
  - csharp
  - vb
  name: SecretProperties
  nameWithType: CertificatePolicy.SecretProperties
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.SecretProperties
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SecretProperties
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets properties of the secret backing a certificate.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "secret_props")]

      public SecretProperties SecretProperties { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="secret_props")>

      Public Property SecretProperties As SecretProperties
    parameters: []
    return:
      type: Microsoft.Azure.KeyVault.Models.SecretProperties
  overload: Microsoft.Azure.KeyVault.Models.CertificatePolicy.SecretProperties*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: secret_props
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.X509CertificateProperties
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.X509CertificateProperties
  id: X509CertificateProperties
  parent: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  langs:
  - csharp
  - vb
  name: X509CertificateProperties
  nameWithType: CertificatePolicy.X509CertificateProperties
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.X509CertificateProperties
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: X509CertificateProperties
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
    startLine: 75
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets properties of the X509 component of a certificate.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "x509_props")]

      public X509CertificateProperties X509CertificateProperties { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="x509_props")>

      Public Property X509CertificateProperties As X509CertificateProperties
    parameters: []
    return:
      type: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  overload: Microsoft.Azure.KeyVault.Models.CertificatePolicy.X509CertificateProperties*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: x509_props
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.LifetimeActions
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.LifetimeActions
  id: LifetimeActions
  parent: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  langs:
  - csharp
  - vb
  name: LifetimeActions
  nameWithType: CertificatePolicy.LifetimeActions
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.LifetimeActions
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LifetimeActions
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets actions that will be performed by Key Vault over the\nlifetime of a certificate.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lifetime_actions")]

      public IList<LifetimeAction> LifetimeActions { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="lifetime_actions")>

      Public Property LifetimeActions As IList(Of LifetimeAction)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.LifetimeAction}
  overload: Microsoft.Azure.KeyVault.Models.CertificatePolicy.LifetimeActions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lifetime_actions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.IssuerParameters
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.IssuerParameters
  id: IssuerParameters
  parent: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  langs:
  - csharp
  - vb
  name: IssuerParameters
  nameWithType: CertificatePolicy.IssuerParameters
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.IssuerParameters
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IssuerParameters
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets parameters for the issuer of the X509 component of a\ncertificate.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "issuer")]

      public IssuerParameters IssuerParameters { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="issuer")>

      Public Property IssuerParameters As IssuerParameters
    parameters: []
    return:
      type: Microsoft.Azure.KeyVault.Models.IssuerParameters
  overload: Microsoft.Azure.KeyVault.Models.CertificatePolicy.IssuerParameters*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: issuer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Attributes
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificatePolicy.Attributes
  id: Attributes
  parent: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: CertificatePolicy.Attributes
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Attributes
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Attributes
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the certificate attributes.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "attributes")]

      public CertificateAttributes Attributes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="attributes")>

      Public Property Attributes As CertificateAttributes
    parameters: []
    return:
      type: Microsoft.Azure.KeyVault.Models.CertificateAttributes
  overload: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Attributes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: attributes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Validate
  commentId: M:Microsoft.Azure.KeyVault.Models.CertificatePolicy.Validate
  id: Validate
  parent: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CertificatePolicy.Validate()
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Validate()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificatePolicy.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificatePolicy.#ctor
  isExternal: false
  name: CertificatePolicy
  nameWithType: CertificatePolicy.CertificatePolicy
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.CertificatePolicy
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties
  commentId: T:Microsoft.Azure.KeyVault.Models.KeyProperties
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: KeyProperties
  nameWithType: KeyProperties
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties
- uid: Microsoft.Azure.KeyVault.Models.SecretProperties
  commentId: T:Microsoft.Azure.KeyVault.Models.SecretProperties
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: SecretProperties
  nameWithType: SecretProperties
  fullName: Microsoft.Azure.KeyVault.Models.SecretProperties
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  commentId: T:Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: X509CertificateProperties
  nameWithType: X509CertificateProperties
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
- uid: System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.LifetimeAction}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.KeyVault.Models.LifetimeAction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<LifetimeAction>
  nameWithType: IList<LifetimeAction>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.KeyVault.Models.LifetimeAction>
  nameWithType.vb: IList(Of LifetimeAction)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.KeyVault.Models.LifetimeAction)
  name.vb: IList(Of LifetimeAction)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.LifetimeAction
    name: LifetimeAction
    nameWithType: LifetimeAction
    fullName: Microsoft.Azure.KeyVault.Models.LifetimeAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.LifetimeAction
    name: LifetimeAction
    nameWithType: LifetimeAction
    fullName: Microsoft.Azure.KeyVault.Models.LifetimeAction
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Models.IssuerParameters
  commentId: T:Microsoft.Azure.KeyVault.Models.IssuerParameters
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: IssuerParameters
  nameWithType: IssuerParameters
  fullName: Microsoft.Azure.KeyVault.Models.IssuerParameters
- uid: Microsoft.Azure.KeyVault.Models.CertificateAttributes
  commentId: T:Microsoft.Azure.KeyVault.Models.CertificateAttributes
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: CertificateAttributes
  nameWithType: CertificateAttributes
  fullName: Microsoft.Azure.KeyVault.Models.CertificateAttributes
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Id*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificatePolicy.Id
  isExternal: false
  name: Id
  nameWithType: CertificatePolicy.Id
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Id
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.KeyProperties*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificatePolicy.KeyProperties
  isExternal: false
  name: KeyProperties
  nameWithType: CertificatePolicy.KeyProperties
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.KeyProperties
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.SecretProperties*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificatePolicy.SecretProperties
  isExternal: false
  name: SecretProperties
  nameWithType: CertificatePolicy.SecretProperties
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.SecretProperties
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.X509CertificateProperties*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificatePolicy.X509CertificateProperties
  isExternal: false
  name: X509CertificateProperties
  nameWithType: CertificatePolicy.X509CertificateProperties
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.X509CertificateProperties
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.LifetimeActions*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificatePolicy.LifetimeActions
  isExternal: false
  name: LifetimeActions
  nameWithType: CertificatePolicy.LifetimeActions
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.LifetimeActions
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.IssuerParameters*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificatePolicy.IssuerParameters
  isExternal: false
  name: IssuerParameters
  nameWithType: CertificatePolicy.IssuerParameters
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.IssuerParameters
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Attributes*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificatePolicy.Attributes
  isExternal: false
  name: Attributes
  nameWithType: CertificatePolicy.Attributes
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Attributes
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Validate*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificatePolicy.Validate
  isExternal: false
  name: Validate
  nameWithType: CertificatePolicy.Validate
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
