### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Models.CertificateContentType
  commentId: T:Microsoft.Azure.KeyVault.Models.CertificateContentType
  id: CertificateContentType
  parent: Microsoft.Azure.KeyVault.Models
  children:
  - Microsoft.Azure.KeyVault.Models.CertificateContentType.AllTypes
  - Microsoft.Azure.KeyVault.Models.CertificateContentType.Pem
  - Microsoft.Azure.KeyVault.Models.CertificateContentType.Pfx
  langs:
  - csharp
  - vb
  name: CertificateContentType
  nameWithType: CertificateContentType
  fullName: Microsoft.Azure.KeyVault.Models.CertificateContentType
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/CertificateBundle.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateContentType
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/CertificateBundle.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nMedia types relevant to certificates.\n"
  example: []
  syntax:
    content: public static class CertificateContentType
    content.vb: Public Module CertificateContentType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.KeyVault.Models.CertificateContentType.Pfx
  commentId: F:Microsoft.Azure.KeyVault.Models.CertificateContentType.Pfx
  id: Pfx
  parent: Microsoft.Azure.KeyVault.Models.CertificateContentType
  langs:
  - csharp
  - vb
  name: Pfx
  nameWithType: CertificateContentType.Pfx
  fullName: Microsoft.Azure.KeyVault.Models.CertificateContentType.Pfx
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/CertificateBundle.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Pfx
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/CertificateBundle.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  syntax:
    content: public const string Pfx = "application/x-pkcs12"
    content.vb: Public Const Pfx As String = "application/x-pkcs12"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.Models.CertificateContentType.Pem
  commentId: F:Microsoft.Azure.KeyVault.Models.CertificateContentType.Pem
  id: Pem
  parent: Microsoft.Azure.KeyVault.Models.CertificateContentType
  langs:
  - csharp
  - vb
  name: Pem
  nameWithType: CertificateContentType.Pem
  fullName: Microsoft.Azure.KeyVault.Models.CertificateContentType.Pem
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/CertificateBundle.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Pem
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/CertificateBundle.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  syntax:
    content: public const string Pem = "application/x-pem-file"
    content.vb: Public Const Pem As String = "application/x-pem-file"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.KeyVault.Models.CertificateContentType.AllTypes
  commentId: F:Microsoft.Azure.KeyVault.Models.CertificateContentType.AllTypes
  id: AllTypes
  parent: Microsoft.Azure.KeyVault.Models.CertificateContentType
  langs:
  - csharp
  - vb
  name: AllTypes
  nameWithType: CertificateContentType.AllTypes
  fullName: Microsoft.Azure.KeyVault.Models.CertificateContentType.AllTypes
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/CertificateBundle.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllTypes
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/CertificateBundle.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  syntax:
    content: public static readonly string[] AllTypes
    content.vb: Public Shared ReadOnly AllTypes As String()
    return:
      type: System.String[]
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
