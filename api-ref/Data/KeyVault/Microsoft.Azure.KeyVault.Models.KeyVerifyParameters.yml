### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters
  commentId: T:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters
  id: KeyVerifyParameters
  parent: Microsoft.Azure.KeyVault.Models
  children:
  - Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor
  - Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor(System.String,System.Byte[],System.Byte[])
  - Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Algorithm
  - Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Digest
  - Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Signature
  - Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Validate
  langs:
  - csharp
  - vb
  name: KeyVerifyParameters
  nameWithType: KeyVerifyParameters
  fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVerifyParameters
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nThe key verify parameters\n"
  example: []
  syntax:
    content: public class KeyVerifyParameters
    content.vb: Public Class KeyVerifyParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor
  commentId: M:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters
  langs:
  - csharp
  - vb
  name: KeyVerifyParameters()
  nameWithType: KeyVerifyParameters.KeyVerifyParameters()
  fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.KeyVerifyParameters()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the KeyVerifyParameters class.\n"
  example: []
  syntax:
    content: public KeyVerifyParameters()
    content.vb: Public Sub New
  overload: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor(System.String,System.Byte[],System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor(System.String,System.Byte[],System.Byte[])
  id: '#ctor(System.String,System.Byte[],System.Byte[])'
  parent: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters
  langs:
  - csharp
  - vb
  name: KeyVerifyParameters(String, Byte[], Byte[])
  nameWithType: KeyVerifyParameters.KeyVerifyParameters(String, Byte[], Byte[])
  fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.KeyVerifyParameters(System.String, System.Byte[], System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the KeyVerifyParameters class.\n"
  example: []
  syntax:
    content: public KeyVerifyParameters(string algorithm, byte[] digest, byte[] signature)
    content.vb: Public Sub New(algorithm As String, digest As Byte(), signature As Byte())
    parameters:
    - id: algorithm
      type: System.String
      description: >-
        The signing/verification algorithm. For

        more information on possible algorithm types, see

        JsonWebKeySignatureAlgorithm. Possible values include: 'RS256',

        'RS384', 'RS512', 'RSNULL'
    - id: digest
      type: System.Byte[]
      description: The digest used for signing
    - id: signature
      type: System.Byte[]
      description: The signature to be verified
  overload: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor*
  nameWithType.vb: KeyVerifyParameters.KeyVerifyParameters(String, Byte(), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.KeyVerifyParameters(System.String, System.Byte(), System.Byte())
  name.vb: KeyVerifyParameters(String, Byte(), Byte())
- uid: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Algorithm
  commentId: P:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Algorithm
  id: Algorithm
  parent: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters
  langs:
  - csharp
  - vb
  name: Algorithm
  nameWithType: KeyVerifyParameters.Algorithm
  fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Algorithm
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Algorithm
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the signing/verification algorithm. For more\ninformation on possible algorithm types, see\nJsonWebKeySignatureAlgorithm. Possible values include: 'RS256',\n'RS384', 'RS512', 'RSNULL'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "alg")]

      public string Algorithm { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="alg")>

      Public Property Algorithm As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Algorithm*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: alg
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Digest
  commentId: P:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Digest
  id: Digest
  parent: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters
  langs:
  - csharp
  - vb
  name: Digest
  nameWithType: KeyVerifyParameters.Digest
  fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Digest
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Digest
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the digest used for signing\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof (Base64UrlJsonConverter))]

      [JsonProperty(PropertyName = "digest")]

      public byte[] Digest { get; set; }
    content.vb: >-
      <JsonConverter(GetType(Base64UrlJsonConverter))>

      <JsonProperty(PropertyName:="digest")>

      Public Property Digest As Byte()
    parameters: []
    return:
      type: System.Byte[]
  overload: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Digest*
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.Rest.Serialization.Base64UrlJsonConverter
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: digest
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Signature
  commentId: P:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Signature
  id: Signature
  parent: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters
  langs:
  - csharp
  - vb
  name: Signature
  nameWithType: KeyVerifyParameters.Signature
  fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Signature
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Signature
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the signature to be verified\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof (Base64UrlJsonConverter))]

      [JsonProperty(PropertyName = "value")]

      public byte[] Signature { get; set; }
    content.vb: >-
      <JsonConverter(GetType(Base64UrlJsonConverter))>

      <JsonProperty(PropertyName:="value")>

      Public Property Signature As Byte()
    parameters: []
    return:
      type: System.Byte[]
  overload: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Signature*
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.Rest.Serialization.Base64UrlJsonConverter
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Validate
  commentId: M:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Validate
  id: Validate
  parent: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: KeyVerifyParameters.Validate()
  fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Validate()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyVerifyParameters.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.#ctor
  isExternal: false
  name: KeyVerifyParameters
  nameWithType: KeyVerifyParameters.KeyVerifyParameters
  fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.KeyVerifyParameters
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Algorithm*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Algorithm
  isExternal: false
  name: Algorithm
  nameWithType: KeyVerifyParameters.Algorithm
  fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Algorithm
- uid: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Digest*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Digest
  isExternal: false
  name: Digest
  nameWithType: KeyVerifyParameters.Digest
  fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Digest
- uid: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Signature*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Signature
  isExternal: false
  name: Signature
  nameWithType: KeyVerifyParameters.Signature
  fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Signature
- uid: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Validate*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Validate
  isExternal: false
  name: Validate
  nameWithType: KeyVerifyParameters.Validate
  fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyParameters.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
