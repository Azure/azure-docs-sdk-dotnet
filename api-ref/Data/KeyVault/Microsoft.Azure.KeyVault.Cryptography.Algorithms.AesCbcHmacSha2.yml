### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2
  id: AesCbcHmacSha2
  parent: Microsoft.Azure.KeyVault.Cryptography.Algorithms
  children:
  - Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.#ctor(System.String)
  - Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  - Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])
  langs:
  - csharp
  - vb
  name: AesCbcHmacSha2
  nameWithType: AesCbcHmacSha2
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/Algorithms/AesCbcHmacSha2.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AesCbcHmacSha2
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/Algorithms/AesCbcHmacSha2.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography.Algorithms
  summary: "\nAbstract base class for AESCBC-HMAC algorithms.\n"
  example: []
  syntax:
    content: 'public abstract class AesCbcHmacSha2 : SymmetricEncryptionAlgorithm'
    content.vb: >-
      Public MustInherit Class AesCbcHmacSha2
          Inherits SymmetricEncryptionAlgorithm
  inheritance:
  - System.Object
  - Microsoft.Azure.KeyVault.Cryptography.Algorithm
  - Microsoft.Azure.KeyVault.Cryptography.EncryptionAlgorithm
  - Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm
  derivedClasses:
  - Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes128CbcHmacSha256
  - Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes192CbcHmacSha384
  - Microsoft.Azure.KeyVault.Cryptography.Algorithms.Aes256CbcHmacSha512
  inheritedMembers:
  - Microsoft.Azure.KeyVault.Cryptography.Algorithm.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.#ctor(System.String)
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2
  langs:
  - csharp
  - vb
  name: AesCbcHmacSha2(String)
  nameWithType: AesCbcHmacSha2.AesCbcHmacSha2(String)
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.AesCbcHmacSha2(System.String)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/Algorithms/AesCbcHmacSha2.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/Algorithms/AesCbcHmacSha2.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography.Algorithms
  syntax:
    content: protected AesCbcHmacSha2(string name)
    content.vb: Protected Sub New(name As String)
    parameters:
    - id: name
      type: System.String
  overload: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  parent: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2
  langs:
  - csharp
  - vb
  name: CreateDecryptor(Byte[], Byte[], Byte[], Byte[])
  nameWithType: AesCbcHmacSha2.CreateDecryptor(Byte[], Byte[], Byte[], Byte[])
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateDecryptor(System.Byte[], System.Byte[], System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/Algorithms/AesCbcHmacSha2.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateDecryptor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/Algorithms/AesCbcHmacSha2.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography.Algorithms
  syntax:
    content: public override ICryptoTransform CreateDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag)
    content.vb: Public Overrides Function CreateDecryptor(key As Byte(), iv As Byte(), authenticationData As Byte(), authenticationTag As Byte()) As ICryptoTransform
    parameters:
    - id: key
      type: System.Byte[]
    - id: iv
      type: System.Byte[]
    - id: authenticationData
      type: System.Byte[]
    - id: authenticationTag
      type: System.Byte[]
    return:
      type: System.Security.Cryptography.ICryptoTransform
  overridden: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  overload: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateDecryptor*
  nameWithType.vb: AesCbcHmacSha2.CreateDecryptor(Byte(), Byte(), Byte(), Byte())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateDecryptor(System.Byte(), System.Byte(), System.Byte(), System.Byte())
  name.vb: CreateDecryptor(Byte(), Byte(), Byte(), Byte())
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])
  parent: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2
  langs:
  - csharp
  - vb
  name: CreateEncryptor(Byte[], Byte[], Byte[])
  nameWithType: AesCbcHmacSha2.CreateEncryptor(Byte[], Byte[], Byte[])
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateEncryptor(System.Byte[], System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/Algorithms/AesCbcHmacSha2.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateEncryptor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/Algorithms/AesCbcHmacSha2.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography.Algorithms
  syntax:
    content: public override ICryptoTransform CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
    content.vb: Public Overrides Function CreateEncryptor(key As Byte(), iv As Byte(), authenticationData As Byte()) As ICryptoTransform
    parameters:
    - id: key
      type: System.Byte[]
    - id: iv
      type: System.Byte[]
    - id: authenticationData
      type: System.Byte[]
    return:
      type: System.Security.Cryptography.ICryptoTransform
  overridden: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])
  overload: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateEncryptor*
  nameWithType.vb: AesCbcHmacSha2.CreateEncryptor(Byte(), Byte(), Byte())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateEncryptor(System.Byte(), System.Byte(), System.Byte())
  name.vb: CreateEncryptor(Byte(), Byte(), Byte())
references:
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithms
  commentId: N:Microsoft.Azure.KeyVault.Cryptography.Algorithms
  isExternal: false
  name: Microsoft.Azure.KeyVault.Cryptography.Algorithms
  nameWithType: Microsoft.Azure.KeyVault.Cryptography.Algorithms
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithms
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithm
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.Algorithm
  parent: Microsoft.Azure.KeyVault.Cryptography
  isExternal: false
  name: Algorithm
  nameWithType: Algorithm
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithm
- uid: Microsoft.Azure.KeyVault.Cryptography.EncryptionAlgorithm
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.EncryptionAlgorithm
  parent: Microsoft.Azure.KeyVault.Cryptography
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: EncryptionAlgorithm
  fullName: Microsoft.Azure.KeyVault.Cryptography.EncryptionAlgorithm
- uid: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm
  parent: Microsoft.Azure.KeyVault.Cryptography
  isExternal: false
  name: SymmetricEncryptionAlgorithm
  nameWithType: SymmetricEncryptionAlgorithm
  fullName: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithm.Name
  commentId: P:Microsoft.Azure.KeyVault.Cryptography.Algorithm.Name
  parent: Microsoft.Azure.KeyVault.Cryptography.Algorithm
  isExternal: false
  name: Name
  nameWithType: Algorithm.Name
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithm.Name
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Cryptography
  commentId: N:Microsoft.Azure.KeyVault.Cryptography
  isExternal: false
  name: Microsoft.Azure.KeyVault.Cryptography
  nameWithType: Microsoft.Azure.KeyVault.Cryptography
  fullName: Microsoft.Azure.KeyVault.Cryptography
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.#ctor
  isExternal: false
  name: AesCbcHmacSha2
  nameWithType: AesCbcHmacSha2.AesCbcHmacSha2
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.AesCbcHmacSha2
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  parent: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm
  isExternal: true
  name: CreateDecryptor(Byte[], Byte[], Byte[], Byte[])
  nameWithType: SymmetricEncryptionAlgorithm.CreateDecryptor(Byte[], Byte[], Byte[], Byte[])
  fullName: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateDecryptor(System.Byte[], System.Byte[], System.Byte[], System.Byte[])
  nameWithType.vb: SymmetricEncryptionAlgorithm.CreateDecryptor(Byte(), Byte(), Byte(), Byte())
  fullname.vb: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateDecryptor(System.Byte(), System.Byte(), System.Byte(), System.Byte())
  name.vb: CreateDecryptor(Byte(), Byte(), Byte(), Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
    name: CreateDecryptor
    nameWithType: SymmetricEncryptionAlgorithm.CreateDecryptor
    fullName: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateDecryptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateDecryptor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
    name: CreateDecryptor
    nameWithType: SymmetricEncryptionAlgorithm.CreateDecryptor
    fullName: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateDecryptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateDecryptor*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateDecryptor
  isExternal: false
  name: CreateDecryptor
  nameWithType: AesCbcHmacSha2.CreateDecryptor
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateDecryptor
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Security.Cryptography.ICryptoTransform
  commentId: T:System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: true
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])
  parent: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm
  isExternal: true
  name: CreateEncryptor(Byte[], Byte[], Byte[])
  nameWithType: SymmetricEncryptionAlgorithm.CreateEncryptor(Byte[], Byte[], Byte[])
  fullName: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(System.Byte[], System.Byte[], System.Byte[])
  nameWithType.vb: SymmetricEncryptionAlgorithm.CreateEncryptor(Byte(), Byte(), Byte())
  fullname.vb: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(System.Byte(), System.Byte(), System.Byte())
  name.vb: CreateEncryptor(Byte(), Byte(), Byte())
  spec.csharp:
  - uid: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])
    name: CreateEncryptor
    nameWithType: SymmetricEncryptionAlgorithm.CreateEncryptor
    fullName: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor(System.Byte[],System.Byte[],System.Byte[])
    name: CreateEncryptor
    nameWithType: SymmetricEncryptionAlgorithm.CreateEncryptor
    fullName: Microsoft.Azure.KeyVault.Cryptography.SymmetricEncryptionAlgorithm.CreateEncryptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateEncryptor*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateEncryptor
  isExternal: false
  name: CreateEncryptor
  nameWithType: AesCbcHmacSha2.CreateEncryptor
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithms.AesCbcHmacSha2.CreateEncryptor
