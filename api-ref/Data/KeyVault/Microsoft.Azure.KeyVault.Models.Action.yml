### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Models.Action
  commentId: T:Microsoft.Azure.KeyVault.Models.Action
  id: Action
  parent: Microsoft.Azure.KeyVault.Models
  children:
  - Microsoft.Azure.KeyVault.Models.Action.#ctor
  - Microsoft.Azure.KeyVault.Models.Action.#ctor(System.Nullable{Microsoft.Azure.KeyVault.Models.ActionType})
  - Microsoft.Azure.KeyVault.Models.Action.ActionType
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: Action
  fullName: Microsoft.Azure.KeyVault.Models.Action
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/Action.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Action
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/Action.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nThe action that will be executed.\n"
  example: []
  syntax:
    content: public class Action
    content.vb: Public Class Action
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Models.Action.#ctor
  commentId: M:Microsoft.Azure.KeyVault.Models.Action.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.Models.Action
  langs:
  - csharp
  - vb
  name: Action()
  nameWithType: Action.Action()
  fullName: Microsoft.Azure.KeyVault.Models.Action.Action()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/Action.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/Action.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the Action class.\n"
  example: []
  syntax:
    content: public Action()
    content.vb: Public Sub New
  overload: Microsoft.Azure.KeyVault.Models.Action.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.Action.#ctor(System.Nullable{Microsoft.Azure.KeyVault.Models.ActionType})
  commentId: M:Microsoft.Azure.KeyVault.Models.Action.#ctor(System.Nullable{Microsoft.Azure.KeyVault.Models.ActionType})
  id: '#ctor(System.Nullable{Microsoft.Azure.KeyVault.Models.ActionType})'
  parent: Microsoft.Azure.KeyVault.Models.Action
  langs:
  - csharp
  - vb
  name: Action(Nullable<ActionType>)
  nameWithType: Action.Action(Nullable<ActionType>)
  fullName: Microsoft.Azure.KeyVault.Models.Action.Action(System.Nullable<Microsoft.Azure.KeyVault.Models.ActionType>)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/Action.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/Action.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the Action class.\n"
  example: []
  syntax:
    content: public Action(ActionType? actionType = null)
    content.vb: Public Sub New(actionType As ActionType? = Nothing)
    parameters:
    - id: actionType
      type: System.Nullable{Microsoft.Azure.KeyVault.Models.ActionType}
      description: >-
        The type of the action. Possible values

        include: 'EmailContacts', 'AutoRenew'
  overload: Microsoft.Azure.KeyVault.Models.Action.#ctor*
  nameWithType.vb: Action.Action(Nullable(Of ActionType))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.Models.Action.Action(System.Nullable(Of Microsoft.Azure.KeyVault.Models.ActionType))
  name.vb: Action(Nullable(Of ActionType))
- uid: Microsoft.Azure.KeyVault.Models.Action.ActionType
  commentId: P:Microsoft.Azure.KeyVault.Models.Action.ActionType
  id: ActionType
  parent: Microsoft.Azure.KeyVault.Models.Action
  langs:
  - csharp
  - vb
  name: ActionType
  nameWithType: Action.ActionType
  fullName: Microsoft.Azure.KeyVault.Models.Action.ActionType
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/Action.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ActionType
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/Action.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the type of the action. Possible values include:\n'EmailContacts', 'AutoRenew'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "action_type")]

      public ActionType? ActionType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="action_type")>

      Public Property ActionType As ActionType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.KeyVault.Models.ActionType}
  overload: Microsoft.Azure.KeyVault.Models.Action.ActionType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: action_type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Models.Action.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.Action.#ctor
  isExternal: false
  name: Action
  nameWithType: Action.Action
  fullName: Microsoft.Azure.KeyVault.Models.Action.Action
- uid: System.Nullable{Microsoft.Azure.KeyVault.Models.ActionType}
  commentId: T:System.Nullable{Microsoft.Azure.KeyVault.Models.ActionType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ActionType>
  nameWithType: Nullable<ActionType>
  fullName: System.Nullable<Microsoft.Azure.KeyVault.Models.ActionType>
  nameWithType.vb: Nullable(Of ActionType)
  fullname.vb: System.Nullable(Of Microsoft.Azure.KeyVault.Models.ActionType)
  name.vb: Nullable(Of ActionType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: Microsoft.Azure.KeyVault.Models.ActionType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: Microsoft.Azure.KeyVault.Models.ActionType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Models.Action.ActionType*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.Action.ActionType
  isExternal: false
  name: ActionType
  nameWithType: Action.ActionType
  fullName: Microsoft.Azure.KeyVault.Models.Action.ActionType
