### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails
  commentId: T:Microsoft.Azure.KeyVault.Models.AdministratorDetails
  id: AdministratorDetails
  parent: Microsoft.Azure.KeyVault.Models
  children:
  - Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor
  - Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor(System.String,System.String,System.String,System.String)
  - Microsoft.Azure.KeyVault.Models.AdministratorDetails.EmailAddress
  - Microsoft.Azure.KeyVault.Models.AdministratorDetails.FirstName
  - Microsoft.Azure.KeyVault.Models.AdministratorDetails.LastName
  - Microsoft.Azure.KeyVault.Models.AdministratorDetails.Phone
  langs:
  - csharp
  - vb
  name: AdministratorDetails
  nameWithType: AdministratorDetails
  fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AdministratorDetails
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nDetails of the organization administrator of the certificate issuer\n"
  example: []
  syntax:
    content: public class AdministratorDetails
    content.vb: Public Class AdministratorDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor
  commentId: M:Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.Models.AdministratorDetails
  langs:
  - csharp
  - vb
  name: AdministratorDetails()
  nameWithType: AdministratorDetails.AdministratorDetails()
  fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails.AdministratorDetails()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the AdministratorDetails class.\n"
  example: []
  syntax:
    content: public AdministratorDetails()
    content.vb: Public Sub New
  overload: Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.KeyVault.Models.AdministratorDetails
  langs:
  - csharp
  - vb
  name: AdministratorDetails(String, String, String, String)
  nameWithType: AdministratorDetails.AdministratorDetails(String, String, String, String)
  fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails.AdministratorDetails(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the AdministratorDetails class.\n"
  example: []
  syntax:
    content: public AdministratorDetails(string firstName = null, string lastName = null, string emailAddress = null, string phone = null)
    content.vb: Public Sub New(firstName As String = Nothing, lastName As String = Nothing, emailAddress As String = Nothing, phone As String = Nothing)
    parameters:
    - id: firstName
      type: System.String
      description: First name.
    - id: lastName
      type: System.String
      description: Last name.
    - id: emailAddress
      type: System.String
      description: Email addresss.
    - id: phone
      type: System.String
      description: Phone number.
  overload: Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails.FirstName
  commentId: P:Microsoft.Azure.KeyVault.Models.AdministratorDetails.FirstName
  id: FirstName
  parent: Microsoft.Azure.KeyVault.Models.AdministratorDetails
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: AdministratorDetails.FirstName
  fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails.FirstName
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FirstName
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets first name.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "first_name")]

      public string FirstName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="first_name")>

      Public Property FirstName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.AdministratorDetails.FirstName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: first_name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails.LastName
  commentId: P:Microsoft.Azure.KeyVault.Models.AdministratorDetails.LastName
  id: LastName
  parent: Microsoft.Azure.KeyVault.Models.AdministratorDetails
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: AdministratorDetails.LastName
  fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails.LastName
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: LastName
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets last name.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "last_name")]

      public string LastName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="last_name")>

      Public Property LastName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.AdministratorDetails.LastName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: last_name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails.EmailAddress
  commentId: P:Microsoft.Azure.KeyVault.Models.AdministratorDetails.EmailAddress
  id: EmailAddress
  parent: Microsoft.Azure.KeyVault.Models.AdministratorDetails
  langs:
  - csharp
  - vb
  name: EmailAddress
  nameWithType: AdministratorDetails.EmailAddress
  fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails.EmailAddress
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EmailAddress
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets email addresss.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "email")]

      public string EmailAddress { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="email")>

      Public Property EmailAddress As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.AdministratorDetails.EmailAddress*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: email
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails.Phone
  commentId: P:Microsoft.Azure.KeyVault.Models.AdministratorDetails.Phone
  id: Phone
  parent: Microsoft.Azure.KeyVault.Models.AdministratorDetails
  langs:
  - csharp
  - vb
  name: Phone
  nameWithType: AdministratorDetails.Phone
  fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails.Phone
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Phone
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/AdministratorDetails.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets phone number.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "phone")]

      public string Phone { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="phone")>

      Public Property Phone As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.AdministratorDetails.Phone*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: phone
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.AdministratorDetails.#ctor
  isExternal: false
  name: AdministratorDetails
  nameWithType: AdministratorDetails.AdministratorDetails
  fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails.AdministratorDetails
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails.FirstName*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.AdministratorDetails.FirstName
  isExternal: false
  name: FirstName
  nameWithType: AdministratorDetails.FirstName
  fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails.FirstName
- uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails.LastName*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.AdministratorDetails.LastName
  isExternal: false
  name: LastName
  nameWithType: AdministratorDetails.LastName
  fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails.LastName
- uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails.EmailAddress*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.AdministratorDetails.EmailAddress
  isExternal: false
  name: EmailAddress
  nameWithType: AdministratorDetails.EmailAddress
  fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails.EmailAddress
- uid: Microsoft.Azure.KeyVault.Models.AdministratorDetails.Phone*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.AdministratorDetails.Phone
  isExternal: false
  name: Phone
  nameWithType: AdministratorDetails.Phone
  fullName: Microsoft.Azure.KeyVault.Models.AdministratorDetails.Phone
