### YamlMime:ManagedReference
items:
- uid: KeyVault.TestFramework.KeyVaultTestFixture
  commentId: T:KeyVault.TestFramework.KeyVaultTestFixture
  id: KeyVaultTestFixture
  parent: KeyVault.TestFramework
  children:
  - KeyVault.TestFramework.KeyVaultTestFixture.#ctor
  - KeyVault.TestFramework.KeyVaultTestFixture.clientCredential
  - KeyVault.TestFramework.KeyVaultTestFixture.CreateKeyVaultClient
  - KeyVault.TestFramework.KeyVaultTestFixture.Dispose
  - KeyVault.TestFramework.KeyVaultTestFixture.GetAccessToken(System.String,System.String,System.String)
  - KeyVault.TestFramework.KeyVaultTestFixture.GetHandlers
  - KeyVault.TestFramework.KeyVaultTestFixture.Initialize(System.String)
  - KeyVault.TestFramework.KeyVaultTestFixture.keyIdentifier
  - KeyVault.TestFramework.KeyVaultTestFixture.keyName
  - KeyVault.TestFramework.KeyVaultTestFixture.keyVersion
  - KeyVault.TestFramework.KeyVaultTestFixture.standardVaultOnly
  - KeyVault.TestFramework.KeyVaultTestFixture.vaultAddress
  langs:
  - csharp
  - vb
  name: KeyVaultTestFixture
  nameWithType: KeyVaultTestFixture
  fullName: KeyVault.TestFramework.KeyVaultTestFixture
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVaultTestFixture
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: 'public class KeyVaultTestFixture : IDisposable'
    content.vb: >-
      Public Class KeyVaultTestFixture
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: KeyVault.TestFramework.KeyVaultTestFixture.vaultAddress
  commentId: F:KeyVault.TestFramework.KeyVaultTestFixture.vaultAddress
  id: vaultAddress
  parent: KeyVault.TestFramework.KeyVaultTestFixture
  langs:
  - csharp
  - vb
  name: vaultAddress
  nameWithType: KeyVaultTestFixture.vaultAddress
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.vaultAddress
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: vaultAddress
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: public string vaultAddress
    content.vb: Public vaultAddress As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KeyVault.TestFramework.KeyVaultTestFixture.standardVaultOnly
  commentId: F:KeyVault.TestFramework.KeyVaultTestFixture.standardVaultOnly
  id: standardVaultOnly
  parent: KeyVault.TestFramework.KeyVaultTestFixture
  langs:
  - csharp
  - vb
  name: standardVaultOnly
  nameWithType: KeyVaultTestFixture.standardVaultOnly
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.standardVaultOnly
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: standardVaultOnly
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: public bool standardVaultOnly
    content.vb: Public standardVaultOnly As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KeyVault.TestFramework.KeyVaultTestFixture.keyName
  commentId: F:KeyVault.TestFramework.KeyVaultTestFixture.keyName
  id: keyName
  parent: KeyVault.TestFramework.KeyVaultTestFixture
  langs:
  - csharp
  - vb
  name: keyName
  nameWithType: KeyVaultTestFixture.keyName
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.keyName
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: keyName
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: public string keyName
    content.vb: Public keyName As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KeyVault.TestFramework.KeyVaultTestFixture.keyVersion
  commentId: F:KeyVault.TestFramework.KeyVaultTestFixture.keyVersion
  id: keyVersion
  parent: KeyVault.TestFramework.KeyVaultTestFixture
  langs:
  - csharp
  - vb
  name: keyVersion
  nameWithType: KeyVaultTestFixture.keyVersion
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.keyVersion
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: keyVersion
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: public string keyVersion
    content.vb: Public keyVersion As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KeyVault.TestFramework.KeyVaultTestFixture.keyIdentifier
  commentId: F:KeyVault.TestFramework.KeyVaultTestFixture.keyIdentifier
  id: keyIdentifier
  parent: KeyVault.TestFramework.KeyVaultTestFixture
  langs:
  - csharp
  - vb
  name: keyIdentifier
  nameWithType: KeyVaultTestFixture.keyIdentifier
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.keyIdentifier
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: keyIdentifier
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: public KeyIdentifier keyIdentifier
    content.vb: Public keyIdentifier As KeyIdentifier
    return:
      type: Microsoft.Azure.KeyVault.KeyIdentifier
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KeyVault.TestFramework.KeyVaultTestFixture.clientCredential
  commentId: F:KeyVault.TestFramework.KeyVaultTestFixture.clientCredential
  id: clientCredential
  parent: KeyVault.TestFramework.KeyVaultTestFixture
  langs:
  - csharp
  - vb
  name: clientCredential
  nameWithType: KeyVaultTestFixture.clientCredential
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.clientCredential
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: clientCredential
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: public ClientCredential clientCredential
    content.vb: Public clientCredential As ClientCredential
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KeyVault.TestFramework.KeyVaultTestFixture.#ctor
  commentId: M:KeyVault.TestFramework.KeyVaultTestFixture.#ctor
  id: '#ctor'
  parent: KeyVault.TestFramework.KeyVaultTestFixture
  langs:
  - csharp
  - vb
  name: KeyVaultTestFixture()
  nameWithType: KeyVaultTestFixture.KeyVaultTestFixture()
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.KeyVaultTestFixture()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: public KeyVaultTestFixture()
    content.vb: Public Sub New
  overload: KeyVault.TestFramework.KeyVaultTestFixture.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KeyVault.TestFramework.KeyVaultTestFixture.Initialize(System.String)
  commentId: M:KeyVault.TestFramework.KeyVaultTestFixture.Initialize(System.String)
  id: Initialize(System.String)
  parent: KeyVault.TestFramework.KeyVaultTestFixture
  langs:
  - csharp
  - vb
  name: Initialize(String)
  nameWithType: KeyVaultTestFixture.Initialize(String)
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.Initialize(System.String)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Initialize
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: public void Initialize(string className)
    content.vb: Public Sub Initialize(className As String)
    parameters:
    - id: className
      type: System.String
  overload: KeyVault.TestFramework.KeyVaultTestFixture.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KeyVault.TestFramework.KeyVaultTestFixture.GetAccessToken(System.String,System.String,System.String)
  commentId: M:KeyVault.TestFramework.KeyVaultTestFixture.GetAccessToken(System.String,System.String,System.String)
  id: GetAccessToken(System.String,System.String,System.String)
  parent: KeyVault.TestFramework.KeyVaultTestFixture
  langs:
  - csharp
  - vb
  name: GetAccessToken(String, String, String)
  nameWithType: KeyVaultTestFixture.GetAccessToken(String, String, String)
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.GetAccessToken(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAccessToken
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 151
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: public Task<string> GetAccessToken(string authority, string resource, string scope)
    content.vb: Public Function GetAccessToken(authority As String, resource As String, scope As String) As Task(Of String)
    parameters:
    - id: authority
      type: System.String
    - id: resource
      type: System.String
    - id: scope
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.String}
  overload: KeyVault.TestFramework.KeyVaultTestFixture.GetAccessToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KeyVault.TestFramework.KeyVaultTestFixture.CreateKeyVaultClient
  commentId: M:KeyVault.TestFramework.KeyVaultTestFixture.CreateKeyVaultClient
  id: CreateKeyVaultClient
  parent: KeyVault.TestFramework.KeyVaultTestFixture
  langs:
  - csharp
  - vb
  name: CreateKeyVaultClient()
  nameWithType: KeyVaultTestFixture.CreateKeyVaultClient()
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.CreateKeyVaultClient()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateKeyVaultClient
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 159
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: public KeyVaultClient CreateKeyVaultClient()
    content.vb: Public Function CreateKeyVaultClient As KeyVaultClient
    return:
      type: Microsoft.Azure.KeyVault.KeyVaultClient
  overload: KeyVault.TestFramework.KeyVaultTestFixture.CreateKeyVaultClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KeyVault.TestFramework.KeyVaultTestFixture.GetHandlers
  commentId: M:KeyVault.TestFramework.KeyVaultTestFixture.GetHandlers
  id: GetHandlers
  parent: KeyVault.TestFramework.KeyVaultTestFixture
  langs:
  - csharp
  - vb
  name: GetHandlers()
  nameWithType: KeyVaultTestFixture.GetHandlers()
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.GetHandlers()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetHandlers
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 165
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: public DelegatingHandler[] GetHandlers()
    content.vb: Public Function GetHandlers As DelegatingHandler()
    return:
      type: System.Net.Http.DelegatingHandler[]
  overload: KeyVault.TestFramework.KeyVaultTestFixture.GetHandlers*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KeyVault.TestFramework.KeyVaultTestFixture.Dispose
  commentId: M:KeyVault.TestFramework.KeyVaultTestFixture.Dispose
  id: Dispose
  parent: KeyVault.TestFramework.KeyVaultTestFixture
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: KeyVaultTestFixture.Dispose()
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.Dispose()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Dispose
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.TestFramework/KeyVaultTestFixture.cs
    startLine: 171
  assemblies:
  - Microsoft.Azure.KeyVault.TestFramework
  namespace: KeyVault.TestFramework
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: KeyVault.TestFramework.KeyVaultTestFixture.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: KeyVault.TestFramework
  commentId: N:KeyVault.TestFramework
  isExternal: false
  name: KeyVault.TestFramework
  nameWithType: KeyVault.TestFramework
  fullName: KeyVault.TestFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.KeyVault.KeyIdentifier
  commentId: T:Microsoft.Azure.KeyVault.KeyIdentifier
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: KeyIdentifier
  nameWithType: KeyIdentifier
  fullName: Microsoft.Azure.KeyVault.KeyIdentifier
- uid: Microsoft.Azure.KeyVault
  commentId: N:Microsoft.Azure.KeyVault
  isExternal: false
  name: Microsoft.Azure.KeyVault
  nameWithType: Microsoft.Azure.KeyVault
  fullName: Microsoft.Azure.KeyVault
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
  commentId: T:Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: true
  name: ClientCredential
  nameWithType: ClientCredential
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory
  commentId: N:Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: Microsoft.IdentityModel.Clients.ActiveDirectory
  nameWithType: Microsoft.IdentityModel.Clients.ActiveDirectory
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory
- uid: KeyVault.TestFramework.KeyVaultTestFixture.#ctor*
  commentId: Overload:KeyVault.TestFramework.KeyVaultTestFixture.#ctor
  isExternal: false
  name: KeyVaultTestFixture
  nameWithType: KeyVaultTestFixture.KeyVaultTestFixture
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.KeyVaultTestFixture
- uid: KeyVault.TestFramework.KeyVaultTestFixture.Initialize*
  commentId: Overload:KeyVault.TestFramework.KeyVaultTestFixture.Initialize
  isExternal: false
  name: Initialize
  nameWithType: KeyVaultTestFixture.Initialize
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.Initialize
- uid: KeyVault.TestFramework.KeyVaultTestFixture.GetAccessToken*
  commentId: Overload:KeyVault.TestFramework.KeyVaultTestFixture.GetAccessToken
  isExternal: false
  name: GetAccessToken
  nameWithType: KeyVaultTestFixture.GetAccessToken
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.GetAccessToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: KeyVault.TestFramework.KeyVaultTestFixture.CreateKeyVaultClient*
  commentId: Overload:KeyVault.TestFramework.KeyVaultTestFixture.CreateKeyVaultClient
  isExternal: false
  name: CreateKeyVaultClient
  nameWithType: KeyVaultTestFixture.CreateKeyVaultClient
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.CreateKeyVaultClient
- uid: Microsoft.Azure.KeyVault.KeyVaultClient
  commentId: T:Microsoft.Azure.KeyVault.KeyVaultClient
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: KeyVaultClient
  nameWithType: KeyVaultClient
  fullName: Microsoft.Azure.KeyVault.KeyVaultClient
- uid: KeyVault.TestFramework.KeyVaultTestFixture.GetHandlers*
  commentId: Overload:KeyVault.TestFramework.KeyVaultTestFixture.GetHandlers
  isExternal: false
  name: GetHandlers
  nameWithType: KeyVaultTestFixture.GetHandlers
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.GetHandlers
- uid: System.Net.Http.DelegatingHandler[]
  name: DelegatingHandler[]
  nameWithType: DelegatingHandler[]
  fullName: System.Net.Http.DelegatingHandler[]
  nameWithType.vb: DelegatingHandler()
  fullname.vb: System.Net.Http.DelegatingHandler()
  name.vb: DelegatingHandler()
  spec.csharp:
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: KeyVault.TestFramework.KeyVaultTestFixture.Dispose*
  commentId: Overload:KeyVault.TestFramework.KeyVaultTestFixture.Dispose
  isExternal: false
  name: Dispose
  nameWithType: KeyVaultTestFixture.Dispose
  fullName: KeyVault.TestFramework.KeyVaultTestFixture.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
