### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters
  commentId: T:Microsoft.Azure.KeyVault.Models.KeyCreateParameters
  id: KeyCreateParameters
  parent: Microsoft.Azure.KeyVault.Models
  children:
  - Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor
  - Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor(System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyAttributes
  - Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyOps
  - Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeySize
  - Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Kty
  - Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Tags
  - Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Validate
  langs:
  - csharp
  - vb
  name: KeyCreateParameters
  nameWithType: KeyCreateParameters
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyCreateParameters
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nThe key create parameters\n"
  example: []
  syntax:
    content: public class KeyCreateParameters
    content.vb: Public Class KeyCreateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor
  commentId: M:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.Models.KeyCreateParameters
  langs:
  - csharp
  - vb
  name: KeyCreateParameters()
  nameWithType: KeyCreateParameters.KeyCreateParameters()
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyCreateParameters()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the KeyCreateParameters class.\n"
  example: []
  syntax:
    content: public KeyCreateParameters()
    content.vb: Public Sub New
  overload: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor(System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor(System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Microsoft.Azure.KeyVault.Models.KeyCreateParameters
  langs:
  - csharp
  - vb
  name: KeyCreateParameters(String, Nullable<Int32>, IList<String>, KeyAttributes, IDictionary<String, String>)
  nameWithType: KeyCreateParameters.KeyCreateParameters(String, Nullable<Int32>, IList<String>, KeyAttributes, IDictionary<String, String>)
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyCreateParameters(System.String, System.Nullable<System.Int32>, System.Collections.Generic.IList<System.String>, Microsoft.Azure.KeyVault.Models.KeyAttributes, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the KeyCreateParameters class.\n"
  example: []
  syntax:
    content: public KeyCreateParameters(string kty, int ? keySize = null, IList<string> keyOps = null, KeyAttributes keyAttributes = null, IDictionary<string, string> tags = null)
    content.vb: Public Sub New(kty As String, keySize As Integer? = Nothing, keyOps As IList(Of String) = Nothing, keyAttributes As KeyAttributes = Nothing, tags As IDictionary(Of String, String) = Nothing)
    parameters:
    - id: kty
      type: System.String
      description: >-
        The type of key to create. Valid key types, see

        JsonWebKeyType. Supported JsonWebKey key types (kty) for Elliptic

        Curve, RSA, HSM, Octet. Possible values include: 'EC', 'RSA',

        'RSA-HSM', 'oct'
    - id: keySize
      type: System.Nullable{System.Int32}
      description: >-
        The key size in bytes. e.g. 1024 or

        2048.
    - id: keyOps
      type: System.Collections.Generic.IList{System.String}
    - id: keyAttributes
      type: Microsoft.Azure.KeyVault.Models.KeyAttributes
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: >-
        Application-specific metadata in the form of

        key-value pairs
  overload: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor*
  nameWithType.vb: KeyCreateParameters.KeyCreateParameters(String, Nullable(Of Int32), IList(Of String), KeyAttributes, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyCreateParameters(System.String, System.Nullable(Of System.Int32), System.Collections.Generic.IList(Of System.String), Microsoft.Azure.KeyVault.Models.KeyAttributes, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: KeyCreateParameters(String, Nullable(Of Int32), IList(Of String), KeyAttributes, IDictionary(Of String, String))
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Kty
  commentId: P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Kty
  id: Kty
  parent: Microsoft.Azure.KeyVault.Models.KeyCreateParameters
  langs:
  - csharp
  - vb
  name: Kty
  nameWithType: KeyCreateParameters.Kty
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Kty
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Kty
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the type of key to create. Valid key types, see\nJsonWebKeyType. Supported JsonWebKey key types (kty) for Elliptic\nCurve, RSA, HSM, Octet. Possible values include: 'EC', 'RSA',\n'RSA-HSM', 'oct'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "kty")]

      public string Kty { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="kty")>

      Public Property Kty As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Kty*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: kty
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeySize
  commentId: P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeySize
  id: KeySize
  parent: Microsoft.Azure.KeyVault.Models.KeyCreateParameters
  langs:
  - csharp
  - vb
  name: KeySize
  nameWithType: KeyCreateParameters.KeySize
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeySize
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeySize
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the key size in bytes. e.g. 1024 or 2048.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "key_size")]

      public int ? KeySize { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="key_size")>

      Public Property KeySize As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeySize*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: key_size
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyOps
  commentId: P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyOps
  id: KeyOps
  parent: Microsoft.Azure.KeyVault.Models.KeyCreateParameters
  langs:
  - csharp
  - vb
  name: KeyOps
  nameWithType: KeyCreateParameters.KeyOps
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyOps
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyOps
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "key_ops")]

      public IList<string> KeyOps { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="key_ops")>

      Public Property KeyOps As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyOps*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: key_ops
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyAttributes
  commentId: P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyAttributes
  id: KeyAttributes
  parent: Microsoft.Azure.KeyVault.Models.KeyCreateParameters
  langs:
  - csharp
  - vb
  name: KeyAttributes
  nameWithType: KeyCreateParameters.KeyAttributes
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyAttributes
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyAttributes
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "attributes")]

      public KeyAttributes KeyAttributes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="attributes")>

      Public Property KeyAttributes As KeyAttributes
    parameters: []
    return:
      type: Microsoft.Azure.KeyVault.Models.KeyAttributes
  overload: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyAttributes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: attributes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Tags
  commentId: P:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Tags
  id: Tags
  parent: Microsoft.Azure.KeyVault.Models.KeyCreateParameters
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: KeyCreateParameters.Tags
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Tags
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Tags
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets application-specific metadata in the form of\nkey-value pairs\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tags")]

      public IDictionary<string, string> Tags { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tags")>

      Public Property Tags As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Tags*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tags
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Validate
  commentId: M:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Validate
  id: Validate
  parent: Microsoft.Azure.KeyVault.Models.KeyCreateParameters
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: KeyCreateParameters.Validate()
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Validate()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyCreateParameters.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.#ctor
  isExternal: false
  name: KeyCreateParameters
  nameWithType: KeyCreateParameters.KeyCreateParameters
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyCreateParameters
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Models.KeyAttributes
  commentId: T:Microsoft.Azure.KeyVault.Models.KeyAttributes
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: KeyAttributes
  nameWithType: KeyAttributes
  fullName: Microsoft.Azure.KeyVault.Models.KeyAttributes
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Kty*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Kty
  isExternal: false
  name: Kty
  nameWithType: KeyCreateParameters.Kty
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Kty
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeySize*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeySize
  isExternal: false
  name: KeySize
  nameWithType: KeyCreateParameters.KeySize
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeySize
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyOps*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyOps
  isExternal: false
  name: KeyOps
  nameWithType: KeyCreateParameters.KeyOps
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyOps
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyAttributes*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyAttributes
  isExternal: false
  name: KeyAttributes
  nameWithType: KeyCreateParameters.KeyAttributes
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.KeyAttributes
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Tags*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Tags
  isExternal: false
  name: Tags
  nameWithType: KeyCreateParameters.Tags
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Tags
- uid: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Validate*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Validate
  isExternal: false
  name: Validate
  nameWithType: KeyCreateParameters.Validate
  fullName: Microsoft.Azure.KeyVault.Models.KeyCreateParameters.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
