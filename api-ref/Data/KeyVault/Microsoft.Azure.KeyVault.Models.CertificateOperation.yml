### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation
  commentId: T:Microsoft.Azure.KeyVault.Models.CertificateOperation
  id: CertificateOperation
  parent: Microsoft.Azure.KeyVault.Models
  children:
  - Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor
  - Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor(System.String,Microsoft.Azure.KeyVault.Models.IssuerParameters,System.Byte[],System.Nullable{System.Boolean},System.String,System.String,Microsoft.Azure.KeyVault.Models.Error,System.String,System.String)
  - Microsoft.Azure.KeyVault.Models.CertificateOperation.CancellationRequested
  - Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperationIdentifier
  - Microsoft.Azure.KeyVault.Models.CertificateOperation.Csr
  - Microsoft.Azure.KeyVault.Models.CertificateOperation.Error
  - Microsoft.Azure.KeyVault.Models.CertificateOperation.Id
  - Microsoft.Azure.KeyVault.Models.CertificateOperation.IssuerParameters
  - Microsoft.Azure.KeyVault.Models.CertificateOperation.RequestId
  - Microsoft.Azure.KeyVault.Models.CertificateOperation.Status
  - Microsoft.Azure.KeyVault.Models.CertificateOperation.StatusDetails
  - Microsoft.Azure.KeyVault.Models.CertificateOperation.Target
  langs:
  - csharp
  - vb
  name: CertificateOperation
  nameWithType: CertificateOperation
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateOperation
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nA certificate operation is returned in case of async requests.\n"
  example: []
  syntax:
    content: public class CertificateOperation
    content.vb: Public Class CertificateOperation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperationIdentifier
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperationIdentifier
  id: CertificateOperationIdentifier
  parent: Microsoft.Azure.KeyVault.Models.CertificateOperation
  langs:
  - csharp
  - vb
  name: CertificateOperationIdentifier
  nameWithType: CertificateOperation.CertificateOperationIdentifier
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperationIdentifier
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateOperationIdentifier
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/CertificateOperation.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nThe certificate operation identifier\n"
  example: []
  syntax:
    content: public CertificateOperationIdentifier CertificateOperationIdentifier { get; }
    content.vb: Public ReadOnly Property CertificateOperationIdentifier As CertificateOperationIdentifier
    parameters: []
    return:
      type: Microsoft.Azure.KeyVault.CertificateOperationIdentifier
  overload: Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperationIdentifier*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor
  commentId: M:Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.Models.CertificateOperation
  langs:
  - csharp
  - vb
  name: CertificateOperation()
  nameWithType: CertificateOperation.CertificateOperation()
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperation()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the CertificateOperation class.\n"
  example: []
  syntax:
    content: public CertificateOperation()
    content.vb: Public Sub New
  overload: Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor(System.String,Microsoft.Azure.KeyVault.Models.IssuerParameters,System.Byte[],System.Nullable{System.Boolean},System.String,System.String,Microsoft.Azure.KeyVault.Models.Error,System.String,System.String)
  commentId: M:Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor(System.String,Microsoft.Azure.KeyVault.Models.IssuerParameters,System.Byte[],System.Nullable{System.Boolean},System.String,System.String,Microsoft.Azure.KeyVault.Models.Error,System.String,System.String)
  id: '#ctor(System.String,Microsoft.Azure.KeyVault.Models.IssuerParameters,System.Byte[],System.Nullable{System.Boolean},System.String,System.String,Microsoft.Azure.KeyVault.Models.Error,System.String,System.String)'
  parent: Microsoft.Azure.KeyVault.Models.CertificateOperation
  langs:
  - csharp
  - vb
  name: CertificateOperation(String, IssuerParameters, Byte[], Nullable<Boolean>, String, String, Error, String, String)
  nameWithType: CertificateOperation.CertificateOperation(String, IssuerParameters, Byte[], Nullable<Boolean>, String, String, Error, String, String)
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperation(System.String, Microsoft.Azure.KeyVault.Models.IssuerParameters, System.Byte[], System.Nullable<System.Boolean>, System.String, System.String, Microsoft.Azure.KeyVault.Models.Error, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the CertificateOperation class.\n"
  example: []
  syntax:
    content: public CertificateOperation(string id = null, IssuerParameters issuerParameters = null, byte[] csr = null, bool ? cancellationRequested = null, string status = null, string statusDetails = null, Error error = null, string target = null, string requestId = null)
    content.vb: Public Sub New(id As String = Nothing, issuerParameters As IssuerParameters = Nothing, csr As Byte() = Nothing, cancellationRequested As Boolean? = Nothing, status As String = Nothing, statusDetails As String = Nothing, error As  Error  = Nothing, target As String = Nothing, requestId As String = Nothing)
    parameters:
    - id: id
      type: System.String
      description: The certificate id
    - id: issuerParameters
      type: Microsoft.Azure.KeyVault.Models.IssuerParameters
      description: >-
        Parameters for the issuer of the

        X509 component of a certificate.
    - id: csr
      type: System.Byte[]
      description: >-
        The Certificate Signing Request (CSR) that is

        being used in the certificate operation.
    - id: cancellationRequested
      type: System.Nullable{System.Boolean}
      description: >-
        Indicates if cancellation was

        requested on the certificate operation.
    - id: status
      type: System.String
      description: Status of the certificate operation.
    - id: statusDetails
      type: System.String
      description: >-
        The status details of the certificate

        operation.
    - id: error
      type: Microsoft.Azure.KeyVault.Models.Error
      description: >-
        Error encountered, if any, during the

        certificate operation.
    - id: target
      type: System.String
      description: >-
        Location which contains the result of the

        certificate operation.
    - id: requestId
      type: System.String
      description: >-
        Identifier for the certificate

        operation.
  overload: Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor*
  nameWithType.vb: CertificateOperation.CertificateOperation(String, IssuerParameters, Byte(), Nullable(Of Boolean), String, String, Error, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperation(System.String, Microsoft.Azure.KeyVault.Models.IssuerParameters, System.Byte(), System.Nullable(Of System.Boolean), System.String, System.String, Microsoft.Azure.KeyVault.Models.Error, System.String, System.String)
  name.vb: CertificateOperation(String, IssuerParameters, Byte(), Nullable(Of Boolean), String, String, Error, String, String)
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.Id
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Id
  id: Id
  parent: Microsoft.Azure.KeyVault.Models.CertificateOperation
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CertificateOperation.Id
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.Id
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets the certificate id\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.CertificateOperation.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.IssuerParameters
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificateOperation.IssuerParameters
  id: IssuerParameters
  parent: Microsoft.Azure.KeyVault.Models.CertificateOperation
  langs:
  - csharp
  - vb
  name: IssuerParameters
  nameWithType: CertificateOperation.IssuerParameters
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.IssuerParameters
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IssuerParameters
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets parameters for the issuer of the X509 component of a\ncertificate.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "issuer")]

      public IssuerParameters IssuerParameters { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="issuer")>

      Public Property IssuerParameters As IssuerParameters
    parameters: []
    return:
      type: Microsoft.Azure.KeyVault.Models.IssuerParameters
  overload: Microsoft.Azure.KeyVault.Models.CertificateOperation.IssuerParameters*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: issuer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.Csr
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Csr
  id: Csr
  parent: Microsoft.Azure.KeyVault.Models.CertificateOperation
  langs:
  - csharp
  - vb
  name: Csr
  nameWithType: CertificateOperation.Csr
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.Csr
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Csr
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the Certificate Signing Request (CSR) that is being\nused in the certificate operation.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "csr")]

      public byte[] Csr { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="csr")>

      Public Property Csr As Byte()
    parameters: []
    return:
      type: System.Byte[]
  overload: Microsoft.Azure.KeyVault.Models.CertificateOperation.Csr*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: csr
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.CancellationRequested
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificateOperation.CancellationRequested
  id: CancellationRequested
  parent: Microsoft.Azure.KeyVault.Models.CertificateOperation
  langs:
  - csharp
  - vb
  name: CancellationRequested
  nameWithType: CertificateOperation.CancellationRequested
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.CancellationRequested
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CancellationRequested
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets indicates if cancellation was requested on the\ncertificate operation.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "cancellation_requested")]

      public bool ? CancellationRequested { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="cancellation_requested")>

      Public Property CancellationRequested As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.KeyVault.Models.CertificateOperation.CancellationRequested*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: cancellation_requested
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.Status
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Status
  id: Status
  parent: Microsoft.Azure.KeyVault.Models.CertificateOperation
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: CertificateOperation.Status
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.Status
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets status of the certificate operation.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "status")]

      public string Status { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="status")>

      Public Property Status As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.CertificateOperation.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.StatusDetails
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificateOperation.StatusDetails
  id: StatusDetails
  parent: Microsoft.Azure.KeyVault.Models.CertificateOperation
  langs:
  - csharp
  - vb
  name: StatusDetails
  nameWithType: CertificateOperation.StatusDetails
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.StatusDetails
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StatusDetails
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the status details of the certificate operation.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "status_details")]

      public string StatusDetails { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="status_details")>

      Public Property StatusDetails As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.CertificateOperation.StatusDetails*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: status_details
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.Error
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Error
  id: Error
  parent: Microsoft.Azure.KeyVault.Models.CertificateOperation
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: CertificateOperation.Error
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.Error
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Error
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
    startLine: 103
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets error encountered, if any, during the certificate\noperation.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "error")]

      public Error Error { get; set; }
    content.vb: "<JsonProperty(PropertyName:=\"error\")>\nPublic Property Error As "
    parameters: []
    return:
      type: Microsoft.Azure.KeyVault.Models.Error
  overload: Microsoft.Azure.KeyVault.Models.CertificateOperation.Error*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: error
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.Target
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificateOperation.Target
  id: Target
  parent: Microsoft.Azure.KeyVault.Models.CertificateOperation
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: CertificateOperation.Target
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.Target
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Target
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
    startLine: 110
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets location which contains the result of the certificate\noperation.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "target")]

      public string Target { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="target")>

      Public Property Target As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.CertificateOperation.Target*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: target
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.RequestId
  commentId: P:Microsoft.Azure.KeyVault.Models.CertificateOperation.RequestId
  id: RequestId
  parent: Microsoft.Azure.KeyVault.Models.CertificateOperation
  langs:
  - csharp
  - vb
  name: RequestId
  nameWithType: CertificateOperation.RequestId
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.RequestId
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RequestId
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/CertificateOperation.cs
    startLine: 116
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets identifier for the certificate operation.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "request_id")]

      public string RequestId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="request_id")>

      Public Property RequestId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.CertificateOperation.RequestId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: request_id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperationIdentifier*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperationIdentifier
  isExternal: false
  name: CertificateOperationIdentifier
  nameWithType: CertificateOperation.CertificateOperationIdentifier
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperationIdentifier
- uid: Microsoft.Azure.KeyVault.CertificateOperationIdentifier
  commentId: T:Microsoft.Azure.KeyVault.CertificateOperationIdentifier
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: CertificateOperationIdentifier
  nameWithType: CertificateOperationIdentifier
  fullName: Microsoft.Azure.KeyVault.CertificateOperationIdentifier
- uid: Microsoft.Azure.KeyVault
  commentId: N:Microsoft.Azure.KeyVault
  isExternal: false
  name: Microsoft.Azure.KeyVault
  nameWithType: Microsoft.Azure.KeyVault
  fullName: Microsoft.Azure.KeyVault
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificateOperation.#ctor
  isExternal: false
  name: CertificateOperation
  nameWithType: CertificateOperation.CertificateOperation
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.CertificateOperation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.KeyVault.Models.IssuerParameters
  commentId: T:Microsoft.Azure.KeyVault.Models.IssuerParameters
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: IssuerParameters
  nameWithType: IssuerParameters
  fullName: Microsoft.Azure.KeyVault.Models.IssuerParameters
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Models.Error
  commentId: T:Microsoft.Azure.KeyVault.Models.Error
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Error
  nameWithType: Error
  fullName: Microsoft.Azure.KeyVault.Models.Error
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.Id*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificateOperation.Id
  isExternal: false
  name: Id
  nameWithType: CertificateOperation.Id
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.Id
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.IssuerParameters*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificateOperation.IssuerParameters
  isExternal: false
  name: IssuerParameters
  nameWithType: CertificateOperation.IssuerParameters
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.IssuerParameters
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.Csr*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificateOperation.Csr
  isExternal: false
  name: Csr
  nameWithType: CertificateOperation.Csr
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.Csr
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.CancellationRequested*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificateOperation.CancellationRequested
  isExternal: false
  name: CancellationRequested
  nameWithType: CertificateOperation.CancellationRequested
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.CancellationRequested
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.Status*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificateOperation.Status
  isExternal: false
  name: Status
  nameWithType: CertificateOperation.Status
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.Status
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.StatusDetails*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificateOperation.StatusDetails
  isExternal: false
  name: StatusDetails
  nameWithType: CertificateOperation.StatusDetails
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.StatusDetails
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.Error*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificateOperation.Error
  isExternal: false
  name: Error
  nameWithType: CertificateOperation.Error
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.Error
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.Target*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificateOperation.Target
  isExternal: false
  name: Target
  nameWithType: CertificateOperation.Target
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.Target
- uid: Microsoft.Azure.KeyVault.Models.CertificateOperation.RequestId*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.CertificateOperation.RequestId
  isExternal: false
  name: RequestId
  nameWithType: CertificateOperation.RequestId
  fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation.RequestId
