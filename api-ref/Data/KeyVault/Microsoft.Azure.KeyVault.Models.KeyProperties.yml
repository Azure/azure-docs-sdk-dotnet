### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties
  commentId: T:Microsoft.Azure.KeyVault.Models.KeyProperties
  id: KeyProperties
  parent: Microsoft.Azure.KeyVault.Models
  children:
  - Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor
  - Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})
  - Microsoft.Azure.KeyVault.Models.KeyProperties.Exportable
  - Microsoft.Azure.KeyVault.Models.KeyProperties.KeySize
  - Microsoft.Azure.KeyVault.Models.KeyProperties.KeyType
  - Microsoft.Azure.KeyVault.Models.KeyProperties.ReuseKey
  langs:
  - csharp
  - vb
  name: KeyProperties
  nameWithType: KeyProperties
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyProperties
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nProperties of the key pair backing a certificate.\n"
  example: []
  syntax:
    content: public class KeyProperties
    content.vb: Public Class KeyProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor
  commentId: M:Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.Models.KeyProperties
  langs:
  - csharp
  - vb
  name: KeyProperties()
  nameWithType: KeyProperties.KeyProperties()
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties.KeyProperties()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the KeyProperties class.\n"
  example: []
  syntax:
    content: public KeyProperties()
    content.vb: Public Sub New
  overload: Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})
  id: '#ctor(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})'
  parent: Microsoft.Azure.KeyVault.Models.KeyProperties
  langs:
  - csharp
  - vb
  name: KeyProperties(Nullable<Boolean>, String, Nullable<Int32>, Nullable<Boolean>)
  nameWithType: KeyProperties.KeyProperties(Nullable<Boolean>, String, Nullable<Int32>, Nullable<Boolean>)
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties.KeyProperties(System.Nullable<System.Boolean>, System.String, System.Nullable<System.Int32>, System.Nullable<System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the KeyProperties class.\n"
  example: []
  syntax:
    content: public KeyProperties(bool ? exportable = null, string keyType = null, int ? keySize = null, bool ? reuseKey = null)
    content.vb: Public Sub New(exportable As Boolean? = Nothing, keyType As String = Nothing, keySize As Integer? = Nothing, reuseKey As Boolean? = Nothing)
    parameters:
    - id: exportable
      type: System.Nullable{System.Boolean}
      description: >-
        Indicates if the private key can be

        exported.
    - id: keyType
      type: System.String
      description: The key type.
    - id: keySize
      type: System.Nullable{System.Int32}
      description: The key size in bytes. e.g. 2048.
    - id: reuseKey
      type: System.Nullable{System.Boolean}
      description: >-
        Indicates if the same key pair will be used

        on certificate renewal.
  overload: Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor*
  nameWithType.vb: KeyProperties.KeyProperties(Nullable(Of Boolean), String, Nullable(Of Int32), Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.Models.KeyProperties.KeyProperties(System.Nullable(Of System.Boolean), System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Boolean))
  name.vb: KeyProperties(Nullable(Of Boolean), String, Nullable(Of Int32), Nullable(Of Boolean))
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties.Exportable
  commentId: P:Microsoft.Azure.KeyVault.Models.KeyProperties.Exportable
  id: Exportable
  parent: Microsoft.Azure.KeyVault.Models.KeyProperties
  langs:
  - csharp
  - vb
  name: Exportable
  nameWithType: KeyProperties.Exportable
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties.Exportable
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Exportable
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets indicates if the private key can be exported.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "exportable")]

      public bool ? Exportable { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="exportable")>

      Public Property Exportable As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.KeyVault.Models.KeyProperties.Exportable*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: exportable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties.KeyType
  commentId: P:Microsoft.Azure.KeyVault.Models.KeyProperties.KeyType
  id: KeyType
  parent: Microsoft.Azure.KeyVault.Models.KeyProperties
  langs:
  - csharp
  - vb
  name: KeyType
  nameWithType: KeyProperties.KeyType
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties.KeyType
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyType
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the key type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "kty")]

      public string KeyType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="kty")>

      Public Property KeyType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.KeyProperties.KeyType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: kty
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties.KeySize
  commentId: P:Microsoft.Azure.KeyVault.Models.KeyProperties.KeySize
  id: KeySize
  parent: Microsoft.Azure.KeyVault.Models.KeyProperties
  langs:
  - csharp
  - vb
  name: KeySize
  nameWithType: KeyProperties.KeySize
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties.KeySize
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeySize
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the key size in bytes. e.g. 2048.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "key_size")]

      public int ? KeySize { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="key_size")>

      Public Property KeySize As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.KeyVault.Models.KeyProperties.KeySize*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: key_size
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties.ReuseKey
  commentId: P:Microsoft.Azure.KeyVault.Models.KeyProperties.ReuseKey
  id: ReuseKey
  parent: Microsoft.Azure.KeyVault.Models.KeyProperties
  langs:
  - csharp
  - vb
  name: ReuseKey
  nameWithType: KeyProperties.ReuseKey
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties.ReuseKey
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ReuseKey
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/KeyProperties.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets indicates if the same key pair will be used on\ncertificate renewal.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "reuse_key")]

      public bool ? ReuseKey { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="reuse_key")>

      Public Property ReuseKey As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.KeyVault.Models.KeyProperties.ReuseKey*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: reuse_key
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyProperties.#ctor
  isExternal: false
  name: KeyProperties
  nameWithType: KeyProperties.KeyProperties
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties.KeyProperties
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties.Exportable*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyProperties.Exportable
  isExternal: false
  name: Exportable
  nameWithType: KeyProperties.Exportable
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties.Exportable
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties.KeyType*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyProperties.KeyType
  isExternal: false
  name: KeyType
  nameWithType: KeyProperties.KeyType
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties.KeyType
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties.KeySize*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyProperties.KeySize
  isExternal: false
  name: KeySize
  nameWithType: KeyProperties.KeySize
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties.KeySize
- uid: Microsoft.Azure.KeyVault.Models.KeyProperties.ReuseKey*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.KeyProperties.ReuseKey
  isExternal: false
  name: ReuseKey
  nameWithType: KeyProperties.ReuseKey
  fullName: Microsoft.Azure.KeyVault.Models.KeyProperties.ReuseKey
