### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  commentId: T:Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  id: KeyVaultClientExtensions
  parent: Microsoft.Azure.KeyVault
  children:
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.KeyBundle,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.Contacts,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  - Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: KeyVaultClientExtensions
  nameWithType: KeyVaultClientExtensions
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyVaultClientExtensions
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nExtension methods for KeyVaultClient.\n"
  example: []
  syntax:
    content: public static class KeyVaultClientExtensions
    content.vb: Public Module KeyVaultClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  id: EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: EncryptAsync(IKeyVaultClient, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.EncryptAsync(IKeyVaultClient, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncryptAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nEncrypts a single block of data. The amount of data that may be encrypted is determined\nby the target key type and the encryption algorithm.\n"
  example: []
  syntax:
    content: public static Task<KeyOperationResult> EncryptAsync(this IKeyVaultClient operations, string keyIdentifier, string algorithm, byte[] plainText, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EncryptAsync(operations As IKeyVaultClient, keyIdentifier As String, algorithm As String, plainText As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: keyIdentifier
      type: System.String
      description: The full key identifier
    - id: algorithm
      type: System.String
      description: The algorithm. For more information on possible algorithm types, see JsonWebKeyEncryptionAlgorithm.
    - id: plainText
      type: System.Byte[]
      description: The plain text
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyOperationResult}
      description: The encrypted text
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync*
  nameWithType.vb: KeyVaultClientExtensions.EncryptAsync(IKeyVaultClient, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Byte(), System.Threading.CancellationToken)
  name.vb: EncryptAsync(IKeyVaultClient, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  id: DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: DecryptAsync(IKeyVaultClient, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.DecryptAsync(IKeyVaultClient, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DecryptAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDecrypts a single block of encrypted data\n"
  example: []
  syntax:
    content: public static Task<KeyOperationResult> DecryptAsync(this IKeyVaultClient operations, string keyIdentifier, string algorithm, byte[] cipherText, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DecryptAsync(operations As IKeyVaultClient, keyIdentifier As String, algorithm As String, cipherText As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: keyIdentifier
      type: System.String
      description: The full key identifier
    - id: algorithm
      type: System.String
      description: The algorithm. For more information on possible algorithm types, see JsonWebKeyEncryptionAlgorithm.
    - id: cipherText
      type: System.Byte[]
      description: The cipher text
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyOperationResult}
      description: The decryption result
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync*
  nameWithType.vb: KeyVaultClientExtensions.DecryptAsync(IKeyVaultClient, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Byte(), System.Threading.CancellationToken)
  name.vb: DecryptAsync(IKeyVaultClient, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  id: SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: SignAsync(IKeyVaultClient, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.SignAsync(IKeyVaultClient, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SignAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nCreates a signature from a digest using the specified key in the vault\n"
  example: []
  syntax:
    content: public static Task<KeyOperationResult> SignAsync(this IKeyVaultClient operations, string keyIdentifier, string algorithm, byte[] digest, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SignAsync(operations As IKeyVaultClient, keyIdentifier As String, algorithm As String, digest As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: keyIdentifier
      type: System.String
      description: 'The global key identifier of the signing key '
    - id: algorithm
      type: System.String
      description: 'The signing algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. '
    - id: digest
      type: System.Byte[]
      description: The digest value to sign
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyOperationResult}
      description: The signature value
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync*
  nameWithType.vb: KeyVaultClientExtensions.SignAsync(IKeyVaultClient, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Byte(), System.Threading.CancellationToken)
  name.vb: SignAsync(IKeyVaultClient, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)
  id: VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: VerifyAsync(IKeyVaultClient, String, String, Byte[], Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.VerifyAsync(IKeyVaultClient, String, String, Byte[], Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Byte[], System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VerifyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 114
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nVerifies a signature using the specified key\n"
  example: []
  syntax:
    content: public static Task<bool> VerifyAsync(this IKeyVaultClient operations, string keyIdentifier, string algorithm, byte[] digest, byte[] signature, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function VerifyAsync(operations As IKeyVaultClient, keyIdentifier As String, algorithm As String, digest As Byte(), signature As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: keyIdentifier
      type: System.String
      description: 'The global key identifier of the key used for signing '
    - id: algorithm
      type: System.String
      description: The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.
    - id: digest
      type: System.Byte[]
      description: 'The digest used for signing '
    - id: signature
      type: System.Byte[]
      description: 'The signature to be verified '
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: 'true if the signature is verified, false otherwise. '
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync*
  nameWithType.vb: KeyVaultClientExtensions.VerifyAsync(IKeyVaultClient, String, String, Byte(), Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Byte(), System.Byte(), System.Threading.CancellationToken)
  name.vb: VerifyAsync(IKeyVaultClient, String, String, Byte(), Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  id: WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: WrapKeyAsync(IKeyVaultClient, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.WrapKeyAsync(IKeyVaultClient, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WrapKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 145
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nWraps a symmetric key using the specified key\n"
  example: []
  syntax:
    content: public static Task<KeyOperationResult> WrapKeyAsync(this IKeyVaultClient operations, string keyIdentifier, string algorithm, byte[] key, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WrapKeyAsync(operations As IKeyVaultClient, keyIdentifier As String, algorithm As String, key As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: keyIdentifier
      type: System.String
      description: 'The global key identifier of the key used for wrapping '
    - id: algorithm
      type: System.String
      description: The wrap algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.
    - id: key
      type: System.Byte[]
      description: 'The symmetric key '
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyOperationResult}
      description: 'The wrapped symmetric key '
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync*
  nameWithType.vb: KeyVaultClientExtensions.WrapKeyAsync(IKeyVaultClient, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Byte(), System.Threading.CancellationToken)
  name.vb: WrapKeyAsync(IKeyVaultClient, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  id: UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: UnwrapKeyAsync(IKeyVaultClient, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync(IKeyVaultClient, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UnwrapKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 173
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUnwraps a symmetric key using the specified key in the vault\nthat has initially been used for wrapping the key.\n"
  example: []
  syntax:
    content: public static Task<KeyOperationResult> UnwrapKeyAsync(this IKeyVaultClient operations, string keyIdentifier, string algorithm, byte[] wrappedKey, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UnwrapKeyAsync(operations As IKeyVaultClient, keyIdentifier As String, algorithm As String, wrappedKey As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: keyIdentifier
      type: System.String
      description: 'The global key identifier of the wrapping/unwrapping key '
    - id: algorithm
      type: System.String
      description: The unwrap algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.
    - id: wrappedKey
      type: System.Byte[]
      description: The wrapped symmetric key
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyOperationResult}
      description: The unwrapped symmetric key
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync*
  nameWithType.vb: KeyVaultClientExtensions.UnwrapKeyAsync(IKeyVaultClient, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Byte(), System.Threading.CancellationToken)
  name.vb: UnwrapKeyAsync(IKeyVaultClient, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetKeyAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetKeyAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 203
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nRetrieves the public portion of a key plus its attributes\n"
  example: []
  syntax:
    content: public static Task<KeyBundle> GetKeyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetKeyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: vaultBaseUrl
      type: System.String
      description: The vault name, e.g. https://myvault.vault.azure.net
    - id: keyName
      type: System.String
      description: The key name
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
      description: A KeyBundle of the key and its attributes
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  id: GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetKeyAsync(IKeyVaultClient, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetKeyAsync(IKeyVaultClient, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 223
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nRetrieves the public portion of a key plus its attributes\n"
  example: []
  syntax:
    content: public static Task<KeyBundle> GetKeyAsync(this IKeyVaultClient operations, string keyIdentifier, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetKeyAsync(operations As IKeyVaultClient, keyIdentifier As String, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: keyIdentifier
      type: System.String
      description: The key identifier
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
      description: A KeyBundle of the key and its attributes
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)
  id: UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: UpdateKeyAsync(IKeyVaultClient, String, String, String[], KeyAttributes, Dictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.UpdateKeyAsync(IKeyVaultClient, String, String, String[], KeyAttributes, Dictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String[], Microsoft.Azure.KeyVault.Models.KeyAttributes, System.Collections.Generic.Dictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 245
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates the Key Attributes associated with the specified key\n"
  example: []
  syntax:
    content: public static Task<KeyBundle> UpdateKeyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, string[] keyOps = null, KeyAttributes attributes = null, Dictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateKeyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, keyOps As String() = Nothing, attributes As KeyAttributes = Nothing, tags As Dictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: vaultBaseUrl
      type: System.String
      description: The vault name, e.g. https://myvault.vault.azure.net
    - id: keyName
      type: System.String
      description: The key name
    - id: keyOps
      type: System.String[]
      description: Json web key operations. For more information on possible key operations, see JsonWebKeyOperation.
    - id: attributes
      type: Microsoft.Azure.KeyVault.Models.KeyAttributes
      description: The new attributes for the key. For more information on key attributes, see KeyAttributes.
    - id: tags
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Application-specific metadata in the form of key-value pairs
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
      description: 'The updated key '
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync*
  nameWithType.vb: KeyVaultClientExtensions.UpdateKeyAsync(IKeyVaultClient, String, String, String(), KeyAttributes, Dictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String(), Microsoft.Azure.KeyVault.Models.KeyAttributes, System.Collections.Generic.Dictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: UpdateKeyAsync(IKeyVaultClient, String, String, String(), KeyAttributes, Dictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)
  id: UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String[],Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: UpdateKeyAsync(IKeyVaultClient, String, String[], KeyAttributes, Dictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.UpdateKeyAsync(IKeyVaultClient, String, String[], KeyAttributes, Dictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String[], Microsoft.Azure.KeyVault.Models.KeyAttributes, System.Collections.Generic.Dictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 268
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates the Key Attributes associated with the specified key\n"
  example: []
  syntax:
    content: public static Task<KeyBundle> UpdateKeyAsync(this IKeyVaultClient operations, string keyIdentifier, string[] keyOps = null, KeyAttributes attributes = null, Dictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateKeyAsync(operations As IKeyVaultClient, keyIdentifier As String, keyOps As String() = Nothing, attributes As KeyAttributes = Nothing, tags As Dictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: keyIdentifier
      type: System.String
      description: The key identifier
    - id: keyOps
      type: System.String[]
      description: Json web key operations. For more information, see JsonWebKeyOperation.
    - id: attributes
      type: Microsoft.Azure.KeyVault.Models.KeyAttributes
      description: The new attributes for the key. For more information on key attributes, see KeyAttributes.
    - id: tags
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Application-specific metadata in the form of key-value pairs
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
      description: 'The updated key '
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync*
  nameWithType.vb: KeyVaultClientExtensions.UpdateKeyAsync(IKeyVaultClient, String, String(), KeyAttributes, Dictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String(), Microsoft.Azure.KeyVault.Models.KeyAttributes, System.Collections.Generic.Dictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: UpdateKeyAsync(IKeyVaultClient, String, String(), KeyAttributes, Dictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.KeyBundle,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.KeyBundle,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.KeyBundle,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: ImportKeyAsync(IKeyVaultClient, String, String, KeyBundle, Nullable<Boolean>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.ImportKeyAsync(IKeyVaultClient, String, String, KeyBundle, Nullable<Boolean>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, Microsoft.Azure.KeyVault.Models.KeyBundle, System.Nullable<System.Boolean>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 290
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nImports a key into the specified vault\n"
  example: []
  syntax:
    content: public static Task<KeyBundle> ImportKeyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, KeyBundle keyBundle, bool ? importToHardware = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ImportKeyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, keyBundle As KeyBundle, importToHardware As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: vaultBaseUrl
      type: System.String
      description: The vault name, e.g. https://myvault.vault.azure.net
    - id: keyName
      type: System.String
      description: The key name
    - id: keyBundle
      type: Microsoft.Azure.KeyVault.Models.KeyBundle
      description: 'Key bundle '
    - id: importToHardware
      type: System.Nullable{System.Boolean}
      description: 'Whether to import as a hardware key (HSM) or software key '
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
      description: 'Imported key bundle to the vault '
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync*
  nameWithType.vb: KeyVaultClientExtensions.ImportKeyAsync(IKeyVaultClient, String, String, KeyBundle, Nullable(Of Boolean), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, Microsoft.Azure.KeyVault.Models.KeyBundle, System.Nullable(Of System.Boolean), System.Threading.CancellationToken)
  name.vb: ImportKeyAsync(IKeyVaultClient, String, String, KeyBundle, Nullable(Of Boolean), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetSecretAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetSecretAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetSecretAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 315
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets a secret.\n"
  example: []
  syntax:
    content: public static Task<SecretBundle> GetSecretAsync(this IKeyVaultClient operations, string vaultBaseUrl, string secretName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSecretAsync(operations As IKeyVaultClient, vaultBaseUrl As String, secretName As String, cancellationToken As CancellationToken = Nothing) As Task(Of SecretBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: vaultBaseUrl
      type: System.String
      description: The URL for the vault containing the secrets.
    - id: secretName
      type: System.String
      description: The name the secret in the given vault.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.SecretBundle}
      description: A response message containing the secret
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  id: GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetSecretAsync(IKeyVaultClient, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetSecretAsync(IKeyVaultClient, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetSecretAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 335
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets a secret.\n"
  example: []
  syntax:
    content: public static Task<SecretBundle> GetSecretAsync(this IKeyVaultClient operations, string secretIdentifier, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSecretAsync(operations As IKeyVaultClient, secretIdentifier As String, cancellationToken As CancellationToken = Nothing) As Task(Of SecretBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: secretIdentifier
      type: System.String
      description: The URL for the secret.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.SecretBundle}
      description: A response message containing the secret
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)
  id: UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: UpdateSecretAsync(IKeyVaultClient, String, String, SecretAttributes, Dictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.UpdateSecretAsync(IKeyVaultClient, String, String, SecretAttributes, Dictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, Microsoft.Azure.KeyVault.Models.SecretAttributes, System.Collections.Generic.Dictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateSecretAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 356
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates the attributes associated with the specified secret\n"
  example: []
  syntax:
    content: public static Task<SecretBundle> UpdateSecretAsync(this IKeyVaultClient operations, string secretIdentifier, string contentType = null, SecretAttributes secretAttributes = null, Dictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateSecretAsync(operations As IKeyVaultClient, secretIdentifier As String, contentType As String = Nothing, secretAttributes As SecretAttributes = Nothing, tags As Dictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of SecretBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: secretIdentifier
      type: System.String
      description: The URL of the secret
    - id: contentType
      type: System.String
      description: Type of the secret value such as password.
    - id: secretAttributes
      type: Microsoft.Azure.KeyVault.Models.SecretAttributes
      description: Attributes for the secret. For more information on possible attributes, see SecretAttributes.
    - id: tags
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Application-specific metadata in the form of key-value pairs
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.SecretBundle}
      description: A response message containing the updated secret
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync*
  nameWithType.vb: KeyVaultClientExtensions.UpdateSecretAsync(IKeyVaultClient, String, String, SecretAttributes, Dictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, Microsoft.Azure.KeyVault.Models.SecretAttributes, System.Collections.Generic.Dictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: UpdateSecretAsync(IKeyVaultClient, String, String, SecretAttributes, Dictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificateAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificateAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificateAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 379
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets a certificate.\n"
  example: []
  syntax:
    content: public static Task<CertificateBundle> GetCertificateAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificateAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: vaultBaseUrl
      type: System.String
      description: The URL for the vault containing the certificate.
    - id: certificateName
      type: System.String
      description: The name of the certificate in the given vault.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateBundle}
      description: The retrieved certificate
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  id: GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificateAsync(IKeyVaultClient, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificateAsync(IKeyVaultClient, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificateAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 399
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets a certificate.\n"
  example: []
  syntax:
    content: public static Task<CertificateBundle> GetCertificateAsync(this IKeyVaultClient operations, string certificateIdentifier, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificateAsync(operations As IKeyVaultClient, certificateIdentifier As String, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: certificateIdentifier
      type: System.String
      description: The URL for the certificate.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateBundle}
      description: The retrieved certificate
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  id: UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: UpdateCertificateAsync(IKeyVaultClient, String, CertificatePolicy, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.UpdateCertificateAsync(IKeyVaultClient, String, CertificatePolicy, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, Microsoft.Azure.KeyVault.Models.CertificatePolicy, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateCertificateAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 421
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates a certificate version.\n"
  example: []
  syntax:
    content: public static Task<CertificateBundle> UpdateCertificateAsync(this IKeyVaultClient operations, string certificateIdentifier, CertificatePolicy certificatePolicy = null, CertificateAttributes certificateAttributes = null, IDictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateCertificateAsync(operations As IKeyVaultClient, certificateIdentifier As String, certificatePolicy As CertificatePolicy = Nothing, certificateAttributes As CertificateAttributes = Nothing, tags As IDictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: certificateIdentifier
      type: System.String
      description: The URL for the certificate.
    - id: certificatePolicy
      type: Microsoft.Azure.KeyVault.Models.CertificatePolicy
      description: The management policy for the certificate.
    - id: certificateAttributes
      type: Microsoft.Azure.KeyVault.Models.CertificateAttributes
      description: The attributes of the certificate (optional)
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Application-specific metadata in the form of key-value pairs
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateBundle}
      description: The updated certificate.
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync*
  nameWithType.vb: KeyVaultClientExtensions.UpdateCertificateAsync(IKeyVaultClient, String, CertificatePolicy, CertificateAttributes, IDictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, Microsoft.Azure.KeyVault.Models.CertificatePolicy, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: UpdateCertificateAsync(IKeyVaultClient, String, CertificatePolicy, CertificateAttributes, IDictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  id: ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: ImportCertificateAsync(IKeyVaultClient, String, String, X509Certificate2Collection, CertificatePolicy, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.ImportCertificateAsync(IKeyVaultClient, String, String, X509Certificate2Collection, CertificatePolicy, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Security.Cryptography.X509Certificates.X509Certificate2Collection, Microsoft.Azure.KeyVault.Models.CertificatePolicy, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportCertificateAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 445
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nImports a new certificate version. If this is the first version, the certificate resource is created.\n"
  example: []
  syntax:
    content: public static Task<CertificateBundle> ImportCertificateAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, X509Certificate2Collection certificateCollection, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes = null, IDictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ImportCertificateAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, certificateCollection As X509Certificate2Collection, certificatePolicy As CertificatePolicy, certificateAttributes As CertificateAttributes = Nothing, tags As IDictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: vaultBaseUrl
      type: System.String
      description: The URL for the vault containing the certificate
    - id: certificateName
      type: System.String
      description: The name of the certificate
    - id: certificateCollection
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: The certificate collection with the private key
    - id: certificatePolicy
      type: Microsoft.Azure.KeyVault.Models.CertificatePolicy
      description: The management policy for the certificate
    - id: certificateAttributes
      type: Microsoft.Azure.KeyVault.Models.CertificateAttributes
      description: The attributes of the certificate (optional)
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Application-specific metadata in the form of key-value pairs
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateBundle}
      description: Imported certificate bundle to the vault.
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync*
  nameWithType.vb: KeyVaultClientExtensions.ImportCertificateAsync(IKeyVaultClient, String, String, X509Certificate2Collection, CertificatePolicy, CertificateAttributes, IDictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Security.Cryptography.X509Certificates.X509Certificate2Collection, Microsoft.Azure.KeyVault.Models.CertificatePolicy, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: ImportCertificateAsync(IKeyVaultClient, String, String, X509Certificate2Collection, CertificatePolicy, CertificateAttributes, IDictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  id: MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: MergeCertificateAsync(IKeyVaultClient, String, String, X509Certificate2Collection, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.MergeCertificateAsync(IKeyVaultClient, String, String, X509Certificate2Collection, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Security.Cryptography.X509Certificates.X509Certificate2Collection, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MergeCertificateAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 470
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nMerges a certificate or a certificate chain with a key pair existing on the server.\n"
  example: []
  syntax:
    content: public static Task<CertificateBundle> MergeCertificateAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, X509Certificate2Collection x509Certificates, CertificateAttributes certificateAttributes = null, IDictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MergeCertificateAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, x509Certificates As X509Certificate2Collection, certificateAttributes As CertificateAttributes = Nothing, tags As IDictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: vaultBaseUrl
      type: System.String
      description: The URL for the vault containing the certificate
    - id: certificateName
      type: System.String
      description: The name of the certificate
    - id: x509Certificates
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: The certificate or the certificte chain to merge
    - id: certificateAttributes
      type: Microsoft.Azure.KeyVault.Models.CertificateAttributes
      description: The attributes of the certificate (optional)
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Application-specific metadata in the form of key-value pairs
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateBundle}
      description: A response message containing the merged certificate.
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync*
  nameWithType.vb: KeyVaultClientExtensions.MergeCertificateAsync(IKeyVaultClient, String, String, X509Certificate2Collection, CertificateAttributes, IDictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Security.Cryptography.X509Certificates.X509Certificate2Collection, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: MergeCertificateAsync(IKeyVaultClient, String, String, X509Certificate2Collection, CertificateAttributes, IDictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: GetPendingCertificateSigningRequestAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetPendingCertificateSigningRequestAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetPendingCertificateSigningRequestAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/KeyVaultClientExtensions.cs
    startLine: 500
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets the Base64 pending certificate signing request (PKCS-10) \n"
  example: []
  syntax:
    content: public static Task<string> GetPendingCertificateSigningRequestAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPendingCertificateSigningRequestAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
    - id: vaultBaseUrl
      type: System.String
      description: The URL for the vault containing the certificate
    - id: certificateName
      type: System.String
      description: The name of the certificate
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Optional cancellation token
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The pending certificate signing request as Base64 encoded string.
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  id: CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: CreateKeyAsync(IKeyVaultClient, String, String, String, Nullable<Int32>, IList<String>, KeyAttributes, IDictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.CreateKeyAsync(IKeyVaultClient, String, String, String, Nullable<Int32>, IList<String>, KeyAttributes, IDictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.Nullable<System.Int32>, System.Collections.Generic.IList<System.String>, Microsoft.Azure.KeyVault.Models.KeyAttributes, System.Collections.Generic.IDictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nCreates a new, named, key in the specified vault.\n"
  example: []
  syntax:
    content: public static Task<KeyBundle> CreateKeyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, string kty, int ? keySize = null, IList<string> keyOps = null, KeyAttributes keyAttributes = null, IDictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateKeyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, kty As String, keySize As Integer? = Nothing, keyOps As IList(Of String) = Nothing, keyAttributes As KeyAttributes = Nothing, tags As IDictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: kty
      type: System.String
      description: "\nThe type of key to create. Valid key types, see JsonWebKeyType. Supported\nJsonWebKey key types (kty) for Elliptic Curve, RSA, HSM, Octet. Possible\nvalues include: 'EC', 'RSA', 'RSA-HSM', 'oct'\n"
    - id: keySize
      type: System.Nullable{System.Int32}
      description: "\nThe key size in bytes. e.g. 1024 or 2048.\n"
    - id: keyOps
      type: System.Collections.Generic.IList{System.String}
      description: "\n"
    - id: keyAttributes
      type: Microsoft.Azure.KeyVault.Models.KeyAttributes
      description: "\n"
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "\nApplication-specific metadata in the form of key-value pairs\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync*
  nameWithType.vb: KeyVaultClientExtensions.CreateKeyAsync(IKeyVaultClient, String, String, String, Nullable(Of Int32), IList(Of String), KeyAttributes, IDictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.Nullable(Of System.Int32), System.Collections.Generic.IList(Of System.String), Microsoft.Azure.KeyVault.Models.KeyAttributes, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: CreateKeyAsync(IKeyVaultClient, String, String, String, Nullable(Of Int32), IList(Of String), KeyAttributes, IDictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  id: ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.WebKey.JsonWebKey,System.Nullable{System.Boolean},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: ImportKeyAsync(IKeyVaultClient, String, String, JsonWebKey, Nullable<Boolean>, KeyAttributes, IDictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.ImportKeyAsync(IKeyVaultClient, String, String, JsonWebKey, Nullable<Boolean>, KeyAttributes, IDictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.Nullable<System.Boolean>, Microsoft.Azure.KeyVault.Models.KeyAttributes, System.Collections.Generic.IDictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nImports a key into the specified vault\n"
  example: []
  syntax:
    content: public static Task<KeyBundle> ImportKeyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, JsonWebKey key, bool ? hsm = null, KeyAttributes keyAttributes = null, IDictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ImportKeyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, key As JsonWebKey, hsm As Boolean? = Nothing, keyAttributes As KeyAttributes = Nothing, tags As IDictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: key
      type: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
      description: "\nThe Json web key\n"
    - id: hsm
      type: System.Nullable{System.Boolean}
      description: "\nWhether to import as a hardware key (HSM) or software key\n"
    - id: keyAttributes
      type: Microsoft.Azure.KeyVault.Models.KeyAttributes
      description: "\nThe key management attributes\n"
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "\nApplication-specific metadata in the form of key-value pairs\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync*
  nameWithType.vb: KeyVaultClientExtensions.ImportKeyAsync(IKeyVaultClient, String, String, JsonWebKey, Nullable(Of Boolean), KeyAttributes, IDictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, Microsoft.Azure.KeyVault.WebKey.JsonWebKey, System.Nullable(Of System.Boolean), Microsoft.Azure.KeyVault.Models.KeyAttributes, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: ImportKeyAsync(IKeyVaultClient, String, String, JsonWebKey, Nullable(Of Boolean), KeyAttributes, IDictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: DeleteKeyAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.DeleteKeyAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDeletes the specified key\n"
  example: []
  syntax:
    content: public static Task<KeyBundle> DeleteKeyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteKeyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  id: UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.KeyAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: UpdateKeyAsync(IKeyVaultClient, String, String, String, IList<String>, KeyAttributes, IDictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.UpdateKeyAsync(IKeyVaultClient, String, String, String, IList<String>, KeyAttributes, IDictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.Collections.Generic.IList<System.String>, Microsoft.Azure.KeyVault.Models.KeyAttributes, System.Collections.Generic.IDictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 148
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates the Key Attributes associated with the specified key\n"
  example: []
  syntax:
    content: public static Task<KeyBundle> UpdateKeyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, IList<string> keyOps = null, KeyAttributes keyAttributes = null, IDictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateKeyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, keyVersion As String, keyOps As IList(Of String) = Nothing, keyAttributes As KeyAttributes = Nothing, tags As IDictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: keyVersion
      type: System.String
      description: "\nThe version of the key\n"
    - id: keyOps
      type: System.Collections.Generic.IList{System.String}
      description: "\nJson web key operations. For more information on possible key operations,\nsee JsonWebKeyOperation.\n"
    - id: keyAttributes
      type: Microsoft.Azure.KeyVault.Models.KeyAttributes
      description: "\n"
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "\nApplication-specific metadata in the form of key-value pairs\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync*
  nameWithType.vb: KeyVaultClientExtensions.UpdateKeyAsync(IKeyVaultClient, String, String, String, IList(Of String), KeyAttributes, IDictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.Collections.Generic.IList(Of System.String), Microsoft.Azure.KeyVault.Models.KeyAttributes, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: UpdateKeyAsync(IKeyVaultClient, String, String, String, IList(Of String), KeyAttributes, IDictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetKeyAsync(IKeyVaultClient, String, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetKeyAsync(IKeyVaultClient, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 174
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nRetrieves the public portion of a key plus its attributes\n"
  example: []
  syntax:
    content: public static Task<KeyBundle> GetKeyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetKeyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, keyVersion As String, cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: keyVersion
      type: System.String
      description: "\nThe version of the key\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  id: GetKeyVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetKeyVersionsAsync(IKeyVaultClient, String, String, Nullable<Int32>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetKeyVersionsAsync(IKeyVaultClient, String, String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Nullable<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetKeyVersionsAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 201
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList the versions of the specified key\n"
  example: []
  syntax:
    content: public static Task<IPage<KeyItem>> GetKeyVersionsAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, int ? maxresults = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetKeyVersionsAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, maxresults As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of KeyItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: maxresults
      type: System.Nullable{System.Int32}
      description: "\nMaximum number of results to return in a page. If not specified the\nservice will return up to 25 results.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.KeyItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync*
  nameWithType.vb: KeyVaultClientExtensions.GetKeyVersionsAsync(IKeyVaultClient, String, String, Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: GetKeyVersionsAsync(IKeyVaultClient, String, String, Nullable(Of Int32), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  id: GetKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetKeysAsync(IKeyVaultClient, String, Nullable<Int32>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetKeysAsync(IKeyVaultClient, String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Nullable<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetKeysAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 225
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList keys in the specified vault\n"
  example: []
  syntax:
    content: public static Task<IPage<KeyItem>> GetKeysAsync(this IKeyVaultClient operations, string vaultBaseUrl, int ? maxresults = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetKeysAsync(operations As IKeyVaultClient, vaultBaseUrl As String, maxresults As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of KeyItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: maxresults
      type: System.Nullable{System.Int32}
      description: "\nMaximum number of results to return in a page. If not specified the\nservice will return up to 25 results.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.KeyItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync*
  nameWithType.vb: KeyVaultClientExtensions.GetKeysAsync(IKeyVaultClient, String, Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: GetKeysAsync(IKeyVaultClient, String, Nullable(Of Int32), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: BackupKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: BackupKeyAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.BackupKeyAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BackupKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 248
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nRequests that a backup of the specified key be downloaded to the client.\n"
  example: []
  syntax:
    content: public static Task<BackupKeyResult> BackupKeyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BackupKeyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, cancellationToken As CancellationToken = Nothing) As Task(Of BackupKeyResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.BackupKeyResult}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)
  id: RestoreKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: RestoreKeyAsync(IKeyVaultClient, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.RestoreKeyAsync(IKeyVaultClient, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RestoreKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 271
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nRestores the backup key in to a vault\n"
  example: []
  syntax:
    content: public static Task<KeyBundle> RestoreKeyAsync(this IKeyVaultClient operations, string vaultBaseUrl, byte[] keyBundleBackup, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RestoreKeyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyBundleBackup As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyBundleBackup
      type: System.Byte[]
      description: "\nthe backup blob associated with a key bundle\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync*
  nameWithType.vb: KeyVaultClientExtensions.RestoreKeyAsync(IKeyVaultClient, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Byte(), System.Threading.CancellationToken)
  name.vb: RestoreKeyAsync(IKeyVaultClient, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  id: EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: EncryptAsync(IKeyVaultClient, String, String, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.EncryptAsync(IKeyVaultClient, String, String, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EncryptAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 303
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nEncrypts an arbitrary sequence of bytes using an encryption key that is\nstored in Azure Key Vault.\n"
  example: []
  syntax:
    content: public static Task<KeyOperationResult> EncryptAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, byte[] value, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EncryptAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, keyVersion As String, algorithm As String, value As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: keyVersion
      type: System.String
      description: "\nThe version of the key\n"
    - id: algorithm
      type: System.String
      description: "\nalgorithm identifier. Possible values include: 'RSA-OAEP', 'RSA1_5'\n"
    - id: value
      type: System.Byte[]
      description: "\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyOperationResult}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync*
  nameWithType.vb: KeyVaultClientExtensions.EncryptAsync(IKeyVaultClient, String, String, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, System.Byte(), System.Threading.CancellationToken)
  name.vb: EncryptAsync(IKeyVaultClient, String, String, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  id: DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: DecryptAsync(IKeyVaultClient, String, String, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.DecryptAsync(IKeyVaultClient, String, String, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DecryptAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 334
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDecrypts a single block of encrypted data\n"
  example: []
  syntax:
    content: public static Task<KeyOperationResult> DecryptAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, byte[] value, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DecryptAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, keyVersion As String, algorithm As String, value As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: keyVersion
      type: System.String
      description: "\nThe version of the key\n"
    - id: algorithm
      type: System.String
      description: "\nalgorithm identifier. Possible values include: 'RSA-OAEP', 'RSA1_5'\n"
    - id: value
      type: System.Byte[]
      description: "\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyOperationResult}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync*
  nameWithType.vb: KeyVaultClientExtensions.DecryptAsync(IKeyVaultClient, String, String, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, System.Byte(), System.Threading.CancellationToken)
  name.vb: DecryptAsync(IKeyVaultClient, String, String, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  id: SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: SignAsync(IKeyVaultClient, String, String, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.SignAsync(IKeyVaultClient, String, String, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SignAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 367
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nCreates a signature from a digest using the specified key in the vault\n"
  example: []
  syntax:
    content: public static Task<KeyOperationResult> SignAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, byte[] value, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SignAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, keyVersion As String, algorithm As String, value As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: keyVersion
      type: System.String
      description: "\nThe version of the key\n"
    - id: algorithm
      type: System.String
      description: "\nThe signing/verification algorithm identifier. For more information on\npossible algorithm types, see JsonWebKeySignatureAlgorithm. Possible\nvalues include: 'RS256', 'RS384', 'RS512', 'RSNULL'\n"
    - id: value
      type: System.Byte[]
      description: "\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyOperationResult}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync*
  nameWithType.vb: KeyVaultClientExtensions.SignAsync(IKeyVaultClient, String, String, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, System.Byte(), System.Threading.CancellationToken)
  name.vb: SignAsync(IKeyVaultClient, String, String, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)
  id: VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: VerifyAsync(IKeyVaultClient, String, String, String, String, Byte[], Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.VerifyAsync(IKeyVaultClient, String, String, String, String, Byte[], Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, System.Byte[], System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VerifyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 404
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nVerifies a signature using the specified key\n"
  example: []
  syntax:
    content: public static Task<KeyVerifyResult> VerifyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, byte[] digest, byte[] signature, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function VerifyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, keyVersion As String, algorithm As String, digest As Byte(), signature As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyVerifyResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: keyVersion
      type: System.String
      description: "\nThe version of the key\n"
    - id: algorithm
      type: System.String
      description: "\nThe signing/verification algorithm. For more information on possible\nalgorithm types, see JsonWebKeySignatureAlgorithm. Possible values\ninclude: 'RS256', 'RS384', 'RS512', 'RSNULL'\n"
    - id: digest
      type: System.Byte[]
      description: "\nThe digest used for signing\n"
    - id: signature
      type: System.Byte[]
      description: "\nThe signature to be verified\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyVerifyResult}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync*
  nameWithType.vb: KeyVaultClientExtensions.VerifyAsync(IKeyVaultClient, String, String, String, String, Byte(), Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, System.Byte(), System.Byte(), System.Threading.CancellationToken)
  name.vb: VerifyAsync(IKeyVaultClient, String, String, String, String, Byte(), Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  id: WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: WrapKeyAsync(IKeyVaultClient, String, String, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.WrapKeyAsync(IKeyVaultClient, String, String, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WrapKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 435
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nWraps a symmetric key using the specified key\n"
  example: []
  syntax:
    content: public static Task<KeyOperationResult> WrapKeyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, byte[] value, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WrapKeyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, keyVersion As String, algorithm As String, value As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: keyVersion
      type: System.String
      description: "\nThe version of the key\n"
    - id: algorithm
      type: System.String
      description: "\nalgorithm identifier. Possible values include: 'RSA-OAEP', 'RSA1_5'\n"
    - id: value
      type: System.Byte[]
      description: "\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyOperationResult}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync*
  nameWithType.vb: KeyVaultClientExtensions.WrapKeyAsync(IKeyVaultClient, String, String, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, System.Byte(), System.Threading.CancellationToken)
  name.vb: WrapKeyAsync(IKeyVaultClient, String, String, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  id: UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,System.Byte[],System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: UnwrapKeyAsync(IKeyVaultClient, String, String, String, String, Byte[], CancellationToken)
  nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync(IKeyVaultClient, String, String, String, String, Byte[], CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UnwrapKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 467
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUnwraps a symmetric key using the specified key in the vault that has\ninitially been used for wrapping the key.\n"
  example: []
  syntax:
    content: public static Task<KeyOperationResult> UnwrapKeyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string keyName, string keyVersion, string algorithm, byte[] value, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UnwrapKeyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, keyName As String, keyVersion As String, algorithm As String, value As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of KeyOperationResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: keyName
      type: System.String
      description: "\nThe name of the key\n"
    - id: keyVersion
      type: System.String
      description: "\nThe version of the key\n"
    - id: algorithm
      type: System.String
      description: "\nalgorithm identifier. Possible values include: 'RSA-OAEP', 'RSA1_5'\n"
    - id: value
      type: System.Byte[]
      description: "\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyOperationResult}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync*
  nameWithType.vb: KeyVaultClientExtensions.UnwrapKeyAsync(IKeyVaultClient, String, String, String, String, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, System.Byte(), System.Threading.CancellationToken)
  name.vb: UnwrapKeyAsync(IKeyVaultClient, String, String, String, String, Byte(), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Threading.CancellationToken)
  id: SetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: SetSecretAsync(IKeyVaultClient, String, String, String, IDictionary<String, String>, String, SecretAttributes, CancellationToken)
  nameWithType: KeyVaultClientExtensions.SetSecretAsync(IKeyVaultClient, String, String, String, IDictionary<String, String>, String, SecretAttributes, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.String>, System.String, Microsoft.Azure.KeyVault.Models.SecretAttributes, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SetSecretAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 502
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nSets a secret in the specified vault.\n"
  example: []
  syntax:
    content: public static Task<SecretBundle> SetSecretAsync(this IKeyVaultClient operations, string vaultBaseUrl, string secretName, string value, IDictionary<string, string> tags = null, string contentType = null, SecretAttributes secretAttributes = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetSecretAsync(operations As IKeyVaultClient, vaultBaseUrl As String, secretName As String, value As String, tags As IDictionary(Of String, String) = Nothing, contentType As String = Nothing, secretAttributes As SecretAttributes = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of SecretBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: secretName
      type: System.String
      description: "\nThe name of the secret in the given vault\n"
    - id: value
      type: System.String
      description: "\nThe value of the secret\n"
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "\nApplication-specific metadata in the form of key-value pairs\n"
    - id: contentType
      type: System.String
      description: "\nType of the secret value such as a password\n"
    - id: secretAttributes
      type: Microsoft.Azure.KeyVault.Models.SecretAttributes
      description: "\nThe secret management attributes\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.SecretBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync*
  nameWithType.vb: KeyVaultClientExtensions.SetSecretAsync(IKeyVaultClient, String, String, String, IDictionary(Of String, String), String, SecretAttributes, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String), System.String, Microsoft.Azure.KeyVault.Models.SecretAttributes, System.Threading.CancellationToken)
  name.vb: SetSecretAsync(IKeyVaultClient, String, String, String, IDictionary(Of String, String), String, SecretAttributes, CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: DeleteSecretAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.DeleteSecretAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteSecretAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 525
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDeletes a secret from the specified vault.\n"
  example: []
  syntax:
    content: public static Task<SecretBundle> DeleteSecretAsync(this IKeyVaultClient operations, string vaultBaseUrl, string secretName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteSecretAsync(operations As IKeyVaultClient, vaultBaseUrl As String, secretName As String, cancellationToken As CancellationToken = Nothing) As Task(Of SecretBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: secretName
      type: System.String
      description: "\nThe name of the secret in the given vault\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.SecretBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  id: UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.SecretAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: UpdateSecretAsync(IKeyVaultClient, String, String, String, String, SecretAttributes, IDictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.UpdateSecretAsync(IKeyVaultClient, String, String, String, String, SecretAttributes, IDictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, Microsoft.Azure.KeyVault.Models.SecretAttributes, System.Collections.Generic.IDictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateSecretAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 560
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates the attributes associated with the specified secret\n"
  example: []
  syntax:
    content: public static Task<SecretBundle> UpdateSecretAsync(this IKeyVaultClient operations, string vaultBaseUrl, string secretName, string secretVersion, string contentType = null, SecretAttributes secretAttributes = null, IDictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateSecretAsync(operations As IKeyVaultClient, vaultBaseUrl As String, secretName As String, secretVersion As String, contentType As String = Nothing, secretAttributes As SecretAttributes = Nothing, tags As IDictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of SecretBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: secretName
      type: System.String
      description: "\nThe name of the secret in the given vault\n"
    - id: secretVersion
      type: System.String
      description: "\nThe version of the secret\n"
    - id: contentType
      type: System.String
      description: "\nType of the secret value such as a password\n"
    - id: secretAttributes
      type: Microsoft.Azure.KeyVault.Models.SecretAttributes
      description: "\nThe secret management attributes\n"
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "\nApplication-specific metadata in the form of key-value pairs\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.SecretBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync*
  nameWithType.vb: KeyVaultClientExtensions.UpdateSecretAsync(IKeyVaultClient, String, String, String, String, SecretAttributes, IDictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, Microsoft.Azure.KeyVault.Models.SecretAttributes, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: UpdateSecretAsync(IKeyVaultClient, String, String, String, String, SecretAttributes, IDictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetSecretAsync(IKeyVaultClient, String, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetSecretAsync(IKeyVaultClient, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetSecretAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 586
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets a secret.\n"
  example: []
  syntax:
    content: public static Task<SecretBundle> GetSecretAsync(this IKeyVaultClient operations, string vaultBaseUrl, string secretName, string secretVersion, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSecretAsync(operations As IKeyVaultClient, vaultBaseUrl As String, secretName As String, secretVersion As String, cancellationToken As CancellationToken = Nothing) As Task(Of SecretBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: secretName
      type: System.String
      description: "\nThe name of the secret in the given vault\n"
    - id: secretVersion
      type: System.String
      description: "\nThe version of the secret\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.SecretBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  id: GetSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetSecretsAsync(IKeyVaultClient, String, Nullable<Int32>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetSecretsAsync(IKeyVaultClient, String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Nullable<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetSecretsAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 610
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList secrets in the specified vault\n"
  example: []
  syntax:
    content: public static Task<IPage<SecretItem>> GetSecretsAsync(this IKeyVaultClient operations, string vaultBaseUrl, int ? maxresults = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSecretsAsync(operations As IKeyVaultClient, vaultBaseUrl As String, maxresults As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of SecretItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: maxresults
      type: System.Nullable{System.Int32}
      description: "\nMaximum number of results to return in a page. If not specified the\nservice will return up to 25 results.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.SecretItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync*
  nameWithType.vb: KeyVaultClientExtensions.GetSecretsAsync(IKeyVaultClient, String, Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: GetSecretsAsync(IKeyVaultClient, String, Nullable(Of Int32), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  id: GetSecretVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetSecretVersionsAsync(IKeyVaultClient, String, String, Nullable<Int32>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetSecretVersionsAsync(IKeyVaultClient, String, String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Nullable<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetSecretVersionsAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 637
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList the versions of the specified secret\n"
  example: []
  syntax:
    content: public static Task<IPage<SecretItem>> GetSecretVersionsAsync(this IKeyVaultClient operations, string vaultBaseUrl, string secretName, int ? maxresults = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSecretVersionsAsync(operations As IKeyVaultClient, vaultBaseUrl As String, secretName As String, maxresults As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of SecretItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: secretName
      type: System.String
      description: "\nThe name of the secret in the given vault\n"
    - id: maxresults
      type: System.Nullable{System.Int32}
      description: "\nMaximum number of results to return in a page. If not specified the\nservice will return up to 25 results.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.SecretItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync*
  nameWithType.vb: KeyVaultClientExtensions.GetSecretVersionsAsync(IKeyVaultClient, String, String, Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: GetSecretVersionsAsync(IKeyVaultClient, String, String, Nullable(Of Int32), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  id: GetCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificatesAsync(IKeyVaultClient, String, Nullable<Int32>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificatesAsync(IKeyVaultClient, String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Nullable<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificatesAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 661
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList certificates in the specified vault\n"
  example: []
  syntax:
    content: public static Task<IPage<CertificateItem>> GetCertificatesAsync(this IKeyVaultClient operations, string vaultBaseUrl, int ? maxresults = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificatesAsync(operations As IKeyVaultClient, vaultBaseUrl As String, maxresults As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of CertificateItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: maxresults
      type: System.Nullable{System.Int32}
      description: "\nMaximum number of results to return in a page. If not specified the\nservice will return up to 25 results.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.CertificateItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync*
  nameWithType.vb: KeyVaultClientExtensions.GetCertificatesAsync(IKeyVaultClient, String, Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: GetCertificatesAsync(IKeyVaultClient, String, Nullable(Of Int32), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: DeleteCertificateAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.DeleteCertificateAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteCertificateAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 684
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDeletes a certificate from the specified vault.\n"
  example: []
  syntax:
    content: public static Task<CertificateBundle> DeleteCertificateAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteCertificateAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: certificateName
      type: System.String
      description: "\nThe name of the certificate in the given vault\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.Contacts,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.Contacts,System.Threading.CancellationToken)
  id: SetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,Microsoft.Azure.KeyVault.Models.Contacts,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: SetCertificateContactsAsync(IKeyVaultClient, String, Contacts, CancellationToken)
  nameWithType: KeyVaultClientExtensions.SetCertificateContactsAsync(IKeyVaultClient, String, Contacts, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, Microsoft.Azure.KeyVault.Models.Contacts, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SetCertificateContactsAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 707
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nSets the certificate contacts for the specified vault.\n"
  example: []
  syntax:
    content: public static Task<Contacts> SetCertificateContactsAsync(this IKeyVaultClient operations, string vaultBaseUrl, Contacts contacts, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetCertificateContactsAsync(operations As IKeyVaultClient, vaultBaseUrl As String, contacts As Contacts, cancellationToken As CancellationToken = Nothing) As Task(Of Contacts)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: contacts
      type: Microsoft.Azure.KeyVault.Models.Contacts
      description: "\nThe contacts for the vault certificates.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.Contacts}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  id: GetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificateContactsAsync(IKeyVaultClient, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificateContactsAsync(IKeyVaultClient, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificateContactsAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 727
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets the certificate contacts for the specified vault.\n"
  example: []
  syntax:
    content: public static Task<Contacts> GetCertificateContactsAsync(this IKeyVaultClient operations, string vaultBaseUrl, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificateContactsAsync(operations As IKeyVaultClient, vaultBaseUrl As String, cancellationToken As CancellationToken = Nothing) As Task(Of Contacts)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.Contacts}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  id: DeleteCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: DeleteCertificateContactsAsync(IKeyVaultClient, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.DeleteCertificateContactsAsync(IKeyVaultClient, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteCertificateContactsAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 747
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDeletes the certificate contacts for the specified vault.\n"
  example: []
  syntax:
    content: public static Task<Contacts> DeleteCertificateContactsAsync(this IKeyVaultClient operations, string vaultBaseUrl, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteCertificateContactsAsync(operations As IKeyVaultClient, vaultBaseUrl As String, cancellationToken As CancellationToken = Nothing) As Task(Of Contacts)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.Contacts}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  id: GetCertificateIssuersAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificateIssuersAsync(IKeyVaultClient, String, Nullable<Int32>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificateIssuersAsync(IKeyVaultClient, String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Nullable<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificateIssuersAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 771
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList certificate issuers for the specified vault.\n"
  example: []
  syntax:
    content: public static Task<IPage<CertificateIssuerItem>> GetCertificateIssuersAsync(this IKeyVaultClient operations, string vaultBaseUrl, int ? maxresults = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificateIssuersAsync(operations As IKeyVaultClient, vaultBaseUrl As String, maxresults As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of CertificateIssuerItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: maxresults
      type: System.Nullable{System.Int32}
      description: "\nMaximum number of results to return in a page. If not specified the\nservice will return up to 25 results.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.CertificateIssuerItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync*
  nameWithType.vb: KeyVaultClientExtensions.GetCertificateIssuersAsync(IKeyVaultClient, String, Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: GetCertificateIssuersAsync(IKeyVaultClient, String, Nullable(Of Int32), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)
  id: SetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: SetCertificateIssuerAsync(IKeyVaultClient, String, String, String, IssuerCredentials, OrganizationDetails, IssuerAttributes, CancellationToken)
  nameWithType: KeyVaultClientExtensions.SetCertificateIssuerAsync(IKeyVaultClient, String, String, String, IssuerCredentials, OrganizationDetails, IssuerAttributes, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, Microsoft.Azure.KeyVault.Models.IssuerCredentials, Microsoft.Azure.KeyVault.Models.OrganizationDetails, Microsoft.Azure.KeyVault.Models.IssuerAttributes, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SetCertificateIssuerAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 806
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nSets the specified certificate issuer.\n"
  example: []
  syntax:
    content: public static Task<IssuerBundle> SetCertificateIssuerAsync(this IKeyVaultClient operations, string vaultBaseUrl, string issuerName, string provider, IssuerCredentials credentials = null, OrganizationDetails organizationDetails = null, IssuerAttributes attributes = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetCertificateIssuerAsync(operations As IKeyVaultClient, vaultBaseUrl As String, issuerName As String, provider As String, credentials As IssuerCredentials = Nothing, organizationDetails As OrganizationDetails = Nothing, attributes As IssuerAttributes = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IssuerBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: issuerName
      type: System.String
      description: "\nThe name of the issuer.\n"
    - id: provider
      type: System.String
      description: "\nThe issuer provider.\n"
    - id: credentials
      type: Microsoft.Azure.KeyVault.Models.IssuerCredentials
      description: "\nThe credentials to be used for the issuer.\n"
    - id: organizationDetails
      type: Microsoft.Azure.KeyVault.Models.OrganizationDetails
      description: "\nDetails of the organization as provided to the issuer.\n"
    - id: attributes
      type: Microsoft.Azure.KeyVault.Models.IssuerAttributes
      description: "\nAttributes of the issuer object.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.IssuerBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)
  id: UpdateCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.IssuerCredentials,Microsoft.Azure.KeyVault.Models.OrganizationDetails,Microsoft.Azure.KeyVault.Models.IssuerAttributes,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: UpdateCertificateIssuerAsync(IKeyVaultClient, String, String, String, IssuerCredentials, OrganizationDetails, IssuerAttributes, CancellationToken)
  nameWithType: KeyVaultClientExtensions.UpdateCertificateIssuerAsync(IKeyVaultClient, String, String, String, IssuerCredentials, OrganizationDetails, IssuerAttributes, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, Microsoft.Azure.KeyVault.Models.IssuerCredentials, Microsoft.Azure.KeyVault.Models.OrganizationDetails, Microsoft.Azure.KeyVault.Models.IssuerAttributes, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateCertificateIssuerAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 841
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates the specified certificate issuer.\n"
  example: []
  syntax:
    content: public static Task<IssuerBundle> UpdateCertificateIssuerAsync(this IKeyVaultClient operations, string vaultBaseUrl, string issuerName, string provider = null, IssuerCredentials credentials = null, OrganizationDetails organizationDetails = null, IssuerAttributes attributes = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateCertificateIssuerAsync(operations As IKeyVaultClient, vaultBaseUrl As String, issuerName As String, provider As String = Nothing, credentials As IssuerCredentials = Nothing, organizationDetails As OrganizationDetails = Nothing, attributes As IssuerAttributes = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IssuerBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: issuerName
      type: System.String
      description: "\nThe name of the issuer.\n"
    - id: provider
      type: System.String
      description: "\nThe issuer provider.\n"
    - id: credentials
      type: Microsoft.Azure.KeyVault.Models.IssuerCredentials
      description: "\nThe credentials to be used for the issuer.\n"
    - id: organizationDetails
      type: Microsoft.Azure.KeyVault.Models.OrganizationDetails
      description: "\nDetails of the organization as provided to the issuer.\n"
    - id: attributes
      type: Microsoft.Azure.KeyVault.Models.IssuerAttributes
      description: "\nAttributes of the issuer object.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.IssuerBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: GetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificateIssuerAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificateIssuerAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificateIssuerAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 864
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets the specified certificate issuer.\n"
  example: []
  syntax:
    content: public static Task<IssuerBundle> GetCertificateIssuerAsync(this IKeyVaultClient operations, string vaultBaseUrl, string issuerName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificateIssuerAsync(operations As IKeyVaultClient, vaultBaseUrl As String, issuerName As String, cancellationToken As CancellationToken = Nothing) As Task(Of IssuerBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: issuerName
      type: System.String
      description: "\nThe name of the issuer.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.IssuerBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: DeleteCertificateIssuerAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.DeleteCertificateIssuerAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteCertificateIssuerAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 887
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDeletes the specified certificate issuer.\n"
  example: []
  syntax:
    content: public static Task<IssuerBundle> DeleteCertificateIssuerAsync(this IKeyVaultClient operations, string vaultBaseUrl, string issuerName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteCertificateIssuerAsync(operations As IKeyVaultClient, vaultBaseUrl As String, issuerName As String, cancellationToken As CancellationToken = Nothing) As Task(Of IssuerBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: issuerName
      type: System.String
      description: "\nThe name of the issuer.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.IssuerBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  id: CreateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: CreateCertificateAsync(IKeyVaultClient, String, String, CertificatePolicy, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.CreateCertificateAsync(IKeyVaultClient, String, String, CertificatePolicy, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, Microsoft.Azure.KeyVault.Models.CertificatePolicy, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateCertificateAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 920
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nCreates a new certificate version. If this is the first version, the\ncertificate resource is created.\n"
  example: []
  syntax:
    content: public static Task<CertificateOperation> CreateCertificateAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, CertificatePolicy certificatePolicy = null, CertificateAttributes certificateAttributes = null, IDictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateCertificateAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, certificatePolicy As CertificatePolicy = Nothing, certificateAttributes As CertificateAttributes = Nothing, tags As IDictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateOperation)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: certificateName
      type: System.String
      description: "\nThe name of the certificate\n"
    - id: certificatePolicy
      type: Microsoft.Azure.KeyVault.Models.CertificatePolicy
      description: "\nThe management policy for the certificate\n"
    - id: certificateAttributes
      type: Microsoft.Azure.KeyVault.Models.CertificateAttributes
      description: "\nThe attributes of the certificate (optional)\n"
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "\nApplication-specific metadata in the form of key-value pairs\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateOperation}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync*
  nameWithType.vb: KeyVaultClientExtensions.CreateCertificateAsync(IKeyVaultClient, String, String, CertificatePolicy, CertificateAttributes, IDictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, Microsoft.Azure.KeyVault.Models.CertificatePolicy, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: CreateCertificateAsync(IKeyVaultClient, String, String, CertificatePolicy, CertificateAttributes, IDictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  id: ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: ImportCertificateAsync(IKeyVaultClient, String, String, String, String, CertificatePolicy, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.ImportCertificateAsync(IKeyVaultClient, String, String, String, String, CertificatePolicy, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, Microsoft.Azure.KeyVault.Models.CertificatePolicy, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ImportCertificateAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 960
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nImports a certificate into the specified vault\n"
  example: []
  syntax:
    content: public static Task<CertificateBundle> ImportCertificateAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, string base64EncodedCertificate, string password = null, CertificatePolicy certificatePolicy = null, CertificateAttributes certificateAttributes = null, IDictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ImportCertificateAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, base64EncodedCertificate As String, password As String = Nothing, certificatePolicy As CertificatePolicy = Nothing, certificateAttributes As CertificateAttributes = Nothing, tags As IDictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: certificateName
      type: System.String
      description: "\nThe name of the certificate\n"
    - id: base64EncodedCertificate
      type: System.String
      description: "\nBase64 encoded representation of the certificate object to import. This\ncertificate needs to contain the private key.\n"
    - id: password
      type: System.String
      description: "\nIf the private key in base64EncodedCertificate is encrypted, the password\nused for encryption\n"
    - id: certificatePolicy
      type: Microsoft.Azure.KeyVault.Models.CertificatePolicy
      description: "\nThe management policy for the certificate\n"
    - id: certificateAttributes
      type: Microsoft.Azure.KeyVault.Models.CertificateAttributes
      description: "\nThe attributes of the certificate (optional)\n"
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "\nApplication-specific metadata in the form of key-value pairs\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync*
  nameWithType.vb: KeyVaultClientExtensions.ImportCertificateAsync(IKeyVaultClient, String, String, String, String, CertificatePolicy, CertificateAttributes, IDictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.String, Microsoft.Azure.KeyVault.Models.CertificatePolicy, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: ImportCertificateAsync(IKeyVaultClient, String, String, String, String, CertificatePolicy, CertificateAttributes, IDictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  id: GetCertificateVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificateVersionsAsync(IKeyVaultClient, String, String, Nullable<Int32>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificateVersionsAsync(IKeyVaultClient, String, String, Nullable<Int32>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Nullable<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificateVersionsAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 987
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList the versions of a certificate.\n"
  example: []
  syntax:
    content: public static Task<IPage<CertificateItem>> GetCertificateVersionsAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, int ? maxresults = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificateVersionsAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, maxresults As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of CertificateItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: certificateName
      type: System.String
      description: "\nThe name of the certificate\n"
    - id: maxresults
      type: System.Nullable{System.Int32}
      description: "\nMaximum number of results to return in a page. If not specified the\nservice will return up to 25 results.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.CertificateItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync*
  nameWithType.vb: KeyVaultClientExtensions.GetCertificateVersionsAsync(IKeyVaultClient, String, String, Nullable(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Nullable(Of System.Int32), System.Threading.CancellationToken)
  name.vb: GetCertificateVersionsAsync(IKeyVaultClient, String, String, Nullable(Of Int32), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: GetCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificatePolicyAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificatePolicyAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificatePolicyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1010
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets the policy for a certificate.\n"
  example: []
  syntax:
    content: public static Task<CertificatePolicy> GetCertificatePolicyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificatePolicyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, cancellationToken As CancellationToken = Nothing) As Task(Of CertificatePolicy)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: certificateName
      type: System.String
      description: "\nThe name of the certificate in the given vault.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificatePolicy}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Threading.CancellationToken)
  id: UpdateCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: UpdateCertificatePolicyAsync(IKeyVaultClient, String, String, CertificatePolicy, CancellationToken)
  nameWithType: KeyVaultClientExtensions.UpdateCertificatePolicyAsync(IKeyVaultClient, String, String, CertificatePolicy, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, Microsoft.Azure.KeyVault.Models.CertificatePolicy, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateCertificatePolicyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1037
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates the policy for a certificate. Set appropriate members in the\ncertificatePolicy that must be updated. Leave others as null.\n"
  example: []
  syntax:
    content: public static Task<CertificatePolicy> UpdateCertificatePolicyAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, CertificatePolicy certificatePolicy, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateCertificatePolicyAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, certificatePolicy As CertificatePolicy, cancellationToken As CancellationToken = Nothing) As Task(Of CertificatePolicy)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: certificateName
      type: System.String
      description: "\nThe name of the certificate in the given vault.\n"
    - id: certificatePolicy
      type: Microsoft.Azure.KeyVault.Models.CertificatePolicy
      description: "\nThe policy for the certificate.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificatePolicy}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  id: UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,Microsoft.Azure.KeyVault.Models.CertificatePolicy,Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: UpdateCertificateAsync(IKeyVaultClient, String, String, String, CertificatePolicy, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.UpdateCertificateAsync(IKeyVaultClient, String, String, String, CertificatePolicy, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, Microsoft.Azure.KeyVault.Models.CertificatePolicy, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateCertificateAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1072
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates the attributes associated with the specified certificate\n"
  example: []
  syntax:
    content: public static Task<CertificateBundle> UpdateCertificateAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, string certificateVersion, CertificatePolicy certificatePolicy = null, CertificateAttributes certificateAttributes = null, IDictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateCertificateAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, certificateVersion As String, certificatePolicy As CertificatePolicy = Nothing, certificateAttributes As CertificateAttributes = Nothing, tags As IDictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: certificateName
      type: System.String
      description: "\nThe name of the certificate in the given vault\n"
    - id: certificateVersion
      type: System.String
      description: "\nThe version of the certificate\n"
    - id: certificatePolicy
      type: Microsoft.Azure.KeyVault.Models.CertificatePolicy
      description: "\nThe management policy for the certificate\n"
    - id: certificateAttributes
      type: Microsoft.Azure.KeyVault.Models.CertificateAttributes
      description: "\nThe attributes of the certificate (optional)\n"
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "\nApplication-specific metadata in the form of key-value pairs\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync*
  nameWithType.vb: KeyVaultClientExtensions.UpdateCertificateAsync(IKeyVaultClient, String, String, String, CertificatePolicy, CertificateAttributes, IDictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, Microsoft.Azure.KeyVault.Models.CertificatePolicy, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: UpdateCertificateAsync(IKeyVaultClient, String, String, String, CertificatePolicy, CertificateAttributes, IDictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificateAsync(IKeyVaultClient, String, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificateAsync(IKeyVaultClient, String, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificateAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1098
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets a Certificate.\n"
  example: []
  syntax:
    content: public static Task<CertificateBundle> GetCertificateAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, string certificateVersion, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificateAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, certificateVersion As String, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: certificateName
      type: System.String
      description: "\nThe name of the certificate in the given vault\n"
    - id: certificateVersion
      type: System.String
      description: "\nThe version of the certificate\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  id: UpdateCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: UpdateCertificateOperationAsync(IKeyVaultClient, String, String, Boolean, CancellationToken)
  nameWithType: KeyVaultClientExtensions.UpdateCertificateOperationAsync(IKeyVaultClient, String, String, Boolean, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UpdateCertificateOperationAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1124
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nUpdates a certificate operation.\n"
  example: []
  syntax:
    content: public static Task<CertificateOperation> UpdateCertificateOperationAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, bool cancellationRequested, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateCertificateOperationAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, cancellationRequested As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateOperation)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: certificateName
      type: System.String
      description: "\nThe name of the certificate\n"
    - id: cancellationRequested
      type: System.Boolean
      description: "\nIndicates if cancellation was requested on the certificate operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateOperation}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: GetCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificateOperationAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificateOperationAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificateOperationAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1147
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nGets the certificate operation response.\n"
  example: []
  syntax:
    content: public static Task<CertificateOperation> GetCertificateOperationAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificateOperationAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateOperation)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: certificateName
      type: System.String
      description: "\nThe name of the certificate\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateOperation}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  id: DeleteCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: DeleteCertificateOperationAsync(IKeyVaultClient, String, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.DeleteCertificateOperationAsync(IKeyVaultClient, String, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteCertificateOperationAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1170
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nDeletes the certificate operation.\n"
  example: []
  syntax:
    content: public static Task<CertificateOperation> DeleteCertificateOperationAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteCertificateOperationAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateOperation)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: certificateName
      type: System.String
      description: "\nThe name of the certificate\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateOperation}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  id: MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.String,System.Collections.Generic.IList{System.Byte[]},Microsoft.Azure.KeyVault.Models.CertificateAttributes,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: MergeCertificateAsync(IKeyVaultClient, String, String, IList<Byte[]>, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  nameWithType: KeyVaultClientExtensions.MergeCertificateAsync(IKeyVaultClient, String, String, IList<Byte[]>, CertificateAttributes, IDictionary<String, String>, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Collections.Generic.IList<System.Byte[]>, Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary<System.String, System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MergeCertificateAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1203
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nMerges a certificate or a certificate chain with a key pair existing on\nthe server.\n"
  example: []
  syntax:
    content: public static Task<CertificateBundle> MergeCertificateAsync(this IKeyVaultClient operations, string vaultBaseUrl, string certificateName, IList<byte[]> x509Certificates, CertificateAttributes certificateAttributes = null, IDictionary<string, string> tags = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MergeCertificateAsync(operations As IKeyVaultClient, vaultBaseUrl As String, certificateName As String, x509Certificates As IList(Of Byte()), certificateAttributes As CertificateAttributes = Nothing, tags As IDictionary(Of String, String) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of CertificateBundle)
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: vaultBaseUrl
      type: System.String
      description: "\nThe vault name, e.g. https://myvault.vault.azure.net\n"
    - id: certificateName
      type: System.String
      description: "\nThe name of the certificate\n"
    - id: x509Certificates
      type: System.Collections.Generic.IList{System.Byte[]}
      description: "\nThe certificate or the certificate chain to merge\n"
    - id: certificateAttributes
      type: Microsoft.Azure.KeyVault.Models.CertificateAttributes
      description: "\nThe attributes of the certificate (optional)\n"
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "\nApplication-specific metadata in the form of key-value pairs\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateBundle}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync*
  nameWithType.vb: KeyVaultClientExtensions.MergeCertificateAsync(IKeyVaultClient, String, String, IList(Of Byte()), CertificateAttributes, IDictionary(Of String, String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.String, System.Collections.Generic.IList(Of System.Byte()), Microsoft.Azure.KeyVault.Models.CertificateAttributes, System.Collections.Generic.IDictionary(Of System.String, System.String), System.Threading.CancellationToken)
  name.vb: MergeCertificateAsync(IKeyVaultClient, String, String, IList(Of Byte()), CertificateAttributes, IDictionary(Of String, String), CancellationToken)
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  id: GetKeyVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetKeyVersionsNextAsync(IKeyVaultClient, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetKeyVersionsNextAsync(IKeyVaultClient, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetKeyVersionsNextAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1223
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList the versions of the specified key\n"
  example: []
  syntax:
    content: public static Task<IPage<KeyItem>> GetKeyVersionsNextAsync(this IKeyVaultClient operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetKeyVersionsNextAsync(operations As IKeyVaultClient, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of KeyItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.KeyItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  id: GetKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetKeysNextAsync(IKeyVaultClient, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetKeysNextAsync(IKeyVaultClient, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetKeysNextAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1243
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList keys in the specified vault\n"
  example: []
  syntax:
    content: public static Task<IPage<KeyItem>> GetKeysNextAsync(this IKeyVaultClient operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetKeysNextAsync(operations As IKeyVaultClient, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of KeyItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.KeyItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  id: GetSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetSecretsNextAsync(IKeyVaultClient, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetSecretsNextAsync(IKeyVaultClient, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetSecretsNextAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1263
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList secrets in the specified vault\n"
  example: []
  syntax:
    content: public static Task<IPage<SecretItem>> GetSecretsNextAsync(this IKeyVaultClient operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSecretsNextAsync(operations As IKeyVaultClient, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of SecretItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.SecretItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  id: GetSecretVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetSecretVersionsNextAsync(IKeyVaultClient, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetSecretVersionsNextAsync(IKeyVaultClient, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetSecretVersionsNextAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1283
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList the versions of the specified secret\n"
  example: []
  syntax:
    content: public static Task<IPage<SecretItem>> GetSecretVersionsNextAsync(this IKeyVaultClient operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSecretVersionsNextAsync(operations As IKeyVaultClient, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of SecretItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.SecretItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  id: GetCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificatesNextAsync(IKeyVaultClient, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificatesNextAsync(IKeyVaultClient, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificatesNextAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1303
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList certificates in the specified vault\n"
  example: []
  syntax:
    content: public static Task<IPage<CertificateItem>> GetCertificatesNextAsync(this IKeyVaultClient operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificatesNextAsync(operations As IKeyVaultClient, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of CertificateItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.CertificateItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  id: GetCertificateIssuersNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificateIssuersNextAsync(IKeyVaultClient, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificateIssuersNextAsync(IKeyVaultClient, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificateIssuersNextAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1323
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList certificate issuers for the specified vault.\n"
  example: []
  syntax:
    content: public static Task<IPage<CertificateIssuerItem>> GetCertificateIssuersNextAsync(this IKeyVaultClient operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificateIssuersNextAsync(operations As IKeyVaultClient, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of CertificateIssuerItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.CertificateIssuerItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  id: GetCertificateVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.KeyVault.KeyVaultClientExtensions
  langs:
  - csharp
  - vb
  name: GetCertificateVersionsNextAsync(IKeyVaultClient, String, CancellationToken)
  nameWithType: KeyVaultClientExtensions.GetCertificateVersionsNextAsync(IKeyVaultClient, String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync(Microsoft.Azure.KeyVault.IKeyVaultClient, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetCertificateVersionsNextAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/KeyVaultClientExtensions.cs
    startLine: 1343
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nList the versions of a certificate.\n"
  example: []
  syntax:
    content: public static Task<IPage<CertificateItem>> GetCertificateVersionsNextAsync(this IKeyVaultClient operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCertificateVersionsNextAsync(operations As IKeyVaultClient, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of CertificateItem))
    parameters:
    - id: operations
      type: Microsoft.Azure.KeyVault.IKeyVaultClient
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.CertificateItem}}
  overload: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.KeyVault
  commentId: N:Microsoft.Azure.KeyVault
  isExternal: false
  name: Microsoft.Azure.KeyVault
  nameWithType: Microsoft.Azure.KeyVault
  fullName: Microsoft.Azure.KeyVault
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync
  isExternal: false
  name: EncryptAsync
  nameWithType: KeyVaultClientExtensions.EncryptAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.EncryptAsync
- uid: Microsoft.Azure.KeyVault.IKeyVaultClient
  commentId: T:Microsoft.Azure.KeyVault.IKeyVaultClient
  parent: Microsoft.Azure.KeyVault
  isExternal: false
  name: IKeyVaultClient
  nameWithType: IKeyVaultClient
  fullName: Microsoft.Azure.KeyVault.IKeyVaultClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyOperationResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyOperationResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<KeyOperationResult>
  nameWithType: Task<KeyOperationResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.KeyVault.Models.KeyOperationResult>
  nameWithType.vb: Task(Of KeyOperationResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.KeyVault.Models.KeyOperationResult)
  name.vb: Task(Of KeyOperationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.KeyOperationResult
    name: KeyOperationResult
    nameWithType: KeyOperationResult
    fullName: Microsoft.Azure.KeyVault.Models.KeyOperationResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.KeyOperationResult
    name: KeyOperationResult
    nameWithType: KeyOperationResult
    fullName: Microsoft.Azure.KeyVault.Models.KeyOperationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync
  isExternal: false
  name: DecryptAsync
  nameWithType: KeyVaultClientExtensions.DecryptAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DecryptAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync
  isExternal: false
  name: SignAsync
  nameWithType: KeyVaultClientExtensions.SignAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SignAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync
  isExternal: false
  name: VerifyAsync
  nameWithType: KeyVaultClientExtensions.VerifyAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.VerifyAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync
  isExternal: false
  name: WrapKeyAsync
  nameWithType: KeyVaultClientExtensions.WrapKeyAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.WrapKeyAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync
  isExternal: false
  name: UnwrapKeyAsync
  nameWithType: KeyVaultClientExtensions.UnwrapKeyAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UnwrapKeyAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync
  isExternal: false
  name: GetKeyAsync
  nameWithType: KeyVaultClientExtensions.GetKeyAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyBundle}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<KeyBundle>
  nameWithType: Task<KeyBundle>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.KeyVault.Models.KeyBundle>
  nameWithType.vb: Task(Of KeyBundle)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.KeyVault.Models.KeyBundle)
  name.vb: Task(Of KeyBundle)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.Models.KeyBundle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.KeyBundle
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: Microsoft.Azure.KeyVault.Models.KeyBundle
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync
  isExternal: false
  name: UpdateKeyAsync
  nameWithType: KeyVaultClientExtensions.UpdateKeyAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateKeyAsync
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Azure.KeyVault.Models.KeyAttributes
  commentId: T:Microsoft.Azure.KeyVault.Models.KeyAttributes
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: KeyAttributes
  nameWithType: KeyAttributes
  fullName: Microsoft.Azure.KeyVault.Models.KeyAttributes
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync
  isExternal: false
  name: ImportKeyAsync
  nameWithType: KeyVaultClientExtensions.ImportKeyAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportKeyAsync
- uid: Microsoft.Azure.KeyVault.Models.KeyBundle
  commentId: T:Microsoft.Azure.KeyVault.Models.KeyBundle
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: KeyBundle
  nameWithType: KeyBundle
  fullName: Microsoft.Azure.KeyVault.Models.KeyBundle
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync
  isExternal: false
  name: GetSecretAsync
  nameWithType: KeyVaultClientExtensions.GetSecretAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.SecretBundle}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.SecretBundle}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SecretBundle>
  nameWithType: Task<SecretBundle>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.KeyVault.Models.SecretBundle>
  nameWithType.vb: Task(Of SecretBundle)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.KeyVault.Models.SecretBundle)
  name.vb: Task(Of SecretBundle)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.SecretBundle
    name: SecretBundle
    nameWithType: SecretBundle
    fullName: Microsoft.Azure.KeyVault.Models.SecretBundle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.SecretBundle
    name: SecretBundle
    nameWithType: SecretBundle
    fullName: Microsoft.Azure.KeyVault.Models.SecretBundle
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync
  isExternal: false
  name: UpdateSecretAsync
  nameWithType: KeyVaultClientExtensions.UpdateSecretAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateSecretAsync
- uid: Microsoft.Azure.KeyVault.Models.SecretAttributes
  commentId: T:Microsoft.Azure.KeyVault.Models.SecretAttributes
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: SecretAttributes
  nameWithType: SecretAttributes
  fullName: Microsoft.Azure.KeyVault.Models.SecretAttributes
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync
  isExternal: false
  name: GetCertificateAsync
  nameWithType: KeyVaultClientExtensions.GetCertificateAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateBundle}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateBundle}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CertificateBundle>
  nameWithType: Task<CertificateBundle>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.KeyVault.Models.CertificateBundle>
  nameWithType.vb: Task(Of CertificateBundle)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.KeyVault.Models.CertificateBundle)
  name.vb: Task(Of CertificateBundle)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.CertificateBundle
    name: CertificateBundle
    nameWithType: CertificateBundle
    fullName: Microsoft.Azure.KeyVault.Models.CertificateBundle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.CertificateBundle
    name: CertificateBundle
    nameWithType: CertificateBundle
    fullName: Microsoft.Azure.KeyVault.Models.CertificateBundle
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync
  isExternal: false
  name: UpdateCertificateAsync
  nameWithType: KeyVaultClientExtensions.UpdateCertificateAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateAsync
- uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  commentId: T:Microsoft.Azure.KeyVault.Models.CertificatePolicy
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: CertificatePolicy
  nameWithType: CertificatePolicy
  fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy
- uid: Microsoft.Azure.KeyVault.Models.CertificateAttributes
  commentId: T:Microsoft.Azure.KeyVault.Models.CertificateAttributes
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: CertificateAttributes
  nameWithType: CertificateAttributes
  fullName: Microsoft.Azure.KeyVault.Models.CertificateAttributes
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync
  isExternal: false
  name: ImportCertificateAsync
  nameWithType: KeyVaultClientExtensions.ImportCertificateAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.ImportCertificateAsync
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync
  isExternal: false
  name: MergeCertificateAsync
  nameWithType: KeyVaultClientExtensions.MergeCertificateAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.MergeCertificateAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync
  isExternal: false
  name: GetPendingCertificateSigningRequestAsync
  nameWithType: KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetPendingCertificateSigningRequestAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync
  isExternal: false
  name: CreateKeyAsync
  nameWithType: KeyVaultClientExtensions.CreateKeyAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateKeyAsync
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  commentId: T:Microsoft.Azure.KeyVault.WebKey.JsonWebKey
  parent: Microsoft.Azure.KeyVault.WebKey
  isExternal: false
  name: JsonWebKey
  nameWithType: JsonWebKey
  fullName: Microsoft.Azure.KeyVault.WebKey.JsonWebKey
- uid: Microsoft.Azure.KeyVault.WebKey
  commentId: N:Microsoft.Azure.KeyVault.WebKey
  isExternal: false
  name: Microsoft.Azure.KeyVault.WebKey
  nameWithType: Microsoft.Azure.KeyVault.WebKey
  fullName: Microsoft.Azure.KeyVault.WebKey
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync
  isExternal: false
  name: DeleteKeyAsync
  nameWithType: KeyVaultClientExtensions.DeleteKeyAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteKeyAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync
  isExternal: false
  name: GetKeyVersionsAsync
  nameWithType: KeyVaultClientExtensions.GetKeyVersionsAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.KeyItem}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.KeyItem}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<KeyItem>>
  nameWithType: Task<IPage<KeyItem>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.KeyVault.Models.KeyItem>>
  nameWithType.vb: Task(Of IPage(Of KeyItem))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.KeyVault.Models.KeyItem))
  name.vb: Task(Of IPage(Of KeyItem))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.KeyItem
    name: KeyItem
    nameWithType: KeyItem
    fullName: Microsoft.Azure.KeyVault.Models.KeyItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.KeyItem
    name: KeyItem
    nameWithType: KeyItem
    fullName: Microsoft.Azure.KeyVault.Models.KeyItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync
  isExternal: false
  name: GetKeysAsync
  nameWithType: KeyVaultClientExtensions.GetKeysAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync
  isExternal: false
  name: BackupKeyAsync
  nameWithType: KeyVaultClientExtensions.BackupKeyAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.BackupKeyAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.BackupKeyResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.BackupKeyResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BackupKeyResult>
  nameWithType: Task<BackupKeyResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.KeyVault.Models.BackupKeyResult>
  nameWithType.vb: Task(Of BackupKeyResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.KeyVault.Models.BackupKeyResult)
  name.vb: Task(Of BackupKeyResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.BackupKeyResult
    name: BackupKeyResult
    nameWithType: BackupKeyResult
    fullName: Microsoft.Azure.KeyVault.Models.BackupKeyResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.BackupKeyResult
    name: BackupKeyResult
    nameWithType: BackupKeyResult
    fullName: Microsoft.Azure.KeyVault.Models.BackupKeyResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync
  isExternal: false
  name: RestoreKeyAsync
  nameWithType: KeyVaultClientExtensions.RestoreKeyAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.RestoreKeyAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyVerifyResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.KeyVerifyResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<KeyVerifyResult>
  nameWithType: Task<KeyVerifyResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.KeyVault.Models.KeyVerifyResult>
  nameWithType.vb: Task(Of KeyVerifyResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.KeyVault.Models.KeyVerifyResult)
  name.vb: Task(Of KeyVerifyResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.KeyVerifyResult
    name: KeyVerifyResult
    nameWithType: KeyVerifyResult
    fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.KeyVerifyResult
    name: KeyVerifyResult
    nameWithType: KeyVerifyResult
    fullName: Microsoft.Azure.KeyVault.Models.KeyVerifyResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync
  isExternal: false
  name: SetSecretAsync
  nameWithType: KeyVaultClientExtensions.SetSecretAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetSecretAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync
  isExternal: false
  name: DeleteSecretAsync
  nameWithType: KeyVaultClientExtensions.DeleteSecretAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteSecretAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync
  isExternal: false
  name: GetSecretsAsync
  nameWithType: KeyVaultClientExtensions.GetSecretsAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.SecretItem}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.SecretItem}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<SecretItem>>
  nameWithType: Task<IPage<SecretItem>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.KeyVault.Models.SecretItem>>
  nameWithType.vb: Task(Of IPage(Of SecretItem))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.KeyVault.Models.SecretItem))
  name.vb: Task(Of IPage(Of SecretItem))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.SecretItem
    name: SecretItem
    nameWithType: SecretItem
    fullName: Microsoft.Azure.KeyVault.Models.SecretItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.SecretItem
    name: SecretItem
    nameWithType: SecretItem
    fullName: Microsoft.Azure.KeyVault.Models.SecretItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync
  isExternal: false
  name: GetSecretVersionsAsync
  nameWithType: KeyVaultClientExtensions.GetSecretVersionsAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync
  isExternal: false
  name: GetCertificatesAsync
  nameWithType: KeyVaultClientExtensions.GetCertificatesAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.CertificateItem}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.CertificateItem}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<CertificateItem>>
  nameWithType: Task<IPage<CertificateItem>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.KeyVault.Models.CertificateItem>>
  nameWithType.vb: Task(Of IPage(Of CertificateItem))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.KeyVault.Models.CertificateItem))
  name.vb: Task(Of IPage(Of CertificateItem))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.CertificateItem
    name: CertificateItem
    nameWithType: CertificateItem
    fullName: Microsoft.Azure.KeyVault.Models.CertificateItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.CertificateItem
    name: CertificateItem
    nameWithType: CertificateItem
    fullName: Microsoft.Azure.KeyVault.Models.CertificateItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync
  isExternal: false
  name: DeleteCertificateAsync
  nameWithType: KeyVaultClientExtensions.DeleteCertificateAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync
  isExternal: false
  name: SetCertificateContactsAsync
  nameWithType: KeyVaultClientExtensions.SetCertificateContactsAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateContactsAsync
- uid: Microsoft.Azure.KeyVault.Models.Contacts
  commentId: T:Microsoft.Azure.KeyVault.Models.Contacts
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Contacts
  nameWithType: Contacts
  fullName: Microsoft.Azure.KeyVault.Models.Contacts
- uid: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.Contacts}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.Contacts}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Contacts>
  nameWithType: Task<Contacts>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.KeyVault.Models.Contacts>
  nameWithType.vb: Task(Of Contacts)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.KeyVault.Models.Contacts)
  name.vb: Task(Of Contacts)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.Contacts
    name: Contacts
    nameWithType: Contacts
    fullName: Microsoft.Azure.KeyVault.Models.Contacts
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.Contacts
    name: Contacts
    nameWithType: Contacts
    fullName: Microsoft.Azure.KeyVault.Models.Contacts
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync
  isExternal: false
  name: GetCertificateContactsAsync
  nameWithType: KeyVaultClientExtensions.GetCertificateContactsAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateContactsAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync
  isExternal: false
  name: DeleteCertificateContactsAsync
  nameWithType: KeyVaultClientExtensions.DeleteCertificateContactsAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateContactsAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync
  isExternal: false
  name: GetCertificateIssuersAsync
  nameWithType: KeyVaultClientExtensions.GetCertificateIssuersAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.CertificateIssuerItem}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.KeyVault.Models.CertificateIssuerItem}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<CertificateIssuerItem>>
  nameWithType: Task<IPage<CertificateIssuerItem>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.KeyVault.Models.CertificateIssuerItem>>
  nameWithType.vb: Task(Of IPage(Of CertificateIssuerItem))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.KeyVault.Models.CertificateIssuerItem))
  name.vb: Task(Of IPage(Of CertificateIssuerItem))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.CertificateIssuerItem
    name: CertificateIssuerItem
    nameWithType: CertificateIssuerItem
    fullName: Microsoft.Azure.KeyVault.Models.CertificateIssuerItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.CertificateIssuerItem
    name: CertificateIssuerItem
    nameWithType: CertificateIssuerItem
    fullName: Microsoft.Azure.KeyVault.Models.CertificateIssuerItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync
  isExternal: false
  name: SetCertificateIssuerAsync
  nameWithType: KeyVaultClientExtensions.SetCertificateIssuerAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.SetCertificateIssuerAsync
- uid: Microsoft.Azure.KeyVault.Models.IssuerCredentials
  commentId: T:Microsoft.Azure.KeyVault.Models.IssuerCredentials
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: IssuerCredentials
  nameWithType: IssuerCredentials
  fullName: Microsoft.Azure.KeyVault.Models.IssuerCredentials
- uid: Microsoft.Azure.KeyVault.Models.OrganizationDetails
  commentId: T:Microsoft.Azure.KeyVault.Models.OrganizationDetails
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: OrganizationDetails
  nameWithType: OrganizationDetails
  fullName: Microsoft.Azure.KeyVault.Models.OrganizationDetails
- uid: Microsoft.Azure.KeyVault.Models.IssuerAttributes
  commentId: T:Microsoft.Azure.KeyVault.Models.IssuerAttributes
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: IssuerAttributes
  nameWithType: IssuerAttributes
  fullName: Microsoft.Azure.KeyVault.Models.IssuerAttributes
- uid: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.IssuerBundle}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.IssuerBundle}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IssuerBundle>
  nameWithType: Task<IssuerBundle>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.KeyVault.Models.IssuerBundle>
  nameWithType.vb: Task(Of IssuerBundle)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.KeyVault.Models.IssuerBundle)
  name.vb: Task(Of IssuerBundle)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.IssuerBundle
    name: IssuerBundle
    nameWithType: IssuerBundle
    fullName: Microsoft.Azure.KeyVault.Models.IssuerBundle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.IssuerBundle
    name: IssuerBundle
    nameWithType: IssuerBundle
    fullName: Microsoft.Azure.KeyVault.Models.IssuerBundle
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync
  isExternal: false
  name: UpdateCertificateIssuerAsync
  nameWithType: KeyVaultClientExtensions.UpdateCertificateIssuerAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateIssuerAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync
  isExternal: false
  name: GetCertificateIssuerAsync
  nameWithType: KeyVaultClientExtensions.GetCertificateIssuerAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuerAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync
  isExternal: false
  name: DeleteCertificateIssuerAsync
  nameWithType: KeyVaultClientExtensions.DeleteCertificateIssuerAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateIssuerAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync
  isExternal: false
  name: CreateCertificateAsync
  nameWithType: KeyVaultClientExtensions.CreateCertificateAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.CreateCertificateAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateOperation}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificateOperation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CertificateOperation>
  nameWithType: Task<CertificateOperation>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.KeyVault.Models.CertificateOperation>
  nameWithType.vb: Task(Of CertificateOperation)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.KeyVault.Models.CertificateOperation)
  name.vb: Task(Of CertificateOperation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.CertificateOperation
    name: CertificateOperation
    nameWithType: CertificateOperation
    fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.CertificateOperation
    name: CertificateOperation
    nameWithType: CertificateOperation
    fullName: Microsoft.Azure.KeyVault.Models.CertificateOperation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync
  isExternal: false
  name: GetCertificateVersionsAsync
  nameWithType: KeyVaultClientExtensions.GetCertificateVersionsAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync
  isExternal: false
  name: GetCertificatePolicyAsync
  nameWithType: KeyVaultClientExtensions.GetCertificatePolicyAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatePolicyAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificatePolicy}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Models.CertificatePolicy}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CertificatePolicy>
  nameWithType: Task<CertificatePolicy>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.KeyVault.Models.CertificatePolicy>
  nameWithType.vb: Task(Of CertificatePolicy)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.KeyVault.Models.CertificatePolicy)
  name.vb: Task(Of CertificatePolicy)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy
    name: CertificatePolicy
    nameWithType: CertificatePolicy
    fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Models.CertificatePolicy
    name: CertificatePolicy
    nameWithType: CertificatePolicy
    fullName: Microsoft.Azure.KeyVault.Models.CertificatePolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync
  isExternal: false
  name: UpdateCertificatePolicyAsync
  nameWithType: KeyVaultClientExtensions.UpdateCertificatePolicyAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificatePolicyAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync
  isExternal: false
  name: UpdateCertificateOperationAsync
  nameWithType: KeyVaultClientExtensions.UpdateCertificateOperationAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.UpdateCertificateOperationAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync
  isExternal: false
  name: GetCertificateOperationAsync
  nameWithType: KeyVaultClientExtensions.GetCertificateOperationAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateOperationAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync
  isExternal: false
  name: DeleteCertificateOperationAsync
  nameWithType: KeyVaultClientExtensions.DeleteCertificateOperationAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.DeleteCertificateOperationAsync
- uid: System.Collections.Generic.IList{System.Byte[]}
  commentId: T:System.Collections.Generic.IList{System.Byte[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Byte[]>
  nameWithType: IList<Byte[]>
  fullName: System.Collections.Generic.IList<System.Byte[]>
  nameWithType.vb: IList(Of Byte())
  fullname.vb: System.Collections.Generic.IList(Of System.Byte())
  name.vb: IList(Of Byte())
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync
  isExternal: false
  name: GetKeyVersionsNextAsync
  nameWithType: KeyVaultClientExtensions.GetKeyVersionsNextAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeyVersionsNextAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync
  isExternal: false
  name: GetKeysNextAsync
  nameWithType: KeyVaultClientExtensions.GetKeysNextAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetKeysNextAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync
  isExternal: false
  name: GetSecretsNextAsync
  nameWithType: KeyVaultClientExtensions.GetSecretsNextAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretsNextAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync
  isExternal: false
  name: GetSecretVersionsNextAsync
  nameWithType: KeyVaultClientExtensions.GetSecretVersionsNextAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetSecretVersionsNextAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync
  isExternal: false
  name: GetCertificatesNextAsync
  nameWithType: KeyVaultClientExtensions.GetCertificatesNextAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificatesNextAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync
  isExternal: false
  name: GetCertificateIssuersNextAsync
  nameWithType: KeyVaultClientExtensions.GetCertificateIssuersNextAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateIssuersNextAsync
- uid: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync
  isExternal: false
  name: GetCertificateVersionsNextAsync
  nameWithType: KeyVaultClientExtensions.GetCertificateVersionsNextAsync
  fullName: Microsoft.Azure.KeyVault.KeyVaultClientExtensions.GetCertificateVersionsNextAsync
