### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm
  id: AsymmetricSignatureAlgorithm
  parent: Microsoft.Azure.KeyVault.Cryptography
  children:
  - Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.#ctor(System.String)
  - Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.CreateSignatureTransform(System.Security.Cryptography.AsymmetricAlgorithm)
  langs:
  - csharp
  - vb
  name: AsymmetricSignatureAlgorithm
  nameWithType: AsymmetricSignatureAlgorithm
  fullName: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SignatureAlgorithm.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AsymmetricSignatureAlgorithm
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SignatureAlgorithm.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography
  summary: "\nAbstract Asymmetric Signature algorithm\n"
  example: []
  syntax:
    content: 'public abstract class AsymmetricSignatureAlgorithm : SignatureAlgorithm'
    content.vb: >-
      Public MustInherit Class AsymmetricSignatureAlgorithm
          Inherits SignatureAlgorithm
  inheritance:
  - System.Object
  - Microsoft.Azure.KeyVault.Cryptography.Algorithm
  - Microsoft.Azure.KeyVault.Cryptography.SignatureAlgorithm
  derivedClasses:
  - Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsaSignature
  - Microsoft.Azure.KeyVault.Cryptography.Algorithms.RsNull
  inheritedMembers:
  - Microsoft.Azure.KeyVault.Cryptography.Algorithm.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.#ctor(System.String)
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm
  langs:
  - csharp
  - vb
  name: AsymmetricSignatureAlgorithm(String)
  nameWithType: AsymmetricSignatureAlgorithm.AsymmetricSignatureAlgorithm(String)
  fullName: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.AsymmetricSignatureAlgorithm(System.String)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SignatureAlgorithm.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SignatureAlgorithm.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography
  syntax:
    content: protected AsymmetricSignatureAlgorithm(string name)
    content.vb: Protected Sub New(name As String)
    parameters:
    - id: name
      type: System.String
  overload: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.CreateSignatureTransform(System.Security.Cryptography.AsymmetricAlgorithm)
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.CreateSignatureTransform(System.Security.Cryptography.AsymmetricAlgorithm)
  id: CreateSignatureTransform(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm
  langs:
  - csharp
  - vb
  name: CreateSignatureTransform(AsymmetricAlgorithm)
  nameWithType: AsymmetricSignatureAlgorithm.CreateSignatureTransform(AsymmetricAlgorithm)
  fullName: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.CreateSignatureTransform(System.Security.Cryptography.AsymmetricAlgorithm)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SignatureAlgorithm.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateSignatureTransform
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/SignatureAlgorithm.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography
  summary: "\nCreates a signature transformation implementation that may\nbe used to sign or verify.\n"
  remarks: >
    The transform implementation "borrows" the supplied

    AsymmetricAlgorithm; callers should not call Dispose on the

    AsymmetricAlgorithm until use of the transform implementation

    is complete.
  example: []
  syntax:
    content: public abstract ISignatureTransform CreateSignatureTransform(AsymmetricAlgorithm key)
    content.vb: Public MustOverride Function CreateSignatureTransform(key As AsymmetricAlgorithm) As ISignatureTransform
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: The asymmetric key to use.
    return:
      type: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform
      description: An ISignatureTransform implementation.
  overload: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.CreateSignatureTransform*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.Azure.KeyVault.Cryptography
  commentId: N:Microsoft.Azure.KeyVault.Cryptography
  isExternal: false
  name: Microsoft.Azure.KeyVault.Cryptography
  nameWithType: Microsoft.Azure.KeyVault.Cryptography
  fullName: Microsoft.Azure.KeyVault.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithm
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.Algorithm
  parent: Microsoft.Azure.KeyVault.Cryptography
  isExternal: false
  name: Algorithm
  nameWithType: Algorithm
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithm
- uid: Microsoft.Azure.KeyVault.Cryptography.SignatureAlgorithm
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.SignatureAlgorithm
  parent: Microsoft.Azure.KeyVault.Cryptography
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SignatureAlgorithm
  fullName: Microsoft.Azure.KeyVault.Cryptography.SignatureAlgorithm
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithm.Name
  commentId: P:Microsoft.Azure.KeyVault.Cryptography.Algorithm.Name
  parent: Microsoft.Azure.KeyVault.Cryptography.Algorithm
  isExternal: false
  name: Name
  nameWithType: Algorithm.Name
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithm.Name
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.#ctor
  isExternal: false
  name: AsymmetricSignatureAlgorithm
  nameWithType: AsymmetricSignatureAlgorithm.AsymmetricSignatureAlgorithm
  fullName: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.AsymmetricSignatureAlgorithm
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.CreateSignatureTransform*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.CreateSignatureTransform
  isExternal: false
  name: CreateSignatureTransform
  nameWithType: AsymmetricSignatureAlgorithm.CreateSignatureTransform
  fullName: Microsoft.Azure.KeyVault.Cryptography.AsymmetricSignatureAlgorithm.CreateSignatureTransform
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  commentId: T:System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: true
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform
  parent: Microsoft.Azure.KeyVault.Cryptography
  isExternal: false
  name: ISignatureTransform
  nameWithType: ISignatureTransform
  fullName: Microsoft.Azure.KeyVault.Cryptography.ISignatureTransform
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
