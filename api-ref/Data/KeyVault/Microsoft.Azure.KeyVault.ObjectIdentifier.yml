### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier
  commentId: T:Microsoft.Azure.KeyVault.ObjectIdentifier
  id: ObjectIdentifier
  parent: Microsoft.Azure.KeyVault
  children:
  - Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor
  - Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor(System.String,System.String)
  - Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor(System.String,System.String,System.String,System.String)
  - Microsoft.Azure.KeyVault.ObjectIdentifier.BaseIdentifier
  - Microsoft.Azure.KeyVault.ObjectIdentifier.Identifier
  - Microsoft.Azure.KeyVault.ObjectIdentifier.IsObjectIdentifier(System.String,System.String)
  - Microsoft.Azure.KeyVault.ObjectIdentifier.Name
  - Microsoft.Azure.KeyVault.ObjectIdentifier.ToString
  - Microsoft.Azure.KeyVault.ObjectIdentifier.Vault
  - Microsoft.Azure.KeyVault.ObjectIdentifier.VaultWithoutScheme
  - Microsoft.Azure.KeyVault.ObjectIdentifier.Version
  langs:
  - csharp
  - vb
  name: ObjectIdentifier
  nameWithType: ObjectIdentifier
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ObjectIdentifier
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nThe Key Vault object identifier.\n"
  example: []
  syntax:
    content: public class ObjectIdentifier
    content.vb: Public Class ObjectIdentifier
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Azure.KeyVault.CertificateIdentifier
  - Microsoft.Azure.KeyVault.CertificateIssuerIdentifier
  - Microsoft.Azure.KeyVault.CertificateOperationIdentifier
  - Microsoft.Azure.KeyVault.KeyIdentifier
  - Microsoft.Azure.KeyVault.SecretIdentifier
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.IsObjectIdentifier(System.String,System.String)
  commentId: M:Microsoft.Azure.KeyVault.ObjectIdentifier.IsObjectIdentifier(System.String,System.String)
  id: IsObjectIdentifier(System.String,System.String)
  parent: Microsoft.Azure.KeyVault.ObjectIdentifier
  langs:
  - csharp
  - vb
  name: IsObjectIdentifier(String, String)
  nameWithType: ObjectIdentifier.IsObjectIdentifier(String, String)
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.IsObjectIdentifier(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsObjectIdentifier
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nVerifies whether the identifier belongs to a key vault object.\n"
  example: []
  syntax:
    content: protected static bool IsObjectIdentifier(string collection, string identifier)
    content.vb: Protected Shared Function IsObjectIdentifier(collection As String, identifier As String) As Boolean
    parameters:
    - id: collection
      type: System.String
      description: The object collection e.g. 'keys', 'secrets' and 'certificates'.
    - id: identifier
      type: System.String
      description: The key vault object identifier.
    return:
      type: System.Boolean
      description: True if the identifier belongs to a key vault object. False otherwise.
  overload: Microsoft.Azure.KeyVault.ObjectIdentifier.IsObjectIdentifier*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor
  commentId: M:Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.ObjectIdentifier
  langs:
  - csharp
  - vb
  name: ObjectIdentifier()
  nameWithType: ObjectIdentifier.ObjectIdentifier()
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.ObjectIdentifier()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nConstructor.\n"
  example: []
  syntax:
    content: protected ObjectIdentifier()
    content.vb: Protected Sub New
  overload: Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.KeyVault.ObjectIdentifier
  langs:
  - csharp
  - vb
  name: ObjectIdentifier(String, String, String, String)
  nameWithType: ObjectIdentifier.ObjectIdentifier(String, String, String, String)
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.ObjectIdentifier(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nConstructor.\n"
  example: []
  syntax:
    content: protected ObjectIdentifier(string vaultBaseUrl, string collection, string name, string version = "")
    content.vb: Protected Sub New(vaultBaseUrl As String, collection As String, name As String, version As String = "")
    parameters:
    - id: vaultBaseUrl
      type: System.String
      description: The vault base URL
    - id: collection
      type: System.String
      description: The object collection e.g. 'keys', 'secrets' and 'certificates'.
    - id: name
      type: System.String
      description: The object name.
    - id: version
      type: System.String
      description: the version of the object.
  overload: Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.KeyVault.ObjectIdentifier
  langs:
  - csharp
  - vb
  name: ObjectIdentifier(String, String)
  nameWithType: ObjectIdentifier.ObjectIdentifier(String, String)
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.ObjectIdentifier(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nConstructor.\n"
  example: []
  syntax:
    content: protected ObjectIdentifier(string collection, string identifier)
    content.vb: Protected Sub New(collection As String, identifier As String)
    parameters:
    - id: collection
      type: System.String
      description: The object collection e.g. 'keys', 'secrets' and 'certificates'.
    - id: identifier
      type: System.String
      description: The key vault object identifier.
  overload: Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.BaseIdentifier
  commentId: P:Microsoft.Azure.KeyVault.ObjectIdentifier.BaseIdentifier
  id: BaseIdentifier
  parent: Microsoft.Azure.KeyVault.ObjectIdentifier
  langs:
  - csharp
  - vb
  name: BaseIdentifier
  nameWithType: ObjectIdentifier.BaseIdentifier
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.BaseIdentifier
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BaseIdentifier
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nThe base identifier for an object, does not include the object version.\n"
  example: []
  syntax:
    content: public string BaseIdentifier { get; protected set; }
    content.vb: Public Property BaseIdentifier As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.ObjectIdentifier.BaseIdentifier*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.Identifier
  commentId: P:Microsoft.Azure.KeyVault.ObjectIdentifier.Identifier
  id: Identifier
  parent: Microsoft.Azure.KeyVault.ObjectIdentifier
  langs:
  - csharp
  - vb
  name: Identifier
  nameWithType: ObjectIdentifier.Identifier
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.Identifier
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Identifier
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
    startLine: 139
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nThe identifier for an object, includes the objects version.\n"
  example: []
  syntax:
    content: public string Identifier { get; protected set; }
    content.vb: Public Property Identifier As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.ObjectIdentifier.Identifier*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.Name
  commentId: P:Microsoft.Azure.KeyVault.ObjectIdentifier.Name
  id: Name
  parent: Microsoft.Azure.KeyVault.ObjectIdentifier
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ObjectIdentifier.Name
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.Name
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
    startLine: 148
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nThe name of the object.\n"
  example: []
  syntax:
    content: public string Name { get; protected set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.ObjectIdentifier.Name*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.Vault
  commentId: P:Microsoft.Azure.KeyVault.ObjectIdentifier.Vault
  id: Vault
  parent: Microsoft.Azure.KeyVault.ObjectIdentifier
  langs:
  - csharp
  - vb
  name: Vault
  nameWithType: ObjectIdentifier.Vault
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.Vault
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Vault
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
    startLine: 157
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nThe vault containing the object\n"
  example: []
  syntax:
    content: public string Vault { get; protected set; }
    content.vb: Public Property Vault As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.ObjectIdentifier.Vault*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.VaultWithoutScheme
  commentId: P:Microsoft.Azure.KeyVault.ObjectIdentifier.VaultWithoutScheme
  id: VaultWithoutScheme
  parent: Microsoft.Azure.KeyVault.ObjectIdentifier
  langs:
  - csharp
  - vb
  name: VaultWithoutScheme
  nameWithType: ObjectIdentifier.VaultWithoutScheme
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.VaultWithoutScheme
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: VaultWithoutScheme
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
    startLine: 166
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nThe scheme-less vault URL\n"
  example: []
  syntax:
    content: public string VaultWithoutScheme { get; protected set; }
    content.vb: Public Property VaultWithoutScheme As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.ObjectIdentifier.VaultWithoutScheme*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.Version
  commentId: P:Microsoft.Azure.KeyVault.ObjectIdentifier.Version
  id: Version
  parent: Microsoft.Azure.KeyVault.ObjectIdentifier
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ObjectIdentifier.Version
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.Version
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Version
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  summary: "\nThe version of the object.\n"
  example: []
  syntax:
    content: public string Version { get; protected set; }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.ObjectIdentifier.Version*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.ToString
  commentId: M:Microsoft.Azure.KeyVault.ObjectIdentifier.ToString
  id: ToString
  parent: Microsoft.Azure.KeyVault.ObjectIdentifier
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ObjectIdentifier.ToString()
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.ToString()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ToString
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Customized/ObjectIdentifier.cs
    startLine: 181
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  overload: Microsoft.Azure.KeyVault.ObjectIdentifier.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.KeyVault
  commentId: N:Microsoft.Azure.KeyVault
  isExternal: false
  name: Microsoft.Azure.KeyVault
  nameWithType: Microsoft.Azure.KeyVault
  fullName: Microsoft.Azure.KeyVault
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.IsObjectIdentifier*
  commentId: Overload:Microsoft.Azure.KeyVault.ObjectIdentifier.IsObjectIdentifier
  isExternal: false
  name: IsObjectIdentifier
  nameWithType: ObjectIdentifier.IsObjectIdentifier
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.IsObjectIdentifier
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.ObjectIdentifier.#ctor
  isExternal: false
  name: ObjectIdentifier
  nameWithType: ObjectIdentifier.ObjectIdentifier
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.ObjectIdentifier
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.BaseIdentifier*
  commentId: Overload:Microsoft.Azure.KeyVault.ObjectIdentifier.BaseIdentifier
  isExternal: false
  name: BaseIdentifier
  nameWithType: ObjectIdentifier.BaseIdentifier
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.BaseIdentifier
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.Identifier*
  commentId: Overload:Microsoft.Azure.KeyVault.ObjectIdentifier.Identifier
  isExternal: false
  name: Identifier
  nameWithType: ObjectIdentifier.Identifier
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.Identifier
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.Name*
  commentId: Overload:Microsoft.Azure.KeyVault.ObjectIdentifier.Name
  isExternal: false
  name: Name
  nameWithType: ObjectIdentifier.Name
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.Name
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.Vault*
  commentId: Overload:Microsoft.Azure.KeyVault.ObjectIdentifier.Vault
  isExternal: false
  name: Vault
  nameWithType: ObjectIdentifier.Vault
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.Vault
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.VaultWithoutScheme*
  commentId: Overload:Microsoft.Azure.KeyVault.ObjectIdentifier.VaultWithoutScheme
  isExternal: false
  name: VaultWithoutScheme
  nameWithType: ObjectIdentifier.VaultWithoutScheme
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.VaultWithoutScheme
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.Version*
  commentId: Overload:Microsoft.Azure.KeyVault.ObjectIdentifier.Version
  isExternal: false
  name: Version
  nameWithType: ObjectIdentifier.Version
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.Version
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.ObjectIdentifier.ToString*
  commentId: Overload:Microsoft.Azure.KeyVault.ObjectIdentifier.ToString
  isExternal: false
  name: ToString
  nameWithType: ObjectIdentifier.ToString
  fullName: Microsoft.Azure.KeyVault.ObjectIdentifier.ToString
