### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver
  id: AlgorithmResolver
  parent: Microsoft.Azure.KeyVault.Cryptography
  children:
  - Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.AddAlgorithm(System.String,Microsoft.Azure.KeyVault.Cryptography.Algorithm)
  - Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Default
  - Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Item(System.String)
  - Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.RemoveAlgorithm(System.String)
  langs:
  - csharp
  - vb
  name: AlgorithmResolver
  nameWithType: AlgorithmResolver
  fullName: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/AlgorithmResolver.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AlgorithmResolver
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/AlgorithmResolver.cs
    startLine: 14
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography
  summary: "\nResolves algorithm name to implementations.\n"
  example: []
  syntax:
    content: public class AlgorithmResolver
    content.vb: Public Class AlgorithmResolver
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Default
  commentId: F:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Default
  id: Default
  parent: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: AlgorithmResolver.Default
  fullName: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Default
  type: Field
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/AlgorithmResolver.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Default
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/AlgorithmResolver.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography
  syntax:
    content: public static readonly AlgorithmResolver Default
    content.vb: Public Shared ReadOnly Default As AlgorithmResolver
    return:
      type: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Item(System.String)
  commentId: P:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: AlgorithmResolver.Item[String]
  fullName: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Item[System.String]
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/AlgorithmResolver.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: this[]
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/AlgorithmResolver.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography
  summary: "\nReturns the implementation for an algorithm name\n"
  example: []
  syntax:
    content: public Algorithm this[string algorithmName] { get; set; }
    content.vb: Public Property Item(algorithmName As String) As Algorithm
    parameters:
    - id: algorithmName
      type: System.String
      description: The algorithm name
    return:
      type: Microsoft.Azure.KeyVault.Cryptography.Algorithm
      description: ''
  overload: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Item*
  nameWithType.vb: AlgorithmResolver.Item(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.AddAlgorithm(System.String,Microsoft.Azure.KeyVault.Cryptography.Algorithm)
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.AddAlgorithm(System.String,Microsoft.Azure.KeyVault.Cryptography.Algorithm)
  id: AddAlgorithm(System.String,Microsoft.Azure.KeyVault.Cryptography.Algorithm)
  parent: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver
  langs:
  - csharp
  - vb
  name: AddAlgorithm(String, Algorithm)
  nameWithType: AlgorithmResolver.AddAlgorithm(String, Algorithm)
  fullName: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.AddAlgorithm(System.String, Microsoft.Azure.KeyVault.Cryptography.Algorithm)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/AlgorithmResolver.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AddAlgorithm
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/AlgorithmResolver.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography
  summary: "\nAdds an algorithm to the resolver\n"
  example: []
  syntax:
    content: public void AddAlgorithm(string algorithmName, Algorithm provider)
    content.vb: Public Sub AddAlgorithm(algorithmName As String, provider As Algorithm)
    parameters:
    - id: algorithmName
      type: System.String
      description: The algorithm name
    - id: provider
      type: Microsoft.Azure.KeyVault.Cryptography.Algorithm
      description: The provider for the algorithm
  overload: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.AddAlgorithm*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.RemoveAlgorithm(System.String)
  commentId: M:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.RemoveAlgorithm(System.String)
  id: RemoveAlgorithm(System.String)
  parent: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver
  langs:
  - csharp
  - vb
  name: RemoveAlgorithm(String)
  nameWithType: AlgorithmResolver.RemoveAlgorithm(String)
  fullName: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.RemoveAlgorithm(System.String)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/AlgorithmResolver.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RemoveAlgorithm
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Cryptography/AlgorithmResolver.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.KeyVault.Cryptography
  namespace: Microsoft.Azure.KeyVault.Cryptography
  summary: "\nRemoves an algorithm from the resolver\n"
  example: []
  syntax:
    content: public void RemoveAlgorithm(string algorithmName)
    content.vb: Public Sub RemoveAlgorithm(algorithmName As String)
    parameters:
    - id: algorithmName
      type: System.String
      description: The algorithm name
  overload: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.RemoveAlgorithm*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.KeyVault.Cryptography
  commentId: N:Microsoft.Azure.KeyVault.Cryptography
  isExternal: false
  name: Microsoft.Azure.KeyVault.Cryptography
  nameWithType: Microsoft.Azure.KeyVault.Cryptography
  fullName: Microsoft.Azure.KeyVault.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver
  parent: Microsoft.Azure.KeyVault.Cryptography
  isExternal: false
  name: AlgorithmResolver
  nameWithType: AlgorithmResolver
  fullName: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver
- uid: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Item*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Item
  isExternal: false
  name: Item
  nameWithType: AlgorithmResolver.Item
  fullName: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.KeyVault.Cryptography.Algorithm
  commentId: T:Microsoft.Azure.KeyVault.Cryptography.Algorithm
  parent: Microsoft.Azure.KeyVault.Cryptography
  isExternal: false
  name: Algorithm
  nameWithType: Algorithm
  fullName: Microsoft.Azure.KeyVault.Cryptography.Algorithm
- uid: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.AddAlgorithm*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.AddAlgorithm
  isExternal: false
  name: AddAlgorithm
  nameWithType: AlgorithmResolver.AddAlgorithm
  fullName: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.AddAlgorithm
- uid: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.RemoveAlgorithm*
  commentId: Overload:Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.RemoveAlgorithm
  isExternal: false
  name: RemoveAlgorithm
  nameWithType: AlgorithmResolver.RemoveAlgorithm
  fullName: Microsoft.Azure.KeyVault.Cryptography.AlgorithmResolver.RemoveAlgorithm
