### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  commentId: T:Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  id: X509CertificateProperties
  parent: Microsoft.Azure.KeyVault.Models
  children:
  - Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor
  - Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor(System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32})
  - Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Ekus
  - Microsoft.Azure.KeyVault.Models.X509CertificateProperties.KeyUsage
  - Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Subject
  - Microsoft.Azure.KeyVault.Models.X509CertificateProperties.SubjectAlternativeNames
  - Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Validate
  - Microsoft.Azure.KeyVault.Models.X509CertificateProperties.ValidityInMonths
  langs:
  - csharp
  - vb
  name: X509CertificateProperties
  nameWithType: X509CertificateProperties
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: X509CertificateProperties
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nProperties of the X509 component of a certificate.\n"
  example: []
  syntax:
    content: public class X509CertificateProperties
    content.vb: Public Class X509CertificateProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor
  commentId: M:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  langs:
  - csharp
  - vb
  name: X509CertificateProperties()
  nameWithType: X509CertificateProperties.X509CertificateProperties()
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.X509CertificateProperties()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the X509CertificateProperties class.\n"
  example: []
  syntax:
    content: public X509CertificateProperties()
    content.vb: Public Sub New
  overload: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor(System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32})
  commentId: M:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor(System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32})
  id: '#ctor(System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32})'
  parent: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  langs:
  - csharp
  - vb
  name: X509CertificateProperties(String, IList<String>, SubjectAlternativeNames, IList<String>, Nullable<Int32>)
  nameWithType: X509CertificateProperties.X509CertificateProperties(String, IList<String>, SubjectAlternativeNames, IList<String>, Nullable<Int32>)
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.X509CertificateProperties(System.String, System.Collections.Generic.IList<System.String>, Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames, System.Collections.Generic.IList<System.String>, System.Nullable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the X509CertificateProperties class.\n"
  example: []
  syntax:
    content: public X509CertificateProperties(string subject = null, IList<string> ekus = null, SubjectAlternativeNames subjectAlternativeNames = null, IList<string> keyUsage = null, int ? validityInMonths = null)
    content.vb: Public Sub New(subject As String = Nothing, ekus As IList(Of String) = Nothing, subjectAlternativeNames As SubjectAlternativeNames = Nothing, keyUsage As IList(Of String) = Nothing, validityInMonths As Integer? = Nothing)
    parameters:
    - id: subject
      type: System.String
      description: >-
        The subject name. Should be a valid X509

        Distinguished Name.
    - id: ekus
      type: System.Collections.Generic.IList{System.String}
      description: The enhanced key usage.
    - id: subjectAlternativeNames
      type: Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames
      description: >-
        The subject alternative

        names.
    - id: keyUsage
      type: System.Collections.Generic.IList{System.String}
      description: List of key usages.
    - id: validityInMonths
      type: System.Nullable{System.Int32}
      description: >-
        The duration that the ceritifcate

        is valid in months.
  overload: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor*
  nameWithType.vb: X509CertificateProperties.X509CertificateProperties(String, IList(Of String), SubjectAlternativeNames, IList(Of String), Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.X509CertificateProperties(System.String, System.Collections.Generic.IList(Of System.String), Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames, System.Collections.Generic.IList(Of System.String), System.Nullable(Of System.Int32))
  name.vb: X509CertificateProperties(String, IList(Of String), SubjectAlternativeNames, IList(Of String), Nullable(Of Int32))
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Subject
  commentId: P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Subject
  id: Subject
  parent: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  langs:
  - csharp
  - vb
  name: Subject
  nameWithType: X509CertificateProperties.Subject
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Subject
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Subject
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the subject name. Should be a valid X509\nDistinguished Name.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "subject")]

      public string Subject { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="subject")>

      Public Property Subject As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Subject*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: subject
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Ekus
  commentId: P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Ekus
  id: Ekus
  parent: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  langs:
  - csharp
  - vb
  name: Ekus
  nameWithType: X509CertificateProperties.Ekus
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Ekus
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Ekus
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the enhanced key usage.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "ekus")]

      public IList<string> Ekus { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="ekus")>

      Public Property Ekus As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Ekus*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: ekus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.SubjectAlternativeNames
  commentId: P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.SubjectAlternativeNames
  id: SubjectAlternativeNames
  parent: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  langs:
  - csharp
  - vb
  name: SubjectAlternativeNames
  nameWithType: X509CertificateProperties.SubjectAlternativeNames
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.SubjectAlternativeNames
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubjectAlternativeNames
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
    startLine: 64
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the subject alternative names.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sans")]

      public SubjectAlternativeNames SubjectAlternativeNames { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sans")>

      Public Property SubjectAlternativeNames As SubjectAlternativeNames
    parameters: []
    return:
      type: Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames
  overload: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.SubjectAlternativeNames*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sans
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.KeyUsage
  commentId: P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.KeyUsage
  id: KeyUsage
  parent: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  langs:
  - csharp
  - vb
  name: KeyUsage
  nameWithType: X509CertificateProperties.KeyUsage
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.KeyUsage
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: KeyUsage
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets list of key usages.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "key_usage")]

      public IList<string> KeyUsage { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="key_usage")>

      Public Property KeyUsage As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.KeyUsage*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: key_usage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.ValidityInMonths
  commentId: P:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.ValidityInMonths
  id: ValidityInMonths
  parent: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  langs:
  - csharp
  - vb
  name: ValidityInMonths
  nameWithType: X509CertificateProperties.ValidityInMonths
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.ValidityInMonths
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ValidityInMonths
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets the duration that the ceritifcate is valid in months.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "validity_months")]

      public int ? ValidityInMonths { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="validity_months")>

      Public Property ValidityInMonths As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.ValidityInMonths*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: validity_months
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Validate
  commentId: M:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Validate
  id: Validate
  parent: Microsoft.Azure.KeyVault.Models.X509CertificateProperties
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: X509CertificateProperties.Validate()
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Validate()
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/X509CertificateProperties.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.#ctor
  isExternal: false
  name: X509CertificateProperties
  nameWithType: X509CertificateProperties.X509CertificateProperties
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.X509CertificateProperties
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames
  commentId: T:Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames
  parent: Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: SubjectAlternativeNames
  nameWithType: SubjectAlternativeNames
  fullName: Microsoft.Azure.KeyVault.Models.SubjectAlternativeNames
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Subject*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Subject
  isExternal: false
  name: Subject
  nameWithType: X509CertificateProperties.Subject
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Subject
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Ekus*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Ekus
  isExternal: false
  name: Ekus
  nameWithType: X509CertificateProperties.Ekus
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Ekus
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.SubjectAlternativeNames*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.SubjectAlternativeNames
  isExternal: false
  name: SubjectAlternativeNames
  nameWithType: X509CertificateProperties.SubjectAlternativeNames
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.SubjectAlternativeNames
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.KeyUsage*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.KeyUsage
  isExternal: false
  name: KeyUsage
  nameWithType: X509CertificateProperties.KeyUsage
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.KeyUsage
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.ValidityInMonths*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.ValidityInMonths
  isExternal: false
  name: ValidityInMonths
  nameWithType: X509CertificateProperties.ValidityInMonths
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.ValidityInMonths
- uid: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Validate*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Validate
  isExternal: false
  name: Validate
  nameWithType: X509CertificateProperties.Validate
  fullName: Microsoft.Azure.KeyVault.Models.X509CertificateProperties.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
