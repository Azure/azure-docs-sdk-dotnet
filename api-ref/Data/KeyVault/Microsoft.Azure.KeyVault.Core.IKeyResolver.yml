### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Core.IKeyResolver
  commentId: T:Microsoft.Azure.KeyVault.Core.IKeyResolver
  id: IKeyResolver
  parent: Microsoft.Azure.KeyVault.Core
  children:
  - Microsoft.Azure.KeyVault.Core.IKeyResolver.ResolveKeyAsync(System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IKeyResolver
  nameWithType: IKeyResolver
  fullName: Microsoft.Azure.KeyVault.Core.IKeyResolver
  type: Interface
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Core/IKeyResolver.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IKeyResolver
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Core/IKeyResolver.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.KeyVault.Core
  namespace: Microsoft.Azure.KeyVault.Core
  summary: "\nInterface for key resolvers.\n"
  example: []
  syntax:
    content: public interface IKeyResolver
    content.vb: Public Interface IKeyResolver
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Azure.KeyVault.Core.IKeyResolver.ResolveKeyAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.KeyVault.Core.IKeyResolver.ResolveKeyAsync(System.String,System.Threading.CancellationToken)
  id: ResolveKeyAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Azure.KeyVault.Core.IKeyResolver
  langs:
  - csharp
  - vb
  name: ResolveKeyAsync(String, CancellationToken)
  nameWithType: IKeyResolver.ResolveKeyAsync(String, CancellationToken)
  fullName: Microsoft.Azure.KeyVault.Core.IKeyResolver.ResolveKeyAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault.Core/IKeyResolver.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResolveKeyAsync
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault.Core/IKeyResolver.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.KeyVault.Core
  namespace: Microsoft.Azure.KeyVault.Core
  summary: "\nProvides an IKey implementation for the specified key identifier.\n"
  remarks: "Implementations should check the format of the kid to ensure that it is recognized. Null, rather than \nan exception, should be returned for unrecognized key identifiers to enable chaining of key resolvers."
  example: []
  syntax:
    content: Task<IKey> ResolveKeyAsync(string kid, CancellationToken token)
    content.vb: Function ResolveKeyAsync(kid As String, token As CancellationToken) As Task(Of IKey)
    parameters:
    - id: kid
      type: System.String
      description: The key identifier to resolve
    - id: token
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Core.IKey}
      description: The resolved IKey implementation or null
  overload: Microsoft.Azure.KeyVault.Core.IKeyResolver.ResolveKeyAsync*
references:
- uid: Microsoft.Azure.KeyVault.Core
  commentId: N:Microsoft.Azure.KeyVault.Core
  isExternal: false
  name: Microsoft.Azure.KeyVault.Core
  nameWithType: Microsoft.Azure.KeyVault.Core
  fullName: Microsoft.Azure.KeyVault.Core
- uid: Microsoft.Azure.KeyVault.Core.IKeyResolver.ResolveKeyAsync*
  commentId: Overload:Microsoft.Azure.KeyVault.Core.IKeyResolver.ResolveKeyAsync
  isExternal: false
  name: ResolveKeyAsync
  nameWithType: IKeyResolver.ResolveKeyAsync
  fullName: Microsoft.Azure.KeyVault.Core.IKeyResolver.ResolveKeyAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Core.IKey}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.KeyVault.Core.IKey}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IKey>
  nameWithType: Task<IKey>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.KeyVault.Core.IKey>
  nameWithType.vb: Task(Of IKey)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.KeyVault.Core.IKey)
  name.vb: Task(Of IKey)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.KeyVault.Core.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.Azure.KeyVault.Core.IKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.KeyVault.Core.IKey
    name: IKey
    nameWithType: IKey
    fullName: Microsoft.Azure.KeyVault.Core.IKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
