### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.KeyVault.Models.IssuerParameters
  commentId: T:Microsoft.Azure.KeyVault.Models.IssuerParameters
  id: IssuerParameters
  parent: Microsoft.Azure.KeyVault.Models
  children:
  - Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor
  - Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor(System.String,System.String)
  - Microsoft.Azure.KeyVault.Models.IssuerParameters.CertificateType
  - Microsoft.Azure.KeyVault.Models.IssuerParameters.Name
  langs:
  - csharp
  - vb
  name: IssuerParameters
  nameWithType: IssuerParameters
  fullName: Microsoft.Azure.KeyVault.Models.IssuerParameters
  type: Class
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/IssuerParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IssuerParameters
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/IssuerParameters.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nParameters for the issuer of the X509 component of a certificate.\n"
  example: []
  syntax:
    content: public class IssuerParameters
    content.vb: Public Class IssuerParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor
  commentId: M:Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.KeyVault.Models.IssuerParameters
  langs:
  - csharp
  - vb
  name: IssuerParameters()
  nameWithType: IssuerParameters.IssuerParameters()
  fullName: Microsoft.Azure.KeyVault.Models.IssuerParameters.IssuerParameters()
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/IssuerParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/IssuerParameters.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the IssuerParameters class.\n"
  example: []
  syntax:
    content: public IssuerParameters()
    content.vb: Public Sub New
  overload: Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.KeyVault.Models.IssuerParameters
  langs:
  - csharp
  - vb
  name: IssuerParameters(String, String)
  nameWithType: IssuerParameters.IssuerParameters(String, String)
  fullName: Microsoft.Azure.KeyVault.Models.IssuerParameters.IssuerParameters(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/IssuerParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/IssuerParameters.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nInitializes a new instance of the IssuerParameters class.\n"
  example: []
  syntax:
    content: public IssuerParameters(string name = null, string certificateType = null)
    content.vb: Public Sub New(name As String = Nothing, certificateType As String = Nothing)
    parameters:
    - id: name
      type: System.String
      description: >-
        Name of the referenced issuer object or

        reserved names e.g. 'Self', 'Unknown'.
    - id: certificateType
      type: System.String
      description: >-
        Type of certificate to be requested

        from the issuer provider.
  overload: Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.IssuerParameters.Name
  commentId: P:Microsoft.Azure.KeyVault.Models.IssuerParameters.Name
  id: Name
  parent: Microsoft.Azure.KeyVault.Models.IssuerParameters
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IssuerParameters.Name
  fullName: Microsoft.Azure.KeyVault.Models.IssuerParameters.Name
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/IssuerParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/IssuerParameters.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets name of the referenced issuer object or reserved\nnames e.g. 'Self', 'Unknown'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.IssuerParameters.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.KeyVault.Models.IssuerParameters.CertificateType
  commentId: P:Microsoft.Azure.KeyVault.Models.IssuerParameters.CertificateType
  id: CertificateType
  parent: Microsoft.Azure.KeyVault.Models.IssuerParameters
  langs:
  - csharp
  - vb
  name: CertificateType
  nameWithType: IssuerParameters.CertificateType
  fullName: Microsoft.Azure.KeyVault.Models.IssuerParameters.CertificateType
  type: Property
  source:
    remote:
      path: src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/IssuerParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CertificateType
    path: src/azure-sdk-for-net/src/KeyVault/Microsoft.Azure.KeyVault/Generated/Models/IssuerParameters.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.KeyVault
  namespace: Microsoft.Azure.KeyVault.Models
  summary: "\nGets or sets type of certificate to be requested from the issuer\nprovider.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "cty")]

      public string CertificateType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="cty")>

      Public Property CertificateType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.KeyVault.Models.IssuerParameters.CertificateType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: cty
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.KeyVault.Models
  commentId: N:Microsoft.Azure.KeyVault.Models
  isExternal: false
  name: Microsoft.Azure.KeyVault.Models
  nameWithType: Microsoft.Azure.KeyVault.Models
  fullName: Microsoft.Azure.KeyVault.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.IssuerParameters.#ctor
  isExternal: false
  name: IssuerParameters
  nameWithType: IssuerParameters.IssuerParameters
  fullName: Microsoft.Azure.KeyVault.Models.IssuerParameters.IssuerParameters
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.KeyVault.Models.IssuerParameters.Name*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.IssuerParameters.Name
  isExternal: false
  name: Name
  nameWithType: IssuerParameters.Name
  fullName: Microsoft.Azure.KeyVault.Models.IssuerParameters.Name
- uid: Microsoft.Azure.KeyVault.Models.IssuerParameters.CertificateType*
  commentId: Overload:Microsoft.Azure.KeyVault.Models.IssuerParameters.CertificateType
  isExternal: false
  name: CertificateType
  nameWithType: IssuerParameters.CertificateType
  fullName: Microsoft.Azure.KeyVault.Models.IssuerParameters.CertificateType
