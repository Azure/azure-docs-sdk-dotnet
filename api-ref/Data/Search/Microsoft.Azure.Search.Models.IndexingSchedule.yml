### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.Models.IndexingSchedule
  commentId: T:Microsoft.Azure.Search.Models.IndexingSchedule
  id: IndexingSchedule
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.IndexingSchedule.#ctor
  - Microsoft.Azure.Search.Models.IndexingSchedule.#ctor(System.TimeSpan,System.Nullable{System.DateTimeOffset})
  - Microsoft.Azure.Search.Models.IndexingSchedule.Interval
  - Microsoft.Azure.Search.Models.IndexingSchedule.StartTime
  - Microsoft.Azure.Search.Models.IndexingSchedule.Validate
  langs:
  - csharp
  - vb
  name: IndexingSchedule
  nameWithType: IndexingSchedule
  fullName: Microsoft.Azure.Search.Models.IndexingSchedule
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/IndexingSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IndexingSchedule
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/IndexingSchedule.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nRepresents a schedule for indexer execution.\n"
  example: []
  syntax:
    content: public class IndexingSchedule
    content.vb: Public Class IndexingSchedule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.IndexingSchedule.#ctor
  commentId: M:Microsoft.Azure.Search.Models.IndexingSchedule.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.IndexingSchedule
  langs:
  - csharp
  - vb
  name: IndexingSchedule()
  nameWithType: IndexingSchedule.IndexingSchedule()
  fullName: Microsoft.Azure.Search.Models.IndexingSchedule.IndexingSchedule()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/IndexingSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/IndexingSchedule.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the IndexingSchedule class.\n"
  example: []
  syntax:
    content: public IndexingSchedule()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Search.Models.IndexingSchedule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexingSchedule.#ctor(System.TimeSpan,System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.Azure.Search.Models.IndexingSchedule.#ctor(System.TimeSpan,System.Nullable{System.DateTimeOffset})
  id: '#ctor(System.TimeSpan,System.Nullable{System.DateTimeOffset})'
  parent: Microsoft.Azure.Search.Models.IndexingSchedule
  langs:
  - csharp
  - vb
  name: IndexingSchedule(TimeSpan, Nullable<DateTimeOffset>)
  nameWithType: IndexingSchedule.IndexingSchedule(TimeSpan, Nullable<DateTimeOffset>)
  fullName: Microsoft.Azure.Search.Models.IndexingSchedule.IndexingSchedule(System.TimeSpan, System.Nullable<System.DateTimeOffset>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/IndexingSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/IndexingSchedule.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the IndexingSchedule class.\n"
  example: []
  syntax:
    content: public IndexingSchedule(TimeSpan interval, DateTimeOffset? startTime = null)
    content.vb: Public Sub New(interval As TimeSpan, startTime As DateTimeOffset? = Nothing)
    parameters:
    - id: interval
      type: System.TimeSpan
    - id: startTime
      type: System.Nullable{System.DateTimeOffset}
  overload: Microsoft.Azure.Search.Models.IndexingSchedule.#ctor*
  nameWithType.vb: IndexingSchedule.IndexingSchedule(TimeSpan, Nullable(Of DateTimeOffset))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.IndexingSchedule.IndexingSchedule(System.TimeSpan, System.Nullable(Of System.DateTimeOffset))
  name.vb: IndexingSchedule(TimeSpan, Nullable(Of DateTimeOffset))
- uid: Microsoft.Azure.Search.Models.IndexingSchedule.Interval
  commentId: P:Microsoft.Azure.Search.Models.IndexingSchedule.Interval
  id: Interval
  parent: Microsoft.Azure.Search.Models.IndexingSchedule
  langs:
  - csharp
  - vb
  name: Interval
  nameWithType: IndexingSchedule.Interval
  fullName: Microsoft.Azure.Search.Models.IndexingSchedule.Interval
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/IndexingSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Interval
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/IndexingSchedule.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the interval of time between indexer executions.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "interval")]

      public TimeSpan Interval { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="interval")>

      Public Property Interval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  overload: Microsoft.Azure.Search.Models.IndexingSchedule.Interval*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: interval
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexingSchedule.StartTime
  commentId: P:Microsoft.Azure.Search.Models.IndexingSchedule.StartTime
  id: StartTime
  parent: Microsoft.Azure.Search.Models.IndexingSchedule
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: IndexingSchedule.StartTime
  fullName: Microsoft.Azure.Search.Models.IndexingSchedule.StartTime
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/IndexingSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/IndexingSchedule.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the time when an indexer should start running.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startTime")]

      public DateTimeOffset? StartTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="startTime")>

      Public Property StartTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
  overload: Microsoft.Azure.Search.Models.IndexingSchedule.StartTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexingSchedule.Validate
  commentId: M:Microsoft.Azure.Search.Models.IndexingSchedule.Validate
  id: Validate
  parent: Microsoft.Azure.Search.Models.IndexingSchedule
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: IndexingSchedule.Validate()
  fullName: Microsoft.Azure.Search.Models.IndexingSchedule.Validate()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/IndexingSchedule.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/IndexingSchedule.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Search.Models.IndexingSchedule.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.IndexingSchedule.#ctor*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexingSchedule.#ctor
  isExternal: false
  name: IndexingSchedule
  nameWithType: IndexingSchedule.IndexingSchedule
  fullName: Microsoft.Azure.Search.Models.IndexingSchedule.IndexingSchedule
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.IndexingSchedule.Interval*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexingSchedule.Interval
  isExternal: false
  name: Interval
  nameWithType: IndexingSchedule.Interval
  fullName: Microsoft.Azure.Search.Models.IndexingSchedule.Interval
- uid: Microsoft.Azure.Search.Models.IndexingSchedule.StartTime*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexingSchedule.StartTime
  isExternal: false
  name: StartTime
  nameWithType: IndexingSchedule.StartTime
  fullName: Microsoft.Azure.Search.Models.IndexingSchedule.StartTime
- uid: Microsoft.Azure.Search.Models.IndexingSchedule.Validate*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexingSchedule.Validate
  isExternal: false
  name: Validate
  nameWithType: IndexingSchedule.Validate
  fullName: Microsoft.Azure.Search.Models.IndexingSchedule.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
