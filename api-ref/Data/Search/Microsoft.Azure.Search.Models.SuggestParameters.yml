### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.Models.SuggestParameters
  commentId: T:Microsoft.Azure.Search.Models.SuggestParameters
  id: SuggestParameters
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.SuggestParameters.#ctor
  - Microsoft.Azure.Search.Models.SuggestParameters.Filter
  - Microsoft.Azure.Search.Models.SuggestParameters.HighlightPostTag
  - Microsoft.Azure.Search.Models.SuggestParameters.HighlightPreTag
  - Microsoft.Azure.Search.Models.SuggestParameters.MinimumCoverage
  - Microsoft.Azure.Search.Models.SuggestParameters.OrderBy
  - Microsoft.Azure.Search.Models.SuggestParameters.SearchFields
  - Microsoft.Azure.Search.Models.SuggestParameters.Select
  - Microsoft.Azure.Search.Models.SuggestParameters.Top
  - Microsoft.Azure.Search.Models.SuggestParameters.ToString
  - Microsoft.Azure.Search.Models.SuggestParameters.UseFuzzyMatching
  langs:
  - csharp
  - vb
  name: SuggestParameters
  nameWithType: SuggestParameters
  fullName: Microsoft.Azure.Search.Models.SuggestParameters
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SuggestParameters
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nParameters for filtering, sorting, fuzzy matching, and other\nsuggestions query behaviors.\n"
  example: []
  syntax:
    content: public class SuggestParameters
    content.vb: Public Class SuggestParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.SuggestParameters.#ctor
  commentId: M:Microsoft.Azure.Search.Models.SuggestParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.SuggestParameters
  langs:
  - csharp
  - vb
  name: SuggestParameters()
  nameWithType: SuggestParameters.SuggestParameters()
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.SuggestParameters()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the SuggestParameters class.\n"
  example: []
  syntax:
    content: public SuggestParameters()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Search.Models.SuggestParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParameters.Filter
  commentId: P:Microsoft.Azure.Search.Models.SuggestParameters.Filter
  id: Filter
  parent: Microsoft.Azure.Search.Models.SuggestParameters
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: SuggestParameters.Filter
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.Filter
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Filter
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the OData $filter expression to apply to the\nsuggestions query.\n"
  example: []
  syntax:
    content: public string Filter { get; set; }
    content.vb: Public Property Filter As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Search.Models.SuggestParameters.Filter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParameters.HighlightPostTag
  commentId: P:Microsoft.Azure.Search.Models.SuggestParameters.HighlightPostTag
  id: HighlightPostTag
  parent: Microsoft.Azure.Search.Models.SuggestParameters
  langs:
  - csharp
  - vb
  name: HighlightPostTag
  nameWithType: SuggestParameters.HighlightPostTag
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.HighlightPostTag
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HighlightPostTag
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a string tag that is appended to hit highlights. Must\nbe set with HighlightPreTag. If omitted, hit highlighting of\nsuggestions is disabled.\n"
  example: []
  syntax:
    content: public string HighlightPostTag { get; set; }
    content.vb: Public Property HighlightPostTag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Search.Models.SuggestParameters.HighlightPostTag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParameters.HighlightPreTag
  commentId: P:Microsoft.Azure.Search.Models.SuggestParameters.HighlightPreTag
  id: HighlightPreTag
  parent: Microsoft.Azure.Search.Models.SuggestParameters
  langs:
  - csharp
  - vb
  name: HighlightPreTag
  nameWithType: SuggestParameters.HighlightPreTag
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.HighlightPreTag
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: HighlightPreTag
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a string tag that is prepended to hit highlights.\nMust be set with HighlightPostTag. If omitted, hit highlighting\nof suggestions is disabled.\n"
  example: []
  syntax:
    content: public string HighlightPreTag { get; set; }
    content.vb: Public Property HighlightPreTag As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Search.Models.SuggestParameters.HighlightPreTag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParameters.MinimumCoverage
  commentId: P:Microsoft.Azure.Search.Models.SuggestParameters.MinimumCoverage
  id: MinimumCoverage
  parent: Microsoft.Azure.Search.Models.SuggestParameters
  langs:
  - csharp
  - vb
  name: MinimumCoverage
  nameWithType: SuggestParameters.MinimumCoverage
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.MinimumCoverage
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MinimumCoverage
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a number between 0 and 100 indicating the percentage\nof the index that must be covered by a suggestion query in order\nfor the query to be reported as a success. This parameter can be\nuseful for ensuring search availability even for services with\nonly one replica. The default is 80.\n"
  example: []
  syntax:
    content: public double ? MinimumCoverage { get; set; }
    content.vb: Public Property MinimumCoverage As Double?
    parameters: []
    return:
      type: System.Nullable{System.Double}
  overload: Microsoft.Azure.Search.Models.SuggestParameters.MinimumCoverage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParameters.OrderBy
  commentId: P:Microsoft.Azure.Search.Models.SuggestParameters.OrderBy
  id: OrderBy
  parent: Microsoft.Azure.Search.Models.SuggestParameters
  langs:
  - csharp
  - vb
  name: OrderBy
  nameWithType: SuggestParameters.OrderBy
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.OrderBy
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: OrderBy
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the list of OData $orderby expressions by which to\nsort the results. Each expression can be either a field name or a\ncall to the geo.distance() function. Each expression can be\nfollowed by asc to indicate ascending, and desc to indicate\ndescending. The default is ascending order. Ties will be broken\nby the match scores of documents. If no OrderBy is specified, the\ndefault sort order is descending by document match score. There\ncan be at most 32 Orderby clauses.\n"
  example: []
  syntax:
    content: public IList<string> OrderBy { get; set; }
    content.vb: Public Property OrderBy As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Search.Models.SuggestParameters.OrderBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParameters.SearchFields
  commentId: P:Microsoft.Azure.Search.Models.SuggestParameters.SearchFields
  id: SearchFields
  parent: Microsoft.Azure.Search.Models.SuggestParameters
  langs:
  - csharp
  - vb
  name: SearchFields
  nameWithType: SuggestParameters.SearchFields
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.SearchFields
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SearchFields
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the list of field names to consider when querying for\nsuggestions.\n"
  example: []
  syntax:
    content: public IList<string> SearchFields { get; set; }
    content.vb: Public Property SearchFields As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Search.Models.SuggestParameters.SearchFields*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParameters.Select
  commentId: P:Microsoft.Azure.Search.Models.SuggestParameters.Select
  id: Select
  parent: Microsoft.Azure.Search.Models.SuggestParameters
  langs:
  - csharp
  - vb
  name: Select
  nameWithType: SuggestParameters.Select
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.Select
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Select
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
    startLine: 78
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the list of fields to retrieve. If unspecified, all\nfields marked as retrievable in the schema are included.\n"
  example: []
  syntax:
    content: public IList<string> Select { get; set; }
    content.vb: Public Property Select As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Search.Models.SuggestParameters.Select*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParameters.Top
  commentId: P:Microsoft.Azure.Search.Models.SuggestParameters.Top
  id: Top
  parent: Microsoft.Azure.Search.Models.SuggestParameters
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: SuggestParameters.Top
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.Top
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Top
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
    startLine: 84
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the number of suggestions to retrieve. This must be a\nvalue between 1 and 100. The default is to 5.\n"
  example: []
  syntax:
    content: public int ? Top { get; set; }
    content.vb: Public Property Top As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Search.Models.SuggestParameters.Top*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParameters.UseFuzzyMatching
  commentId: P:Microsoft.Azure.Search.Models.SuggestParameters.UseFuzzyMatching
  id: UseFuzzyMatching
  parent: Microsoft.Azure.Search.Models.SuggestParameters
  langs:
  - csharp
  - vb
  name: UseFuzzyMatching
  nameWithType: SuggestParameters.UseFuzzyMatching
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.UseFuzzyMatching
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UseFuzzyMatching
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether to use fuzzy matching for\nthe suggestion query. Default is false. when set to true, the\nquery will find suggestions even if there's a substituted or\nmissing character in the search text. While this provides a\nbetter experience in some scenarios it comes at a performance\ncost as fuzzy suggestion searches are slower and consume more\nresources.\n"
  example: []
  syntax:
    content: public bool UseFuzzyMatching { get; set; }
    content.vb: Public Property UseFuzzyMatching As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Search.Models.SuggestParameters.UseFuzzyMatching*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.SuggestParameters.ToString
  commentId: M:Microsoft.Azure.Search.Models.SuggestParameters.ToString
  id: ToString
  parent: Microsoft.Azure.Search.Models.SuggestParameters
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SuggestParameters.ToString()
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.ToString()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ToString
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/SuggestParameters.cs
    startLine: 101
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nConverts the SuggestParameters instance to a URL query string.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A URL query string containing all the suggestion parameters.
  overridden: System.Object.ToString
  overload: Microsoft.Azure.Search.Models.SuggestParameters.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.SuggestParameters.#ctor*
  commentId: Overload:Microsoft.Azure.Search.Models.SuggestParameters.#ctor
  isExternal: false
  name: SuggestParameters
  nameWithType: SuggestParameters.SuggestParameters
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.SuggestParameters
- uid: Microsoft.Azure.Search.Models.SuggestParameters.Filter*
  commentId: Overload:Microsoft.Azure.Search.Models.SuggestParameters.Filter
  isExternal: false
  name: Filter
  nameWithType: SuggestParameters.Filter
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.Filter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Search.Models.SuggestParameters.HighlightPostTag*
  commentId: Overload:Microsoft.Azure.Search.Models.SuggestParameters.HighlightPostTag
  isExternal: false
  name: HighlightPostTag
  nameWithType: SuggestParameters.HighlightPostTag
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.HighlightPostTag
- uid: Microsoft.Azure.Search.Models.SuggestParameters.HighlightPreTag*
  commentId: Overload:Microsoft.Azure.Search.Models.SuggestParameters.HighlightPreTag
  isExternal: false
  name: HighlightPreTag
  nameWithType: SuggestParameters.HighlightPreTag
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.HighlightPreTag
- uid: Microsoft.Azure.Search.Models.SuggestParameters.MinimumCoverage*
  commentId: Overload:Microsoft.Azure.Search.Models.SuggestParameters.MinimumCoverage
  isExternal: false
  name: MinimumCoverage
  nameWithType: SuggestParameters.MinimumCoverage
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.MinimumCoverage
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullname.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.SuggestParameters.OrderBy*
  commentId: Overload:Microsoft.Azure.Search.Models.SuggestParameters.OrderBy
  isExternal: false
  name: OrderBy
  nameWithType: SuggestParameters.OrderBy
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.OrderBy
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Search.Models.SuggestParameters.SearchFields*
  commentId: Overload:Microsoft.Azure.Search.Models.SuggestParameters.SearchFields
  isExternal: false
  name: SearchFields
  nameWithType: SuggestParameters.SearchFields
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.SearchFields
- uid: Microsoft.Azure.Search.Models.SuggestParameters.Select*
  commentId: Overload:Microsoft.Azure.Search.Models.SuggestParameters.Select
  isExternal: false
  name: Select
  nameWithType: SuggestParameters.Select
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.Select
- uid: Microsoft.Azure.Search.Models.SuggestParameters.Top*
  commentId: Overload:Microsoft.Azure.Search.Models.SuggestParameters.Top
  isExternal: false
  name: Top
  nameWithType: SuggestParameters.Top
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.Top
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.SuggestParameters.UseFuzzyMatching*
  commentId: Overload:Microsoft.Azure.Search.Models.SuggestParameters.UseFuzzyMatching
  isExternal: false
  name: UseFuzzyMatching
  nameWithType: SuggestParameters.UseFuzzyMatching
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.UseFuzzyMatching
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.SuggestParameters.ToString*
  commentId: Overload:Microsoft.Azure.Search.Models.SuggestParameters.ToString
  isExternal: false
  name: ToString
  nameWithType: SuggestParameters.ToString
  fullName: Microsoft.Azure.Search.Models.SuggestParameters.ToString
