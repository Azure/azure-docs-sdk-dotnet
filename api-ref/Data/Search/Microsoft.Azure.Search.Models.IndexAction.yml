### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.Models.IndexAction
  commentId: T:Microsoft.Azure.Search.Models.IndexAction
  id: IndexAction
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.IndexAction.Delete(Microsoft.Azure.Search.Models.Document)
  - Microsoft.Azure.Search.Models.IndexAction.Delete(System.String,System.String)
  - Microsoft.Azure.Search.Models.IndexAction.Delete``1(``0)
  - Microsoft.Azure.Search.Models.IndexAction.Merge(Microsoft.Azure.Search.Models.Document)
  - Microsoft.Azure.Search.Models.IndexAction.Merge``1(``0)
  - Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload(Microsoft.Azure.Search.Models.Document)
  - Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload``1(``0)
  - Microsoft.Azure.Search.Models.IndexAction.Upload(Microsoft.Azure.Search.Models.Document)
  - Microsoft.Azure.Search.Models.IndexAction.Upload``1(``0)
  langs:
  - csharp
  - vb
  name: IndexAction
  nameWithType: IndexAction
  fullName: Microsoft.Azure.Search.Models.IndexAction
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IndexAction
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nRepresents an index action that operates on a document.\n"
  example: []
  syntax:
    content: 'public class IndexAction : IndexActionBase<Document>'
    content.vb: >-
      Public Class IndexAction
          Inherits IndexActionBase(Of Document)
  inheritance:
  - System.Object
  - Microsoft.Azure.Search.Models.IndexActionBase{Microsoft.Azure.Search.Models.Document}
  inheritedMembers:
  - Microsoft.Azure.Search.Models.IndexActionBase{Microsoft.Azure.Search.Models.Document}.ActionType
  - Microsoft.Azure.Search.Models.IndexActionBase{Microsoft.Azure.Search.Models.Document}.Document
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.IndexAction.Delete(System.String,System.String)
  commentId: M:Microsoft.Azure.Search.Models.IndexAction.Delete(System.String,System.String)
  id: Delete(System.String,System.String)
  parent: Microsoft.Azure.Search.Models.IndexAction
  langs:
  - csharp
  - vb
  name: Delete(String, String)
  nameWithType: IndexAction.Delete(String, String)
  fullName: Microsoft.Azure.Search.Models.IndexAction.Delete(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new IndexAction for deleting a document.\n"
  example: []
  syntax:
    content: public static IndexAction Delete(string keyName, string keyValue)
    content.vb: Public Shared Function Delete(keyName As String, keyValue As String) As IndexAction
    parameters:
    - id: keyName
      type: System.String
      description: The name of the key field of the index.
    - id: keyValue
      type: System.String
      description: The key of the document to delete.
    return:
      type: Microsoft.Azure.Search.Models.IndexAction
      description: A new IndexAction.
  overload: Microsoft.Azure.Search.Models.IndexAction.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.IndexAction.Delete(Microsoft.Azure.Search.Models.Document)
  commentId: M:Microsoft.Azure.Search.Models.IndexAction.Delete(Microsoft.Azure.Search.Models.Document)
  id: Delete(Microsoft.Azure.Search.Models.Document)
  parent: Microsoft.Azure.Search.Models.IndexAction
  langs:
  - csharp
  - vb
  name: Delete(Document)
  nameWithType: IndexAction.Delete(Document)
  fullName: Microsoft.Azure.Search.Models.IndexAction.Delete(Microsoft.Azure.Search.Models.Document)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new IndexAction for deleting a document.\n"
  example: []
  syntax:
    content: public static IndexAction Delete(Document document)
    content.vb: Public Shared Function Delete(document As Document) As IndexAction
    parameters:
    - id: document
      type: Microsoft.Azure.Search.Models.Document
      description: The document to delete; Fields other than the key are ignored.
    return:
      type: Microsoft.Azure.Search.Models.IndexAction
      description: A new IndexAction.
  overload: Microsoft.Azure.Search.Models.IndexAction.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.IndexAction.Delete``1(``0)
  commentId: M:Microsoft.Azure.Search.Models.IndexAction.Delete``1(``0)
  id: Delete``1(``0)
  parent: Microsoft.Azure.Search.Models.IndexAction
  langs:
  - csharp
  - vb
  name: Delete<T>(T)
  nameWithType: IndexAction.Delete<T>(T)
  fullName: Microsoft.Azure.Search.Models.IndexAction.Delete<T>(T)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new IndexAction for deleting a document.\n"
  example: []
  syntax:
    content: 'public static IndexAction<T> Delete<T>(T document)where T : class'
    content.vb: Public Shared Function Delete(Of T As Class)(document As T) As IndexAction(Of T)
    parameters:
    - id: document
      type: '{T}'
      description: The document to delete; Fields other than the key are ignored.
    typeParameters:
    - id: T
      description: "\nThe CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.\n"
    return:
      type: Microsoft.Azure.Search.Models.IndexAction{{T}}
      description: A new IndexAction.
  overload: Microsoft.Azure.Search.Models.IndexAction.Delete*
  nameWithType.vb: IndexAction.Delete(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Search.Models.IndexAction.Delete(Of T)(T)
  name.vb: Delete(Of T)(T)
- uid: Microsoft.Azure.Search.Models.IndexAction.Merge(Microsoft.Azure.Search.Models.Document)
  commentId: M:Microsoft.Azure.Search.Models.IndexAction.Merge(Microsoft.Azure.Search.Models.Document)
  id: Merge(Microsoft.Azure.Search.Models.Document)
  parent: Microsoft.Azure.Search.Models.IndexAction
  langs:
  - csharp
  - vb
  name: Merge(Document)
  nameWithType: IndexAction.Merge(Document)
  fullName: Microsoft.Azure.Search.Models.IndexAction.Merge(Microsoft.Azure.Search.Models.Document)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Merge
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new IndexAction for merging a document into an existing document in the index.\n"
  example: []
  syntax:
    content: public static IndexAction Merge(Document document)
    content.vb: Public Shared Function Merge(document As Document) As IndexAction
    parameters:
    - id: document
      type: Microsoft.Azure.Search.Models.Document
      description: The document to merge; Set only the fields that you want to change.
    return:
      type: Microsoft.Azure.Search.Models.IndexAction
      description: A new IndexAction.
  overload: Microsoft.Azure.Search.Models.IndexAction.Merge*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.IndexAction.Merge``1(``0)
  commentId: M:Microsoft.Azure.Search.Models.IndexAction.Merge``1(``0)
  id: Merge``1(``0)
  parent: Microsoft.Azure.Search.Models.IndexAction
  langs:
  - csharp
  - vb
  name: Merge<T>(T)
  nameWithType: IndexAction.Merge<T>(T)
  fullName: Microsoft.Azure.Search.Models.IndexAction.Merge<T>(T)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Merge
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new IndexAction for merging a document into an existing document in the index.\n"
  remarks: "\nIf type T contains non-nullable value-typed properties, these properties may not merge correctly. If you\ndo not set such a property, it will automatically take its default value (for example, 0 for int or false\nfor bool), which will override the value of the property currently stored in the index, even if this was\nnot your intent. For this reason, it is strongly recommended that you always declare value-typed\nproperties to be nullable in type T.\n"
  example: []
  syntax:
    content: 'public static IndexAction<T> Merge<T>(T document)where T : class'
    content.vb: Public Shared Function Merge(Of T As Class)(document As T) As IndexAction(Of T)
    parameters:
    - id: document
      type: '{T}'
      description: The document to merge; Set only the properties that you want to change.
    typeParameters:
    - id: T
      description: "\nThe CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.\n"
    return:
      type: Microsoft.Azure.Search.Models.IndexAction{{T}}
      description: A new IndexAction.
  overload: Microsoft.Azure.Search.Models.IndexAction.Merge*
  nameWithType.vb: IndexAction.Merge(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Search.Models.IndexAction.Merge(Of T)(T)
  name.vb: Merge(Of T)(T)
- uid: Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload(Microsoft.Azure.Search.Models.Document)
  commentId: M:Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload(Microsoft.Azure.Search.Models.Document)
  id: MergeOrUpload(Microsoft.Azure.Search.Models.Document)
  parent: Microsoft.Azure.Search.Models.IndexAction
  langs:
  - csharp
  - vb
  name: MergeOrUpload(Document)
  nameWithType: IndexAction.MergeOrUpload(Document)
  fullName: Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload(Microsoft.Azure.Search.Models.Document)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MergeOrUpload
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new IndexAction for uploading a document to the index, or merging it into an existing document\nif it already exists in the index.\n"
  example: []
  syntax:
    content: public static IndexAction MergeOrUpload(Document document)
    content.vb: Public Shared Function MergeOrUpload(document As Document) As IndexAction
    parameters:
    - id: document
      type: Microsoft.Azure.Search.Models.Document
      description: The document to merge or upload.
    return:
      type: Microsoft.Azure.Search.Models.IndexAction
      description: A new IndexAction.
  overload: Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload``1(``0)
  commentId: M:Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload``1(``0)
  id: MergeOrUpload``1(``0)
  parent: Microsoft.Azure.Search.Models.IndexAction
  langs:
  - csharp
  - vb
  name: MergeOrUpload<T>(T)
  nameWithType: IndexAction.MergeOrUpload<T>(T)
  fullName: Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload<T>(T)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MergeOrUpload
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
    startLine: 113
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new IndexAction for uploading a document to the index, or merging it into an existing document\nif it already exists in the index.\n"
  remarks: "\nIf type T contains non-nullable value-typed properties, these properties may not merge correctly. If you\ndo not set such a property, it will automatically take its default value (for example, 0 for int or false\nfor bool), which will override the value of the property currently stored in the index, even if this was\nnot your intent. For this reason, it is strongly recommended that you always declare value-typed\nproperties to be nullable in type T.\n"
  example: []
  syntax:
    content: 'public static IndexAction<T> MergeOrUpload<T>(T document)where T : class'
    content.vb: Public Shared Function MergeOrUpload(Of T As Class)(document As T) As IndexAction(Of T)
    parameters:
    - id: document
      type: '{T}'
      description: The document to merge or upload.
    typeParameters:
    - id: T
      description: "\nThe CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.\n"
    return:
      type: Microsoft.Azure.Search.Models.IndexAction{{T}}
      description: A new IndexAction.
  overload: Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload*
  nameWithType.vb: IndexAction.MergeOrUpload(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload(Of T)(T)
  name.vb: MergeOrUpload(Of T)(T)
- uid: Microsoft.Azure.Search.Models.IndexAction.Upload(Microsoft.Azure.Search.Models.Document)
  commentId: M:Microsoft.Azure.Search.Models.IndexAction.Upload(Microsoft.Azure.Search.Models.Document)
  id: Upload(Microsoft.Azure.Search.Models.Document)
  parent: Microsoft.Azure.Search.Models.IndexAction
  langs:
  - csharp
  - vb
  name: Upload(Document)
  nameWithType: IndexAction.Upload(Document)
  fullName: Microsoft.Azure.Search.Models.IndexAction.Upload(Microsoft.Azure.Search.Models.Document)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Upload
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new IndexAction for uploading a document to the index.\n"
  example: []
  syntax:
    content: public static IndexAction Upload(Document document)
    content.vb: Public Shared Function Upload(document As Document) As IndexAction
    parameters:
    - id: document
      type: Microsoft.Azure.Search.Models.Document
      description: The document to upload.
    return:
      type: Microsoft.Azure.Search.Models.IndexAction
      description: A new IndexAction.
  overload: Microsoft.Azure.Search.Models.IndexAction.Upload*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.IndexAction.Upload``1(``0)
  commentId: M:Microsoft.Azure.Search.Models.IndexAction.Upload``1(``0)
  id: Upload``1(``0)
  parent: Microsoft.Azure.Search.Models.IndexAction
  langs:
  - csharp
  - vb
  name: Upload<T>(T)
  nameWithType: IndexAction.Upload<T>(T)
  fullName: Microsoft.Azure.Search.Models.IndexAction.Upload<T>(T)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Upload
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexAction.cs
    startLine: 136
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new IndexAction for uploading a document to the index.\n"
  example: []
  syntax:
    content: 'public static IndexAction<T> Upload<T>(T document)where T : class'
    content.vb: Public Shared Function Upload(Of T As Class)(document As T) As IndexAction(Of T)
    parameters:
    - id: document
      type: '{T}'
      description: The document to upload.
    typeParameters:
    - id: T
      description: "\nThe CLR type that maps to the index schema. Instances of this type can be stored as documents in the index.\n"
    return:
      type: Microsoft.Azure.Search.Models.IndexAction{{T}}
      description: A new IndexAction.
  overload: Microsoft.Azure.Search.Models.IndexAction.Upload*
  nameWithType.vb: IndexAction.Upload(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Search.Models.IndexAction.Upload(Of T)(T)
  name.vb: Upload(Of T)(T)
references:
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Search.Models.IndexActionBase{Microsoft.Azure.Search.Models.Document}
  commentId: T:Microsoft.Azure.Search.Models.IndexActionBase{Microsoft.Azure.Search.Models.Document}
  parent: Microsoft.Azure.Search.Models
  definition: Microsoft.Azure.Search.Models.IndexActionBase`1
  name: IndexActionBase<Document>
  nameWithType: IndexActionBase<Document>
  fullName: Microsoft.Azure.Search.Models.IndexActionBase<Microsoft.Azure.Search.Models.Document>
  nameWithType.vb: IndexActionBase(Of Document)
  fullname.vb: Microsoft.Azure.Search.Models.IndexActionBase(Of Microsoft.Azure.Search.Models.Document)
  name.vb: IndexActionBase(Of Document)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.IndexActionBase`1
    name: IndexActionBase
    nameWithType: IndexActionBase
    fullName: Microsoft.Azure.Search.Models.IndexActionBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.Document
    name: Document
    nameWithType: Document
    fullName: Microsoft.Azure.Search.Models.Document
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.IndexActionBase`1
    name: IndexActionBase
    nameWithType: IndexActionBase
    fullName: Microsoft.Azure.Search.Models.IndexActionBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.Document
    name: Document
    nameWithType: Document
    fullName: Microsoft.Azure.Search.Models.Document
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.IndexActionBase{Microsoft.Azure.Search.Models.Document}.ActionType
  commentId: P:Microsoft.Azure.Search.Models.IndexActionBase{Microsoft.Azure.Search.Models.Document}.ActionType
  parent: Microsoft.Azure.Search.Models.IndexActionBase{Microsoft.Azure.Search.Models.Document}
  definition: Microsoft.Azure.Search.Models.IndexActionBase`1.ActionType
  name: ActionType
  nameWithType: IndexActionBase<Document>.ActionType
  fullName: Microsoft.Azure.Search.Models.IndexActionBase<Microsoft.Azure.Search.Models.Document>.ActionType
  nameWithType.vb: IndexActionBase(Of Document).ActionType
  fullname.vb: Microsoft.Azure.Search.Models.IndexActionBase(Of Microsoft.Azure.Search.Models.Document).ActionType
- uid: Microsoft.Azure.Search.Models.IndexActionBase{Microsoft.Azure.Search.Models.Document}.Document
  commentId: P:Microsoft.Azure.Search.Models.IndexActionBase{Microsoft.Azure.Search.Models.Document}.Document
  parent: Microsoft.Azure.Search.Models.IndexActionBase{Microsoft.Azure.Search.Models.Document}
  definition: Microsoft.Azure.Search.Models.IndexActionBase`1.Document
  name: Document
  nameWithType: IndexActionBase<Document>.Document
  fullName: Microsoft.Azure.Search.Models.IndexActionBase<Microsoft.Azure.Search.Models.Document>.Document
  nameWithType.vb: IndexActionBase(Of Document).Document
  fullname.vb: Microsoft.Azure.Search.Models.IndexActionBase(Of Microsoft.Azure.Search.Models.Document).Document
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.IndexActionBase`1
  commentId: T:Microsoft.Azure.Search.Models.IndexActionBase`1
  isExternal: false
  name: IndexActionBase<T>
  nameWithType: IndexActionBase<T>
  fullName: Microsoft.Azure.Search.Models.IndexActionBase<T>
  nameWithType.vb: IndexActionBase(Of T)
  fullname.vb: Microsoft.Azure.Search.Models.IndexActionBase(Of T)
  name.vb: IndexActionBase(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.IndexActionBase`1
    name: IndexActionBase
    nameWithType: IndexActionBase
    fullName: Microsoft.Azure.Search.Models.IndexActionBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.IndexActionBase`1
    name: IndexActionBase
    nameWithType: IndexActionBase
    fullName: Microsoft.Azure.Search.Models.IndexActionBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.IndexActionBase`1.ActionType
  commentId: P:Microsoft.Azure.Search.Models.IndexActionBase`1.ActionType
  isExternal: false
  name: ActionType
  nameWithType: IndexActionBase<T>.ActionType
  fullName: Microsoft.Azure.Search.Models.IndexActionBase<T>.ActionType
  nameWithType.vb: IndexActionBase(Of T).ActionType
  fullname.vb: Microsoft.Azure.Search.Models.IndexActionBase(Of T).ActionType
- uid: Microsoft.Azure.Search.Models.IndexActionBase`1.Document
  commentId: P:Microsoft.Azure.Search.Models.IndexActionBase`1.Document
  isExternal: false
  name: Document
  nameWithType: IndexActionBase<T>.Document
  fullName: Microsoft.Azure.Search.Models.IndexActionBase<T>.Document
  nameWithType.vb: IndexActionBase(Of T).Document
  fullname.vb: Microsoft.Azure.Search.Models.IndexActionBase(Of T).Document
- uid: Microsoft.Azure.Search.Models.IndexAction.Delete*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexAction.Delete
  isExternal: false
  name: Delete
  nameWithType: IndexAction.Delete
  fullName: Microsoft.Azure.Search.Models.IndexAction.Delete
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Search.Models.IndexAction
  commentId: T:Microsoft.Azure.Search.Models.IndexAction
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: IndexAction
  nameWithType: IndexAction
  fullName: Microsoft.Azure.Search.Models.IndexAction
- uid: Microsoft.Azure.Search.Models.Document
  commentId: T:Microsoft.Azure.Search.Models.Document
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: Document
  nameWithType: Document
  fullName: Microsoft.Azure.Search.Models.Document
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Azure.Search.Models.IndexAction{{T}}
  commentId: T:Microsoft.Azure.Search.Models.IndexAction{``0}
  parent: Microsoft.Azure.Search.Models
  definition: Microsoft.Azure.Search.Models.IndexAction`1
  name: IndexAction<T>
  nameWithType: IndexAction<T>
  fullName: Microsoft.Azure.Search.Models.IndexAction<T>
  nameWithType.vb: IndexAction(Of T)
  fullname.vb: Microsoft.Azure.Search.Models.IndexAction(Of T)
  name.vb: IndexAction(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.IndexAction`1
    name: IndexAction
    nameWithType: IndexAction
    fullName: Microsoft.Azure.Search.Models.IndexAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.IndexAction`1
    name: IndexAction
    nameWithType: IndexAction
    fullName: Microsoft.Azure.Search.Models.IndexAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Azure.Search.Models.IndexAction`1
  commentId: T:Microsoft.Azure.Search.Models.IndexAction`1
  isExternal: false
  name: IndexAction<T>
  nameWithType: IndexAction<T>
  fullName: Microsoft.Azure.Search.Models.IndexAction<T>
  nameWithType.vb: IndexAction(Of T)
  fullname.vb: Microsoft.Azure.Search.Models.IndexAction(Of T)
  name.vb: IndexAction(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.IndexAction`1
    name: IndexAction
    nameWithType: IndexAction
    fullName: Microsoft.Azure.Search.Models.IndexAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.IndexAction`1
    name: IndexAction
    nameWithType: IndexAction
    fullName: Microsoft.Azure.Search.Models.IndexAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.IndexAction.Merge*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexAction.Merge
  isExternal: false
  name: Merge
  nameWithType: IndexAction.Merge
  fullName: Microsoft.Azure.Search.Models.IndexAction.Merge
- uid: Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload
  isExternal: false
  name: MergeOrUpload
  nameWithType: IndexAction.MergeOrUpload
  fullName: Microsoft.Azure.Search.Models.IndexAction.MergeOrUpload
- uid: Microsoft.Azure.Search.Models.IndexAction.Upload*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexAction.Upload
  isExternal: false
  name: Upload
  nameWithType: IndexAction.Upload
  fullName: Microsoft.Azure.Search.Models.IndexAction.Upload
