### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.Models.NGramTokenizer
  commentId: T:Microsoft.Azure.Search.Models.NGramTokenizer
  id: NGramTokenizer
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.NGramTokenizer.#ctor
  - Microsoft.Azure.Search.Models.NGramTokenizer.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenCharacterKind})
  - Microsoft.Azure.Search.Models.NGramTokenizer.MaxGram
  - Microsoft.Azure.Search.Models.NGramTokenizer.MinGram
  - Microsoft.Azure.Search.Models.NGramTokenizer.TokenChars
  - Microsoft.Azure.Search.Models.NGramTokenizer.Validate
  langs:
  - csharp
  - vb
  name: NGramTokenizer
  nameWithType: NGramTokenizer
  fullName: Microsoft.Azure.Search.Models.NGramTokenizer
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NGramTokenizer
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nTokenizes the input into n-grams of the given size(s). This tokenizer is implemented using Apache Lucene.\n"
  example: []
  syntax:
    content: >-
      [JsonObject("#Microsoft.Azure.Search.NGramTokenizer")]

      public class NGramTokenizer : Tokenizer
    content.vb: >-
      <JsonObject("#Microsoft.Azure.Search.NGramTokenizer")>

      Public Class NGramTokenizer
          Inherits Tokenizer
  inheritance:
  - System.Object
  - Microsoft.Azure.Search.Models.Tokenizer
  inheritedMembers:
  - Microsoft.Azure.Search.Models.Tokenizer.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '#Microsoft.Azure.Search.NGramTokenizer'
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.NGramTokenizer.#ctor
  commentId: M:Microsoft.Azure.Search.Models.NGramTokenizer.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.NGramTokenizer
  langs:
  - csharp
  - vb
  name: NGramTokenizer()
  nameWithType: NGramTokenizer.NGramTokenizer()
  fullName: Microsoft.Azure.Search.Models.NGramTokenizer.NGramTokenizer()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the NGramTokenizer class.\n"
  example: []
  syntax:
    content: public NGramTokenizer()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Search.Models.NGramTokenizer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.NGramTokenizer.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenCharacterKind})
  commentId: M:Microsoft.Azure.Search.Models.NGramTokenizer.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenCharacterKind})
  id: '#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenCharacterKind})'
  parent: Microsoft.Azure.Search.Models.NGramTokenizer
  langs:
  - csharp
  - vb
  name: NGramTokenizer(String, Nullable<Int32>, Nullable<Int32>, IList<TokenCharacterKind>)
  nameWithType: NGramTokenizer.NGramTokenizer(String, Nullable<Int32>, Nullable<Int32>, IList<TokenCharacterKind>)
  fullName: Microsoft.Azure.Search.Models.NGramTokenizer.NGramTokenizer(System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Collections.Generic.IList<Microsoft.Azure.Search.Models.TokenCharacterKind>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the NGramTokenizer class.\n"
  example: []
  syntax:
    content: public NGramTokenizer(string name, int ? minGram = null, int ? maxGram = null, IList<TokenCharacterKind> tokenChars = null)
    content.vb: Public Sub New(name As String, minGram As Integer? = Nothing, maxGram As Integer? = Nothing, tokenChars As IList(Of TokenCharacterKind) = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: minGram
      type: System.Nullable{System.Int32}
    - id: maxGram
      type: System.Nullable{System.Int32}
    - id: tokenChars
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenCharacterKind}
  overload: Microsoft.Azure.Search.Models.NGramTokenizer.#ctor*
  nameWithType.vb: NGramTokenizer.NGramTokenizer(String, Nullable(Of Int32), Nullable(Of Int32), IList(Of TokenCharacterKind))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.NGramTokenizer.NGramTokenizer(System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.TokenCharacterKind))
  name.vb: NGramTokenizer(String, Nullable(Of Int32), Nullable(Of Int32), IList(Of TokenCharacterKind))
- uid: Microsoft.Azure.Search.Models.NGramTokenizer.MinGram
  commentId: P:Microsoft.Azure.Search.Models.NGramTokenizer.MinGram
  id: MinGram
  parent: Microsoft.Azure.Search.Models.NGramTokenizer
  langs:
  - csharp
  - vb
  name: MinGram
  nameWithType: NGramTokenizer.MinGram
  fullName: Microsoft.Azure.Search.Models.NGramTokenizer.MinGram
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MinGram
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the minimum n-gram length. Default is 1.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "minGram")]

      public int ? MinGram { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="minGram")>

      Public Property MinGram As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Search.Models.NGramTokenizer.MinGram*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: minGram
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.NGramTokenizer.MaxGram
  commentId: P:Microsoft.Azure.Search.Models.NGramTokenizer.MaxGram
  id: MaxGram
  parent: Microsoft.Azure.Search.Models.NGramTokenizer
  langs:
  - csharp
  - vb
  name: MaxGram
  nameWithType: NGramTokenizer.MaxGram
  fullName: Microsoft.Azure.Search.Models.NGramTokenizer.MaxGram
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: MaxGram
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the maximum n-gram length. Default is 2.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "maxGram")]

      public int ? MaxGram { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="maxGram")>

      Public Property MaxGram As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Search.Models.NGramTokenizer.MaxGram*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: maxGram
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.NGramTokenizer.TokenChars
  commentId: P:Microsoft.Azure.Search.Models.NGramTokenizer.TokenChars
  id: TokenChars
  parent: Microsoft.Azure.Search.Models.NGramTokenizer
  langs:
  - csharp
  - vb
  name: TokenChars
  nameWithType: NGramTokenizer.TokenChars
  fullName: Microsoft.Azure.Search.Models.NGramTokenizer.TokenChars
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TokenChars
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets character classes to keep in the tokens.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tokenChars")]

      public IList<TokenCharacterKind> TokenChars { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tokenChars")>

      Public Property TokenChars As IList(Of TokenCharacterKind)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenCharacterKind}
  overload: Microsoft.Azure.Search.Models.NGramTokenizer.TokenChars*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tokenChars
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.NGramTokenizer.Validate
  commentId: M:Microsoft.Azure.Search.Models.NGramTokenizer.Validate
  id: Validate
  parent: Microsoft.Azure.Search.Models.NGramTokenizer
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: NGramTokenizer.Validate()
  fullName: Microsoft.Azure.Search.Models.NGramTokenizer.Validate()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/NGramTokenizer.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nValidate the object. Throws ValidationException if validation fails.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Search.Models.Tokenizer.Validate
  overload: Microsoft.Azure.Search.Models.NGramTokenizer.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Search.Models.Tokenizer
  commentId: T:Microsoft.Azure.Search.Models.Tokenizer
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: Tokenizer
  nameWithType: Tokenizer
  fullName: Microsoft.Azure.Search.Models.Tokenizer
- uid: Microsoft.Azure.Search.Models.Tokenizer.Name
  commentId: P:Microsoft.Azure.Search.Models.Tokenizer.Name
  parent: Microsoft.Azure.Search.Models.Tokenizer
  isExternal: false
  name: Name
  nameWithType: Tokenizer.Name
  fullName: Microsoft.Azure.Search.Models.Tokenizer.Name
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.NGramTokenizer.#ctor*
  commentId: Overload:Microsoft.Azure.Search.Models.NGramTokenizer.#ctor
  isExternal: false
  name: NGramTokenizer
  nameWithType: NGramTokenizer.NGramTokenizer
  fullName: Microsoft.Azure.Search.Models.NGramTokenizer.NGramTokenizer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenCharacterKind}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Search.Models.TokenCharacterKind}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TokenCharacterKind>
  nameWithType: IList<TokenCharacterKind>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Search.Models.TokenCharacterKind>
  nameWithType.vb: IList(Of TokenCharacterKind)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.TokenCharacterKind)
  name.vb: IList(Of TokenCharacterKind)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.TokenCharacterKind
    name: TokenCharacterKind
    nameWithType: TokenCharacterKind
    fullName: Microsoft.Azure.Search.Models.TokenCharacterKind
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.TokenCharacterKind
    name: TokenCharacterKind
    nameWithType: TokenCharacterKind
    fullName: Microsoft.Azure.Search.Models.TokenCharacterKind
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Search.Models.NGramTokenizer.MinGram*
  commentId: Overload:Microsoft.Azure.Search.Models.NGramTokenizer.MinGram
  isExternal: false
  name: MinGram
  nameWithType: NGramTokenizer.MinGram
  fullName: Microsoft.Azure.Search.Models.NGramTokenizer.MinGram
- uid: Microsoft.Azure.Search.Models.NGramTokenizer.MaxGram*
  commentId: Overload:Microsoft.Azure.Search.Models.NGramTokenizer.MaxGram
  isExternal: false
  name: MaxGram
  nameWithType: NGramTokenizer.MaxGram
  fullName: Microsoft.Azure.Search.Models.NGramTokenizer.MaxGram
- uid: Microsoft.Azure.Search.Models.NGramTokenizer.TokenChars*
  commentId: Overload:Microsoft.Azure.Search.Models.NGramTokenizer.TokenChars
  isExternal: false
  name: TokenChars
  nameWithType: NGramTokenizer.TokenChars
  fullName: Microsoft.Azure.Search.Models.NGramTokenizer.TokenChars
- uid: Microsoft.Azure.Search.Models.Tokenizer.Validate
  commentId: M:Microsoft.Azure.Search.Models.Tokenizer.Validate
  parent: Microsoft.Azure.Search.Models.Tokenizer
  isExternal: false
  name: Validate()
  nameWithType: Tokenizer.Validate()
  fullName: Microsoft.Azure.Search.Models.Tokenizer.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.Tokenizer.Validate
    name: Validate
    nameWithType: Tokenizer.Validate
    fullName: Microsoft.Azure.Search.Models.Tokenizer.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.Tokenizer.Validate
    name: Validate
    nameWithType: Tokenizer.Validate
    fullName: Microsoft.Azure.Search.Models.Tokenizer.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.NGramTokenizer.Validate*
  commentId: Overload:Microsoft.Azure.Search.Models.NGramTokenizer.Validate
  isExternal: false
  name: Validate
  nameWithType: NGramTokenizer.Validate
  fullName: Microsoft.Azure.Search.Models.NGramTokenizer.Validate
