### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.Models.DataSourceListResult
  commentId: T:Microsoft.Azure.Search.Models.DataSourceListResult
  id: DataSourceListResult
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.DataSourceListResult.#ctor
  - Microsoft.Azure.Search.Models.DataSourceListResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Search.Models.DataSource})
  - Microsoft.Azure.Search.Models.DataSourceListResult.DataSources
  langs:
  - csharp
  - vb
  name: DataSourceListResult
  nameWithType: DataSourceListResult
  fullName: Microsoft.Azure.Search.Models.DataSourceListResult
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/DataSourceListResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataSourceListResult
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/DataSourceListResult.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nResponse from a List Datasources request. If successful, it includes\nthe full definitions of all datasources.\n"
  example: []
  syntax:
    content: public class DataSourceListResult
    content.vb: Public Class DataSourceListResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.DataSourceListResult.#ctor
  commentId: M:Microsoft.Azure.Search.Models.DataSourceListResult.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.DataSourceListResult
  langs:
  - csharp
  - vb
  name: DataSourceListResult()
  nameWithType: DataSourceListResult.DataSourceListResult()
  fullName: Microsoft.Azure.Search.Models.DataSourceListResult.DataSourceListResult()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/DataSourceListResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/DataSourceListResult.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the DataSourceListResult class.\n"
  example: []
  syntax:
    content: public DataSourceListResult()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Search.Models.DataSourceListResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.DataSourceListResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Search.Models.DataSource})
  commentId: M:Microsoft.Azure.Search.Models.DataSourceListResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Search.Models.DataSource})
  id: '#ctor(System.Collections.Generic.IList{Microsoft.Azure.Search.Models.DataSource})'
  parent: Microsoft.Azure.Search.Models.DataSourceListResult
  langs:
  - csharp
  - vb
  name: DataSourceListResult(IList<DataSource>)
  nameWithType: DataSourceListResult.DataSourceListResult(IList<DataSource>)
  fullName: Microsoft.Azure.Search.Models.DataSourceListResult.DataSourceListResult(System.Collections.Generic.IList<Microsoft.Azure.Search.Models.DataSource>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/DataSourceListResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/DataSourceListResult.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the DataSourceListResult class.\n"
  example: []
  syntax:
    content: public DataSourceListResult(IList<DataSource> dataSources = null)
    content.vb: Public Sub New(dataSources As IList(Of DataSource) = Nothing)
    parameters:
    - id: dataSources
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.DataSource}
  overload: Microsoft.Azure.Search.Models.DataSourceListResult.#ctor*
  nameWithType.vb: DataSourceListResult.DataSourceListResult(IList(Of DataSource))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.DataSourceListResult.DataSourceListResult(System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.DataSource))
  name.vb: DataSourceListResult(IList(Of DataSource))
- uid: Microsoft.Azure.Search.Models.DataSourceListResult.DataSources
  commentId: P:Microsoft.Azure.Search.Models.DataSourceListResult.DataSources
  id: DataSources
  parent: Microsoft.Azure.Search.Models.DataSourceListResult
  langs:
  - csharp
  - vb
  name: DataSources
  nameWithType: DataSourceListResult.DataSources
  fullName: Microsoft.Azure.Search.Models.DataSourceListResult.DataSources
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/DataSourceListResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataSources
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/DataSourceListResult.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the datasources in the Search service.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "value")]

      public IList<DataSource> DataSources { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="value")>

      Public ReadOnly Property DataSources As IList(Of DataSource)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.DataSource}
  overload: Microsoft.Azure.Search.Models.DataSourceListResult.DataSources*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.DataSourceListResult.#ctor*
  commentId: Overload:Microsoft.Azure.Search.Models.DataSourceListResult.#ctor
  isExternal: false
  name: DataSourceListResult
  nameWithType: DataSourceListResult.DataSourceListResult
  fullName: Microsoft.Azure.Search.Models.DataSourceListResult.DataSourceListResult
- uid: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.DataSource}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Search.Models.DataSource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<DataSource>
  nameWithType: IList<DataSource>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Search.Models.DataSource>
  nameWithType.vb: IList(Of DataSource)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.DataSource)
  name.vb: IList(Of DataSource)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.DataSource
    name: DataSource
    nameWithType: DataSource
    fullName: Microsoft.Azure.Search.Models.DataSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.DataSource
    name: DataSource
    nameWithType: DataSource
    fullName: Microsoft.Azure.Search.Models.DataSource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Search.Models.DataSourceListResult.DataSources*
  commentId: Overload:Microsoft.Azure.Search.Models.DataSourceListResult.DataSources
  isExternal: false
  name: DataSources
  nameWithType: DataSourceListResult.DataSources
  fullName: Microsoft.Azure.Search.Models.DataSourceListResult.DataSources
