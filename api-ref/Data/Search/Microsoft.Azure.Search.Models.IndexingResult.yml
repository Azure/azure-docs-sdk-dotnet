### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.Models.IndexingResult
  commentId: T:Microsoft.Azure.Search.Models.IndexingResult
  id: IndexingResult
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.IndexingResult.#ctor
  - Microsoft.Azure.Search.Models.IndexingResult.#ctor(System.String,System.String,System.Boolean,System.Int32)
  - Microsoft.Azure.Search.Models.IndexingResult.ErrorMessage
  - Microsoft.Azure.Search.Models.IndexingResult.Key
  - Microsoft.Azure.Search.Models.IndexingResult.StatusCode
  - Microsoft.Azure.Search.Models.IndexingResult.Succeeded
  langs:
  - csharp
  - vb
  name: IndexingResult
  nameWithType: IndexingResult
  fullName: Microsoft.Azure.Search.Models.IndexingResult
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IndexingResult
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nStatus of an indexing operation for a single document.\n"
  example: []
  syntax:
    content: public class IndexingResult
    content.vb: Public Class IndexingResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.IndexingResult.#ctor
  commentId: M:Microsoft.Azure.Search.Models.IndexingResult.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.IndexingResult
  langs:
  - csharp
  - vb
  name: IndexingResult()
  nameWithType: IndexingResult.IndexingResult()
  fullName: Microsoft.Azure.Search.Models.IndexingResult.IndexingResult()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the IndexingResult class.\n"
  example: []
  syntax:
    content: public IndexingResult()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Search.Models.IndexingResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexingResult.#ctor(System.String,System.String,System.Boolean,System.Int32)
  commentId: M:Microsoft.Azure.Search.Models.IndexingResult.#ctor(System.String,System.String,System.Boolean,System.Int32)
  id: '#ctor(System.String,System.String,System.Boolean,System.Int32)'
  parent: Microsoft.Azure.Search.Models.IndexingResult
  langs:
  - csharp
  - vb
  name: IndexingResult(String, String, Boolean, Int32)
  nameWithType: IndexingResult.IndexingResult(String, String, Boolean, Int32)
  fullName: Microsoft.Azure.Search.Models.IndexingResult.IndexingResult(System.String, System.String, System.Boolean, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the IndexingResult class.\n"
  example: []
  syntax:
    content: public IndexingResult(string key = null, string errorMessage = null, bool succeeded = false, int statusCode = 0)
    content.vb: Public Sub New(key As String = Nothing, errorMessage As String = Nothing, succeeded As Boolean = False, statusCode As Integer = 0)
    parameters:
    - id: key
      type: System.String
    - id: errorMessage
      type: System.String
    - id: succeeded
      type: System.Boolean
    - id: statusCode
      type: System.Int32
  overload: Microsoft.Azure.Search.Models.IndexingResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexingResult.Key
  commentId: P:Microsoft.Azure.Search.Models.IndexingResult.Key
  id: Key
  parent: Microsoft.Azure.Search.Models.IndexingResult
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: IndexingResult.Key
  fullName: Microsoft.Azure.Search.Models.IndexingResult.Key
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Key
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
    startLine: 38
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the key of a document that was in the indexing request.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "key")]

      public string Key { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="key")>

      Public ReadOnly Property Key As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Search.Models.IndexingResult.Key*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: key
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.IndexingResult.ErrorMessage
  commentId: P:Microsoft.Azure.Search.Models.IndexingResult.ErrorMessage
  id: ErrorMessage
  parent: Microsoft.Azure.Search.Models.IndexingResult
  langs:
  - csharp
  - vb
  name: ErrorMessage
  nameWithType: IndexingResult.ErrorMessage
  fullName: Microsoft.Azure.Search.Models.IndexingResult.ErrorMessage
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ErrorMessage
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the error message explaining why the indexing operation failed for the document identified by the key; null if indexing succeeded.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "errorMessage")]

      public string ErrorMessage { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="errorMessage")>

      Public ReadOnly Property ErrorMessage As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Search.Models.IndexingResult.ErrorMessage*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: errorMessage
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.IndexingResult.Succeeded
  commentId: P:Microsoft.Azure.Search.Models.IndexingResult.Succeeded
  id: Succeeded
  parent: Microsoft.Azure.Search.Models.IndexingResult
  langs:
  - csharp
  - vb
  name: Succeeded
  nameWithType: IndexingResult.Succeeded
  fullName: Microsoft.Azure.Search.Models.IndexingResult.Succeeded
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Succeeded
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets a value indicating whether the indexing operation succeeded for the document identified by the key.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "status")]

      public bool Succeeded { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="status")>

      Public ReadOnly Property Succeeded As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Search.Models.IndexingResult.Succeeded*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: status
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.IndexingResult.StatusCode
  commentId: P:Microsoft.Azure.Search.Models.IndexingResult.StatusCode
  id: StatusCode
  parent: Microsoft.Azure.Search.Models.IndexingResult
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: IndexingResult.StatusCode
  fullName: Microsoft.Azure.Search.Models.IndexingResult.StatusCode
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StatusCode
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Documents/Models/IndexingResult.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the status code of the indexing operation. Possible values include: 200 for a successful update or delete, 201 for successful document creation, 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "statusCode")]

      public int StatusCode { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="statusCode")>

      Public ReadOnly Property StatusCode As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Search.Models.IndexingResult.StatusCode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: statusCode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.IndexingResult.#ctor*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexingResult.#ctor
  isExternal: false
  name: IndexingResult
  nameWithType: IndexingResult.IndexingResult
  fullName: Microsoft.Azure.Search.Models.IndexingResult.IndexingResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Search.Models.IndexingResult.Key*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexingResult.Key
  isExternal: false
  name: Key
  nameWithType: IndexingResult.Key
  fullName: Microsoft.Azure.Search.Models.IndexingResult.Key
- uid: Microsoft.Azure.Search.Models.IndexingResult.ErrorMessage*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexingResult.ErrorMessage
  isExternal: false
  name: ErrorMessage
  nameWithType: IndexingResult.ErrorMessage
  fullName: Microsoft.Azure.Search.Models.IndexingResult.ErrorMessage
- uid: Microsoft.Azure.Search.Models.IndexingResult.Succeeded*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexingResult.Succeeded
  isExternal: false
  name: Succeeded
  nameWithType: IndexingResult.Succeeded
  fullName: Microsoft.Azure.Search.Models.IndexingResult.Succeeded
- uid: Microsoft.Azure.Search.Models.IndexingResult.StatusCode*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexingResult.StatusCode
  isExternal: false
  name: StatusCode
  nameWithType: IndexingResult.StatusCode
  fullName: Microsoft.Azure.Search.Models.IndexingResult.StatusCode
