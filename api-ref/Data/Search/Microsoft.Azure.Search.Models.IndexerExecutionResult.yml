### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult
  commentId: T:Microsoft.Azure.Search.Models.IndexerExecutionResult
  id: IndexerExecutionResult
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.IndexerExecutionResult.#ctor
  - Microsoft.Azure.Search.Models.IndexerExecutionResult.#ctor(Microsoft.Azure.Search.Models.IndexerExecutionStatus,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ItemError},System.Int32,System.Int32,System.String,System.String)
  - Microsoft.Azure.Search.Models.IndexerExecutionResult.EndTime
  - Microsoft.Azure.Search.Models.IndexerExecutionResult.ErrorMessage
  - Microsoft.Azure.Search.Models.IndexerExecutionResult.Errors
  - Microsoft.Azure.Search.Models.IndexerExecutionResult.FailedItemCount
  - Microsoft.Azure.Search.Models.IndexerExecutionResult.FinalTrackingState
  - Microsoft.Azure.Search.Models.IndexerExecutionResult.InitialTrackingState
  - Microsoft.Azure.Search.Models.IndexerExecutionResult.ItemCount
  - Microsoft.Azure.Search.Models.IndexerExecutionResult.StartTime
  - Microsoft.Azure.Search.Models.IndexerExecutionResult.Status
  langs:
  - csharp
  - vb
  name: IndexerExecutionResult
  nameWithType: IndexerExecutionResult
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IndexerExecutionResult
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nRepresents the result of an individual indexer execution.\n"
  example: []
  syntax:
    content: public class IndexerExecutionResult
    content.vb: Public Class IndexerExecutionResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.#ctor
  commentId: M:Microsoft.Azure.Search.Models.IndexerExecutionResult.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.IndexerExecutionResult
  langs:
  - csharp
  - vb
  name: IndexerExecutionResult()
  nameWithType: IndexerExecutionResult.IndexerExecutionResult()
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.IndexerExecutionResult()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the IndexerExecutionResult class.\n"
  example: []
  syntax:
    content: public IndexerExecutionResult()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Search.Models.IndexerExecutionResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.#ctor(Microsoft.Azure.Search.Models.IndexerExecutionStatus,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ItemError},System.Int32,System.Int32,System.String,System.String)
  commentId: M:Microsoft.Azure.Search.Models.IndexerExecutionResult.#ctor(Microsoft.Azure.Search.Models.IndexerExecutionStatus,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ItemError},System.Int32,System.Int32,System.String,System.String)
  id: '#ctor(Microsoft.Azure.Search.Models.IndexerExecutionStatus,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ItemError},System.Int32,System.Int32,System.String,System.String)'
  parent: Microsoft.Azure.Search.Models.IndexerExecutionResult
  langs:
  - csharp
  - vb
  name: IndexerExecutionResult(IndexerExecutionStatus, String, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, IList<ItemError>, Int32, Int32, String, String)
  nameWithType: IndexerExecutionResult.IndexerExecutionResult(IndexerExecutionStatus, String, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>, IList<ItemError>, Int32, Int32, String, String)
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.IndexerExecutionResult(Microsoft.Azure.Search.Models.IndexerExecutionStatus, System.String, System.Nullable<System.DateTimeOffset>, System.Nullable<System.DateTimeOffset>, System.Collections.Generic.IList<Microsoft.Azure.Search.Models.ItemError>, System.Int32, System.Int32, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the IndexerExecutionResult class.\n"
  example: []
  syntax:
    content: public IndexerExecutionResult(IndexerExecutionStatus status = IndexerExecutionStatus.TransientFailure, string errorMessage = null, DateTimeOffset? startTime = null, DateTimeOffset? endTime = null, IList<ItemError> errors = null, int itemCount = 0, int failedItemCount = 0, string initialTrackingState = null, string finalTrackingState = null)
    content.vb: Public Sub New(status As IndexerExecutionStatus = IndexerExecutionStatus.TransientFailure, errorMessage As String = Nothing, startTime As DateTimeOffset? = Nothing, endTime As DateTimeOffset? = Nothing, errors As IList(Of ItemError) = Nothing, itemCount As Integer = 0, failedItemCount As Integer = 0, initialTrackingState As String = Nothing, finalTrackingState As String = Nothing)
    parameters:
    - id: status
      type: Microsoft.Azure.Search.Models.IndexerExecutionStatus
    - id: errorMessage
      type: System.String
    - id: startTime
      type: System.Nullable{System.DateTimeOffset}
    - id: endTime
      type: System.Nullable{System.DateTimeOffset}
    - id: errors
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ItemError}
    - id: itemCount
      type: System.Int32
    - id: failedItemCount
      type: System.Int32
    - id: initialTrackingState
      type: System.String
    - id: finalTrackingState
      type: System.String
  overload: Microsoft.Azure.Search.Models.IndexerExecutionResult.#ctor*
  nameWithType.vb: IndexerExecutionResult.IndexerExecutionResult(IndexerExecutionStatus, String, Nullable(Of DateTimeOffset), Nullable(Of DateTimeOffset), IList(Of ItemError), Int32, Int32, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.IndexerExecutionResult.IndexerExecutionResult(Microsoft.Azure.Search.Models.IndexerExecutionStatus, System.String, System.Nullable(Of System.DateTimeOffset), System.Nullable(Of System.DateTimeOffset), System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.ItemError), System.Int32, System.Int32, System.String, System.String)
  name.vb: IndexerExecutionResult(IndexerExecutionStatus, String, Nullable(Of DateTimeOffset), Nullable(Of DateTimeOffset), IList(Of ItemError), Int32, Int32, String, String)
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.Status
  commentId: P:Microsoft.Azure.Search.Models.IndexerExecutionResult.Status
  id: Status
  parent: Microsoft.Azure.Search.Models.IndexerExecutionResult
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: IndexerExecutionResult.Status
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.Status
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Status
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the outcome of this indexer execution. Possible values for\nthis property include: 'transientFailure', 'success',\n'inProgress', 'reset'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "status")]

      public IndexerExecutionStatus Status { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="status")>

      Public ReadOnly Property Status As IndexerExecutionStatus
    parameters: []
    return:
      type: Microsoft.Azure.Search.Models.IndexerExecutionStatus
  overload: Microsoft.Azure.Search.Models.IndexerExecutionResult.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: status
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.ErrorMessage
  commentId: P:Microsoft.Azure.Search.Models.IndexerExecutionResult.ErrorMessage
  id: ErrorMessage
  parent: Microsoft.Azure.Search.Models.IndexerExecutionResult
  langs:
  - csharp
  - vb
  name: ErrorMessage
  nameWithType: IndexerExecutionResult.ErrorMessage
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.ErrorMessage
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ErrorMessage
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the error message indicating the top-level error, if any.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "errorMessage")]

      public string ErrorMessage { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="errorMessage")>

      Public ReadOnly Property ErrorMessage As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Search.Models.IndexerExecutionResult.ErrorMessage*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: errorMessage
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.StartTime
  commentId: P:Microsoft.Azure.Search.Models.IndexerExecutionResult.StartTime
  id: StartTime
  parent: Microsoft.Azure.Search.Models.IndexerExecutionResult
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: IndexerExecutionResult.StartTime
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.StartTime
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StartTime
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the start time of this indexer execution.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startTime")]

      public DateTimeOffset? StartTime { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="startTime")>

      Public ReadOnly Property StartTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
  overload: Microsoft.Azure.Search.Models.IndexerExecutionResult.StartTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startTime
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.EndTime
  commentId: P:Microsoft.Azure.Search.Models.IndexerExecutionResult.EndTime
  id: EndTime
  parent: Microsoft.Azure.Search.Models.IndexerExecutionResult
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: IndexerExecutionResult.EndTime
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.EndTime
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EndTime
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the end time of this indexer execution, if the execution has\nalready completed.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "endTime")]

      public DateTimeOffset? EndTime { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="endTime")>

      Public ReadOnly Property EndTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
  overload: Microsoft.Azure.Search.Models.IndexerExecutionResult.EndTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: endTime
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.Errors
  commentId: P:Microsoft.Azure.Search.Models.IndexerExecutionResult.Errors
  id: Errors
  parent: Microsoft.Azure.Search.Models.IndexerExecutionResult
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: IndexerExecutionResult.Errors
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.Errors
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Errors
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the item-level indexing errors\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "errors")]

      public IList<ItemError> Errors { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="errors")>

      Public ReadOnly Property Errors As IList(Of ItemError)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ItemError}
  overload: Microsoft.Azure.Search.Models.IndexerExecutionResult.Errors*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: errors
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.ItemCount
  commentId: P:Microsoft.Azure.Search.Models.IndexerExecutionResult.ItemCount
  id: ItemCount
  parent: Microsoft.Azure.Search.Models.IndexerExecutionResult
  langs:
  - csharp
  - vb
  name: ItemCount
  nameWithType: IndexerExecutionResult.ItemCount
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.ItemCount
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ItemCount
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the number of items that were processed during this indexer\nexecution. This includes both successfully processed items and\nitems where indexing was attempted but failed.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "itemsProcessed")]

      public int ItemCount { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="itemsProcessed")>

      Public ReadOnly Property ItemCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Search.Models.IndexerExecutionResult.ItemCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: itemsProcessed
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.FailedItemCount
  commentId: P:Microsoft.Azure.Search.Models.IndexerExecutionResult.FailedItemCount
  id: FailedItemCount
  parent: Microsoft.Azure.Search.Models.IndexerExecutionResult
  langs:
  - csharp
  - vb
  name: FailedItemCount
  nameWithType: IndexerExecutionResult.FailedItemCount
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.FailedItemCount
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FailedItemCount
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets the number of items that failed to be indexed during this\nindexer execution.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "itemsFailed")]

      public int FailedItemCount { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="itemsFailed")>

      Public ReadOnly Property FailedItemCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Search.Models.IndexerExecutionResult.FailedItemCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: itemsFailed
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.InitialTrackingState
  commentId: P:Microsoft.Azure.Search.Models.IndexerExecutionResult.InitialTrackingState
  id: InitialTrackingState
  parent: Microsoft.Azure.Search.Models.IndexerExecutionResult
  langs:
  - csharp
  - vb
  name: InitialTrackingState
  nameWithType: IndexerExecutionResult.InitialTrackingState
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.InitialTrackingState
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: InitialTrackingState
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
    startLine: 87
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nChange tracking state with which an indexer execution started.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "initialTrackingState")]

      public string InitialTrackingState { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="initialTrackingState")>

      Public ReadOnly Property InitialTrackingState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Search.Models.IndexerExecutionResult.InitialTrackingState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: initialTrackingState
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.FinalTrackingState
  commentId: P:Microsoft.Azure.Search.Models.IndexerExecutionResult.FinalTrackingState
  id: FinalTrackingState
  parent: Microsoft.Azure.Search.Models.IndexerExecutionResult
  langs:
  - csharp
  - vb
  name: FinalTrackingState
  nameWithType: IndexerExecutionResult.FinalTrackingState
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.FinalTrackingState
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FinalTrackingState
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/IndexerExecutionResult.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nChange tracking state with which an indexer execution finished.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "finalTrackingState")]

      public string FinalTrackingState { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="finalTrackingState")>

      Public ReadOnly Property FinalTrackingState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Search.Models.IndexerExecutionResult.FinalTrackingState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: finalTrackingState
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.#ctor*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexerExecutionResult.#ctor
  isExternal: false
  name: IndexerExecutionResult
  nameWithType: IndexerExecutionResult.IndexerExecutionResult
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.IndexerExecutionResult
- uid: Microsoft.Azure.Search.Models.IndexerExecutionStatus
  commentId: T:Microsoft.Azure.Search.Models.IndexerExecutionStatus
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: IndexerExecutionStatus
  nameWithType: IndexerExecutionStatus
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionStatus
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ItemError}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ItemError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ItemError>
  nameWithType: IList<ItemError>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Search.Models.ItemError>
  nameWithType.vb: IList(Of ItemError)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.ItemError)
  name.vb: IList(Of ItemError)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.ItemError
    name: ItemError
    nameWithType: ItemError
    fullName: Microsoft.Azure.Search.Models.ItemError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.ItemError
    name: ItemError
    nameWithType: ItemError
    fullName: Microsoft.Azure.Search.Models.ItemError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.Status*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexerExecutionResult.Status
  isExternal: false
  name: Status
  nameWithType: IndexerExecutionResult.Status
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.Status
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.ErrorMessage*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexerExecutionResult.ErrorMessage
  isExternal: false
  name: ErrorMessage
  nameWithType: IndexerExecutionResult.ErrorMessage
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.ErrorMessage
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.StartTime*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexerExecutionResult.StartTime
  isExternal: false
  name: StartTime
  nameWithType: IndexerExecutionResult.StartTime
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.StartTime
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.EndTime*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexerExecutionResult.EndTime
  isExternal: false
  name: EndTime
  nameWithType: IndexerExecutionResult.EndTime
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.EndTime
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.Errors*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexerExecutionResult.Errors
  isExternal: false
  name: Errors
  nameWithType: IndexerExecutionResult.Errors
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.Errors
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.ItemCount*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexerExecutionResult.ItemCount
  isExternal: false
  name: ItemCount
  nameWithType: IndexerExecutionResult.ItemCount
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.ItemCount
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.FailedItemCount*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexerExecutionResult.FailedItemCount
  isExternal: false
  name: FailedItemCount
  nameWithType: IndexerExecutionResult.FailedItemCount
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.FailedItemCount
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.InitialTrackingState*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexerExecutionResult.InitialTrackingState
  isExternal: false
  name: InitialTrackingState
  nameWithType: IndexerExecutionResult.InitialTrackingState
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.InitialTrackingState
- uid: Microsoft.Azure.Search.Models.IndexerExecutionResult.FinalTrackingState*
  commentId: Overload:Microsoft.Azure.Search.Models.IndexerExecutionResult.FinalTrackingState
  isExternal: false
  name: FinalTrackingState
  nameWithType: IndexerExecutionResult.FinalTrackingState
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionResult.FinalTrackingState
