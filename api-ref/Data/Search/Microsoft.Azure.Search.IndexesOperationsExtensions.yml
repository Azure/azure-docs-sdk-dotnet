### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions
  commentId: T:Microsoft.Azure.Search.IndexesOperationsExtensions
  id: IndexesOperationsExtensions
  parent: Microsoft.Azure.Search
  children:
  - Microsoft.Azure.Search.IndexesOperationsExtensions.Analyze(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.AnalyzeRequest,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.AnalyzeAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.AnalyzeRequest,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.Create(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.CreateAsync(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.Delete(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.DeleteAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.Exists(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.ExistsAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.Get(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.GetAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatistics(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatisticsAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.List(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.ListAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.ListNames(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexesOperationsExtensions.ListNamesAsync(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IndexesOperationsExtensions
  nameWithType: IndexesOperationsExtensions
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IndexesOperationsExtensions
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nOperations for managing indexes.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Index-operations\"></a>\n"
  example: []
  syntax:
    content: public static class IndexesOperationsExtensions
    content.vb: Public Module IndexesOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  id: CreateOrUpdate(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IIndexesOperations, Index, Nullable<Boolean>, SearchRequestOptions, AccessCondition)
  nameWithType: IndexesOperationsExtensions.CreateOrUpdate(IIndexesOperations, Index, Nullable<Boolean>, SearchRequestOptions, AccessCondition)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexesOperations, Microsoft.Azure.Search.Models.Index, System.Nullable<System.Boolean>, Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/IndexesOperationsExtensions.Customization.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/IndexesOperationsExtensions.Customization.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nCreates a new Azure Search index or updates an index if it already exists.\n"
  example: []
  syntax:
    content: public static Index CreateOrUpdate(this IIndexesOperations operations, Index index, bool ? allowIndexDowntime = null, SearchRequestOptions searchRequestOptions = null, AccessCondition accessCondition = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IIndexesOperations, index As Index, allowIndexDowntime As Boolean? = Nothing, searchRequestOptions As SearchRequestOptions = Nothing, accessCondition As AccessCondition = Nothing) As Index
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: index
      type: Microsoft.Azure.Search.Models.Index
      description: "\nThe definition of the index to create or update.\n"
    - id: allowIndexDowntime
      type: System.Nullable{System.Boolean}
      description: "\nAllows new analyzers, tokenizers, token filters, or char filters\nto be added to an index by taking the index offline for at least\na few seconds. This temporarily causes indexing and query\nrequests to fail. Performance and write availability of the index\ncan be impaired for several minutes after the index is updated,\nor longer for very large indexes.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: accessCondition
      type: Microsoft.Azure.Search.Models.AccessCondition
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.Index
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate*
  nameWithType.vb: IndexesOperationsExtensions.CreateOrUpdate(IIndexesOperations, Index, Nullable(Of Boolean), SearchRequestOptions, AccessCondition)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexesOperations, Microsoft.Azure.Search.Models.Index, System.Nullable(Of System.Boolean), Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition)
  name.vb: CreateOrUpdate(IIndexesOperations, Index, Nullable(Of Boolean), SearchRequestOptions, AccessCondition)
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  id: CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IIndexesOperations, Index, Nullable<Boolean>, SearchRequestOptions, AccessCondition, CancellationToken)
  nameWithType: IndexesOperationsExtensions.CreateOrUpdateAsync(IIndexesOperations, Index, Nullable<Boolean>, SearchRequestOptions, AccessCondition, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexesOperations, Microsoft.Azure.Search.Models.Index, System.Nullable<System.Boolean>, Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/IndexesOperationsExtensions.Customization.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/IndexesOperationsExtensions.Customization.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nCreates a new Azure Search index or updates an index if it already exists.\n"
  example: []
  syntax:
    content: public static Task<Index> CreateOrUpdateAsync(this IIndexesOperations operations, Index index, bool ? allowIndexDowntime = null, SearchRequestOptions searchRequestOptions = null, AccessCondition accessCondition = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IIndexesOperations, index As Index, allowIndexDowntime As Boolean? = Nothing, searchRequestOptions As SearchRequestOptions = Nothing, accessCondition As AccessCondition = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Index)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: index
      type: Microsoft.Azure.Search.Models.Index
      description: "\nThe definition of the index to create or update.\n"
    - id: allowIndexDowntime
      type: System.Nullable{System.Boolean}
      description: "\nAllows new analyzers, tokenizers, token filters, or char filters\nto be added to an index by taking the index offline for at least\na few seconds. This temporarily causes indexing and query\nrequests to fail. Performance and write availability of the index\ncan be impaired for several minutes after the index is updated,\nor longer for very large indexes.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: accessCondition
      type: Microsoft.Azure.Search.Models.AccessCondition
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.Index}
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync*
  nameWithType.vb: IndexesOperationsExtensions.CreateOrUpdateAsync(IIndexesOperations, Index, Nullable(Of Boolean), SearchRequestOptions, AccessCondition, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexesOperations, Microsoft.Azure.Search.Models.Index, System.Nullable(Of System.Boolean), Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition, System.Threading.CancellationToken)
  name.vb: CreateOrUpdateAsync(IIndexesOperations, Index, Nullable(Of Boolean), SearchRequestOptions, AccessCondition, CancellationToken)
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.Exists(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.Exists(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: Exists(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: Exists(IIndexesOperations, String, SearchRequestOptions)
  nameWithType: IndexesOperationsExtensions.Exists(IIndexesOperations, String, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.Exists(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/IndexesOperationsExtensions.Customization.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Exists
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/IndexesOperationsExtensions.Customization.cs
    startLine: 96
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nDetermines whether or not the given index exists in the Azure Search service.\n"
  example: []
  syntax:
    content: public static bool Exists(this IIndexesOperations operations, string indexName, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Exists(operations As IIndexesOperations, indexName As String, searchRequestOptions As SearchRequestOptions = Nothing) As Boolean
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexName
      type: System.String
      description: "\nThe name of the index.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the index exists; <code>false</code> otherwise.\n"
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.Exists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.ExistsAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.ExistsAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: ExistsAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExistsAsync(IIndexesOperations, String, SearchRequestOptions, CancellationToken)
  nameWithType: IndexesOperationsExtensions.ExistsAsync(IIndexesOperations, String, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.ExistsAsync(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/IndexesOperationsExtensions.Customization.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExistsAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/IndexesOperationsExtensions.Customization.cs
    startLine: 122
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nDetermines whether or not the given index exists in the Azure Search service.\n"
  example: []
  syntax:
    content: public static Task<bool> ExistsAsync(this IIndexesOperations operations, string indexName, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExistsAsync(operations As IIndexesOperations, indexName As String, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexName
      type: System.String
      description: "\nThe name of the index.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\n<code>true</code> if the index exists; <code>false</code> otherwise.\n"
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.ExistsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.ListNames(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.ListNames(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: ListNames(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNames(IIndexesOperations, SearchRequestOptions)
  nameWithType: IndexesOperationsExtensions.ListNames(IIndexesOperations, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.ListNames(Microsoft.Azure.Search.IIndexesOperations, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/IndexesOperationsExtensions.Customization.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNames
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/IndexesOperationsExtensions.Customization.cs
    startLine: 148
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nLists the names of all indexes available for an Azure Search\nservice. Use this instead of List() when you only need index\nnames. It will save bandwidth and resource utilization, especially\nif your Search Service has many indexes.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/List-Indexes\"></a>\n"
  example: []
  syntax:
    content: public static IList<string> ListNames(this IIndexesOperations operations, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNames(operations As IIndexesOperations, searchRequestOptions As SearchRequestOptions = Nothing) As IList(Of String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "\nThe list of all index names for the search service.\n"
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.ListNames*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.ListNamesAsync(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.ListNamesAsync(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: ListNamesAsync(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNamesAsync(IIndexesOperations, SearchRequestOptions, CancellationToken)
  nameWithType: IndexesOperationsExtensions.ListNamesAsync(IIndexesOperations, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.ListNamesAsync(Microsoft.Azure.Search.IIndexesOperations, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/IndexesOperationsExtensions.Customization.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNamesAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/IndexesOperationsExtensions.Customization.cs
    startLine: 174
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nLists the names of all indexes available for an Azure Search\nservice. Use this instead of List() when you only need index\nnames. It will save bandwidth and resource utilization, especially\nif your Search Service has many indexes.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/List-Indexes\"></a>\n"
  example: []
  syntax:
    content: public static Task<IList<string>> ListNamesAsync(this IIndexesOperations operations, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNamesAsync(operations As IIndexesOperations, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of String))
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{System.String}}
      description: "\nThe list of all index names for the search service.\n"
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.ListNamesAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.Create(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.Create(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: Create(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(IIndexesOperations, Index, SearchRequestOptions)
  nameWithType: IndexesOperationsExtensions.Create(IIndexesOperations, Index, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.Create(Microsoft.Azure.Search.IIndexesOperations, Microsoft.Azure.Search.Models.Index, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Create
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nCreates a new Azure Search index.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Create-Index\"></a>\n"
  example: []
  syntax:
    content: public static Index Create(this IIndexesOperations operations, Index index, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Create(operations As IIndexesOperations, index As Index, searchRequestOptions As SearchRequestOptions = Nothing) As Index
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: index
      type: Microsoft.Azure.Search.Models.Index
      description: "\nThe definition of the index to create.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.Index
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateAsync(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.CreateAsync(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: CreateAsync(Microsoft.Azure.Search.IIndexesOperations,Microsoft.Azure.Search.Models.Index,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(IIndexesOperations, Index, SearchRequestOptions, CancellationToken)
  nameWithType: IndexesOperationsExtensions.CreateAsync(IIndexesOperations, Index, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateAsync(Microsoft.Azure.Search.IIndexesOperations, Microsoft.Azure.Search.Models.Index, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nCreates a new Azure Search index.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Create-Index\"></a>\n"
  example: []
  syntax:
    content: public static Task<Index> CreateAsync(this IIndexesOperations operations, Index index, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(operations As IIndexesOperations, index As Index, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Index)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: index
      type: Microsoft.Azure.Search.Models.Index
      description: "\nThe definition of the index to create.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.Index}
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.List(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.List(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: List(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IIndexesOperations, String, SearchRequestOptions)
  nameWithType: IndexesOperationsExtensions.List(IIndexesOperations, String, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.List(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 81
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nLists all indexes available for an Azure Search service.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/List-Indexes\"></a>\n"
  example: []
  syntax:
    content: public static IndexListResult List(this IIndexesOperations operations, string select = null, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IIndexesOperations, select As String = Nothing, searchRequestOptions As SearchRequestOptions = Nothing) As IndexListResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: select
      type: System.String
      description: "\nSelects which properties of the index definitions to retrieve. Specified\nas a comma-separated list of JSON property names, or '*' for all\nproperties. The default is all properties.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.IndexListResult
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.List*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.ListAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.ListAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IIndexesOperations, String, SearchRequestOptions, CancellationToken)
  nameWithType: IndexesOperationsExtensions.ListAsync(IIndexesOperations, String, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.ListAsync(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nLists all indexes available for an Azure Search service.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/List-Indexes\"></a>\n"
  example: []
  syntax:
    content: public static Task<IndexListResult> ListAsync(this IIndexesOperations operations, string select = null, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IIndexesOperations, select As String = Nothing, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IndexListResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: select
      type: System.String
      description: "\nSelects which properties of the index definitions to retrieve. Specified\nas a comma-separated list of JSON property names, or '*' for all\nproperties. The default is all properties.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.IndexListResult}
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.ListAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  id: CreateOrUpdate(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IIndexesOperations, String, Index, Nullable<Boolean>, SearchRequestOptions, AccessCondition)
  nameWithType: IndexesOperationsExtensions.CreateOrUpdate(IIndexesOperations, String, Index, Nullable<Boolean>, SearchRequestOptions, AccessCondition)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.Index, System.Nullable<System.Boolean>, Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nCreates a new Azure Search index or updates an index if it already exists.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Update-Index\"></a>\n"
  example: []
  syntax:
    content: public static Index CreateOrUpdate(this IIndexesOperations operations, string indexName, Index index, bool ? allowIndexDowntime = null, SearchRequestOptions searchRequestOptions = null, AccessCondition accessCondition = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IIndexesOperations, indexName As String, index As Index, allowIndexDowntime As Boolean? = Nothing, searchRequestOptions As SearchRequestOptions = Nothing, accessCondition As AccessCondition = Nothing) As Index
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexName
      type: System.String
      description: "\nThe definition of the index to create or update.\n"
    - id: index
      type: Microsoft.Azure.Search.Models.Index
      description: "\nThe definition of the index to create or update.\n"
    - id: allowIndexDowntime
      type: System.Nullable{System.Boolean}
      description: "\nAllows new analyzers, tokenizers, token filters, or char filters to be\nadded to an index by taking the index offline for at least a few seconds.\nThis temporarily causes indexing and query requests to fail. Performance\nand write availability of the index can be impaired for several minutes\nafter the index is updated, or longer for very large indexes.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: accessCondition
      type: Microsoft.Azure.Search.Models.AccessCondition
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.Index
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate*
  nameWithType.vb: IndexesOperationsExtensions.CreateOrUpdate(IIndexesOperations, String, Index, Nullable(Of Boolean), SearchRequestOptions, AccessCondition)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.Index, System.Nullable(Of System.Boolean), Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition)
  name.vb: CreateOrUpdate(IIndexesOperations, String, Index, Nullable(Of Boolean), SearchRequestOptions, AccessCondition)
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  id: CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.Index,System.Nullable{System.Boolean},Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IIndexesOperations, String, Index, Nullable<Boolean>, SearchRequestOptions, AccessCondition, CancellationToken)
  nameWithType: IndexesOperationsExtensions.CreateOrUpdateAsync(IIndexesOperations, String, Index, Nullable<Boolean>, SearchRequestOptions, AccessCondition, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.Index, System.Nullable<System.Boolean>, Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 172
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nCreates a new Azure Search index or updates an index if it already exists.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Update-Index\"></a>\n"
  example: []
  syntax:
    content: public static Task<Index> CreateOrUpdateAsync(this IIndexesOperations operations, string indexName, Index index, bool ? allowIndexDowntime = null, SearchRequestOptions searchRequestOptions = null, AccessCondition accessCondition = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IIndexesOperations, indexName As String, index As Index, allowIndexDowntime As Boolean? = Nothing, searchRequestOptions As SearchRequestOptions = Nothing, accessCondition As AccessCondition = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Index)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexName
      type: System.String
      description: "\nThe definition of the index to create or update.\n"
    - id: index
      type: Microsoft.Azure.Search.Models.Index
      description: "\nThe definition of the index to create or update.\n"
    - id: allowIndexDowntime
      type: System.Nullable{System.Boolean}
      description: "\nAllows new analyzers, tokenizers, token filters, or char filters to be\nadded to an index by taking the index offline for at least a few seconds.\nThis temporarily causes indexing and query requests to fail. Performance\nand write availability of the index can be impaired for several minutes\nafter the index is updated, or longer for very large indexes.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: accessCondition
      type: Microsoft.Azure.Search.Models.AccessCondition
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.Index}
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync*
  nameWithType.vb: IndexesOperationsExtensions.CreateOrUpdateAsync(IIndexesOperations, String, Index, Nullable(Of Boolean), SearchRequestOptions, AccessCondition, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.Index, System.Nullable(Of System.Boolean), Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition, System.Threading.CancellationToken)
  name.vb: CreateOrUpdateAsync(IIndexesOperations, String, Index, Nullable(Of Boolean), SearchRequestOptions, AccessCondition, CancellationToken)
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.Delete(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.Delete(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  id: Delete(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IIndexesOperations, String, SearchRequestOptions, AccessCondition)
  nameWithType: IndexesOperationsExtensions.Delete(IIndexesOperations, String, SearchRequestOptions, AccessCondition)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.Delete(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 196
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nDeletes an Azure Search index and all the documents it contains.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Delete-Index\"></a>\n"
  example: []
  syntax:
    content: public static void Delete(this IIndexesOperations operations, string indexName, SearchRequestOptions searchRequestOptions = null, AccessCondition accessCondition = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(operations As IIndexesOperations, indexName As String, searchRequestOptions As SearchRequestOptions = Nothing, accessCondition As AccessCondition = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexName
      type: System.String
      description: "\nThe name of the index to delete.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: accessCondition
      type: Microsoft.Azure.Search.Models.AccessCondition
      description: "\nAdditional parameters for the operation\n"
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.DeleteAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.DeleteAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IIndexesOperations, String, SearchRequestOptions, AccessCondition, CancellationToken)
  nameWithType: IndexesOperationsExtensions.DeleteAsync(IIndexesOperations, String, SearchRequestOptions, AccessCondition, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.DeleteAsync(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 220
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nDeletes an Azure Search index and all the documents it contains.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Delete-Index\"></a>\n"
  example: []
  syntax:
    content: public static Task DeleteAsync(this IIndexesOperations operations, string indexName, SearchRequestOptions searchRequestOptions = null, AccessCondition accessCondition = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IIndexesOperations, indexName As String, searchRequestOptions As SearchRequestOptions = Nothing, accessCondition As AccessCondition = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexName
      type: System.String
      description: "\nThe name of the index to delete.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: accessCondition
      type: Microsoft.Azure.Search.Models.AccessCondition
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.DeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.Get(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.Get(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: Get(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IIndexesOperations, String, SearchRequestOptions)
  nameWithType: IndexesOperationsExtensions.Get(IIndexesOperations, String, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.Get(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 238
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nRetrieves an index definition from Azure Search.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Get-Index\"></a>\n"
  example: []
  syntax:
    content: public static Index Get(this IIndexesOperations operations, string indexName, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IIndexesOperations, indexName As String, searchRequestOptions As SearchRequestOptions = Nothing) As Index
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexName
      type: System.String
      description: "\nThe name of the index to retrieve.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.Index
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.GetAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.GetAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IIndexesOperations, String, SearchRequestOptions, CancellationToken)
  nameWithType: IndexesOperationsExtensions.GetAsync(IIndexesOperations, String, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.GetAsync(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 259
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nRetrieves an index definition from Azure Search.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Get-Index\"></a>\n"
  example: []
  syntax:
    content: public static Task<Index> GetAsync(this IIndexesOperations operations, string indexName, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IIndexesOperations, indexName As String, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Index)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexName
      type: System.String
      description: "\nThe name of the index to retrieve.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.Index}
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatistics(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatistics(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: GetStatistics(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetStatistics(IIndexesOperations, String, SearchRequestOptions)
  nameWithType: IndexesOperationsExtensions.GetStatistics(IIndexesOperations, String, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatistics(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetStatistics
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 281
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nReturns statistics for the given index, including a document count and\nstorage usage.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Get-Index-Statistics\"></a>\n"
  example: []
  syntax:
    content: public static IndexGetStatisticsResult GetStatistics(this IIndexesOperations operations, string indexName, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStatistics(operations As IIndexesOperations, indexName As String, searchRequestOptions As SearchRequestOptions = Nothing) As IndexGetStatisticsResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexName
      type: System.String
      description: "\nThe name of the index for which to retrieve statistics.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatistics*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatisticsAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatisticsAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: GetStatisticsAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetStatisticsAsync(IIndexesOperations, String, SearchRequestOptions, CancellationToken)
  nameWithType: IndexesOperationsExtensions.GetStatisticsAsync(IIndexesOperations, String, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatisticsAsync(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetStatisticsAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 303
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nReturns statistics for the given index, including a document count and\nstorage usage.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Get-Index-Statistics\"></a>\n"
  example: []
  syntax:
    content: public static Task<IndexGetStatisticsResult> GetStatisticsAsync(this IIndexesOperations operations, string indexName, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStatisticsAsync(operations As IIndexesOperations, indexName As String, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IndexGetStatisticsResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexName
      type: System.String
      description: "\nThe name of the index for which to retrieve statistics.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.IndexGetStatisticsResult}
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatisticsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.Analyze(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.AnalyzeRequest,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.Analyze(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.AnalyzeRequest,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: Analyze(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.AnalyzeRequest,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: Analyze(IIndexesOperations, String, AnalyzeRequest, SearchRequestOptions)
  nameWithType: IndexesOperationsExtensions.Analyze(IIndexesOperations, String, AnalyzeRequest, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.Analyze(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.AnalyzeRequest, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Analyze
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 327
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nShows how an analyzer breaks text into tokens.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/test-analyzer\"></a>\n"
  example: []
  syntax:
    content: public static AnalyzeResult Analyze(this IIndexesOperations operations, string indexName, AnalyzeRequest request, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Analyze(operations As IIndexesOperations, indexName As String, request As AnalyzeRequest, searchRequestOptions As SearchRequestOptions = Nothing) As AnalyzeResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexName
      type: System.String
      description: "\nThe name of the index for which to test an analyzer.\n"
    - id: request
      type: Microsoft.Azure.Search.Models.AnalyzeRequest
      description: "\nThe text and analyzer or analysis components to test.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.AnalyzeResult
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.Analyze*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.AnalyzeAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.AnalyzeRequest,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexesOperationsExtensions.AnalyzeAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.AnalyzeRequest,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: AnalyzeAsync(Microsoft.Azure.Search.IIndexesOperations,System.String,Microsoft.Azure.Search.Models.AnalyzeRequest,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexesOperationsExtensions
  langs:
  - csharp
  - vb
  name: AnalyzeAsync(IIndexesOperations, String, AnalyzeRequest, SearchRequestOptions, CancellationToken)
  nameWithType: IndexesOperationsExtensions.AnalyzeAsync(IIndexesOperations, String, AnalyzeRequest, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.AnalyzeAsync(Microsoft.Azure.Search.IIndexesOperations, System.String, Microsoft.Azure.Search.Models.AnalyzeRequest, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AnalyzeAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexesOperationsExtensions.cs
    startLine: 351
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nShows how an analyzer breaks text into tokens.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/test-analyzer\"></a>\n"
  example: []
  syntax:
    content: public static Task<AnalyzeResult> AnalyzeAsync(this IIndexesOperations operations, string indexName, AnalyzeRequest request, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AnalyzeAsync(operations As IIndexesOperations, indexName As String, request As AnalyzeRequest, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of AnalyzeResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexesOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexName
      type: System.String
      description: "\nThe name of the index for which to test an analyzer.\n"
    - id: request
      type: Microsoft.Azure.Search.Models.AnalyzeRequest
      description: "\nThe text and analyzer or analysis components to test.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.AnalyzeResult}
  overload: Microsoft.Azure.Search.IndexesOperationsExtensions.AnalyzeAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Search
  commentId: N:Microsoft.Azure.Search
  isExternal: false
  name: Microsoft.Azure.Search
  nameWithType: Microsoft.Azure.Search
  fullName: Microsoft.Azure.Search
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate
  isExternal: false
  name: CreateOrUpdate
  nameWithType: IndexesOperationsExtensions.CreateOrUpdate
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdate
- uid: Microsoft.Azure.Search.IIndexesOperations
  commentId: T:Microsoft.Azure.Search.IIndexesOperations
  parent: Microsoft.Azure.Search
  isExternal: false
  name: IIndexesOperations
  nameWithType: IIndexesOperations
  fullName: Microsoft.Azure.Search.IIndexesOperations
- uid: Microsoft.Azure.Search.Models.Index
  commentId: T:Microsoft.Azure.Search.Models.Index
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: Index
  nameWithType: Index
  fullName: Microsoft.Azure.Search.Models.Index
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.SearchRequestOptions
  commentId: T:Microsoft.Azure.Search.Models.SearchRequestOptions
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: SearchRequestOptions
  nameWithType: SearchRequestOptions
  fullName: Microsoft.Azure.Search.Models.SearchRequestOptions
- uid: Microsoft.Azure.Search.Models.AccessCondition
  commentId: T:Microsoft.Azure.Search.Models.AccessCondition
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: Microsoft.Azure.Search.Models.AccessCondition
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync
  isExternal: false
  name: CreateOrUpdateAsync
  nameWithType: IndexesOperationsExtensions.CreateOrUpdateAsync
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateOrUpdateAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.Index}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.Index}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Index>
  nameWithType: Task<Index>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Search.Models.Index>
  nameWithType.vb: Task(Of Index)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Search.Models.Index)
  name.vb: Task(Of Index)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.Index
    name: Index
    nameWithType: Index
    fullName: Microsoft.Azure.Search.Models.Index
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.Index
    name: Index
    nameWithType: Index
    fullName: Microsoft.Azure.Search.Models.Index
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.Exists*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.Exists
  isExternal: false
  name: Exists
  nameWithType: IndexesOperationsExtensions.Exists
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.Exists
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.ExistsAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.ExistsAsync
  isExternal: false
  name: ExistsAsync
  nameWithType: IndexesOperationsExtensions.ExistsAsync
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.ExistsAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.ListNames*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.ListNames
  isExternal: false
  name: ListNames
  nameWithType: IndexesOperationsExtensions.ListNames
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.ListNames
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.ListNamesAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.ListNamesAsync
  isExternal: false
  name: ListNamesAsync
  nameWithType: IndexesOperationsExtensions.ListNamesAsync
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.ListNamesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IList<String>>
  nameWithType: Task<IList<String>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<System.String>>
  nameWithType.vb: Task(Of IList(Of String))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of System.String))
  name.vb: Task(Of IList(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.Create*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.Create
  isExternal: false
  name: Create
  nameWithType: IndexesOperationsExtensions.Create
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.Create
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: IndexesOperationsExtensions.CreateAsync
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.CreateAsync
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.List*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.List
  isExternal: false
  name: List
  nameWithType: IndexesOperationsExtensions.List
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.List
- uid: Microsoft.Azure.Search.Models.IndexListResult
  commentId: T:Microsoft.Azure.Search.Models.IndexListResult
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: IndexListResult
  nameWithType: IndexListResult
  fullName: Microsoft.Azure.Search.Models.IndexListResult
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.ListAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.ListAsync
  isExternal: false
  name: ListAsync
  nameWithType: IndexesOperationsExtensions.ListAsync
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.ListAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.IndexListResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.IndexListResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IndexListResult>
  nameWithType: Task<IndexListResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Search.Models.IndexListResult>
  nameWithType.vb: Task(Of IndexListResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Search.Models.IndexListResult)
  name.vb: Task(Of IndexListResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.IndexListResult
    name: IndexListResult
    nameWithType: IndexListResult
    fullName: Microsoft.Azure.Search.Models.IndexListResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.IndexListResult
    name: IndexListResult
    nameWithType: IndexListResult
    fullName: Microsoft.Azure.Search.Models.IndexListResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.Delete*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.Delete
  isExternal: false
  name: Delete
  nameWithType: IndexesOperationsExtensions.Delete
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.Delete
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: IndexesOperationsExtensions.DeleteAsync
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.DeleteAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: IndexesOperationsExtensions.Get
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.Get
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: IndexesOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.GetAsync
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatistics*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatistics
  isExternal: false
  name: GetStatistics
  nameWithType: IndexesOperationsExtensions.GetStatistics
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatistics
- uid: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
  commentId: T:Microsoft.Azure.Search.Models.IndexGetStatisticsResult
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: IndexGetStatisticsResult
  nameWithType: IndexGetStatisticsResult
  fullName: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatisticsAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatisticsAsync
  isExternal: false
  name: GetStatisticsAsync
  nameWithType: IndexesOperationsExtensions.GetStatisticsAsync
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.GetStatisticsAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.IndexGetStatisticsResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.IndexGetStatisticsResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IndexGetStatisticsResult>
  nameWithType: Task<IndexGetStatisticsResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Search.Models.IndexGetStatisticsResult>
  nameWithType.vb: Task(Of IndexGetStatisticsResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Search.Models.IndexGetStatisticsResult)
  name.vb: Task(Of IndexGetStatisticsResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
    name: IndexGetStatisticsResult
    nameWithType: IndexGetStatisticsResult
    fullName: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
    name: IndexGetStatisticsResult
    nameWithType: IndexGetStatisticsResult
    fullName: Microsoft.Azure.Search.Models.IndexGetStatisticsResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.Analyze*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.Analyze
  isExternal: false
  name: Analyze
  nameWithType: IndexesOperationsExtensions.Analyze
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.Analyze
- uid: Microsoft.Azure.Search.Models.AnalyzeRequest
  commentId: T:Microsoft.Azure.Search.Models.AnalyzeRequest
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: AnalyzeRequest
  nameWithType: AnalyzeRequest
  fullName: Microsoft.Azure.Search.Models.AnalyzeRequest
- uid: Microsoft.Azure.Search.Models.AnalyzeResult
  commentId: T:Microsoft.Azure.Search.Models.AnalyzeResult
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: AnalyzeResult
  nameWithType: AnalyzeResult
  fullName: Microsoft.Azure.Search.Models.AnalyzeResult
- uid: Microsoft.Azure.Search.IndexesOperationsExtensions.AnalyzeAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexesOperationsExtensions.AnalyzeAsync
  isExternal: false
  name: AnalyzeAsync
  nameWithType: IndexesOperationsExtensions.AnalyzeAsync
  fullName: Microsoft.Azure.Search.IndexesOperationsExtensions.AnalyzeAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.AnalyzeResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.AnalyzeResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AnalyzeResult>
  nameWithType: Task<AnalyzeResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Search.Models.AnalyzeResult>
  nameWithType.vb: Task(Of AnalyzeResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Search.Models.AnalyzeResult)
  name.vb: Task(Of AnalyzeResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.AnalyzeResult
    name: AnalyzeResult
    nameWithType: AnalyzeResult
    fullName: Microsoft.Azure.Search.Models.AnalyzeResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.AnalyzeResult
    name: AnalyzeResult
    nameWithType: AnalyzeResult
    fullName: Microsoft.Azure.Search.Models.AnalyzeResult
  - name: )
    nameWithType: )
    fullName: )
