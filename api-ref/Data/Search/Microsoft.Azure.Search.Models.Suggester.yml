### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.Models.Suggester
  commentId: T:Microsoft.Azure.Search.Models.Suggester
  id: Suggester
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.Suggester.#ctor
  - Microsoft.Azure.Search.Models.Suggester.#ctor(System.String,Microsoft.Azure.Search.Models.SuggesterSearchMode,System.Collections.Generic.IList{System.String})
  - Microsoft.Azure.Search.Models.Suggester.#ctor(System.String,Microsoft.Azure.Search.Models.SuggesterSearchMode,System.String[])
  - Microsoft.Azure.Search.Models.Suggester.Name
  - Microsoft.Azure.Search.Models.Suggester.SearchMode
  - Microsoft.Azure.Search.Models.Suggester.SourceFields
  - Microsoft.Azure.Search.Models.Suggester.Validate
  langs:
  - csharp
  - vb
  name: Suggester
  nameWithType: Suggester
  fullName: Microsoft.Azure.Search.Models.Suggester
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Suggester
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nDefines how the Suggest API should apply to a group of fields in the\nindex.\n"
  example: []
  syntax:
    content: public class Suggester
    content.vb: Public Class Suggester
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.Suggester.#ctor(System.String,Microsoft.Azure.Search.Models.SuggesterSearchMode,System.String[])
  commentId: M:Microsoft.Azure.Search.Models.Suggester.#ctor(System.String,Microsoft.Azure.Search.Models.SuggesterSearchMode,System.String[])
  id: '#ctor(System.String,Microsoft.Azure.Search.Models.SuggesterSearchMode,System.String[])'
  parent: Microsoft.Azure.Search.Models.Suggester
  langs:
  - csharp
  - vb
  name: Suggester(String, SuggesterSearchMode, String[])
  nameWithType: Suggester.Suggester(String, SuggesterSearchMode, String[])
  fullName: Microsoft.Azure.Search.Models.Suggester.Suggester(System.String, Microsoft.Azure.Search.Models.SuggesterSearchMode, System.String[])
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Suggester.Customization.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexes/Models/Suggester.Customization.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the Suggester class with required\narguments.\n"
  example: []
  syntax:
    content: public Suggester(string name, SuggesterSearchMode searchMode, params string[] sourceFields)
    content.vb: Public Sub New(name As String, searchMode As SuggesterSearchMode, ParamArray sourceFields As String())
    parameters:
    - id: name
      type: System.String
      description: The name of the suggester.
    - id: searchMode
      type: Microsoft.Azure.Search.Models.SuggesterSearchMode
      description: A value indicating the capabilities of the suggester.
    - id: sourceFields
      type: System.String[]
      description: >-
        The list of field names to which the suggester applies; Each field must be

        searchable.
  overload: Microsoft.Azure.Search.Models.Suggester.#ctor*
  nameWithType.vb: Suggester.Suggester(String, SuggesterSearchMode, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.Suggester.Suggester(System.String, Microsoft.Azure.Search.Models.SuggesterSearchMode, System.String())
  name.vb: Suggester(String, SuggesterSearchMode, String())
- uid: Microsoft.Azure.Search.Models.Suggester.#ctor
  commentId: M:Microsoft.Azure.Search.Models.Suggester.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.Suggester
  langs:
  - csharp
  - vb
  name: Suggester()
  nameWithType: Suggester.Suggester()
  fullName: Microsoft.Azure.Search.Models.Suggester.Suggester()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the Suggester class.\n"
  example: []
  syntax:
    content: public Suggester()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Search.Models.Suggester.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Suggester.#ctor(System.String,Microsoft.Azure.Search.Models.SuggesterSearchMode,System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Azure.Search.Models.Suggester.#ctor(System.String,Microsoft.Azure.Search.Models.SuggesterSearchMode,System.Collections.Generic.IList{System.String})
  id: '#ctor(System.String,Microsoft.Azure.Search.Models.SuggesterSearchMode,System.Collections.Generic.IList{System.String})'
  parent: Microsoft.Azure.Search.Models.Suggester
  langs:
  - csharp
  - vb
  name: Suggester(String, SuggesterSearchMode, IList<String>)
  nameWithType: Suggester.Suggester(String, SuggesterSearchMode, IList<String>)
  fullName: Microsoft.Azure.Search.Models.Suggester.Suggester(System.String, Microsoft.Azure.Search.Models.SuggesterSearchMode, System.Collections.Generic.IList<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the Suggester class.\n"
  example: []
  syntax:
    content: public Suggester(string name, SuggesterSearchMode searchMode, IList<string> sourceFields)
    content.vb: Public Sub New(name As String, searchMode As SuggesterSearchMode, sourceFields As IList(Of String))
    parameters:
    - id: name
      type: System.String
    - id: searchMode
      type: Microsoft.Azure.Search.Models.SuggesterSearchMode
    - id: sourceFields
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Search.Models.Suggester.#ctor*
  nameWithType.vb: Suggester.Suggester(String, SuggesterSearchMode, IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.Suggester.Suggester(System.String, Microsoft.Azure.Search.Models.SuggesterSearchMode, System.Collections.Generic.IList(Of System.String))
  name.vb: Suggester(String, SuggesterSearchMode, IList(Of String))
- uid: Microsoft.Azure.Search.Models.Suggester.Name
  commentId: P:Microsoft.Azure.Search.Models.Suggester.Name
  id: Name
  parent: Microsoft.Azure.Search.Models.Suggester
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Suggester.Name
  fullName: Microsoft.Azure.Search.Models.Suggester.Name
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the name of the suggester.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Search.Models.Suggester.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Suggester.SearchMode
  commentId: P:Microsoft.Azure.Search.Models.Suggester.SearchMode
  id: SearchMode
  parent: Microsoft.Azure.Search.Models.Suggester
  langs:
  - csharp
  - vb
  name: SearchMode
  nameWithType: Suggester.SearchMode
  fullName: Microsoft.Azure.Search.Models.Suggester.SearchMode
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SearchMode
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating the capabilities of the suggester.\nPossible values include: 'analyzingInfixMatching'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "searchMode")]

      public SuggesterSearchMode SearchMode { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="searchMode")>

      Public Property SearchMode As SuggesterSearchMode
    parameters: []
    return:
      type: Microsoft.Azure.Search.Models.SuggesterSearchMode
  overload: Microsoft.Azure.Search.Models.Suggester.SearchMode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: searchMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Suggester.SourceFields
  commentId: P:Microsoft.Azure.Search.Models.Suggester.SourceFields
  id: SourceFields
  parent: Microsoft.Azure.Search.Models.Suggester
  langs:
  - csharp
  - vb
  name: SourceFields
  nameWithType: Suggester.SourceFields
  fullName: Microsoft.Azure.Search.Models.Suggester.SourceFields
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SourceFields
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the list of field names to which the suggester\napplies. Each field must be searchable.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sourceFields")]

      public IList<string> SourceFields { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sourceFields")>

      Public Property SourceFields As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Search.Models.Suggester.SourceFields*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sourceFields
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.Suggester.Validate
  commentId: M:Microsoft.Azure.Search.Models.Suggester.Validate
  id: Validate
  parent: Microsoft.Azure.Search.Models.Suggester
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Suggester.Validate()
  fullName: Microsoft.Azure.Search.Models.Suggester.Validate()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/Suggester.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Search.Models.Suggester.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.Suggester.#ctor*
  commentId: Overload:Microsoft.Azure.Search.Models.Suggester.#ctor
  isExternal: false
  name: Suggester
  nameWithType: Suggester.Suggester
  fullName: Microsoft.Azure.Search.Models.Suggester.Suggester
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Search.Models.SuggesterSearchMode
  commentId: T:Microsoft.Azure.Search.Models.SuggesterSearchMode
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: SuggesterSearchMode
  nameWithType: SuggesterSearchMode
  fullName: Microsoft.Azure.Search.Models.SuggesterSearchMode
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Search.Models.Suggester.Name*
  commentId: Overload:Microsoft.Azure.Search.Models.Suggester.Name
  isExternal: false
  name: Name
  nameWithType: Suggester.Name
  fullName: Microsoft.Azure.Search.Models.Suggester.Name
- uid: Microsoft.Azure.Search.Models.Suggester.SearchMode*
  commentId: Overload:Microsoft.Azure.Search.Models.Suggester.SearchMode
  isExternal: false
  name: SearchMode
  nameWithType: Suggester.SearchMode
  fullName: Microsoft.Azure.Search.Models.Suggester.SearchMode
- uid: Microsoft.Azure.Search.Models.Suggester.SourceFields*
  commentId: Overload:Microsoft.Azure.Search.Models.Suggester.SourceFields
  isExternal: false
  name: SourceFields
  nameWithType: Suggester.SourceFields
  fullName: Microsoft.Azure.Search.Models.Suggester.SourceFields
- uid: Microsoft.Azure.Search.Models.Suggester.Validate*
  commentId: Overload:Microsoft.Azure.Search.Models.Suggester.Validate
  isExternal: false
  name: Validate
  nameWithType: Suggester.Validate
  fullName: Microsoft.Azure.Search.Models.Suggester.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
