### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.Models.BlobExtractionMode
  commentId: T:Microsoft.Azure.Search.Models.BlobExtractionMode
  id: BlobExtractionMode
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.BlobExtractionMode.AllMetadata
  - Microsoft.Azure.Search.Models.BlobExtractionMode.ContentAndMetadata
  - Microsoft.Azure.Search.Models.BlobExtractionMode.Create(System.String)
  - Microsoft.Azure.Search.Models.BlobExtractionMode.op_Implicit(System.String)~Microsoft.Azure.Search.Models.BlobExtractionMode
  - Microsoft.Azure.Search.Models.BlobExtractionMode.StorageMetadata
  langs:
  - csharp
  - vb
  name: BlobExtractionMode
  nameWithType: BlobExtractionMode
  fullName: Microsoft.Azure.Search.Models.BlobExtractionMode
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/BlobExtractionMode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BlobExtractionMode
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/BlobExtractionMode.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nDefines which parts of a blob will be indexed by the blob storage indexer. \n<a href=\"https://docs.microsoft.com/azure/search/search-howto-indexing-azure-blob-storage\"></a>\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof (ExtensibleEnumConverter<BlobExtractionMode>))]

      public sealed class BlobExtractionMode : ExtensibleEnum<BlobExtractionMode>, IEquatable<BlobExtractionMode>
    content.vb: >-
      <JsonConverter(GetType(ExtensibleEnumConverter(Of BlobExtractionMode)))>

      Public NotInheritable Class BlobExtractionMode
          Inherits ExtensibleEnum(Of BlobExtractionMode)
          Implements IEquatable(Of BlobExtractionMode)
  inheritance:
  - System.Object
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}
  implements:
  - System.IEquatable{Microsoft.Azure.Search.Models.BlobExtractionMode}
  inheritedMembers:
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.Lookup(System.String)
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.Equals(Microsoft.Azure.Search.Models.BlobExtractionMode)
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.Equals(System.Object)
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.GetHashCode
  - Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.Azure.Search.Serialization.ExtensibleEnumConverter{Microsoft.Azure.Search.Models.BlobExtractionMode}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.Search.Models.BlobExtractionMode.StorageMetadata
  commentId: F:Microsoft.Azure.Search.Models.BlobExtractionMode.StorageMetadata
  id: StorageMetadata
  parent: Microsoft.Azure.Search.Models.BlobExtractionMode
  langs:
  - csharp
  - vb
  name: StorageMetadata
  nameWithType: BlobExtractionMode.StorageMetadata
  fullName: Microsoft.Azure.Search.Models.BlobExtractionMode.StorageMetadata
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/BlobExtractionMode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageMetadata
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/BlobExtractionMode.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nSpecifies that only the standard blob properties and user-specified metadata will be indexed. \n<a href=\"https://docs.microsoft.com/azure/storage/storage-properties-metadata\"></a>\n"
  example: []
  syntax:
    content: public static readonly BlobExtractionMode StorageMetadata
    content.vb: Public Shared ReadOnly StorageMetadata As BlobExtractionMode
    return:
      type: Microsoft.Azure.Search.Models.BlobExtractionMode
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.BlobExtractionMode.AllMetadata
  commentId: F:Microsoft.Azure.Search.Models.BlobExtractionMode.AllMetadata
  id: AllMetadata
  parent: Microsoft.Azure.Search.Models.BlobExtractionMode
  langs:
  - csharp
  - vb
  name: AllMetadata
  nameWithType: BlobExtractionMode.AllMetadata
  fullName: Microsoft.Azure.Search.Models.BlobExtractionMode.AllMetadata
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/BlobExtractionMode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AllMetadata
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/BlobExtractionMode.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nSpecifies that storage metadata and the content-type specific metadata extracted from the blob content will be indexed.\n<a href=\"https://docs.microsoft.com/azure/search/search-howto-indexing-azure-blob-storage#content-type-specific-metadata-properties\"></a> \n"
  example: []
  syntax:
    content: public static readonly BlobExtractionMode AllMetadata
    content.vb: Public Shared ReadOnly AllMetadata As BlobExtractionMode
    return:
      type: Microsoft.Azure.Search.Models.BlobExtractionMode
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.BlobExtractionMode.ContentAndMetadata
  commentId: F:Microsoft.Azure.Search.Models.BlobExtractionMode.ContentAndMetadata
  id: ContentAndMetadata
  parent: Microsoft.Azure.Search.Models.BlobExtractionMode
  langs:
  - csharp
  - vb
  name: ContentAndMetadata
  nameWithType: BlobExtractionMode.ContentAndMetadata
  fullName: Microsoft.Azure.Search.Models.BlobExtractionMode.ContentAndMetadata
  type: Field
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/BlobExtractionMode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContentAndMetadata
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/BlobExtractionMode.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nSpecifies that all metadata and textual content extracted from the blob will be indexed. This is the default value.  \n<a href=\"https://docs.microsoft.com/azure/search/search-howto-indexing-azure-blob-storage#document-extraction-process\"></a>\n"
  example: []
  syntax:
    content: public static readonly BlobExtractionMode ContentAndMetadata
    content.vb: Public Shared ReadOnly ContentAndMetadata As BlobExtractionMode
    return:
      type: Microsoft.Azure.Search.Models.BlobExtractionMode
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.Search.Models.BlobExtractionMode.Create(System.String)
  commentId: M:Microsoft.Azure.Search.Models.BlobExtractionMode.Create(System.String)
  id: Create(System.String)
  parent: Microsoft.Azure.Search.Models.BlobExtractionMode
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: BlobExtractionMode.Create(String)
  fullName: Microsoft.Azure.Search.Models.BlobExtractionMode.Create(System.String)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/BlobExtractionMode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Create
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/BlobExtractionMode.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nCreates a new BlobExtractionMode instance, or returns an existing instance if the given name matches that of a\nknown blob extraction mode.\n"
  example: []
  syntax:
    content: public static BlobExtractionMode Create(string name)
    content.vb: Public Shared Function Create(name As String) As BlobExtractionMode
    parameters:
    - id: name
      type: System.String
      description: Name of the blob extraction mode.
    return:
      type: Microsoft.Azure.Search.Models.BlobExtractionMode
      description: A BlobExtractionMode instance with the given name.
  overload: Microsoft.Azure.Search.Models.BlobExtractionMode.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.Models.BlobExtractionMode.op_Implicit(System.String)~Microsoft.Azure.Search.Models.BlobExtractionMode
  commentId: M:Microsoft.Azure.Search.Models.BlobExtractionMode.op_Implicit(System.String)~Microsoft.Azure.Search.Models.BlobExtractionMode
  id: op_Implicit(System.String)~Microsoft.Azure.Search.Models.BlobExtractionMode
  parent: Microsoft.Azure.Search.Models.BlobExtractionMode
  langs:
  - csharp
  - vb
  name: Implicit(String to BlobExtractionMode)
  nameWithType: BlobExtractionMode.Implicit(String to BlobExtractionMode)
  fullName: Microsoft.Azure.Search.Models.BlobExtractionMode.Implicit(System.String to Microsoft.Azure.Search.Models.BlobExtractionMode)
  type: Operator
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/BlobExtractionMode.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: op_Implicit
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/Models/BlobExtractionMode.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nDefines implicit conversion from string to BlobExtractionMode.\n"
  example: []
  syntax:
    content: public static implicit operator BlobExtractionMode(string name)
    content.vb: Public Shared Widening Operator CType(name As String) As BlobExtractionMode
    parameters:
    - id: name
      type: System.String
      description: string to convert.
    return:
      type: Microsoft.Azure.Search.Models.BlobExtractionMode
      description: The string as a BlobExtractionMode.
  overload: Microsoft.Azure.Search.Models.BlobExtractionMode.op_Implicit*
  nameWithType.vb: BlobExtractionMode.Widening(String to BlobExtractionMode)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Search.Models.BlobExtractionMode.Widening(System.String to Microsoft.Azure.Search.Models.BlobExtractionMode)
  name.vb: Widening(String to BlobExtractionMode)
references:
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}
  commentId: T:Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}
  parent: Microsoft.Azure.Search.Models
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  name: ExtensibleEnum<BlobExtractionMode>
  nameWithType: ExtensibleEnum<BlobExtractionMode>
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.BlobExtractionMode>
  nameWithType.vb: ExtensibleEnum(Of BlobExtractionMode)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.BlobExtractionMode)
  name.vb: ExtensibleEnum(Of BlobExtractionMode)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    nameWithType: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.BlobExtractionMode
    name: BlobExtractionMode
    nameWithType: BlobExtractionMode
    fullName: Microsoft.Azure.Search.Models.BlobExtractionMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    nameWithType: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.BlobExtractionMode
    name: BlobExtractionMode
    nameWithType: BlobExtractionMode
    fullName: Microsoft.Azure.Search.Models.BlobExtractionMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Microsoft.Azure.Search.Models.BlobExtractionMode}
  commentId: T:System.IEquatable{Microsoft.Azure.Search.Models.BlobExtractionMode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<BlobExtractionMode>
  nameWithType: IEquatable<BlobExtractionMode>
  fullName: System.IEquatable<Microsoft.Azure.Search.Models.BlobExtractionMode>
  nameWithType.vb: IEquatable(Of BlobExtractionMode)
  fullname.vb: System.IEquatable(Of Microsoft.Azure.Search.Models.BlobExtractionMode)
  name.vb: IEquatable(Of BlobExtractionMode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.BlobExtractionMode
    name: BlobExtractionMode
    nameWithType: BlobExtractionMode
    fullName: Microsoft.Azure.Search.Models.BlobExtractionMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.BlobExtractionMode
    name: BlobExtractionMode
    nameWithType: BlobExtractionMode
    fullName: Microsoft.Azure.Search.Models.BlobExtractionMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.Lookup(System.String)
  commentId: M:Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.Lookup(System.String)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
  name: Lookup(String)
  nameWithType: ExtensibleEnum<BlobExtractionMode>.Lookup(String)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.BlobExtractionMode>.Lookup(System.String)
  nameWithType.vb: ExtensibleEnum(Of BlobExtractionMode).Lookup(String)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.BlobExtractionMode).Lookup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    nameWithType: ExtensibleEnum<BlobExtractionMode>.Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.BlobExtractionMode>.Lookup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    nameWithType: ExtensibleEnum(Of BlobExtractionMode).Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.BlobExtractionMode).Lookup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.Equals(Microsoft.Azure.Search.Models.BlobExtractionMode)
  commentId: M:Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.Equals(Microsoft.Azure.Search.Models.BlobExtractionMode)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
  name: Equals(BlobExtractionMode)
  nameWithType: ExtensibleEnum<BlobExtractionMode>.Equals(BlobExtractionMode)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.BlobExtractionMode>.Equals(Microsoft.Azure.Search.Models.BlobExtractionMode)
  nameWithType.vb: ExtensibleEnum(Of BlobExtractionMode).Equals(BlobExtractionMode)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.BlobExtractionMode).Equals(Microsoft.Azure.Search.Models.BlobExtractionMode)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    nameWithType: ExtensibleEnum<BlobExtractionMode>.Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.BlobExtractionMode>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Search.Models.BlobExtractionMode
    name: BlobExtractionMode
    nameWithType: BlobExtractionMode
    fullName: Microsoft.Azure.Search.Models.BlobExtractionMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    nameWithType: ExtensibleEnum(Of BlobExtractionMode).Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.BlobExtractionMode).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Search.Models.BlobExtractionMode
    name: BlobExtractionMode
    nameWithType: BlobExtractionMode
    fullName: Microsoft.Azure.Search.Models.BlobExtractionMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.Equals(System.Object)
  commentId: M:Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.Equals(System.Object)
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
  name: Equals(Object)
  nameWithType: ExtensibleEnum<BlobExtractionMode>.Equals(Object)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.BlobExtractionMode>.Equals(System.Object)
  nameWithType.vb: ExtensibleEnum(Of BlobExtractionMode).Equals(Object)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.BlobExtractionMode).Equals(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    nameWithType: ExtensibleEnum<BlobExtractionMode>.Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.BlobExtractionMode>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    nameWithType: ExtensibleEnum(Of BlobExtractionMode).Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.BlobExtractionMode).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.GetHashCode
  commentId: M:Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.GetHashCode
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
  name: GetHashCode()
  nameWithType: ExtensibleEnum<BlobExtractionMode>.GetHashCode()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.BlobExtractionMode>.GetHashCode()
  nameWithType.vb: ExtensibleEnum(Of BlobExtractionMode).GetHashCode()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.BlobExtractionMode).GetHashCode()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    nameWithType: ExtensibleEnum<BlobExtractionMode>.GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.BlobExtractionMode>.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    nameWithType: ExtensibleEnum(Of BlobExtractionMode).GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.BlobExtractionMode).GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.ToString
  commentId: M:Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}.ToString
  parent: Microsoft.Azure.Search.Models.ExtensibleEnum{Microsoft.Azure.Search.Models.BlobExtractionMode}
  definition: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
  name: ToString()
  nameWithType: ExtensibleEnum<BlobExtractionMode>.ToString()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.BlobExtractionMode>.ToString()
  nameWithType.vb: ExtensibleEnum(Of BlobExtractionMode).ToString()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.BlobExtractionMode).ToString()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    nameWithType: ExtensibleEnum<BlobExtractionMode>.ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<Microsoft.Azure.Search.Models.BlobExtractionMode>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    nameWithType: ExtensibleEnum(Of BlobExtractionMode).ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of Microsoft.Azure.Search.Models.BlobExtractionMode).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
  commentId: T:Microsoft.Azure.Search.Models.ExtensibleEnum`1
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: ExtensibleEnum<T>
  nameWithType: ExtensibleEnum<T>
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>
  nameWithType.vb: ExtensibleEnum(Of T)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T)
  name.vb: ExtensibleEnum(Of T)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    nameWithType: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1
    name: ExtensibleEnum
    nameWithType: ExtensibleEnum
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
  commentId: M:Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
  isExternal: true
  name: Lookup(String)
  nameWithType: ExtensibleEnum<T>.Lookup(String)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Lookup(System.String)
  nameWithType.vb: ExtensibleEnum(Of T).Lookup(String)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Lookup(System.String)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    nameWithType: ExtensibleEnum<T>.Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Lookup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Lookup(System.String)
    name: Lookup
    nameWithType: ExtensibleEnum(Of T).Lookup
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Lookup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
  commentId: M:Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
  isExternal: false
  name: Equals(T)
  nameWithType: ExtensibleEnum<T>.Equals(T)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals(T)
  nameWithType.vb: ExtensibleEnum(Of T).Equals(T)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals(T)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    nameWithType: ExtensibleEnum<T>.Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(`0)
    name: Equals
    nameWithType: ExtensibleEnum(Of T).Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
  commentId: M:Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
  isExternal: true
  name: Equals(Object)
  nameWithType: ExtensibleEnum<T>.Equals(Object)
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals(System.Object)
  nameWithType.vb: ExtensibleEnum(Of T).Equals(Object)
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals(System.Object)
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    nameWithType: ExtensibleEnum<T>.Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.Equals(System.Object)
    name: Equals
    nameWithType: ExtensibleEnum(Of T).Equals
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
  commentId: M:Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
  isExternal: false
  name: GetHashCode()
  nameWithType: ExtensibleEnum<T>.GetHashCode()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.GetHashCode()
  nameWithType.vb: ExtensibleEnum(Of T).GetHashCode()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).GetHashCode()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    nameWithType: ExtensibleEnum<T>.GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.GetHashCode
    name: GetHashCode
    nameWithType: ExtensibleEnum(Of T).GetHashCode
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
  commentId: M:Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
  isExternal: false
  name: ToString()
  nameWithType: ExtensibleEnum<T>.ToString()
  fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.ToString()
  nameWithType.vb: ExtensibleEnum(Of T).ToString()
  fullname.vb: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).ToString()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    nameWithType: ExtensibleEnum<T>.ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum<T>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.ExtensibleEnum`1.ToString
    name: ToString
    nameWithType: ExtensibleEnum(Of T).ToString
    fullName: Microsoft.Azure.Search.Models.ExtensibleEnum(Of T).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.BlobExtractionMode
  commentId: T:Microsoft.Azure.Search.Models.BlobExtractionMode
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: BlobExtractionMode
  nameWithType: BlobExtractionMode
  fullName: Microsoft.Azure.Search.Models.BlobExtractionMode
- uid: Microsoft.Azure.Search.Models.BlobExtractionMode.Create*
  commentId: Overload:Microsoft.Azure.Search.Models.BlobExtractionMode.Create
  isExternal: false
  name: Create
  nameWithType: BlobExtractionMode.Create
  fullName: Microsoft.Azure.Search.Models.BlobExtractionMode.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Search.Models.BlobExtractionMode.op_Implicit*
  commentId: Overload:Microsoft.Azure.Search.Models.BlobExtractionMode.op_Implicit
  isExternal: false
  name: Implicit
  nameWithType: BlobExtractionMode.Implicit
  fullName: Microsoft.Azure.Search.Models.BlobExtractionMode.Implicit
  nameWithType.vb: BlobExtractionMode.Widening
  fullname.vb: Microsoft.Azure.Search.Models.BlobExtractionMode.Widening
  name.vb: Widening
