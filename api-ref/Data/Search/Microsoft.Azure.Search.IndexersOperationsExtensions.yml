### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions
  commentId: T:Microsoft.Azure.Search.IndexersOperationsExtensions
  id: IndexersOperationsExtensions
  parent: Microsoft.Azure.Search
  children:
  - Microsoft.Azure.Search.IndexersOperationsExtensions.Create(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.CreateAsync(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.Delete(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.DeleteAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.Exists(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.ExistsAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.Get(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.GetAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatus(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatusAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.List(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.ListAsync(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.Reset(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.ResetAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.Run(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  - Microsoft.Azure.Search.IndexersOperationsExtensions.RunAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IndexersOperationsExtensions
  nameWithType: IndexersOperationsExtensions
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IndexersOperationsExtensions
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nOperations for managing indexers. \n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Indexer-operations\"></a>\n"
  example: []
  syntax:
    content: public static class IndexersOperationsExtensions
    content.vb: Public Module IndexersOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  id: CreateOrUpdate(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IIndexersOperations, Indexer, SearchRequestOptions, AccessCondition)
  nameWithType: IndexersOperationsExtensions.CreateOrUpdate(IIndexersOperations, Indexer, SearchRequestOptions, AccessCondition)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexersOperations, Microsoft.Azure.Search.Models.Indexer, Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/IndexersOperationsExtensions.Customization.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/IndexersOperationsExtensions.Customization.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nCreates a new Azure Search indexer or updates an indexer if it already\nexists.\n"
  example: []
  syntax:
    content: public static Indexer CreateOrUpdate(this IIndexersOperations operations, Indexer indexer, SearchRequestOptions searchRequestOptions = null, AccessCondition accessCondition = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IIndexersOperations, indexer As Indexer, searchRequestOptions As SearchRequestOptions = Nothing, accessCondition As AccessCondition = Nothing) As Indexer
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexer
      type: Microsoft.Azure.Search.Models.Indexer
      description: "\nThe definition of the indexer to create or update.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: accessCondition
      type: Microsoft.Azure.Search.Models.AccessCondition
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.Indexer
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  id: CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IIndexersOperations, Indexer, SearchRequestOptions, AccessCondition, CancellationToken)
  nameWithType: IndexersOperationsExtensions.CreateOrUpdateAsync(IIndexersOperations, Indexer, SearchRequestOptions, AccessCondition, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexersOperations, Microsoft.Azure.Search.Models.Indexer, Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/IndexersOperationsExtensions.Customization.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/IndexersOperationsExtensions.Customization.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nCreates a new Azure Search indexer or updates an indexer if it already\nexists.\n"
  example: []
  syntax:
    content: public static Task<Indexer> CreateOrUpdateAsync(this IIndexersOperations operations, Indexer indexer, SearchRequestOptions searchRequestOptions = null, AccessCondition accessCondition = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IIndexersOperations, indexer As Indexer, searchRequestOptions As SearchRequestOptions = Nothing, accessCondition As AccessCondition = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Indexer)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexer
      type: Microsoft.Azure.Search.Models.Indexer
      description: "\nThe definition of the indexer to create or update.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: accessCondition
      type: Microsoft.Azure.Search.Models.AccessCondition
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.Indexer}
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.Exists(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.Exists(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: Exists(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: Exists(IIndexersOperations, String, SearchRequestOptions)
  nameWithType: IndexersOperationsExtensions.Exists(IIndexersOperations, String, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.Exists(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/IndexersOperationsExtensions.Customization.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Exists
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/IndexersOperationsExtensions.Customization.cs
    startLine: 80
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nDetermines whether or not the given indexer exists in the Azure Search service.\n"
  example: []
  syntax:
    content: public static bool Exists(this IIndexersOperations operations, string indexerName, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Exists(operations As IIndexersOperations, indexerName As String, searchRequestOptions As SearchRequestOptions = Nothing) As Boolean
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the indexer exists; <code>false</code> otherwise.\n"
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.Exists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.ExistsAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.ExistsAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: ExistsAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExistsAsync(IIndexersOperations, String, SearchRequestOptions, CancellationToken)
  nameWithType: IndexersOperationsExtensions.ExistsAsync(IIndexersOperations, String, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.ExistsAsync(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/Customizations/Indexers/IndexersOperationsExtensions.Customization.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExistsAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/Customizations/Indexers/IndexersOperationsExtensions.Customization.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nDetermines whether or not the given indexer exists in the Azure Search service.\n"
  example: []
  syntax:
    content: public static Task<bool> ExistsAsync(this IIndexersOperations operations, string indexerName, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExistsAsync(operations As IIndexersOperations, indexerName As String, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\n<code>true</code> if the indexer exists; <code>false</code> otherwise.\n"
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.ExistsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.Reset(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.Reset(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: Reset(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: Reset(IIndexersOperations, String, SearchRequestOptions)
  nameWithType: IndexersOperationsExtensions.Reset(IIndexersOperations, String, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.Reset(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Reset
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nResets the change tracking state associated with an Azure Search indexer.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Reset-Indexer\"></a>\n"
  example: []
  syntax:
    content: public static void Reset(this IIndexersOperations operations, string indexerName, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Reset(operations As IIndexersOperations, indexerName As String, searchRequestOptions As SearchRequestOptions = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer to reset.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.Reset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.ResetAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.ResetAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: ResetAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: ResetAsync(IIndexersOperations, String, SearchRequestOptions, CancellationToken)
  nameWithType: IndexersOperationsExtensions.ResetAsync(IIndexersOperations, String, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.ResetAsync(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResetAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nResets the change tracking state associated with an Azure Search indexer.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Reset-Indexer\"></a>\n"
  example: []
  syntax:
    content: public static Task ResetAsync(this IIndexersOperations operations, string indexerName, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ResetAsync(operations As IIndexersOperations, indexerName As String, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer to reset.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.ResetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.Run(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.Run(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: Run(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: Run(IIndexersOperations, String, SearchRequestOptions)
  nameWithType: IndexersOperationsExtensions.Run(IIndexersOperations, String, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.Run(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Run
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nRuns an Azure Search indexer on-demand.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Run-Indexer\"></a>\n"
  example: []
  syntax:
    content: public static void Run(this IIndexersOperations operations, string indexerName, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Run(operations As IIndexersOperations, indexerName As String, searchRequestOptions As SearchRequestOptions = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer to run.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.Run*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.RunAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.RunAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: RunAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: RunAsync(IIndexersOperations, String, SearchRequestOptions, CancellationToken)
  nameWithType: IndexersOperationsExtensions.RunAsync(IIndexersOperations, String, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.RunAsync(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RunAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 97
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nRuns an Azure Search indexer on-demand.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Run-Indexer\"></a>\n"
  example: []
  syntax:
    content: public static Task RunAsync(this IIndexersOperations operations, string indexerName, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RunAsync(operations As IIndexersOperations, indexerName As String, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer to run.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.RunAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  id: CreateOrUpdate(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IIndexersOperations, String, Indexer, SearchRequestOptions, AccessCondition)
  nameWithType: IndexersOperationsExtensions.CreateOrUpdate(IIndexersOperations, String, Indexer, SearchRequestOptions, AccessCondition)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.Indexer, Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 122
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nCreates a new Azure Search indexer or updates an indexer if it already\nexists.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Create-Indexer\"></a>\n"
  example: []
  syntax:
    content: public static Indexer CreateOrUpdate(this IIndexersOperations operations, string indexerName, Indexer indexer, SearchRequestOptions searchRequestOptions = null, AccessCondition accessCondition = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IIndexersOperations, indexerName As String, indexer As Indexer, searchRequestOptions As SearchRequestOptions = Nothing, accessCondition As AccessCondition = Nothing) As Indexer
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer to create or update.\n"
    - id: indexer
      type: Microsoft.Azure.Search.Models.Indexer
      description: "\nThe definition of the indexer to create or update.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: accessCondition
      type: Microsoft.Azure.Search.Models.AccessCondition
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.Indexer
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  id: CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IIndexersOperations, String, Indexer, SearchRequestOptions, AccessCondition, CancellationToken)
  nameWithType: IndexersOperationsExtensions.CreateOrUpdateAsync(IIndexersOperations, String, Indexer, SearchRequestOptions, AccessCondition, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.Indexer, Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 150
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nCreates a new Azure Search indexer or updates an indexer if it already\nexists.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Create-Indexer\"></a>\n"
  example: []
  syntax:
    content: public static Task<Indexer> CreateOrUpdateAsync(this IIndexersOperations operations, string indexerName, Indexer indexer, SearchRequestOptions searchRequestOptions = null, AccessCondition accessCondition = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IIndexersOperations, indexerName As String, indexer As Indexer, searchRequestOptions As SearchRequestOptions = Nothing, accessCondition As AccessCondition = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Indexer)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer to create or update.\n"
    - id: indexer
      type: Microsoft.Azure.Search.Models.Indexer
      description: "\nThe definition of the indexer to create or update.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: accessCondition
      type: Microsoft.Azure.Search.Models.AccessCondition
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.Indexer}
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.Delete(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.Delete(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  id: Delete(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IIndexersOperations, String, SearchRequestOptions, AccessCondition)
  nameWithType: IndexersOperationsExtensions.Delete(IIndexersOperations, String, SearchRequestOptions, AccessCondition)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.Delete(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 174
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nDeletes an Azure Search indexer.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Delete-Indexer\"></a>\n"
  example: []
  syntax:
    content: public static void Delete(this IIndexersOperations operations, string indexerName, SearchRequestOptions searchRequestOptions = null, AccessCondition accessCondition = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(operations As IIndexersOperations, indexerName As String, searchRequestOptions As SearchRequestOptions = Nothing, accessCondition As AccessCondition = Nothing)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer to delete.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: accessCondition
      type: Microsoft.Azure.Search.Models.AccessCondition
      description: "\nAdditional parameters for the operation\n"
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.DeleteAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.DeleteAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,Microsoft.Azure.Search.Models.AccessCondition,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IIndexersOperations, String, SearchRequestOptions, AccessCondition, CancellationToken)
  nameWithType: IndexersOperationsExtensions.DeleteAsync(IIndexersOperations, String, SearchRequestOptions, AccessCondition, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.DeleteAsync(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, Microsoft.Azure.Search.Models.AccessCondition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 198
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nDeletes an Azure Search indexer.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Delete-Indexer\"></a>\n"
  example: []
  syntax:
    content: public static Task DeleteAsync(this IIndexersOperations operations, string indexerName, SearchRequestOptions searchRequestOptions = null, AccessCondition accessCondition = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IIndexersOperations, indexerName As String, searchRequestOptions As SearchRequestOptions = Nothing, accessCondition As AccessCondition = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer to delete.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: accessCondition
      type: Microsoft.Azure.Search.Models.AccessCondition
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.DeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.Get(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.Get(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: Get(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IIndexersOperations, String, SearchRequestOptions)
  nameWithType: IndexersOperationsExtensions.Get(IIndexersOperations, String, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.Get(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 216
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nRetrieves an indexer definition from Azure Search.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Get-Indexer\"></a>\n"
  example: []
  syntax:
    content: public static Indexer Get(this IIndexersOperations operations, string indexerName, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IIndexersOperations, indexerName As String, searchRequestOptions As SearchRequestOptions = Nothing) As Indexer
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer to retrieve.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.Indexer
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.GetAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.GetAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IIndexersOperations, String, SearchRequestOptions, CancellationToken)
  nameWithType: IndexersOperationsExtensions.GetAsync(IIndexersOperations, String, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.GetAsync(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 237
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nRetrieves an indexer definition from Azure Search.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Get-Indexer\"></a>\n"
  example: []
  syntax:
    content: public static Task<Indexer> GetAsync(this IIndexersOperations operations, string indexerName, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IIndexersOperations, indexerName As String, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Indexer)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer to retrieve.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.Indexer}
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.List(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.List(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: List(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IIndexersOperations, SearchRequestOptions)
  nameWithType: IndexersOperationsExtensions.List(IIndexersOperations, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.List(Microsoft.Azure.Search.IIndexersOperations, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 255
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nLists all indexers available for an Azure Search service.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/List-Indexers\"></a>\n"
  example: []
  syntax:
    content: public static IndexerListResult List(this IIndexersOperations operations, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IIndexersOperations, searchRequestOptions As SearchRequestOptions = Nothing) As IndexerListResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.IndexerListResult
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.List*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.ListAsync(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.ListAsync(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IIndexersOperations, SearchRequestOptions, CancellationToken)
  nameWithType: IndexersOperationsExtensions.ListAsync(IIndexersOperations, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.ListAsync(Microsoft.Azure.Search.IIndexersOperations, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 273
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nLists all indexers available for an Azure Search service.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/List-Indexers\"></a>\n"
  example: []
  syntax:
    content: public static Task<IndexerListResult> ListAsync(this IIndexersOperations operations, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IIndexersOperations, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IndexerListResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.IndexerListResult}
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.ListAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.Create(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.Create(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: Create(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: Create(IIndexersOperations, Indexer, SearchRequestOptions)
  nameWithType: IndexersOperationsExtensions.Create(IIndexersOperations, Indexer, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.Create(Microsoft.Azure.Search.IIndexersOperations, Microsoft.Azure.Search.Models.Indexer, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Create
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 294
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nCreates a new Azure Search indexer.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Create-Indexer\"></a>\n"
  example: []
  syntax:
    content: public static Indexer Create(this IIndexersOperations operations, Indexer indexer, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Create(operations As IIndexersOperations, indexer As Indexer, searchRequestOptions As SearchRequestOptions = Nothing) As Indexer
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexer
      type: Microsoft.Azure.Search.Models.Indexer
      description: "\nThe definition of the indexer to create.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.Indexer
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateAsync(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.CreateAsync(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: CreateAsync(Microsoft.Azure.Search.IIndexersOperations,Microsoft.Azure.Search.Models.Indexer,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync(IIndexersOperations, Indexer, SearchRequestOptions, CancellationToken)
  nameWithType: IndexersOperationsExtensions.CreateAsync(IIndexersOperations, Indexer, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateAsync(Microsoft.Azure.Search.IIndexersOperations, Microsoft.Azure.Search.Models.Indexer, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 315
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nCreates a new Azure Search indexer.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Create-Indexer\"></a>\n"
  example: []
  syntax:
    content: public static Task<Indexer> CreateAsync(this IIndexersOperations operations, Indexer indexer, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateAsync(operations As IIndexersOperations, indexer As Indexer, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Indexer)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexer
      type: Microsoft.Azure.Search.Models.Indexer
      description: "\nThe definition of the indexer to create.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.Indexer}
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatus(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatus(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  id: GetStatus(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetStatus(IIndexersOperations, String, SearchRequestOptions)
  nameWithType: IndexersOperationsExtensions.GetStatus(IIndexersOperations, String, SearchRequestOptions)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatus(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetStatus
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 336
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nReturns the current status and execution history of an indexer.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Get-Indexer-Status\"></a>\n"
  example: []
  syntax:
    content: public static IndexerExecutionInfo GetStatus(this IIndexersOperations operations, string indexerName, SearchRequestOptions searchRequestOptions = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStatus(operations As IIndexersOperations, indexerName As String, searchRequestOptions As SearchRequestOptions = Nothing) As IndexerExecutionInfo
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer for which to retrieve status.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    return:
      type: Microsoft.Azure.Search.Models.IndexerExecutionInfo
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatusAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatusAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  id: GetStatusAsync(Microsoft.Azure.Search.IIndexersOperations,System.String,Microsoft.Azure.Search.Models.SearchRequestOptions,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Search.IndexersOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetStatusAsync(IIndexersOperations, String, SearchRequestOptions, CancellationToken)
  nameWithType: IndexersOperationsExtensions.GetStatusAsync(IIndexersOperations, String, SearchRequestOptions, CancellationToken)
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatusAsync(Microsoft.Azure.Search.IIndexersOperations, System.String, Microsoft.Azure.Search.Models.SearchRequestOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetStatusAsync
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/IndexersOperationsExtensions.cs
    startLine: 357
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search
  summary: "\nReturns the current status and execution history of an indexer.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Get-Indexer-Status\"></a>\n"
  example: []
  syntax:
    content: public static Task<IndexerExecutionInfo> GetStatusAsync(this IIndexersOperations operations, string indexerName, SearchRequestOptions searchRequestOptions = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStatusAsync(operations As IIndexersOperations, indexerName As String, searchRequestOptions As SearchRequestOptions = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IndexerExecutionInfo)
    parameters:
    - id: operations
      type: Microsoft.Azure.Search.IIndexersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: indexerName
      type: System.String
      description: "\nThe name of the indexer for which to retrieve status.\n"
    - id: searchRequestOptions
      type: Microsoft.Azure.Search.Models.SearchRequestOptions
      description: "\nAdditional parameters for the operation\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.IndexerExecutionInfo}
  overload: Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatusAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Search
  commentId: N:Microsoft.Azure.Search
  isExternal: false
  name: Microsoft.Azure.Search
  nameWithType: Microsoft.Azure.Search
  fullName: Microsoft.Azure.Search
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate
  isExternal: false
  name: CreateOrUpdate
  nameWithType: IndexersOperationsExtensions.CreateOrUpdate
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdate
- uid: Microsoft.Azure.Search.IIndexersOperations
  commentId: T:Microsoft.Azure.Search.IIndexersOperations
  parent: Microsoft.Azure.Search
  isExternal: false
  name: IIndexersOperations
  nameWithType: IIndexersOperations
  fullName: Microsoft.Azure.Search.IIndexersOperations
- uid: Microsoft.Azure.Search.Models.Indexer
  commentId: T:Microsoft.Azure.Search.Models.Indexer
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: Indexer
  nameWithType: Indexer
  fullName: Microsoft.Azure.Search.Models.Indexer
- uid: Microsoft.Azure.Search.Models.SearchRequestOptions
  commentId: T:Microsoft.Azure.Search.Models.SearchRequestOptions
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: SearchRequestOptions
  nameWithType: SearchRequestOptions
  fullName: Microsoft.Azure.Search.Models.SearchRequestOptions
- uid: Microsoft.Azure.Search.Models.AccessCondition
  commentId: T:Microsoft.Azure.Search.Models.AccessCondition
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: Microsoft.Azure.Search.Models.AccessCondition
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync
  isExternal: false
  name: CreateOrUpdateAsync
  nameWithType: IndexersOperationsExtensions.CreateOrUpdateAsync
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateOrUpdateAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.Indexer}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.Indexer}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Indexer>
  nameWithType: Task<Indexer>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Search.Models.Indexer>
  nameWithType.vb: Task(Of Indexer)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Search.Models.Indexer)
  name.vb: Task(Of Indexer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.Indexer
    name: Indexer
    nameWithType: Indexer
    fullName: Microsoft.Azure.Search.Models.Indexer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.Indexer
    name: Indexer
    nameWithType: Indexer
    fullName: Microsoft.Azure.Search.Models.Indexer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.Exists*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.Exists
  isExternal: false
  name: Exists
  nameWithType: IndexersOperationsExtensions.Exists
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.Exists
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.ExistsAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.ExistsAsync
  isExternal: false
  name: ExistsAsync
  nameWithType: IndexersOperationsExtensions.ExistsAsync
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.ExistsAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.Reset*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.Reset
  isExternal: false
  name: Reset
  nameWithType: IndexersOperationsExtensions.Reset
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.Reset
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.ResetAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.ResetAsync
  isExternal: false
  name: ResetAsync
  nameWithType: IndexersOperationsExtensions.ResetAsync
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.ResetAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.Run*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.Run
  isExternal: false
  name: Run
  nameWithType: IndexersOperationsExtensions.Run
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.Run
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.RunAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.RunAsync
  isExternal: false
  name: RunAsync
  nameWithType: IndexersOperationsExtensions.RunAsync
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.RunAsync
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.Delete*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.Delete
  isExternal: false
  name: Delete
  nameWithType: IndexersOperationsExtensions.Delete
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.Delete
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: IndexersOperationsExtensions.DeleteAsync
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.DeleteAsync
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: IndexersOperationsExtensions.Get
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.Get
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: IndexersOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.GetAsync
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.List*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.List
  isExternal: false
  name: List
  nameWithType: IndexersOperationsExtensions.List
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.List
- uid: Microsoft.Azure.Search.Models.IndexerListResult
  commentId: T:Microsoft.Azure.Search.Models.IndexerListResult
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: IndexerListResult
  nameWithType: IndexerListResult
  fullName: Microsoft.Azure.Search.Models.IndexerListResult
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.ListAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.ListAsync
  isExternal: false
  name: ListAsync
  nameWithType: IndexersOperationsExtensions.ListAsync
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.ListAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.IndexerListResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.IndexerListResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IndexerListResult>
  nameWithType: Task<IndexerListResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Search.Models.IndexerListResult>
  nameWithType.vb: Task(Of IndexerListResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Search.Models.IndexerListResult)
  name.vb: Task(Of IndexerListResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.IndexerListResult
    name: IndexerListResult
    nameWithType: IndexerListResult
    fullName: Microsoft.Azure.Search.Models.IndexerListResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.IndexerListResult
    name: IndexerListResult
    nameWithType: IndexerListResult
    fullName: Microsoft.Azure.Search.Models.IndexerListResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.Create*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.Create
  isExternal: false
  name: Create
  nameWithType: IndexersOperationsExtensions.Create
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.Create
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: IndexersOperationsExtensions.CreateAsync
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.CreateAsync
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatus*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatus
  isExternal: false
  name: GetStatus
  nameWithType: IndexersOperationsExtensions.GetStatus
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatus
- uid: Microsoft.Azure.Search.Models.IndexerExecutionInfo
  commentId: T:Microsoft.Azure.Search.Models.IndexerExecutionInfo
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: IndexerExecutionInfo
  nameWithType: IndexerExecutionInfo
  fullName: Microsoft.Azure.Search.Models.IndexerExecutionInfo
- uid: Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatusAsync*
  commentId: Overload:Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatusAsync
  isExternal: false
  name: GetStatusAsync
  nameWithType: IndexersOperationsExtensions.GetStatusAsync
  fullName: Microsoft.Azure.Search.IndexersOperationsExtensions.GetStatusAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.IndexerExecutionInfo}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Search.Models.IndexerExecutionInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IndexerExecutionInfo>
  nameWithType: Task<IndexerExecutionInfo>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Search.Models.IndexerExecutionInfo>
  nameWithType.vb: Task(Of IndexerExecutionInfo)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Search.Models.IndexerExecutionInfo)
  name.vb: Task(Of IndexerExecutionInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.IndexerExecutionInfo
    name: IndexerExecutionInfo
    nameWithType: IndexerExecutionInfo
    fullName: Microsoft.Azure.Search.Models.IndexerExecutionInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.IndexerExecutionInfo
    name: IndexerExecutionInfo
    nameWithType: IndexerExecutionInfo
    fullName: Microsoft.Azure.Search.Models.IndexerExecutionInfo
  - name: )
    nameWithType: )
    fullName: )
