### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  commentId: T:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  id: WordDelimiterTokenFilter
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.#ctor
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String})
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateAll
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateNumbers
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateWords
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateNumberParts
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateWordParts
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.PreserveOriginal
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.ProtectedWords
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnCaseChange
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnNumerics
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.StemEnglishPossessive
  - Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.Validate
  langs:
  - csharp
  - vb
  name: WordDelimiterTokenFilter
  nameWithType: WordDelimiterTokenFilter
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: WordDelimiterTokenFilter
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nSplits words into subwords and performs optional transformations on\nsubword groups. This token filter is implemented using Apache Lucene.\n<a href=\"http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter.html\"></a>\n"
  example: []
  syntax:
    content: >-
      [JsonObject("#Microsoft.Azure.Search.WordDelimiterTokenFilter")]

      public class WordDelimiterTokenFilter : TokenFilter
    content.vb: >-
      <JsonObject("#Microsoft.Azure.Search.WordDelimiterTokenFilter")>

      Public Class WordDelimiterTokenFilter
          Inherits TokenFilter
  inheritance:
  - System.Object
  - Microsoft.Azure.Search.Models.TokenFilter
  inheritedMembers:
  - Microsoft.Azure.Search.Models.TokenFilter.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: '#Microsoft.Azure.Search.WordDelimiterTokenFilter'
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.#ctor
  commentId: M:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: WordDelimiterTokenFilter()
  nameWithType: WordDelimiterTokenFilter.WordDelimiterTokenFilter()
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.WordDelimiterTokenFilter()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the WordDelimiterTokenFilter class.\n"
  example: []
  syntax:
    content: public WordDelimiterTokenFilter()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String})
  commentId: M:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String})
  id: '#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String})'
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: WordDelimiterTokenFilter(String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, IList<String>)
  nameWithType: WordDelimiterTokenFilter.WordDelimiterTokenFilter(String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, IList<String>)
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.WordDelimiterTokenFilter(System.String, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Collections.Generic.IList<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the WordDelimiterTokenFilter class.\n"
  example: []
  syntax:
    content: public WordDelimiterTokenFilter(string name, bool ? generateWordParts = null, bool ? generateNumberParts = null, bool ? catenateWords = null, bool ? catenateNumbers = null, bool ? catenateAll = null, bool ? splitOnCaseChange = null, bool ? preserveOriginal = null, bool ? splitOnNumerics = null, bool ? stemEnglishPossessive = null, IList<string> protectedWords = null)
    content.vb: Public Sub New(name As String, generateWordParts As Boolean? = Nothing, generateNumberParts As Boolean? = Nothing, catenateWords As Boolean? = Nothing, catenateNumbers As Boolean? = Nothing, catenateAll As Boolean? = Nothing, splitOnCaseChange As Boolean? = Nothing, preserveOriginal As Boolean? = Nothing, splitOnNumerics As Boolean? = Nothing, stemEnglishPossessive As Boolean? = Nothing, protectedWords As IList(Of String) = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: generateWordParts
      type: System.Nullable{System.Boolean}
    - id: generateNumberParts
      type: System.Nullable{System.Boolean}
    - id: catenateWords
      type: System.Nullable{System.Boolean}
    - id: catenateNumbers
      type: System.Nullable{System.Boolean}
    - id: catenateAll
      type: System.Nullable{System.Boolean}
    - id: splitOnCaseChange
      type: System.Nullable{System.Boolean}
    - id: preserveOriginal
      type: System.Nullable{System.Boolean}
    - id: splitOnNumerics
      type: System.Nullable{System.Boolean}
    - id: stemEnglishPossessive
      type: System.Nullable{System.Boolean}
    - id: protectedWords
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.#ctor*
  nameWithType.vb: WordDelimiterTokenFilter.WordDelimiterTokenFilter(String, Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.WordDelimiterTokenFilter(System.String, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Collections.Generic.IList(Of System.String))
  name.vb: WordDelimiterTokenFilter(String, Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), IList(Of String))
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateWordParts
  commentId: P:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateWordParts
  id: GenerateWordParts
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: GenerateWordParts
  nameWithType: WordDelimiterTokenFilter.GenerateWordParts
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateWordParts
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GenerateWordParts
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether to generate part words. If\nset, causes parts of words to be generated; for example\n\"AzureSearch\" becomes \"Azure\" \"Search\". Default is true.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "generateWordParts")]

      public bool ? GenerateWordParts { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="generateWordParts")>

      Public Property GenerateWordParts As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateWordParts*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: generateWordParts
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateNumberParts
  commentId: P:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateNumberParts
  id: GenerateNumberParts
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: GenerateNumberParts
  nameWithType: WordDelimiterTokenFilter.GenerateNumberParts
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateNumberParts
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GenerateNumberParts
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether to generate number\nsubwords. Default is true.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "generateNumberParts")]

      public bool ? GenerateNumberParts { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="generateNumberParts")>

      Public Property GenerateNumberParts As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateNumberParts*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: generateNumberParts
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateWords
  commentId: P:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateWords
  id: CatenateWords
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: CatenateWords
  nameWithType: WordDelimiterTokenFilter.CatenateWords
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateWords
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CatenateWords
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether maximum runs of word parts\nwill be catenated. For example, if this is set to true,\n\"Azure-Search\" becomes \"AzureSearch\". Default is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "catenateWords")]

      public bool ? CatenateWords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="catenateWords")>

      Public Property CatenateWords As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateWords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: catenateWords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateNumbers
  commentId: P:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateNumbers
  id: CatenateNumbers
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: CatenateNumbers
  nameWithType: WordDelimiterTokenFilter.CatenateNumbers
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateNumbers
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CatenateNumbers
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether maximum runs of number\nparts will be catenated. For example, if this is set to true,\n\"1-2\" becomes \"12\". Default is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "catenateNumbers")]

      public bool ? CatenateNumbers { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="catenateNumbers")>

      Public Property CatenateNumbers As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateNumbers*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: catenateNumbers
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateAll
  commentId: P:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateAll
  id: CatenateAll
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: CatenateAll
  nameWithType: WordDelimiterTokenFilter.CatenateAll
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateAll
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CatenateAll
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether all subword parts will be\ncatenated. For example, if this is set to true, \"Azure-Search-1\"\nbecomes \"AzureSearch1\". Default is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "catenateAll")]

      public bool ? CatenateAll { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="catenateAll")>

      Public Property CatenateAll As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateAll*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: catenateAll
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnCaseChange
  commentId: P:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnCaseChange
  id: SplitOnCaseChange
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: SplitOnCaseChange
  nameWithType: WordDelimiterTokenFilter.SplitOnCaseChange
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnCaseChange
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SplitOnCaseChange
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether to split words on\ncaseChange. For example, if this is set to true, \"AzureSearch\"\nbecomes \"Azure\" \"Search\". Default is true.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "splitOnCaseChange")]

      public bool ? SplitOnCaseChange { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="splitOnCaseChange")>

      Public Property SplitOnCaseChange As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnCaseChange*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: splitOnCaseChange
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.PreserveOriginal
  commentId: P:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.PreserveOriginal
  id: PreserveOriginal
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: PreserveOriginal
  nameWithType: WordDelimiterTokenFilter.PreserveOriginal
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.PreserveOriginal
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PreserveOriginal
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether original words will be\npreserved and added to the subword list. Default is false.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "preserveOriginal")]

      public bool ? PreserveOriginal { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="preserveOriginal")>

      Public Property PreserveOriginal As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.PreserveOriginal*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: preserveOriginal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnNumerics
  commentId: P:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnNumerics
  id: SplitOnNumerics
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: SplitOnNumerics
  nameWithType: WordDelimiterTokenFilter.SplitOnNumerics
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnNumerics
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SplitOnNumerics
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether to split on numbers. For\nexample, if this is set to true, \"Azure1Search\" becomes \"Azure\"\n\"1\" \"Search\". Default is true.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "splitOnNumerics")]

      public bool ? SplitOnNumerics { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="splitOnNumerics")>

      Public Property SplitOnNumerics As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnNumerics*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: splitOnNumerics
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.StemEnglishPossessive
  commentId: P:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.StemEnglishPossessive
  id: StemEnglishPossessive
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: StemEnglishPossessive
  nameWithType: WordDelimiterTokenFilter.StemEnglishPossessive
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.StemEnglishPossessive
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StemEnglishPossessive
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 115
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating whether to remove trailing \"'s\"\nfor each subword. Default is true.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "stemEnglishPossessive")]

      public bool ? StemEnglishPossessive { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="stemEnglishPossessive")>

      Public Property StemEnglishPossessive As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.StemEnglishPossessive*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: stemEnglishPossessive
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.ProtectedWords
  commentId: P:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.ProtectedWords
  id: ProtectedWords
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: ProtectedWords
  nameWithType: WordDelimiterTokenFilter.ProtectedWords
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.ProtectedWords
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProtectedWords
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a list of tokens to protect from being delimited.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "protectedWords")]

      public IList<string> ProtectedWords { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="protectedWords")>

      Public Property ProtectedWords As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.ProtectedWords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: protectedWords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.Validate
  commentId: M:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.Validate
  id: Validate
  parent: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: WordDelimiterTokenFilter.Validate()
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.Validate()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/WordDelimiterTokenFilter.cs
    startLine: 130
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Microsoft.Azure.Search.Models.TokenFilter.Validate
  overload: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Search.Models.TokenFilter
  commentId: T:Microsoft.Azure.Search.Models.TokenFilter
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: TokenFilter
  nameWithType: TokenFilter
  fullName: Microsoft.Azure.Search.Models.TokenFilter
- uid: Microsoft.Azure.Search.Models.TokenFilter.Name
  commentId: P:Microsoft.Azure.Search.Models.TokenFilter.Name
  parent: Microsoft.Azure.Search.Models.TokenFilter
  isExternal: false
  name: Name
  nameWithType: TokenFilter.Name
  fullName: Microsoft.Azure.Search.Models.TokenFilter.Name
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.#ctor*
  commentId: Overload:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.#ctor
  isExternal: false
  name: WordDelimiterTokenFilter
  nameWithType: WordDelimiterTokenFilter.WordDelimiterTokenFilter
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.WordDelimiterTokenFilter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateWordParts*
  commentId: Overload:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateWordParts
  isExternal: false
  name: GenerateWordParts
  nameWithType: WordDelimiterTokenFilter.GenerateWordParts
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateWordParts
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateNumberParts*
  commentId: Overload:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateNumberParts
  isExternal: false
  name: GenerateNumberParts
  nameWithType: WordDelimiterTokenFilter.GenerateNumberParts
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.GenerateNumberParts
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateWords*
  commentId: Overload:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateWords
  isExternal: false
  name: CatenateWords
  nameWithType: WordDelimiterTokenFilter.CatenateWords
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateWords
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateNumbers*
  commentId: Overload:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateNumbers
  isExternal: false
  name: CatenateNumbers
  nameWithType: WordDelimiterTokenFilter.CatenateNumbers
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateNumbers
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateAll*
  commentId: Overload:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateAll
  isExternal: false
  name: CatenateAll
  nameWithType: WordDelimiterTokenFilter.CatenateAll
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.CatenateAll
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnCaseChange*
  commentId: Overload:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnCaseChange
  isExternal: false
  name: SplitOnCaseChange
  nameWithType: WordDelimiterTokenFilter.SplitOnCaseChange
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnCaseChange
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.PreserveOriginal*
  commentId: Overload:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.PreserveOriginal
  isExternal: false
  name: PreserveOriginal
  nameWithType: WordDelimiterTokenFilter.PreserveOriginal
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.PreserveOriginal
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnNumerics*
  commentId: Overload:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnNumerics
  isExternal: false
  name: SplitOnNumerics
  nameWithType: WordDelimiterTokenFilter.SplitOnNumerics
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.SplitOnNumerics
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.StemEnglishPossessive*
  commentId: Overload:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.StemEnglishPossessive
  isExternal: false
  name: StemEnglishPossessive
  nameWithType: WordDelimiterTokenFilter.StemEnglishPossessive
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.StemEnglishPossessive
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.ProtectedWords*
  commentId: Overload:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.ProtectedWords
  isExternal: false
  name: ProtectedWords
  nameWithType: WordDelimiterTokenFilter.ProtectedWords
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.ProtectedWords
- uid: Microsoft.Azure.Search.Models.TokenFilter.Validate
  commentId: M:Microsoft.Azure.Search.Models.TokenFilter.Validate
  parent: Microsoft.Azure.Search.Models.TokenFilter
  isExternal: false
  name: Validate()
  nameWithType: TokenFilter.Validate()
  fullName: Microsoft.Azure.Search.Models.TokenFilter.Validate()
  spec.csharp:
  - uid: Microsoft.Azure.Search.Models.TokenFilter.Validate
    name: Validate
    nameWithType: TokenFilter.Validate
    fullName: Microsoft.Azure.Search.Models.TokenFilter.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.Search.Models.TokenFilter.Validate
    name: Validate
    nameWithType: TokenFilter.Validate
    fullName: Microsoft.Azure.Search.Models.TokenFilter.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.Validate*
  commentId: Overload:Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.Validate
  isExternal: false
  name: Validate
  nameWithType: WordDelimiterTokenFilter.Validate
  fullName: Microsoft.Azure.Search.Models.WordDelimiterTokenFilter.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
