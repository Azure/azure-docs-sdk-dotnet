### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Search.Models.ScoringProfile
  commentId: T:Microsoft.Azure.Search.Models.ScoringProfile
  id: ScoringProfile
  parent: Microsoft.Azure.Search.Models
  children:
  - Microsoft.Azure.Search.Models.ScoringProfile.#ctor
  - Microsoft.Azure.Search.Models.ScoringProfile.#ctor(System.String,Microsoft.Azure.Search.Models.TextWeights,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringFunction},System.Nullable{Microsoft.Azure.Search.Models.ScoringFunctionAggregation})
  - Microsoft.Azure.Search.Models.ScoringProfile.FunctionAggregation
  - Microsoft.Azure.Search.Models.ScoringProfile.Functions
  - Microsoft.Azure.Search.Models.ScoringProfile.Name
  - Microsoft.Azure.Search.Models.ScoringProfile.TextWeights
  - Microsoft.Azure.Search.Models.ScoringProfile.Validate
  langs:
  - csharp
  - vb
  name: ScoringProfile
  nameWithType: ScoringProfile
  fullName: Microsoft.Azure.Search.Models.ScoringProfile
  type: Class
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ScoringProfile
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nDefines parameters for an Azure Search index that influence scoring in\nsearch queries.\n<a href=\"https://docs.microsoft.com/rest/api/searchservice/Add-scoring-profiles-to-a-search-index\"></a>\n"
  example: []
  syntax:
    content: public class ScoringProfile
    content.vb: Public Class ScoringProfile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Search.Models.ScoringProfile.#ctor
  commentId: M:Microsoft.Azure.Search.Models.ScoringProfile.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Search.Models.ScoringProfile
  langs:
  - csharp
  - vb
  name: ScoringProfile()
  nameWithType: ScoringProfile.ScoringProfile()
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.ScoringProfile()
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the ScoringProfile class.\n"
  example: []
  syntax:
    content: public ScoringProfile()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Search.Models.ScoringProfile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ScoringProfile.#ctor(System.String,Microsoft.Azure.Search.Models.TextWeights,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringFunction},System.Nullable{Microsoft.Azure.Search.Models.ScoringFunctionAggregation})
  commentId: M:Microsoft.Azure.Search.Models.ScoringProfile.#ctor(System.String,Microsoft.Azure.Search.Models.TextWeights,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringFunction},System.Nullable{Microsoft.Azure.Search.Models.ScoringFunctionAggregation})
  id: '#ctor(System.String,Microsoft.Azure.Search.Models.TextWeights,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringFunction},System.Nullable{Microsoft.Azure.Search.Models.ScoringFunctionAggregation})'
  parent: Microsoft.Azure.Search.Models.ScoringProfile
  langs:
  - csharp
  - vb
  name: ScoringProfile(String, TextWeights, IList<ScoringFunction>, Nullable<ScoringFunctionAggregation>)
  nameWithType: ScoringProfile.ScoringProfile(String, TextWeights, IList<ScoringFunction>, Nullable<ScoringFunctionAggregation>)
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.ScoringProfile(System.String, Microsoft.Azure.Search.Models.TextWeights, System.Collections.Generic.IList<Microsoft.Azure.Search.Models.ScoringFunction>, System.Nullable<Microsoft.Azure.Search.Models.ScoringFunctionAggregation>)
  type: Constructor
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nInitializes a new instance of the ScoringProfile class.\n"
  example: []
  syntax:
    content: public ScoringProfile(string name, TextWeights textWeights = null, IList<ScoringFunction> functions = null, ScoringFunctionAggregation? functionAggregation = null)
    content.vb: Public Sub New(name As String, textWeights As TextWeights = Nothing, functions As IList(Of ScoringFunction) = Nothing, functionAggregation As ScoringFunctionAggregation? = Nothing)
    parameters:
    - id: name
      type: System.String
    - id: textWeights
      type: Microsoft.Azure.Search.Models.TextWeights
    - id: functions
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringFunction}
    - id: functionAggregation
      type: System.Nullable{Microsoft.Azure.Search.Models.ScoringFunctionAggregation}
  overload: Microsoft.Azure.Search.Models.ScoringProfile.#ctor*
  nameWithType.vb: ScoringProfile.ScoringProfile(String, TextWeights, IList(Of ScoringFunction), Nullable(Of ScoringFunctionAggregation))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Search.Models.ScoringProfile.ScoringProfile(System.String, Microsoft.Azure.Search.Models.TextWeights, System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.ScoringFunction), System.Nullable(Of Microsoft.Azure.Search.Models.ScoringFunctionAggregation))
  name.vb: ScoringProfile(String, TextWeights, IList(Of ScoringFunction), Nullable(Of ScoringFunctionAggregation))
- uid: Microsoft.Azure.Search.Models.ScoringProfile.Name
  commentId: P:Microsoft.Azure.Search.Models.ScoringProfile.Name
  id: Name
  parent: Microsoft.Azure.Search.Models.ScoringProfile
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ScoringProfile.Name
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.Name
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the name of the scoring profile.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Search.Models.ScoringProfile.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ScoringProfile.TextWeights
  commentId: P:Microsoft.Azure.Search.Models.ScoringProfile.TextWeights
  id: TextWeights
  parent: Microsoft.Azure.Search.Models.ScoringProfile
  langs:
  - csharp
  - vb
  name: TextWeights
  nameWithType: ScoringProfile.TextWeights
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.TextWeights
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TextWeights
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets parameters that boost scoring based on text matches\nin certain index fields.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "text")]

      public TextWeights TextWeights { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="text")>

      Public Property TextWeights As TextWeights
    parameters: []
    return:
      type: Microsoft.Azure.Search.Models.TextWeights
  overload: Microsoft.Azure.Search.Models.ScoringProfile.TextWeights*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: text
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ScoringProfile.Functions
  commentId: P:Microsoft.Azure.Search.Models.ScoringProfile.Functions
  id: Functions
  parent: Microsoft.Azure.Search.Models.ScoringProfile
  langs:
  - csharp
  - vb
  name: Functions
  nameWithType: ScoringProfile.Functions
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.Functions
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Functions
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets the collection of functions that influence the\nscoring of documents.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "functions")]

      public IList<ScoringFunction> Functions { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="functions")>

      Public Property Functions As IList(Of ScoringFunction)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringFunction}
  overload: Microsoft.Azure.Search.Models.ScoringProfile.Functions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: functions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ScoringProfile.FunctionAggregation
  commentId: P:Microsoft.Azure.Search.Models.ScoringProfile.FunctionAggregation
  id: FunctionAggregation
  parent: Microsoft.Azure.Search.Models.ScoringProfile
  langs:
  - csharp
  - vb
  name: FunctionAggregation
  nameWithType: ScoringProfile.FunctionAggregation
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.FunctionAggregation
  type: Property
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FunctionAggregation
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nGets or sets a value indicating how the results of individual\nscoring functions should be combined. Defaults to \"Sum\". Ignored\nif there are no scoring functions. Possible values include:\n'sum', 'average', 'minimum', 'maximum', 'firstMatching'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "functionAggregation")]

      public ScoringFunctionAggregation? FunctionAggregation { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="functionAggregation")>

      Public Property FunctionAggregation As ScoringFunctionAggregation?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Search.Models.ScoringFunctionAggregation}
  overload: Microsoft.Azure.Search.Models.ScoringProfile.FunctionAggregation*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: functionAggregation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Search.Models.ScoringProfile.Validate
  commentId: M:Microsoft.Azure.Search.Models.ScoringProfile.Validate
  id: Validate
  parent: Microsoft.Azure.Search.Models.ScoringProfile
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ScoringProfile.Validate()
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.Validate()
  type: Method
  source:
    remote:
      path: src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/Search/Microsoft.Azure.Search/GeneratedSearchService/Models/ScoringProfile.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.Search
  namespace: Microsoft.Azure.Search.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Search.Models.ScoringProfile.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Search.Models
  commentId: N:Microsoft.Azure.Search.Models
  isExternal: false
  name: Microsoft.Azure.Search.Models
  nameWithType: Microsoft.Azure.Search.Models
  fullName: Microsoft.Azure.Search.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Search.Models.ScoringProfile.#ctor*
  commentId: Overload:Microsoft.Azure.Search.Models.ScoringProfile.#ctor
  isExternal: false
  name: ScoringProfile
  nameWithType: ScoringProfile.ScoringProfile
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.ScoringProfile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Search.Models.TextWeights
  commentId: T:Microsoft.Azure.Search.Models.TextWeights
  parent: Microsoft.Azure.Search.Models
  isExternal: false
  name: TextWeights
  nameWithType: TextWeights
  fullName: Microsoft.Azure.Search.Models.TextWeights
- uid: System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringFunction}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Search.Models.ScoringFunction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ScoringFunction>
  nameWithType: IList<ScoringFunction>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Search.Models.ScoringFunction>
  nameWithType.vb: IList(Of ScoringFunction)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Search.Models.ScoringFunction)
  name.vb: IList(Of ScoringFunction)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.ScoringFunction
    name: ScoringFunction
    nameWithType: ScoringFunction
    fullName: Microsoft.Azure.Search.Models.ScoringFunction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.ScoringFunction
    name: ScoringFunction
    nameWithType: ScoringFunction
    fullName: Microsoft.Azure.Search.Models.ScoringFunction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Azure.Search.Models.ScoringFunctionAggregation}
  commentId: T:System.Nullable{Microsoft.Azure.Search.Models.ScoringFunctionAggregation}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ScoringFunctionAggregation>
  nameWithType: Nullable<ScoringFunctionAggregation>
  fullName: System.Nullable<Microsoft.Azure.Search.Models.ScoringFunctionAggregation>
  nameWithType.vb: Nullable(Of ScoringFunctionAggregation)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Search.Models.ScoringFunctionAggregation)
  name.vb: Nullable(Of ScoringFunctionAggregation)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Search.Models.ScoringFunctionAggregation
    name: ScoringFunctionAggregation
    nameWithType: ScoringFunctionAggregation
    fullName: Microsoft.Azure.Search.Models.ScoringFunctionAggregation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Search.Models.ScoringFunctionAggregation
    name: ScoringFunctionAggregation
    nameWithType: ScoringFunctionAggregation
    fullName: Microsoft.Azure.Search.Models.ScoringFunctionAggregation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Search.Models.ScoringProfile.Name*
  commentId: Overload:Microsoft.Azure.Search.Models.ScoringProfile.Name
  isExternal: false
  name: Name
  nameWithType: ScoringProfile.Name
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.Name
- uid: Microsoft.Azure.Search.Models.ScoringProfile.TextWeights*
  commentId: Overload:Microsoft.Azure.Search.Models.ScoringProfile.TextWeights
  isExternal: false
  name: TextWeights
  nameWithType: ScoringProfile.TextWeights
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.TextWeights
- uid: Microsoft.Azure.Search.Models.ScoringProfile.Functions*
  commentId: Overload:Microsoft.Azure.Search.Models.ScoringProfile.Functions
  isExternal: false
  name: Functions
  nameWithType: ScoringProfile.Functions
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.Functions
- uid: Microsoft.Azure.Search.Models.ScoringProfile.FunctionAggregation*
  commentId: Overload:Microsoft.Azure.Search.Models.ScoringProfile.FunctionAggregation
  isExternal: false
  name: FunctionAggregation
  nameWithType: ScoringProfile.FunctionAggregation
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.FunctionAggregation
- uid: Microsoft.Azure.Search.Models.ScoringProfile.Validate*
  commentId: Overload:Microsoft.Azure.Search.Models.ScoringProfile.Validate
  isExternal: false
  name: Validate
  nameWithType: ScoringProfile.Validate
  fullName: Microsoft.Azure.Search.Models.ScoringProfile.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
