### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.Subscription
  id: Subscription
  parent: Microsoft.Azure.Management.ResourceManager.Models
  children:
  - Microsoft.Azure.Management.ResourceManager.Models.Subscription.#ctor
  - Microsoft.Azure.Management.ResourceManager.Models.Subscription.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState},Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies,System.String)
  - Microsoft.Azure.Management.ResourceManager.Models.Subscription.AuthorizationSource
  - Microsoft.Azure.Management.ResourceManager.Models.Subscription.DisplayName
  - Microsoft.Azure.Management.ResourceManager.Models.Subscription.Id
  - Microsoft.Azure.Management.ResourceManager.Models.Subscription.State
  - Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionId
  - Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionPolicies
  - Microsoft.Azure.Management.ResourceManager.Models.Subscription.TenantId
  langs:
  - csharp
  - vb
  name: Subscription
  nameWithType: Subscription
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Subscription
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nSubscription information.\n"
  example: []
  syntax:
    content: public class Subscription
    content.vb: Public Class Subscription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.#ctor
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.Subscription.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ResourceManager.Models.Subscription
  langs:
  - csharp
  - vb
  name: Subscription()
  nameWithType: Subscription.Subscription()
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.Subscription()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the Subscription class.\n"
  example: []
  syntax:
    content: public Subscription()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.ResourceManager.Models.Subscription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState},Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.Subscription.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState},Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState},Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies,System.String)'
  parent: Microsoft.Azure.Management.ResourceManager.Models.Subscription
  langs:
  - csharp
  - vb
  name: Subscription(String, String, String, String, Nullable<SubscriptionState>, SubscriptionPolicies, String)
  nameWithType: Subscription.Subscription(String, String, String, String, Nullable<SubscriptionState>, SubscriptionPolicies, String)
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.Subscription(System.String, System.String, System.String, System.String, System.Nullable<Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState>, Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the Subscription class.\n"
  example: []
  syntax:
    content: public Subscription(string id = null, string subscriptionId = null, string tenantId = null, string displayName = null, SubscriptionState? state = null, SubscriptionPolicies subscriptionPolicies = null, string authorizationSource = null)
    content.vb: Public Sub New(id As String = Nothing, subscriptionId As String = Nothing, tenantId As String = Nothing, displayName As String = Nothing, state As SubscriptionState? = Nothing, subscriptionPolicies As SubscriptionPolicies = Nothing, authorizationSource As String = Nothing)
    parameters:
    - id: id
      type: System.String
      description: >-
        The fully qualified Id. For example,

        /subscriptions/00000000-0000-0000-0000-000000000000.
    - id: subscriptionId
      type: System.String
      description: The subscription Id.
    - id: tenantId
      type: System.String
      description: The tenant Id.
    - id: displayName
      type: System.String
      description: The subscription display name.
    - id: state
      type: System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState}
      description: >-
        The subscription state. Possible values

        include: 'Enabled', 'Warned', 'PastDue', 'Disabled',

        'Deleted'
    - id: subscriptionPolicies
      type: Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies
      description: >-
        The subscription

        policies.
    - id: authorizationSource
      type: System.String
      description: >-
        The authorization source of the

        request. Valid values are one or more combinations of Legacy,

        RoleBased, Bypassed, Direct and Management. For example, 'Legacy,

        RoleBased'.
  overload: Microsoft.Azure.Management.ResourceManager.Models.Subscription.#ctor*
  nameWithType.vb: Subscription.Subscription(String, String, String, String, Nullable(Of SubscriptionState), SubscriptionPolicies, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.ResourceManager.Models.Subscription.Subscription(System.String, System.String, System.String, System.String, System.Nullable(Of Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState), Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies, System.String)
  name.vb: Subscription(String, String, String, String, Nullable(Of SubscriptionState), SubscriptionPolicies, String)
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.Id
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.Id
  id: Id
  parent: Microsoft.Azure.Management.ResourceManager.Models.Subscription
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Subscription.Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.Id
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the fully qualified Id. For example,\n/subscriptions/00000000-0000-0000-0000-000000000000.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Subscription.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionId
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionId
  id: SubscriptionId
  parent: Microsoft.Azure.Management.ResourceManager.Models.Subscription
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: Subscription.SubscriptionId
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubscriptionId
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
    startLine: 60
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the subscription Id.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "subscriptionId")]

      public string SubscriptionId { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="subscriptionId")>

      Public ReadOnly Property SubscriptionId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: subscriptionId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.TenantId
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.TenantId
  id: TenantId
  parent: Microsoft.Azure.Management.ResourceManager.Models.Subscription
  langs:
  - csharp
  - vb
  name: TenantId
  nameWithType: Subscription.TenantId
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.TenantId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TenantId
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
    startLine: 66
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the tenant Id.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tenantId")]

      public string TenantId { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="tenantId")>

      Public ReadOnly Property TenantId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Subscription.TenantId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tenantId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.DisplayName
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Management.ResourceManager.Models.Subscription
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: Subscription.DisplayName
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.DisplayName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the subscription display name.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "displayName")]

      public string DisplayName { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="displayName")>

      Public ReadOnly Property DisplayName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Subscription.DisplayName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: displayName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.State
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.State
  id: State
  parent: Microsoft.Azure.Management.ResourceManager.Models.Subscription
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Subscription.State
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.State
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: State
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the subscription state. Possible values include: 'Enabled',\n'Warned', 'PastDue', 'Disabled', 'Deleted'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "state")]

      public SubscriptionState? State { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="state")>

      Public ReadOnly Property State As SubscriptionState?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState}
  overload: Microsoft.Azure.Management.ResourceManager.Models.Subscription.State*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: state
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionPolicies
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionPolicies
  id: SubscriptionPolicies
  parent: Microsoft.Azure.Management.ResourceManager.Models.Subscription
  langs:
  - csharp
  - vb
  name: SubscriptionPolicies
  nameWithType: Subscription.SubscriptionPolicies
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionPolicies
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubscriptionPolicies
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the subscription policies.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "subscriptionPolicies")]

      public SubscriptionPolicies SubscriptionPolicies { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="subscriptionPolicies")>

      Public Property SubscriptionPolicies As SubscriptionPolicies
    parameters: []
    return:
      type: Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies
  overload: Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionPolicies*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: subscriptionPolicies
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.AuthorizationSource
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.AuthorizationSource
  id: AuthorizationSource
  parent: Microsoft.Azure.Management.ResourceManager.Models.Subscription
  langs:
  - csharp
  - vb
  name: AuthorizationSource
  nameWithType: Subscription.AuthorizationSource
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.AuthorizationSource
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: AuthorizationSource
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Subscription.cs
    startLine: 93
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the authorization source of the request. Valid values\nare one or more combinations of Legacy, RoleBased, Bypassed,\nDirect and Management. For example, 'Legacy, RoleBased'.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "authorizationSource")]

      public string AuthorizationSource { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="authorizationSource")>

      Public Property AuthorizationSource As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Subscription.AuthorizationSource*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: authorizationSource
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.ResourceManager.Models
  commentId: N:Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager.Models
  nameWithType: Microsoft.Azure.Management.ResourceManager.Models
  fullName: Microsoft.Azure.Management.ResourceManager.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.#ctor*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Subscription.#ctor
  isExternal: false
  name: Subscription
  nameWithType: Subscription.Subscription
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.Subscription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState}
  commentId: T:System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SubscriptionState>
  nameWithType: Nullable<SubscriptionState>
  fullName: System.Nullable<Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState>
  nameWithType.vb: Nullable(Of SubscriptionState)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState)
  name.vb: Nullable(Of SubscriptionState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState
    name: SubscriptionState
    nameWithType: SubscriptionState
    fullName: Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState
    name: SubscriptionState
    nameWithType: SubscriptionState
    fullName: Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies
  parent: Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: SubscriptionPolicies
  nameWithType: SubscriptionPolicies
  fullName: Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.Id*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Subscription.Id
  isExternal: false
  name: Id
  nameWithType: Subscription.Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.Id
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionId*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionId
  isExternal: false
  name: SubscriptionId
  nameWithType: Subscription.SubscriptionId
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionId
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.TenantId*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Subscription.TenantId
  isExternal: false
  name: TenantId
  nameWithType: Subscription.TenantId
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.TenantId
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.DisplayName*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Subscription.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: Subscription.DisplayName
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.DisplayName
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.State*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Subscription.State
  isExternal: false
  name: State
  nameWithType: Subscription.State
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.State
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionPolicies*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionPolicies
  isExternal: false
  name: SubscriptionPolicies
  nameWithType: Subscription.SubscriptionPolicies
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionPolicies
- uid: Microsoft.Azure.Management.ResourceManager.Models.Subscription.AuthorizationSource*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Subscription.AuthorizationSource
  isExternal: false
  name: AuthorizationSource
  nameWithType: Subscription.AuthorizationSource
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Subscription.AuthorizationSource
