### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  id: ProviderResourceType
  parent: Microsoft.Azure.Management.ResourceManager.Models
  children:
  - Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.#ctor
  - Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.AliasType},System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Aliases
  - Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ApiVersions
  - Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Locations
  - Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Properties
  - Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ResourceType
  langs:
  - csharp
  - vb
  name: ProviderResourceType
  nameWithType: ProviderResourceType
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProviderResourceType
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nResource type managed by the resource provider.\n"
  example: []
  syntax:
    content: public class ProviderResourceType
    content.vb: Public Class ProviderResourceType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.#ctor
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  langs:
  - csharp
  - vb
  name: ProviderResourceType()
  nameWithType: ProviderResourceType.ProviderResourceType()
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ProviderResourceType()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the ProviderResourceType class.\n"
  example: []
  syntax:
    content: public ProviderResourceType()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.AliasType},System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.AliasType},System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.AliasType},System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  langs:
  - csharp
  - vb
  name: ProviderResourceType(String, IList<String>, IList<AliasType>, IList<String>, IDictionary<String, String>)
  nameWithType: ProviderResourceType.ProviderResourceType(String, IList<String>, IList<AliasType>, IList<String>, IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ProviderResourceType(System.String, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<Microsoft.Azure.Management.ResourceManager.Models.AliasType>, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the ProviderResourceType class.\n"
  example: []
  syntax:
    content: public ProviderResourceType(string resourceType = null, IList<string> locations = null, IList<AliasType> aliases = null, IList<string> apiVersions = null, IDictionary<string, string> properties = null)
    content.vb: Public Sub New(resourceType As String = Nothing, locations As IList(Of String) = Nothing, aliases As IList(Of AliasType) = Nothing, apiVersions As IList(Of String) = Nothing, properties As IDictionary(Of String, String) = Nothing)
    parameters:
    - id: resourceType
      type: System.String
      description: The resource type.
    - id: locations
      type: System.Collections.Generic.IList{System.String}
      description: >-
        The collection of locations where this

        resource type can be created in.
    - id: aliases
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.AliasType}
      description: >-
        The aliases that are supported by this

        resource type.
    - id: apiVersions
      type: System.Collections.Generic.IList{System.String}
      description: The api version.
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: The properties.
  overload: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.#ctor*
  nameWithType.vb: ProviderResourceType.ProviderResourceType(String, IList(Of String), IList(Of AliasType), IList(Of String), IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ProviderResourceType(System.String, System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of Microsoft.Azure.Management.ResourceManager.Models.AliasType), System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: ProviderResourceType(String, IList(Of String), IList(Of AliasType), IList(Of String), IDictionary(Of String, String))
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ResourceType
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ResourceType
  id: ResourceType
  parent: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  langs:
  - csharp
  - vb
  name: ResourceType
  nameWithType: ProviderResourceType.ResourceType
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ResourceType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceType
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the resource type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "resourceType")]

      public string ResourceType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="resourceType")>

      Public Property ResourceType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ResourceType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: resourceType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Locations
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Locations
  id: Locations
  parent: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  langs:
  - csharp
  - vb
  name: Locations
  nameWithType: ProviderResourceType.Locations
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Locations
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Locations
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the collection of locations where this resource type\ncan be created in.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "locations")]

      public IList<string> Locations { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="locations")>

      Public Property Locations As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Locations*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: locations
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Aliases
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Aliases
  id: Aliases
  parent: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  langs:
  - csharp
  - vb
  name: Aliases
  nameWithType: ProviderResourceType.Aliases
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Aliases
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Aliases
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the aliases that are supported by this resource type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "aliases")]

      public IList<AliasType> Aliases { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="aliases")>

      Public Property Aliases As IList(Of AliasType)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.AliasType}
  overload: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Aliases*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: aliases
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ApiVersions
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ApiVersions
  id: ApiVersions
  parent: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  langs:
  - csharp
  - vb
  name: ApiVersions
  nameWithType: ProviderResourceType.ApiVersions
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ApiVersions
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ApiVersions
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
    startLine: 63
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the api version.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "apiVersions")]

      public IList<string> ApiVersions { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="apiVersions")>

      Public Property ApiVersions As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  overload: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ApiVersions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: apiVersions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Properties
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Properties
  id: Properties
  parent: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ProviderResourceType.Properties
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Properties
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Properties
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ProviderResourceType.cs
    startLine: 69
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the properties.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties")]

      public IDictionary<string, string> Properties { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties")>

      Public Property Properties As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Properties*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.ResourceManager.Models
  commentId: N:Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager.Models
  nameWithType: Microsoft.Azure.Management.ResourceManager.Models
  fullName: Microsoft.Azure.Management.ResourceManager.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.#ctor*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.#ctor
  isExternal: false
  name: ProviderResourceType
  nameWithType: ProviderResourceType.ProviderResourceType
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ProviderResourceType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.AliasType}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.AliasType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<AliasType>
  nameWithType: IList<AliasType>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.ResourceManager.Models.AliasType>
  nameWithType.vb: IList(Of AliasType)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.ResourceManager.Models.AliasType)
  name.vb: IList(Of AliasType)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.AliasType
    name: AliasType
    nameWithType: AliasType
    fullName: Microsoft.Azure.Management.ResourceManager.Models.AliasType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.AliasType
    name: AliasType
    nameWithType: AliasType
    fullName: Microsoft.Azure.Management.ResourceManager.Models.AliasType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ResourceType*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ResourceType
  isExternal: false
  name: ResourceType
  nameWithType: ProviderResourceType.ResourceType
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ResourceType
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Locations*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Locations
  isExternal: false
  name: Locations
  nameWithType: ProviderResourceType.Locations
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Locations
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Aliases*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Aliases
  isExternal: false
  name: Aliases
  nameWithType: ProviderResourceType.Aliases
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Aliases
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ApiVersions*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ApiVersions
  isExternal: false
  name: ApiVersions
  nameWithType: ProviderResourceType.ApiVersions
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ApiVersions
- uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Properties*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Properties
  isExternal: false
  name: Properties
  nameWithType: ProviderResourceType.Properties
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Properties
