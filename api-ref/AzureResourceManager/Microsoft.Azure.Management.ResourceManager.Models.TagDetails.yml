### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagDetails
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.TagDetails
  id: TagDetails
  parent: Microsoft.Azure.Management.ResourceManager.Models
  children:
  - Microsoft.Azure.Management.ResourceManager.Models.TagDetails.#ctor
  - Microsoft.Azure.Management.ResourceManager.Models.TagDetails.#ctor(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TagCount,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.TagValue})
  - Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Count
  - Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Id
  - Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagName
  - Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Values
  langs:
  - csharp
  - vb
  name: TagDetails
  nameWithType: TagDetails
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagDetails
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TagDetails
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nTag details.\n"
  example: []
  syntax:
    content: public class TagDetails
    content.vb: Public Class TagDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.#ctor
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ResourceManager.Models.TagDetails
  langs:
  - csharp
  - vb
  name: TagDetails()
  nameWithType: TagDetails.TagDetails()
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagDetails()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the TagDetails class.\n"
  example: []
  syntax:
    content: public TagDetails()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.#ctor(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TagCount,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.TagValue})
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.#ctor(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TagCount,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.TagValue})
  id: '#ctor(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TagCount,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.TagValue})'
  parent: Microsoft.Azure.Management.ResourceManager.Models.TagDetails
  langs:
  - csharp
  - vb
  name: TagDetails(String, String, TagCount, IList<TagValue>)
  nameWithType: TagDetails.TagDetails(String, String, TagCount, IList<TagValue>)
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagDetails(System.String, System.String, Microsoft.Azure.Management.ResourceManager.Models.TagCount, System.Collections.Generic.IList<Microsoft.Azure.Management.ResourceManager.Models.TagValue>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
    startLine: 29
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the TagDetails class.\n"
  example: []
  syntax:
    content: public TagDetails(string id = null, string tagName = null, TagCount count = null, IList<TagValue> values = null)
    content.vb: Public Sub New(id As String = Nothing, tagName As String = Nothing, count As TagCount = Nothing, values As IList(Of TagValue) = Nothing)
    parameters:
    - id: id
      type: System.String
      description: The tag ID.
    - id: tagName
      type: System.String
      description: The tag name.
    - id: count
      type: Microsoft.Azure.Management.ResourceManager.Models.TagCount
      description: The tag count.
    - id: values
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.TagValue}
      description: The list of tag values.
  overload: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.#ctor*
  nameWithType.vb: TagDetails.TagDetails(String, String, TagCount, IList(Of TagValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagDetails(System.String, System.String, Microsoft.Azure.Management.ResourceManager.Models.TagCount, System.Collections.Generic.IList(Of Microsoft.Azure.Management.ResourceManager.Models.TagValue))
  name.vb: TagDetails(String, String, TagCount, IList(Of TagValue))
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Id
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Id
  id: Id
  parent: Microsoft.Azure.Management.ResourceManager.Models.TagDetails
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TagDetails.Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Id
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the tag ID.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagName
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagName
  id: TagName
  parent: Microsoft.Azure.Management.ResourceManager.Models.TagDetails
  langs:
  - csharp
  - vb
  name: TagName
  nameWithType: TagDetails.TagName
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TagName
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the tag name.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tagName")]

      public string TagName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tagName")>

      Public Property TagName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tagName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Count
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Count
  id: Count
  parent: Microsoft.Azure.Management.ResourceManager.Models.TagDetails
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TagDetails.Count
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Count
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Count
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the tag count.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "count")]

      public TagCount Count { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="count")>

      Public Property Count As TagCount
    parameters: []
    return:
      type: Microsoft.Azure.Management.ResourceManager.Models.TagCount
  overload: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Count*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: count
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Values
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Values
  id: Values
  parent: Microsoft.Azure.Management.ResourceManager.Models.TagDetails
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: TagDetails.Values
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Values
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Values
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/TagDetails.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the list of tag values.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "values")]

      public IList<TagValue> Values { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="values")>

      Public Property Values As IList(Of TagValue)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.TagValue}
  overload: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Values*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: values
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.ResourceManager.Models
  commentId: N:Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager.Models
  nameWithType: Microsoft.Azure.Management.ResourceManager.Models
  fullName: Microsoft.Azure.Management.ResourceManager.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.#ctor*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.#ctor
  isExternal: false
  name: TagDetails
  nameWithType: TagDetails.TagDetails
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagDetails
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagCount
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.TagCount
  parent: Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: TagCount
  nameWithType: TagCount
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagCount
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.TagValue}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.TagValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TagValue>
  nameWithType: IList<TagValue>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.ResourceManager.Models.TagValue>
  nameWithType.vb: IList(Of TagValue)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.ResourceManager.Models.TagValue)
  name.vb: IList(Of TagValue)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.TagValue
    name: TagValue
    nameWithType: TagValue
    fullName: Microsoft.Azure.Management.ResourceManager.Models.TagValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.TagValue
    name: TagValue
    nameWithType: TagValue
    fullName: Microsoft.Azure.Management.ResourceManager.Models.TagValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Id*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Id
  isExternal: false
  name: Id
  nameWithType: TagDetails.Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Id
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagName*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagName
  isExternal: false
  name: TagName
  nameWithType: TagDetails.TagName
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagName
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Count*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Count
  isExternal: false
  name: Count
  nameWithType: TagDetails.Count
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Count
- uid: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Values*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Values
  isExternal: false
  name: Values
  nameWithType: TagDetails.Values
  fullName: Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Values
