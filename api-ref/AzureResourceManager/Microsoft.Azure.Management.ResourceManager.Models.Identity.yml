### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.ResourceManager.Models.Identity
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.Identity
  id: Identity
  parent: Microsoft.Azure.Management.ResourceManager.Models
  children:
  - Microsoft.Azure.Management.ResourceManager.Models.Identity.#ctor
  - Microsoft.Azure.Management.ResourceManager.Models.Identity.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType})
  - Microsoft.Azure.Management.ResourceManager.Models.Identity.PrincipalId
  - Microsoft.Azure.Management.ResourceManager.Models.Identity.TenantId
  - Microsoft.Azure.Management.ResourceManager.Models.Identity.Type
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: Identity
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Identity
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Identity.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Identity
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Identity.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nIdentity for the resource.\n"
  example: []
  syntax:
    content: public class Identity
    content.vb: Public Class Identity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ResourceManager.Models.Identity.#ctor
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.Identity.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ResourceManager.Models.Identity
  langs:
  - csharp
  - vb
  name: Identity()
  nameWithType: Identity.Identity()
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Identity.Identity()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Identity.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Identity.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the Identity class.\n"
  example: []
  syntax:
    content: public Identity()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.ResourceManager.Models.Identity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.Identity.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType})
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.Identity.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType})
  id: '#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType})'
  parent: Microsoft.Azure.Management.ResourceManager.Models.Identity
  langs:
  - csharp
  - vb
  name: Identity(String, String, Nullable<ResourceIdentityType>)
  nameWithType: Identity.Identity(String, String, Nullable<ResourceIdentityType>)
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Identity.Identity(System.String, System.String, System.Nullable<Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Identity.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Identity.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the Identity class.\n"
  example: []
  syntax:
    content: public Identity(string principalId = null, string tenantId = null, ResourceIdentityType? type = null)
    content.vb: Public Sub New(principalId As String = Nothing, tenantId As String = Nothing, type As ResourceIdentityType? = Nothing)
    parameters:
    - id: principalId
      type: System.String
      description: >-
        The principal id of resource

        identity.
    - id: tenantId
      type: System.String
      description: The tenant id of resource.
    - id: type
      type: System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType}
      description: >-
        The identity type. Possible values include:

        'SystemAssigned'
  overload: Microsoft.Azure.Management.ResourceManager.Models.Identity.#ctor*
  nameWithType.vb: Identity.Identity(String, String, Nullable(Of ResourceIdentityType))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.ResourceManager.Models.Identity.Identity(System.String, System.String, System.Nullable(Of Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType))
  name.vb: Identity(String, String, Nullable(Of ResourceIdentityType))
- uid: Microsoft.Azure.Management.ResourceManager.Models.Identity.PrincipalId
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Identity.PrincipalId
  id: PrincipalId
  parent: Microsoft.Azure.Management.ResourceManager.Models.Identity
  langs:
  - csharp
  - vb
  name: PrincipalId
  nameWithType: Identity.PrincipalId
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Identity.PrincipalId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Identity.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrincipalId
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Identity.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the principal id of resource identity.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "principalId")]

      public string PrincipalId { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="principalId")>

      Public ReadOnly Property PrincipalId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Identity.PrincipalId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: principalId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Identity.TenantId
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Identity.TenantId
  id: TenantId
  parent: Microsoft.Azure.Management.ResourceManager.Models.Identity
  langs:
  - csharp
  - vb
  name: TenantId
  nameWithType: Identity.TenantId
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Identity.TenantId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Identity.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TenantId
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Identity.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the tenant id of resource.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tenantId")]

      public string TenantId { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="tenantId")>

      Public ReadOnly Property TenantId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Identity.TenantId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tenantId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Identity.Type
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Identity.Type
  id: Type
  parent: Microsoft.Azure.Management.ResourceManager.Models.Identity
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Identity.Type
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Identity.Type
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Identity.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Type
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Identity.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the identity type. Possible values include:\n'SystemAssigned'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "type")]

      public ResourceIdentityType? Type { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="type")>

      Public Property Type As ResourceIdentityType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType}
  overload: Microsoft.Azure.Management.ResourceManager.Models.Identity.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.ResourceManager.Models
  commentId: N:Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager.Models
  nameWithType: Microsoft.Azure.Management.ResourceManager.Models
  fullName: Microsoft.Azure.Management.ResourceManager.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.ResourceManager.Models.Identity.#ctor*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Identity.#ctor
  isExternal: false
  name: Identity
  nameWithType: Identity.Identity
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Identity.Identity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType}
  commentId: T:System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ResourceIdentityType>
  nameWithType: Nullable<ResourceIdentityType>
  fullName: System.Nullable<Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType>
  nameWithType.vb: Nullable(Of ResourceIdentityType)
  fullname.vb: System.Nullable(Of Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType)
  name.vb: Nullable(Of ResourceIdentityType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType
    name: ResourceIdentityType
    nameWithType: ResourceIdentityType
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType
    name: ResourceIdentityType
    nameWithType: ResourceIdentityType
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.ResourceManager.Models.Identity.PrincipalId*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Identity.PrincipalId
  isExternal: false
  name: PrincipalId
  nameWithType: Identity.PrincipalId
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Identity.PrincipalId
- uid: Microsoft.Azure.Management.ResourceManager.Models.Identity.TenantId*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Identity.TenantId
  isExternal: false
  name: TenantId
  nameWithType: Identity.TenantId
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Identity.TenantId
- uid: Microsoft.Azure.Management.ResourceManager.Models.Identity.Type*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Identity.Type
  isExternal: false
  name: Type
  nameWithType: Identity.Type
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Identity.Type
