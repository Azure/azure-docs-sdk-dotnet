### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  id: ManagementLockObject
  parent: Microsoft.Azure.Management.ResourceManager.Models
  children:
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner},System.String,System.String,System.String)
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Owners
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type
  - Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Validate
  langs:
  - csharp
  - vb
  name: ManagementLockObject
  nameWithType: ManagementLockObject
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ManagementLockObject
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nThe lock information.\n"
  example: []
  syntax:
    content: 'public class ManagementLockObject : IResource'
    content.vb: >-
      Public Class ManagementLockObject
          Implements IResource
  inheritance:
  - System.Object
  implements:
  - Microsoft.Rest.Azure.IResource
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: ManagementLockObject()
  nameWithType: ManagementLockObject.ManagementLockObject()
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.ManagementLockObject()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the ManagementLockObject class.\n"
  example: []
  syntax:
    content: public ManagementLockObject()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner},System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner},System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner},System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: ManagementLockObject(String, String, IList<ManagementLockOwner>, String, String, String)
  nameWithType: ManagementLockObject.ManagementLockObject(String, String, IList<ManagementLockOwner>, String, String, String)
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.ManagementLockObject(System.String, System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner>, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the ManagementLockObject class.\n"
  example: []
  syntax:
    content: public ManagementLockObject(string level, string notes = null, IList<ManagementLockOwner> owners = null, string id = null, string type = null, string name = null)
    content.vb: Public Sub New(level As String, notes As String = Nothing, owners As IList(Of ManagementLockOwner) = Nothing, id As String = Nothing, type As String = Nothing, name As String = Nothing)
    parameters:
    - id: level
      type: System.String
      description: >-
        The lock level of the lock. Possible values

        include: 'NotSpecified', 'CanNotDelete', 'ReadOnly'
    - id: notes
      type: System.String
      description: The notes of the lock.
    - id: owners
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner}
      description: The owners of the lock.
    - id: id
      type: System.String
      description: The Id of the lock.
    - id: type
      type: System.String
      description: The type of the lock.
    - id: name
      type: System.String
      description: The name of the lock.
  overload: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor*
  nameWithType.vb: ManagementLockObject.ManagementLockObject(String, String, IList(Of ManagementLockOwner), String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.ManagementLockObject(System.String, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner), System.String, System.String, System.String)
  name.vb: ManagementLockObject(String, String, IList(Of ManagementLockOwner), String, String, String)
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level
  id: Level
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: ManagementLockObject.Level
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Level
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the lock level of the lock. Possible values include:\n'NotSpecified', 'CanNotDelete', 'ReadOnly'\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.level")]

      public string Level { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.level")>

      Public Property Level As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.level
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes
  id: Notes
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: Notes
  nameWithType: ManagementLockObject.Notes
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Notes
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the notes of the lock.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.notes")]

      public string Notes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.notes")>

      Public Property Notes As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.notes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Owners
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Owners
  id: Owners
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: Owners
  nameWithType: ManagementLockObject.Owners
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Owners
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Owners
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the owners of the lock.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties.owners")]

      public IList<ManagementLockOwner> Owners { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties.owners")>

      Public Property Owners As IList(Of ManagementLockOwner)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner}
  overload: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Owners*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties.owners
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id
  id: Id
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ManagementLockObject.Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the Id of the lock.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type
  id: Type
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ManagementLockObject.Type
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Type
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the type of the lock.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "type")]

      public string Type { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="type")>

      Public ReadOnly Property Type As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name
  id: Name
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ManagementLockObject.Name
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the name of the lock.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Validate
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Validate
  id: Validate
  parent: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ManagementLockObject.Validate()
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ManagementLockObject.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.ResourceManager.Models
  commentId: N:Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager.Models
  nameWithType: Microsoft.Azure.Management.ResourceManager.Models
  fullName: Microsoft.Azure.Management.ResourceManager.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Rest.Azure.IResource
  commentId: T:Microsoft.Rest.Azure.IResource
  parent: Microsoft.Rest.Azure
  isExternal: false
  name: IResource
  nameWithType: IResource
  fullName: Microsoft.Rest.Azure.IResource
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor
  isExternal: false
  name: ManagementLockObject
  nameWithType: ManagementLockObject.ManagementLockObject
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.ManagementLockObject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ManagementLockOwner>
  nameWithType: IList<ManagementLockOwner>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner>
  nameWithType.vb: IList(Of ManagementLockOwner)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner)
  name.vb: IList(Of ManagementLockOwner)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner
    name: ManagementLockOwner
    nameWithType: ManagementLockOwner
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner
    name: ManagementLockOwner
    nameWithType: ManagementLockOwner
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level
  isExternal: false
  name: Level
  nameWithType: ManagementLockObject.Level
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes
  isExternal: false
  name: Notes
  nameWithType: ManagementLockObject.Notes
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Owners*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Owners
  isExternal: false
  name: Owners
  nameWithType: ManagementLockObject.Owners
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Owners
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id
  isExternal: false
  name: Id
  nameWithType: ManagementLockObject.Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type
  isExternal: false
  name: Type
  nameWithType: ManagementLockObject.Type
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name
  isExternal: false
  name: Name
  nameWithType: ManagementLockObject.Name
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name
- uid: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Validate*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Validate
  isExternal: false
  name: Validate
  nameWithType: ManagementLockObject.Validate
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
