### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  id: ResourceGroup
  parent: Microsoft.Azure.Management.ResourceManager.Models
  children:
  - Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.#ctor
  - Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Id
  - Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Location
  - Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ManagedBy
  - Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Name
  - Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Properties
  - Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Tags
  - Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Validate
  langs:
  - csharp
  - vb
  name: ResourceGroup
  nameWithType: ResourceGroup
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceGroup
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nResource group information.\n"
  example: []
  syntax:
    content: public class ResourceGroup
    content.vb: Public Class ResourceGroup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.#ctor
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  langs:
  - csharp
  - vb
  name: ResourceGroup()
  nameWithType: ResourceGroup.ResourceGroup()
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ResourceGroup()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the ResourceGroup class.\n"
  example: []
  syntax:
    content: public ResourceGroup()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties,System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties,System.String,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  langs:
  - csharp
  - vb
  name: ResourceGroup(String, String, String, ResourceGroupProperties, String, IDictionary<String, String>)
  nameWithType: ResourceGroup.ResourceGroup(String, String, String, ResourceGroupProperties, String, IDictionary<String, String>)
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ResourceGroup(System.String, System.String, System.String, Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties, System.String, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the ResourceGroup class.\n"
  example: []
  syntax:
    content: public ResourceGroup(string location, string id = null, string name = null, ResourceGroupProperties properties = null, string managedBy = null, IDictionary<string, string> tags = null)
    content.vb: Public Sub New(location As String, id As String = Nothing, name As String = Nothing, properties As ResourceGroupProperties = Nothing, managedBy As String = Nothing, tags As IDictionary(Of String, String) = Nothing)
    parameters:
    - id: location
      type: System.String
      description: >-
        The location of the resource group. It

        cannot be changed after the resource group has been created. Has

        to be one of the supported Azure Locations, such as West US, East

        US, West Europe, East Asia, etc.
    - id: id
      type: System.String
      description: The ID of the resource group.
    - id: name
      type: System.String
      description: The Name of the resource group.
    - id: properties
      type: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties
    - id: managedBy
      type: System.String
      description: >-
        Id of the resource that manages this

        resource group.
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: The tags attached to the resource group.
  overload: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.#ctor*
  nameWithType.vb: ResourceGroup.ResourceGroup(String, String, String, ResourceGroupProperties, String, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ResourceGroup(System.String, System.String, System.String, Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties, System.String, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: ResourceGroup(String, String, String, ResourceGroupProperties, String, IDictionary(Of String, String))
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Id
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Id
  id: Id
  parent: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ResourceGroup.Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Id
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the ID of the resource group.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Name
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Name
  id: Name
  parent: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ResourceGroup.Name
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the Name of the resource group.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Properties
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Properties
  id: Properties
  parent: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ResourceGroup.Properties
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Properties
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Properties
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "properties")]

      public ResourceGroupProperties Properties { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="properties")>

      Public Property Properties As ResourceGroupProperties
    parameters: []
    return:
      type: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties
  overload: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Properties*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: properties
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Location
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Location
  id: Location
  parent: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: ResourceGroup.Location
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Location
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Location
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
    startLine: 67
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the location of the resource group. It cannot be\nchanged after the resource group has been created. Has to be one\nof the supported Azure Locations, such as West US, East US, West\nEurope, East Asia, etc.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "location")]

      public string Location { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="location")>

      Public Property Location As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Location*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: location
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ManagedBy
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ManagedBy
  id: ManagedBy
  parent: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  langs:
  - csharp
  - vb
  name: ManagedBy
  nameWithType: ResourceGroup.ManagedBy
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ManagedBy
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ManagedBy
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets id of the resource that manages this resource group.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "managedBy")]

      public string ManagedBy { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="managedBy")>

      Public Property ManagedBy As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ManagedBy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: managedBy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Tags
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Tags
  id: Tags
  parent: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: ResourceGroup.Tags
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Tags
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Tags
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the tags attached to the resource group.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tags")]

      public IDictionary<string, string> Tags { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tags")>

      Public Property Tags As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Tags*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tags
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Validate
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Validate
  id: Validate
  parent: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ResourceGroup.Validate()
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Validate()
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Validate
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/ResourceGroup.cs
    startLine: 88
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nValidate the object.\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Validate*
  exceptions:
  - type: Microsoft.Rest.ValidationException
    commentId: T:Microsoft.Rest.ValidationException
    description: "\nThrown if validation fails\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.Azure.Management.ResourceManager.Models
  commentId: N:Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager.Models
  nameWithType: Microsoft.Azure.Management.ResourceManager.Models
  fullName: Microsoft.Azure.Management.ResourceManager.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.#ctor*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.#ctor
  isExternal: false
  name: ResourceGroup
  nameWithType: ResourceGroup.ResourceGroup
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ResourceGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties
  parent: Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: ResourceGroupProperties
  nameWithType: ResourceGroupProperties
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Id*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Id
  isExternal: false
  name: Id
  nameWithType: ResourceGroup.Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Id
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Name*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Name
  isExternal: false
  name: Name
  nameWithType: ResourceGroup.Name
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Name
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Properties*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Properties
  isExternal: false
  name: Properties
  nameWithType: ResourceGroup.Properties
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Properties
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Location*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Location
  isExternal: false
  name: Location
  nameWithType: ResourceGroup.Location
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Location
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ManagedBy*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ManagedBy
  isExternal: false
  name: ManagedBy
  nameWithType: ResourceGroup.ManagedBy
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ManagedBy
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Tags*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Tags
  isExternal: false
  name: Tags
  nameWithType: ResourceGroup.Tags
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Tags
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Validate*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Validate
  isExternal: false
  name: Validate
  nameWithType: ResourceGroup.Validate
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Validate
- uid: Microsoft.Rest.ValidationException
  commentId: T:Microsoft.Rest.ValidationException
