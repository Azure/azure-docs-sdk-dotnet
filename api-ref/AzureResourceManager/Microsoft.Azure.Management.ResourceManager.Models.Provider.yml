### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.Provider
  id: Provider
  parent: Microsoft.Azure.Management.ResourceManager.Models
  children:
  - Microsoft.Azure.Management.ResourceManager.Models.Provider.#ctor
  - Microsoft.Azure.Management.ResourceManager.Models.Provider.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType})
  - Microsoft.Azure.Management.ResourceManager.Models.Provider.Id
  - Microsoft.Azure.Management.ResourceManager.Models.Provider.NamespaceProperty
  - Microsoft.Azure.Management.ResourceManager.Models.Provider.RegistrationState
  - Microsoft.Azure.Management.ResourceManager.Models.Provider.ResourceTypes
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: Provider
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Provider
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nResource provider information.\n"
  example: []
  syntax:
    content: public class Provider
    content.vb: Public Class Provider
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider.#ctor
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.Provider.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ResourceManager.Models.Provider
  langs:
  - csharp
  - vb
  name: Provider()
  nameWithType: Provider.Provider()
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider.Provider()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the Provider class.\n"
  example: []
  syntax:
    content: public Provider()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.ResourceManager.Models.Provider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType})
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.Provider.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType})
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType})'
  parent: Microsoft.Azure.Management.ResourceManager.Models.Provider
  langs:
  - csharp
  - vb
  name: Provider(String, String, String, IList<ProviderResourceType>)
  nameWithType: Provider.Provider(String, String, String, IList<ProviderResourceType>)
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider.Provider(System.String, System.String, System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
    startLine: 32
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the Provider class.\n"
  example: []
  syntax:
    content: public Provider(string id = null, string namespaceProperty = null, string registrationState = null, IList<ProviderResourceType> resourceTypes = null)
    content.vb: Public Sub New(id As String = Nothing, namespaceProperty As String = Nothing, registrationState As String = Nothing, resourceTypes As IList(Of ProviderResourceType) = Nothing)
    parameters:
    - id: id
      type: System.String
      description: The provider id.
    - id: namespaceProperty
      type: System.String
      description: >-
        The namespace of the

        provider.
    - id: registrationState
      type: System.String
      description: >-
        The registration state of the

        provider.
    - id: resourceTypes
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType}
      description: >-
        The collection of provider resource

        types.
  overload: Microsoft.Azure.Management.ResourceManager.Models.Provider.#ctor*
  nameWithType.vb: Provider.Provider(String, String, String, IList(Of ProviderResourceType))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.ResourceManager.Models.Provider.Provider(System.String, System.String, System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType))
  name.vb: Provider(String, String, String, IList(Of ProviderResourceType))
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider.Id
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Provider.Id
  id: Id
  parent: Microsoft.Azure.Management.ResourceManager.Models.Provider
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Provider.Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider.Id
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
    startLine: 43
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the provider id.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Provider.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider.NamespaceProperty
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Provider.NamespaceProperty
  id: NamespaceProperty
  parent: Microsoft.Azure.Management.ResourceManager.Models.Provider
  langs:
  - csharp
  - vb
  name: NamespaceProperty
  nameWithType: Provider.NamespaceProperty
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider.NamespaceProperty
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NamespaceProperty
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
    startLine: 49
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets or sets the namespace of the provider.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "namespace")]

      public string NamespaceProperty { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="namespace")>

      Public Property NamespaceProperty As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Provider.NamespaceProperty*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: namespace
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider.RegistrationState
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Provider.RegistrationState
  id: RegistrationState
  parent: Microsoft.Azure.Management.ResourceManager.Models.Provider
  langs:
  - csharp
  - vb
  name: RegistrationState
  nameWithType: Provider.RegistrationState
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider.RegistrationState
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegistrationState
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the registration state of the provider.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "registrationState")]

      public string RegistrationState { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="registrationState")>

      Public ReadOnly Property RegistrationState As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Provider.RegistrationState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: registrationState
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider.ResourceTypes
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Provider.ResourceTypes
  id: ResourceTypes
  parent: Microsoft.Azure.Management.ResourceManager.Models.Provider
  langs:
  - csharp
  - vb
  name: ResourceTypes
  nameWithType: Provider.ResourceTypes
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider.ResourceTypes
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceTypes
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Provider.cs
    startLine: 61
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the collection of provider resource types.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "resourceTypes")]

      public IList<ProviderResourceType> ResourceTypes { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="resourceTypes")>

      Public ReadOnly Property ResourceTypes As IList(Of ProviderResourceType)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType}
  overload: Microsoft.Azure.Management.ResourceManager.Models.Provider.ResourceTypes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: resourceTypes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.ResourceManager.Models
  commentId: N:Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager.Models
  nameWithType: Microsoft.Azure.Management.ResourceManager.Models
  fullName: Microsoft.Azure.Management.ResourceManager.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider.#ctor*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Provider.#ctor
  isExternal: false
  name: Provider
  nameWithType: Provider.Provider
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider.Provider
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ProviderResourceType>
  nameWithType: IList<ProviderResourceType>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType>
  nameWithType.vb: IList(Of ProviderResourceType)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType)
  name.vb: IList(Of ProviderResourceType)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
    name: ProviderResourceType
    nameWithType: ProviderResourceType
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
    name: ProviderResourceType
    nameWithType: ProviderResourceType
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider.Id*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Provider.Id
  isExternal: false
  name: Id
  nameWithType: Provider.Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider.Id
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider.NamespaceProperty*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Provider.NamespaceProperty
  isExternal: false
  name: NamespaceProperty
  nameWithType: Provider.NamespaceProperty
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider.NamespaceProperty
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider.RegistrationState*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Provider.RegistrationState
  isExternal: false
  name: RegistrationState
  nameWithType: Provider.RegistrationState
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider.RegistrationState
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider.ResourceTypes*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Provider.ResourceTypes
  isExternal: false
  name: ResourceTypes
  nameWithType: Provider.ResourceTypes
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider.ResourceTypes
