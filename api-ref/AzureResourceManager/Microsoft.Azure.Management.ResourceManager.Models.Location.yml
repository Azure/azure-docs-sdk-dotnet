### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.Location
  id: Location
  parent: Microsoft.Azure.Management.ResourceManager.Models
  children:
  - Microsoft.Azure.Management.ResourceManager.Models.Location.#ctor
  - Microsoft.Azure.Management.ResourceManager.Models.Location.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.ResourceManager.Models.Location.DisplayName
  - Microsoft.Azure.Management.ResourceManager.Models.Location.Id
  - Microsoft.Azure.Management.ResourceManager.Models.Location.Latitude
  - Microsoft.Azure.Management.ResourceManager.Models.Location.Longitude
  - Microsoft.Azure.Management.ResourceManager.Models.Location.Name
  - Microsoft.Azure.Management.ResourceManager.Models.Location.SubscriptionId
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: Location
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Location
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nLocation information.\n"
  example: []
  syntax:
    content: public class Location
    content.vb: Public Class Location
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.#ctor
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.Location.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.ResourceManager.Models.Location
  langs:
  - csharp
  - vb
  name: Location()
  nameWithType: Location.Location()
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.Location()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the Location class.\n"
  example: []
  syntax:
    content: public Location()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.ResourceManager.Models.Location.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.Models.Location.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.ResourceManager.Models.Location
  langs:
  - csharp
  - vb
  name: Location(String, String, String, String, String, String)
  nameWithType: Location.Location(String, String, String, String, String, String)
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.Location(System.String, System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nInitializes a new instance of the Location class.\n"
  example: []
  syntax:
    content: public Location(string id = null, string subscriptionId = null, string name = null, string displayName = null, string latitude = null, string longitude = null)
    content.vb: Public Sub New(id As String = Nothing, subscriptionId As String = Nothing, name As String = Nothing, displayName As String = Nothing, latitude As String = Nothing, longitude As String = Nothing)
    parameters:
    - id: id
      type: System.String
      description: >-
        The fully qualified Id of the location. For

        example,

        /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.
    - id: subscriptionId
      type: System.String
      description: The subscription Id.
    - id: name
      type: System.String
      description: The location name.
    - id: displayName
      type: System.String
      description: The display name of the location.
    - id: latitude
      type: System.String
      description: The latitude of the location.
    - id: longitude
      type: System.String
      description: The longitude of the location.
  overload: Microsoft.Azure.Management.ResourceManager.Models.Location.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.Id
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Location.Id
  id: Id
  parent: Microsoft.Azure.Management.ResourceManager.Models.Location
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Location.Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.Id
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the fully qualified Id of the location. For example,\n/subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Location.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.SubscriptionId
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Location.SubscriptionId
  id: SubscriptionId
  parent: Microsoft.Azure.Management.ResourceManager.Models.Location
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: Location.SubscriptionId
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.SubscriptionId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SubscriptionId
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the subscription Id.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "subscriptionId")]

      public string SubscriptionId { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="subscriptionId")>

      Public ReadOnly Property SubscriptionId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Location.SubscriptionId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: subscriptionId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.Name
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Location.Name
  id: Name
  parent: Microsoft.Azure.Management.ResourceManager.Models.Location
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Location.Name
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
    startLine: 59
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the location name.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Location.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.DisplayName
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Location.DisplayName
  id: DisplayName
  parent: Microsoft.Azure.Management.ResourceManager.Models.Location
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: Location.DisplayName
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.DisplayName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DisplayName
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
    startLine: 65
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the display name of the location.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "displayName")]

      public string DisplayName { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="displayName")>

      Public ReadOnly Property DisplayName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Location.DisplayName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: displayName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.Latitude
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Location.Latitude
  id: Latitude
  parent: Microsoft.Azure.Management.ResourceManager.Models.Location
  langs:
  - csharp
  - vb
  name: Latitude
  nameWithType: Location.Latitude
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.Latitude
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Latitude
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
    startLine: 71
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the latitude of the location.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "latitude")]

      public string Latitude { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="latitude")>

      Public ReadOnly Property Latitude As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Location.Latitude*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: latitude
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.Longitude
  commentId: P:Microsoft.Azure.Management.ResourceManager.Models.Location.Longitude
  id: Longitude
  parent: Microsoft.Azure.Management.ResourceManager.Models.Location
  langs:
  - csharp
  - vb
  name: Longitude
  nameWithType: Location.Longitude
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.Longitude
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Longitude
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/Models/Location.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager.Models
  summary: "\nGets the longitude of the location.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "longitude")]

      public string Longitude { get; }
    content.vb: >-
      <JsonProperty(PropertyName:="longitude")>

      Public ReadOnly Property Longitude As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.ResourceManager.Models.Location.Longitude*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: longitude
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Management.ResourceManager.Models
  commentId: N:Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager.Models
  nameWithType: Microsoft.Azure.Management.ResourceManager.Models
  fullName: Microsoft.Azure.Management.ResourceManager.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.#ctor*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Location.#ctor
  isExternal: false
  name: Location
  nameWithType: Location.Location
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.Location
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.Id*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Location.Id
  isExternal: false
  name: Id
  nameWithType: Location.Id
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.Id
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.SubscriptionId*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Location.SubscriptionId
  isExternal: false
  name: SubscriptionId
  nameWithType: Location.SubscriptionId
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.SubscriptionId
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.Name*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Location.Name
  isExternal: false
  name: Name
  nameWithType: Location.Name
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.Name
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.DisplayName*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Location.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: Location.DisplayName
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.DisplayName
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.Latitude*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Location.Latitude
  isExternal: false
  name: Latitude
  nameWithType: Location.Latitude
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.Latitude
- uid: Microsoft.Azure.Management.ResourceManager.Models.Location.Longitude*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.Models.Location.Longitude
  isExternal: false
  name: Longitude
  nameWithType: Location.Longitude
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Location.Longitude
