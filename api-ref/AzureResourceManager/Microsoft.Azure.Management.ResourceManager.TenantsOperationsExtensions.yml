### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions
  commentId: T:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions
  id: TenantsOperationsExtensions
  parent: Microsoft.Azure.Management.ResourceManager
  children:
  - Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.ITenantsOperations)
  - Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.String)
  - Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: TenantsOperationsExtensions
  nameWithType: TenantsOperationsExtensions
  fullName: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/TenantsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TenantsOperationsExtensions
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/TenantsOperationsExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nExtension methods for TenantsOperations.\n"
  example: []
  syntax:
    content: public static class TenantsOperationsExtensions
    content.vb: Public Module TenantsOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.ITenantsOperations)
  commentId: M:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.ITenantsOperations)
  id: List(Microsoft.Azure.Management.ResourceManager.ITenantsOperations)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(ITenantsOperations)
  nameWithType: TenantsOperationsExtensions.List(ITenantsOperations)
  fullName: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.ITenantsOperations)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/TenantsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/TenantsOperationsExtensions.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a list of tenants.\n"
  example: []
  syntax:
    content: public static IPage<TenantIdDescription> List(this ITenantsOperations operations)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As ITenantsOperations) As IPage(Of TenantIdDescription)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.ITenantsOperations
      description: "\nThe operations group for this extension method.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription}
  overload: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.List*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(ITenantsOperations, CancellationToken)
  nameWithType: TenantsOperationsExtensions.ListAsync(ITenantsOperations, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.ITenantsOperations, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/TenantsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/TenantsOperationsExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a list of tenants.\n"
  example: []
  syntax:
    content: public static Task<IPage<TenantIdDescription>> ListAsync(this ITenantsOperations operations, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As ITenantsOperations, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of TenantIdDescription))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.ITenantsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription}}
  overload: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.String)
  id: ListNext(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(ITenantsOperations, String)
  nameWithType: TenantsOperationsExtensions.ListNext(ITenantsOperations, String)
  fullName: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.ITenantsOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/TenantsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/TenantsOperationsExtensions.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a list of tenants.\n"
  example: []
  syntax:
    content: public static IPage<TenantIdDescription> ListNext(this ITenantsOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As ITenantsOperations, nextPageLink As String) As IPage(Of TenantIdDescription)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.ITenantsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription}
  overload: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.String,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(ITenantsOperations, String, CancellationToken)
  nameWithType: TenantsOperationsExtensions.ListNextAsync(ITenantsOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.ITenantsOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/TenantsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/TenantsOperationsExtensions.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a list of tenants.\n"
  example: []
  syntax:
    content: public static Task<IPage<TenantIdDescription>> ListNextAsync(this ITenantsOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As ITenantsOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of TenantIdDescription))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.ITenantsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription}}
  overload: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.ResourceManager
  commentId: N:Microsoft.Azure.Management.ResourceManager
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager
  nameWithType: Microsoft.Azure.Management.ResourceManager
  fullName: Microsoft.Azure.Management.ResourceManager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.List*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.List
  isExternal: false
  name: List
  nameWithType: TenantsOperationsExtensions.List
  fullName: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.List
- uid: Microsoft.Azure.Management.ResourceManager.ITenantsOperations
  commentId: T:Microsoft.Azure.Management.ResourceManager.ITenantsOperations
  parent: Microsoft.Azure.Management.ResourceManager
  isExternal: false
  name: ITenantsOperations
  nameWithType: ITenantsOperations
  fullName: Microsoft.Azure.Management.ResourceManager.ITenantsOperations
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription}
  commentId: T:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription}
  parent: Microsoft.Rest.Azure
  definition: Microsoft.Rest.Azure.IPage`1
  name: IPage<TenantIdDescription>
  nameWithType: IPage<TenantIdDescription>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription>
  nameWithType.vb: IPage(Of TenantIdDescription)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription)
  name.vb: IPage(Of TenantIdDescription)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription
    name: TenantIdDescription
    nameWithType: TenantIdDescription
    fullName: Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription
    name: TenantIdDescription
    nameWithType: TenantIdDescription
    fullName: Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage`1
  commentId: T:Microsoft.Rest.Azure.IPage`1
  isExternal: false
  name: IPage<T>
  nameWithType: IPage<T>
  fullName: Microsoft.Rest.Azure.IPage<T>
  nameWithType.vb: IPage(Of T)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of T)
  name.vb: IPage(Of T)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListAsync
  isExternal: false
  name: ListAsync
  nameWithType: TenantsOperationsExtensions.ListAsync
  fullName: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<TenantIdDescription>>
  nameWithType: Task<IPage<TenantIdDescription>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription>>
  nameWithType.vb: Task(Of IPage(Of TenantIdDescription))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription))
  name.vb: Task(Of IPage(Of TenantIdDescription))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription
    name: TenantIdDescription
    nameWithType: TenantIdDescription
    fullName: Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription
    name: TenantIdDescription
    nameWithType: TenantIdDescription
    fullName: Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNext*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNext
  isExternal: false
  name: ListNext
  nameWithType: TenantsOperationsExtensions.ListNext
  fullName: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNextAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNextAsync
  isExternal: false
  name: ListNextAsync
  nameWithType: TenantsOperationsExtensions.ListNextAsync
  fullName: Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNextAsync
