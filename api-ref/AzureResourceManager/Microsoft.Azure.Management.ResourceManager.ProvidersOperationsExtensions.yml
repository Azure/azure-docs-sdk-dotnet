### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  commentId: T:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  id: ProvidersOperationsExtensions
  parent: Microsoft.Azure.Management.ResourceManager
  children:
  - Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String)
  - Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.Nullable{System.Int32},System.String)
  - Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)
  - Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Register(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)
  - Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.RegisterAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Unregister(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)
  - Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.UnregisterAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ProvidersOperationsExtensions
  nameWithType: ProvidersOperationsExtensions
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ProvidersOperationsExtensions
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nExtension methods for ProvidersOperations.\n"
  example: []
  syntax:
    content: public static class ProvidersOperationsExtensions
    content.vb: Public Module ProvidersOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Unregister(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Unregister(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)
  id: Unregister(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  langs:
  - csharp
  - vb
  name: Unregister(IProvidersOperations, String)
  nameWithType: ProvidersOperationsExtensions.Unregister(IProvidersOperations, String)
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Unregister(Microsoft.Azure.Management.ResourceManager.IProvidersOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Unregister
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nUnregisters provider from a subscription.\n"
  example: []
  syntax:
    content: public static Provider Unregister(this IProvidersOperations operations, string resourceProviderNamespace)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Unregister(operations As IProvidersOperations, resourceProviderNamespace As String) As Provider
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IProvidersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceProviderNamespace
      type: System.String
      description: "\nNamespace of the resource provider.\n"
    return:
      type: Microsoft.Azure.Management.ResourceManager.Models.Provider
  overload: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Unregister*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.UnregisterAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.UnregisterAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)
  id: UnregisterAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  langs:
  - csharp
  - vb
  name: UnregisterAsync(IProvidersOperations, String, CancellationToken)
  nameWithType: ProvidersOperationsExtensions.UnregisterAsync(IProvidersOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.UnregisterAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UnregisterAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nUnregisters provider from a subscription.\n"
  example: []
  syntax:
    content: public static Task<Provider> UnregisterAsync(this IProvidersOperations operations, string resourceProviderNamespace, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UnregisterAsync(operations As IProvidersOperations, resourceProviderNamespace As String, cancellationToken As CancellationToken = Nothing) As Task(Of Provider)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IProvidersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceProviderNamespace
      type: System.String
      description: "\nNamespace of the resource provider.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.Provider}
  overload: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.UnregisterAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Register(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Register(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)
  id: Register(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  langs:
  - csharp
  - vb
  name: Register(IProvidersOperations, String)
  nameWithType: ProvidersOperationsExtensions.Register(IProvidersOperations, String)
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Register(Microsoft.Azure.Management.ResourceManager.IProvidersOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Register
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nRegisters provider to be used with a subscription.\n"
  example: []
  syntax:
    content: public static Provider Register(this IProvidersOperations operations, string resourceProviderNamespace)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Register(operations As IProvidersOperations, resourceProviderNamespace As String) As Provider
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IProvidersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceProviderNamespace
      type: System.String
      description: "\nNamespace of the resource provider.\n"
    return:
      type: Microsoft.Azure.Management.ResourceManager.Models.Provider
  overload: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Register*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.RegisterAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.RegisterAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)
  id: RegisterAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  langs:
  - csharp
  - vb
  name: RegisterAsync(IProvidersOperations, String, CancellationToken)
  nameWithType: ProvidersOperationsExtensions.RegisterAsync(IProvidersOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.RegisterAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: RegisterAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nRegisters provider to be used with a subscription.\n"
  example: []
  syntax:
    content: public static Task<Provider> RegisterAsync(this IProvidersOperations operations, string resourceProviderNamespace, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegisterAsync(operations As IProvidersOperations, resourceProviderNamespace As String, cancellationToken As CancellationToken = Nothing) As Task(Of Provider)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IProvidersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceProviderNamespace
      type: System.String
      description: "\nNamespace of the resource provider.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.Provider}
  overload: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.RegisterAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.Nullable{System.Int32},System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.Nullable{System.Int32},System.String)
  id: List(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.Nullable{System.Int32},System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IProvidersOperations, Nullable<Int32>, String)
  nameWithType: ProvidersOperationsExtensions.List(IProvidersOperations, Nullable<Int32>, String)
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IProvidersOperations, System.Nullable<System.Int32>, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a list of resource providers.\n"
  example: []
  syntax:
    content: public static IPage<Provider> List(this IProvidersOperations operations, int ? top = null, string expand = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IProvidersOperations, top As Integer? = Nothing, expand As String = Nothing) As IPage(Of Provider)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IProvidersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: top
      type: System.Nullable{System.Int32}
      description: "\nQuery parameters. If null is passed returns all deployments.\n"
    - id: expand
      type: System.String
      description: "\nThe $expand query parameter. e.g. To include property aliases in response,\nuse $expand=resourceTypes/aliases.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.Provider}
  overload: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.List*
  nameWithType.vb: ProvidersOperationsExtensions.List(IProvidersOperations, Nullable(Of Int32), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IProvidersOperations, System.Nullable(Of System.Int32), System.String)
  name.vb: List(IProvidersOperations, Nullable(Of Int32), String)
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IProvidersOperations, Nullable<Int32>, String, CancellationToken)
  nameWithType: ProvidersOperationsExtensions.ListAsync(IProvidersOperations, Nullable<Int32>, String, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations, System.Nullable<System.Int32>, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
    startLine: 121
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a list of resource providers.\n"
  example: []
  syntax:
    content: public static Task<IPage<Provider>> ListAsync(this IProvidersOperations operations, int ? top = null, string expand = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IProvidersOperations, top As Integer? = Nothing, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of Provider))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IProvidersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: top
      type: System.Nullable{System.Int32}
      description: "\nQuery parameters. If null is passed returns all deployments.\n"
    - id: expand
      type: System.String
      description: "\nThe $expand query parameter. e.g. To include property aliases in response,\nuse $expand=resourceTypes/aliases.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.Provider}}
  overload: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAsync*
  nameWithType.vb: ProvidersOperationsExtensions.ListAsync(IProvidersOperations, Nullable(Of Int32), String, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations, System.Nullable(Of System.Int32), System.String, System.Threading.CancellationToken)
  name.vb: ListAsync(IProvidersOperations, Nullable(Of Int32), String, CancellationToken)
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String)
  id: Get(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IProvidersOperations, String, String)
  nameWithType: ProvidersOperationsExtensions.Get(IProvidersOperations, String, String)
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IProvidersOperations, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a resource provider.\n"
  example: []
  syntax:
    content: public static Provider Get(this IProvidersOperations operations, string resourceProviderNamespace, string expand = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IProvidersOperations, resourceProviderNamespace As String, expand As String = Nothing) As Provider
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IProvidersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceProviderNamespace
      type: System.String
      description: "\nNamespace of the resource provider.\n"
    - id: expand
      type: System.String
      description: "\nThe $expand query parameter. e.g. To include property aliases in response,\nuse $expand=resourceTypes/aliases.\n"
    return:
      type: Microsoft.Azure.Management.ResourceManager.Models.Provider
  overload: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IProvidersOperations, String, String, CancellationToken)
  nameWithType: ProvidersOperationsExtensions.GetAsync(IProvidersOperations, String, String, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
    startLine: 163
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a resource provider.\n"
  example: []
  syntax:
    content: public static Task<Provider> GetAsync(this IProvidersOperations operations, string resourceProviderNamespace, string expand = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IProvidersOperations, resourceProviderNamespace As String, expand As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Provider)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IProvidersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceProviderNamespace
      type: System.String
      description: "\nNamespace of the resource provider.\n"
    - id: expand
      type: System.String
      description: "\nThe $expand query parameter. e.g. To include property aliases in response,\nuse $expand=resourceTypes/aliases.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.Provider}
  overload: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)
  id: ListNext(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IProvidersOperations, String)
  nameWithType: ProvidersOperationsExtensions.ListNext(IProvidersOperations, String)
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IProvidersOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
    startLine: 180
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a list of resource providers.\n"
  example: []
  syntax:
    content: public static IPage<Provider> ListNext(this IProvidersOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IProvidersOperations, nextPageLink As String) As IPage(Of Provider)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IProvidersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.Provider}
  overload: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IProvidersOperations, String, CancellationToken)
  nameWithType: ProvidersOperationsExtensions.ListNextAsync(IProvidersOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ProvidersOperationsExtensions.cs
    startLine: 197
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a list of resource providers.\n"
  example: []
  syntax:
    content: public static Task<IPage<Provider>> ListNextAsync(this IProvidersOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IProvidersOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of Provider))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IProvidersOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.Provider}}
  overload: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.ResourceManager
  commentId: N:Microsoft.Azure.Management.ResourceManager
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager
  nameWithType: Microsoft.Azure.Management.ResourceManager
  fullName: Microsoft.Azure.Management.ResourceManager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Unregister*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Unregister
  isExternal: false
  name: Unregister
  nameWithType: ProvidersOperationsExtensions.Unregister
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Unregister
- uid: Microsoft.Azure.Management.ResourceManager.IProvidersOperations
  commentId: T:Microsoft.Azure.Management.ResourceManager.IProvidersOperations
  parent: Microsoft.Azure.Management.ResourceManager
  isExternal: false
  name: IProvidersOperations
  nameWithType: IProvidersOperations
  fullName: Microsoft.Azure.Management.ResourceManager.IProvidersOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.ResourceManager.Models.Provider
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.Provider
  parent: Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: Provider
  nameWithType: Provider
  fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider
- uid: Microsoft.Azure.Management.ResourceManager.Models
  commentId: N:Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager.Models
  nameWithType: Microsoft.Azure.Management.ResourceManager.Models
  fullName: Microsoft.Azure.Management.ResourceManager.Models
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.UnregisterAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.UnregisterAsync
  isExternal: false
  name: UnregisterAsync
  nameWithType: ProvidersOperationsExtensions.UnregisterAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.UnregisterAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.Provider}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.Provider}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Provider>
  nameWithType: Task<Provider>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.ResourceManager.Models.Provider>
  nameWithType.vb: Task(Of Provider)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.ResourceManager.Models.Provider)
  name.vb: Task(Of Provider)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.Provider
    name: Provider
    nameWithType: Provider
    fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.Provider
    name: Provider
    nameWithType: Provider
    fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Register*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Register
  isExternal: false
  name: Register
  nameWithType: ProvidersOperationsExtensions.Register
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Register
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.RegisterAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.RegisterAsync
  isExternal: false
  name: RegisterAsync
  nameWithType: ProvidersOperationsExtensions.RegisterAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.RegisterAsync
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.List*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.List
  isExternal: false
  name: List
  nameWithType: ProvidersOperationsExtensions.List
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.List
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.Provider}
  commentId: T:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.Provider}
  parent: Microsoft.Rest.Azure
  definition: Microsoft.Rest.Azure.IPage`1
  name: IPage<Provider>
  nameWithType: IPage<Provider>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.ResourceManager.Models.Provider>
  nameWithType.vb: IPage(Of Provider)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.ResourceManager.Models.Provider)
  name.vb: IPage(Of Provider)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.Provider
    name: Provider
    nameWithType: Provider
    fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.Provider
    name: Provider
    nameWithType: Provider
    fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage`1
  commentId: T:Microsoft.Rest.Azure.IPage`1
  isExternal: false
  name: IPage<T>
  nameWithType: IPage<T>
  fullName: Microsoft.Rest.Azure.IPage<T>
  nameWithType.vb: IPage(Of T)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of T)
  name.vb: IPage(Of T)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAsync
  isExternal: false
  name: ListAsync
  nameWithType: ProvidersOperationsExtensions.ListAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.Provider}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.Provider}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<Provider>>
  nameWithType: Task<IPage<Provider>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.ResourceManager.Models.Provider>>
  nameWithType.vb: Task(Of IPage(Of Provider))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.ResourceManager.Models.Provider))
  name.vb: Task(Of IPage(Of Provider))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.Provider
    name: Provider
    nameWithType: Provider
    fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.Provider
    name: Provider
    nameWithType: Provider
    fullName: Microsoft.Azure.Management.ResourceManager.Models.Provider
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: ProvidersOperationsExtensions.Get
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Get
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: ProvidersOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.GetAsync
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNext*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNext
  isExternal: false
  name: ListNext
  nameWithType: ProvidersOperationsExtensions.ListNext
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNext
- uid: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNextAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNextAsync
  isExternal: false
  name: ListNextAsync
  nameWithType: ProvidersOperationsExtensions.ListNextAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNextAsync
