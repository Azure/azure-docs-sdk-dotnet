### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  commentId: T:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  id: ResourceGroupsOperationsExtensions
  parent: Microsoft.Azure.Management.ResourceManager
  children:
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDelete(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistence(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistenceAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter})
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResources(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter})
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter},System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNext(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Patch(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)
  - Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.PatchAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ResourceGroupsOperationsExtensions
  nameWithType: ResourceGroupsOperationsExtensions
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ResourceGroupsOperationsExtensions
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nExtension methods for ResourceGroupsOperations.\n"
  example: []
  syntax:
    content: public static class ResourceGroupsOperationsExtensions
    content.vb: Public Module ResourceGroupsOperationsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResources(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter})
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResources(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter})
  id: ListResources(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListResources(IResourceGroupsOperations, String, ODataQuery<GenericResourceFilter>)
  nameWithType: ResourceGroupsOperationsExtensions.ListResources(IResourceGroupsOperations, String, ODataQuery<GenericResourceFilter>)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResources(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, Microsoft.Rest.Azure.OData.ODataQuery<Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListResources
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGet all of the resources under a subscription.\n"
  example: []
  syntax:
    content: public static IPage<GenericResource> ListResources(this IResourceGroupsOperations operations, string resourceGroupName, ODataQuery<GenericResourceFilter> odataQuery = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListResources(operations As IResourceGroupsOperations, resourceGroupName As String, odataQuery As ODataQuery(Of GenericResourceFilter) = Nothing) As IPage(Of GenericResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nQuery parameters. If null is passed returns all resource groups.\n"
    - id: odataQuery
      type: Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter}
      description: "\nOData parameters to apply to the operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.GenericResource}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResources*
  nameWithType.vb: ResourceGroupsOperationsExtensions.ListResources(IResourceGroupsOperations, String, ODataQuery(Of GenericResourceFilter))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResources(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, Microsoft.Rest.Azure.OData.ODataQuery(Of Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter))
  name.vb: ListResources(IResourceGroupsOperations, String, ODataQuery(Of GenericResourceFilter))
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter},System.Threading.CancellationToken)
  id: ListResourcesAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListResourcesAsync(IResourceGroupsOperations, String, ODataQuery<GenericResourceFilter>, CancellationToken)
  nameWithType: ResourceGroupsOperationsExtensions.ListResourcesAsync(IResourceGroupsOperations, String, ODataQuery<GenericResourceFilter>, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, Microsoft.Rest.Azure.OData.ODataQuery<Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListResourcesAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGet all of the resources under a subscription.\n"
  example: []
  syntax:
    content: public static Task<IPage<GenericResource>> ListResourcesAsync(this IResourceGroupsOperations operations, string resourceGroupName, ODataQuery<GenericResourceFilter> odataQuery = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListResourcesAsync(operations As IResourceGroupsOperations, resourceGroupName As String, odataQuery As ODataQuery(Of GenericResourceFilter) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of GenericResource))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nQuery parameters. If null is passed returns all resource groups.\n"
    - id: odataQuery
      type: Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter}
      description: "\nOData parameters to apply to the operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.GenericResource}}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesAsync*
  nameWithType.vb: ResourceGroupsOperationsExtensions.ListResourcesAsync(IResourceGroupsOperations, String, ODataQuery(Of GenericResourceFilter), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, Microsoft.Rest.Azure.OData.ODataQuery(Of Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter), System.Threading.CancellationToken)
  name.vb: ListResourcesAsync(IResourceGroupsOperations, String, ODataQuery(Of GenericResourceFilter), CancellationToken)
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistence(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistence(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  id: CheckExistence(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckExistence(IResourceGroupsOperations, String)
  nameWithType: ResourceGroupsOperationsExtensions.CheckExistence(IResourceGroupsOperations, String)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistence(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CheckExistence
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nChecks whether resource group exists.\n"
  example: []
  syntax:
    content: public static bool CheckExistence(this IResourceGroupsOperations operations, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckExistence(operations As IResourceGroupsOperations, resourceGroupName As String) As Boolean
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to check. The name is case insensitive.\n"
    return:
      type: System.Boolean
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistence*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistenceAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistenceAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  id: CheckExistenceAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: CheckExistenceAsync(IResourceGroupsOperations, String, CancellationToken)
  nameWithType: ResourceGroupsOperationsExtensions.CheckExistenceAsync(IResourceGroupsOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistenceAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CheckExistenceAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 85
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nChecks whether resource group exists.\n"
  example: []
  syntax:
    content: public static Task<bool> CheckExistenceAsync(this IResourceGroupsOperations operations, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckExistenceAsync(operations As IResourceGroupsOperations, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to check. The name is case insensitive.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistenceAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)
  id: CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdate(IResourceGroupsOperations, String, ResourceGroup)
  nameWithType: ResourceGroupsOperationsExtensions.CreateOrUpdate(IResourceGroupsOperations, String, ResourceGroup)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdate
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 106
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nCreate a resource group.\n"
  example: []
  syntax:
    content: public static ResourceGroup CreateOrUpdate(this IResourceGroupsOperations operations, string resourceGroupName, ResourceGroup parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdate(operations As IResourceGroupsOperations, resourceGroupName As String, parameters As ResourceGroup) As ResourceGroup
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to be created or updated.\n"
    - id: parameters
      type: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
      description: "\nParameters supplied to the create or update resource group service\noperation.\n"
    return:
      type: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup,System.Threading.CancellationToken)
  id: CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: CreateOrUpdateAsync(IResourceGroupsOperations, String, ResourceGroup, CancellationToken)
  nameWithType: ResourceGroupsOperationsExtensions.CreateOrUpdateAsync(IResourceGroupsOperations, String, ResourceGroup, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CreateOrUpdateAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nCreate a resource group.\n"
  example: []
  syntax:
    content: public static Task<ResourceGroup> CreateOrUpdateAsync(this IResourceGroupsOperations operations, string resourceGroupName, ResourceGroup parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateOrUpdateAsync(operations As IResourceGroupsOperations, resourceGroupName As String, parameters As ResourceGroup, cancellationToken As CancellationToken = Nothing) As Task(Of ResourceGroup)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to be created or updated.\n"
    - id: parameters
      type: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
      description: "\nParameters supplied to the create or update resource group service\noperation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  id: Delete(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: Delete(IResourceGroupsOperations, String)
  nameWithType: ResourceGroupsOperationsExtensions.Delete(IResourceGroupsOperations, String)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Delete
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 144
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nDelete resource group.\n"
  example: []
  syntax:
    content: public static void Delete(this IResourceGroupsOperations operations, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Delete(operations As IResourceGroupsOperations, resourceGroupName As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to be deleted. The name is case insensitive.\n"
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(IResourceGroupsOperations, String, CancellationToken)
  nameWithType: ResourceGroupsOperationsExtensions.DeleteAsync(IResourceGroupsOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeleteAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 161
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nDelete resource group.\n"
  example: []
  syntax:
    content: public static Task DeleteAsync(this IResourceGroupsOperations operations, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteAsync(operations As IResourceGroupsOperations, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to be deleted. The name is case insensitive.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.DeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  id: Get(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: Get(IResourceGroupsOperations, String)
  nameWithType: ResourceGroupsOperationsExtensions.Get(IResourceGroupsOperations, String)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Get
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 175
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGet a resource group.\n"
  example: []
  syntax:
    content: public static ResourceGroup Get(this IResourceGroupsOperations operations, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(operations As IResourceGroupsOperations, resourceGroupName As String) As ResourceGroup
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to get. The name is case insensitive.\n"
    return:
      type: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  id: GetAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(IResourceGroupsOperations, String, CancellationToken)
  nameWithType: ResourceGroupsOperationsExtensions.GetAsync(IResourceGroupsOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: GetAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 192
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGet a resource group.\n"
  example: []
  syntax:
    content: public static Task<ResourceGroup> GetAsync(this IResourceGroupsOperations operations, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAsync(operations As IResourceGroupsOperations, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task(Of ResourceGroup)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to get. The name is case insensitive.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.GetAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Patch(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Patch(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)
  id: Patch(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: Patch(IResourceGroupsOperations, String, ResourceGroup)
  nameWithType: ResourceGroupsOperationsExtensions.Patch(IResourceGroupsOperations, String, ResourceGroup)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Patch(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Patch
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 216
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nResource groups can be updated through a simple PATCH operation to a group\naddress. The format of the request is the same as that for creating a\nresource groups, though if a field is unspecified current value will be\ncarried over.\n"
  example: []
  syntax:
    content: public static ResourceGroup Patch(this IResourceGroupsOperations operations, string resourceGroupName, ResourceGroup parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Patch(operations As IResourceGroupsOperations, resourceGroupName As String, parameters As ResourceGroup) As ResourceGroup
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to be created or updated. The name is case\ninsensitive.\n"
    - id: parameters
      type: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
      description: "\nParameters supplied to the update state resource group service operation.\n"
    return:
      type: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Patch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.PatchAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.PatchAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup,System.Threading.CancellationToken)
  id: PatchAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: PatchAsync(IResourceGroupsOperations, String, ResourceGroup, CancellationToken)
  nameWithType: ResourceGroupsOperationsExtensions.PatchAsync(IResourceGroupsOperations, String, ResourceGroup, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.PatchAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PatchAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 240
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nResource groups can be updated through a simple PATCH operation to a group\naddress. The format of the request is the same as that for creating a\nresource groups, though if a field is unspecified current value will be\ncarried over.\n"
  example: []
  syntax:
    content: public static Task<ResourceGroup> PatchAsync(this IResourceGroupsOperations operations, string resourceGroupName, ResourceGroup parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchAsync(operations As IResourceGroupsOperations, resourceGroupName As String, parameters As ResourceGroup, cancellationToken As CancellationToken = Nothing) As Task(Of ResourceGroup)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to be created or updated. The name is case\ninsensitive.\n"
    - id: parameters
      type: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
      description: "\nParameters supplied to the update state resource group service operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.PatchAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest)
  id: ExportTemplate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExportTemplate(IResourceGroupsOperations, String, ExportTemplateRequest)
  nameWithType: ResourceGroupsOperationsExtensions.ExportTemplate(IResourceGroupsOperations, String, ExportTemplateRequest)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExportTemplate
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 260
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nCaptures the specified resource group as a template.\n"
  example: []
  syntax:
    content: public static ResourceGroupExportResult ExportTemplate(this IResourceGroupsOperations operations, string resourceGroupName, ExportTemplateRequest parameters)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExportTemplate(operations As IResourceGroupsOperations, resourceGroupName As String, parameters As ExportTemplateRequest) As ResourceGroupExportResult
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to be created or updated.\n"
    - id: parameters
      type: Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest
      description: "\nParameters supplied to the export template resource group operation.\n"
    return:
      type: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest,System.Threading.CancellationToken)
  id: ExportTemplateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ExportTemplateAsync(IResourceGroupsOperations, String, ExportTemplateRequest, CancellationToken)
  nameWithType: ResourceGroupsOperationsExtensions.ExportTemplateAsync(IResourceGroupsOperations, String, ExportTemplateRequest, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ExportTemplateAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 280
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nCaptures the specified resource group as a template.\n"
  example: []
  syntax:
    content: public static Task<ResourceGroupExportResult> ExportTemplateAsync(this IResourceGroupsOperations operations, string resourceGroupName, ExportTemplateRequest parameters, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExportTemplateAsync(operations As IResourceGroupsOperations, resourceGroupName As String, parameters As ExportTemplateRequest, cancellationToken As CancellationToken = Nothing) As Task(Of ResourceGroupExportResult)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to be created or updated.\n"
    - id: parameters
      type: Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest
      description: "\nParameters supplied to the export template resource group operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter})
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter})
  id: List(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter})
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: List(IResourceGroupsOperations, ODataQuery<ResourceGroupFilter>)
  nameWithType: ResourceGroupsOperationsExtensions.List(IResourceGroupsOperations, ODataQuery<ResourceGroupFilter>)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, Microsoft.Rest.Azure.OData.ODataQuery<Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter>)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: List
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 297
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a collection of resource groups.\n"
  example: []
  syntax:
    content: public static IPage<ResourceGroup> List(this IResourceGroupsOperations operations, ODataQuery<ResourceGroupFilter> odataQuery = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function List(operations As IResourceGroupsOperations, odataQuery As ODataQuery(Of ResourceGroupFilter) = Nothing) As IPage(Of ResourceGroup)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: odataQuery
      type: Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter}
      description: "\nOData parameters to apply to the operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.List*
  nameWithType.vb: ResourceGroupsOperationsExtensions.List(IResourceGroupsOperations, ODataQuery(Of ResourceGroupFilter))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, Microsoft.Rest.Azure.OData.ODataQuery(Of Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter))
  name.vb: List(IResourceGroupsOperations, ODataQuery(Of ResourceGroupFilter))
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter},System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter},System.Threading.CancellationToken)
  id: ListAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListAsync(IResourceGroupsOperations, ODataQuery<ResourceGroupFilter>, CancellationToken)
  nameWithType: ResourceGroupsOperationsExtensions.ListAsync(IResourceGroupsOperations, ODataQuery<ResourceGroupFilter>, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, Microsoft.Rest.Azure.OData.ODataQuery<Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 314
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a collection of resource groups.\n"
  example: []
  syntax:
    content: public static Task<IPage<ResourceGroup>> ListAsync(this IResourceGroupsOperations operations, ODataQuery<ResourceGroupFilter> odataQuery = null, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListAsync(operations As IResourceGroupsOperations, odataQuery As ODataQuery(Of ResourceGroupFilter) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of ResourceGroup))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: odataQuery
      type: Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter}
      description: "\nOData parameters to apply to the operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListAsync*
  nameWithType.vb: ResourceGroupsOperationsExtensions.ListAsync(IResourceGroupsOperations, ODataQuery(Of ResourceGroupFilter), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, Microsoft.Rest.Azure.OData.ODataQuery(Of Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter), System.Threading.CancellationToken)
  name.vb: ListAsync(IResourceGroupsOperations, ODataQuery(Of ResourceGroupFilter), CancellationToken)
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDelete(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDelete(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  id: BeginDelete(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDelete(IResourceGroupsOperations, String)
  nameWithType: ResourceGroupsOperationsExtensions.BeginDelete(IResourceGroupsOperations, String)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDelete(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginDelete
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 331
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nDelete resource group.\n"
  example: []
  syntax:
    content: public static void BeginDelete(this IResourceGroupsOperations operations, string resourceGroupName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub BeginDelete(operations As IResourceGroupsOperations, resourceGroupName As String)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to be deleted. The name is case insensitive.\n"
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDelete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  id: BeginDeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: BeginDeleteAsync(IResourceGroupsOperations, String, CancellationToken)
  nameWithType: ResourceGroupsOperationsExtensions.BeginDeleteAsync(IResourceGroupsOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: BeginDeleteAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 348
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nDelete resource group.\n"
  example: []
  syntax:
    content: public static Task BeginDeleteAsync(this IResourceGroupsOperations operations, string resourceGroupName, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginDeleteAsync(operations As IResourceGroupsOperations, resourceGroupName As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: resourceGroupName
      type: System.String
      description: "\nThe name of the resource group to be deleted. The name is case insensitive.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDeleteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNext(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNext(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  id: ListResourcesNext(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListResourcesNext(IResourceGroupsOperations, String)
  nameWithType: ResourceGroupsOperationsExtensions.ListResourcesNext(IResourceGroupsOperations, String)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNext(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListResourcesNext
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 362
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGet all of the resources under a subscription.\n"
  example: []
  syntax:
    content: public static IPage<GenericResource> ListResourcesNext(this IResourceGroupsOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListResourcesNext(operations As IResourceGroupsOperations, nextPageLink As String) As IPage(Of GenericResource)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.GenericResource}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  id: ListResourcesNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListResourcesNextAsync(IResourceGroupsOperations, String, CancellationToken)
  nameWithType: ResourceGroupsOperationsExtensions.ListResourcesNextAsync(IResourceGroupsOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListResourcesNextAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 379
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGet all of the resources under a subscription.\n"
  example: []
  syntax:
    content: public static Task<IPage<GenericResource>> ListResourcesNextAsync(this IResourceGroupsOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListResourcesNextAsync(operations As IResourceGroupsOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of GenericResource))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.GenericResource}}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  id: ListNext(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNext(IResourceGroupsOperations, String)
  nameWithType: ResourceGroupsOperationsExtensions.ListNext(IResourceGroupsOperations, String)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNext
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 396
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a collection of resource groups.\n"
  example: []
  syntax:
    content: public static IPage<ResourceGroup> ListNext(this IResourceGroupsOperations operations, string nextPageLink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNext(operations As IResourceGroupsOperations, nextPageLink As String) As IPage(Of ResourceGroup)
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    return:
      type: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  id: ListNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions
  langs:
  - csharp
  - vb
  name: ListNextAsync(IResourceGroupsOperations, String, CancellationToken)
  nameWithType: ResourceGroupsOperationsExtensions.ListNextAsync(IResourceGroupsOperations, String, CancellationToken)
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ListNextAsync
    path: src/azure-sdk-for-net/src/ResourceManagement/Resource/Microsoft.Azure.Management.ResourceManager/Generated/ResourceGroupsOperationsExtensions.cs
    startLine: 413
  assemblies:
  - Microsoft.Azure.Management.ResourceManager
  namespace: Microsoft.Azure.Management.ResourceManager
  summary: "\nGets a collection of resource groups.\n"
  example: []
  syntax:
    content: public static Task<IPage<ResourceGroup>> ListNextAsync(this IResourceGroupsOperations operations, string nextPageLink, CancellationToken cancellationToken = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ListNextAsync(operations As IResourceGroupsOperations, nextPageLink As String, cancellationToken As CancellationToken = Nothing) As Task(Of IPage(Of ResourceGroup))
    parameters:
    - id: operations
      type: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
      description: "\nThe operations group for this extension method.\n"
    - id: nextPageLink
      type: System.String
      description: "\nThe NextLink from the previous successful call to List operation.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nThe cancellation token.\n"
    return:
      type: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}}
  overload: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNextAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Management.ResourceManager
  commentId: N:Microsoft.Azure.Management.ResourceManager
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager
  nameWithType: Microsoft.Azure.Management.ResourceManager
  fullName: Microsoft.Azure.Management.ResourceManager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResources*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResources
  isExternal: false
  name: ListResources
  nameWithType: ResourceGroupsOperationsExtensions.ListResources
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResources
- uid: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
  commentId: T:Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
  parent: Microsoft.Azure.Management.ResourceManager
  isExternal: false
  name: IResourceGroupsOperations
  nameWithType: IResourceGroupsOperations
  fullName: Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter}
  commentId: T:Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter}
  parent: Microsoft.Rest.Azure.OData
  definition: Microsoft.Rest.Azure.OData.ODataQuery`1
  name: ODataQuery<GenericResourceFilter>
  nameWithType: ODataQuery<GenericResourceFilter>
  fullName: Microsoft.Rest.Azure.OData.ODataQuery<Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter>
  nameWithType.vb: ODataQuery(Of GenericResourceFilter)
  fullname.vb: Microsoft.Rest.Azure.OData.ODataQuery(Of Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter)
  name.vb: ODataQuery(Of GenericResourceFilter)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.OData.ODataQuery`1
    name: ODataQuery
    nameWithType: ODataQuery
    fullName: Microsoft.Rest.Azure.OData.ODataQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter
    name: GenericResourceFilter
    nameWithType: GenericResourceFilter
    fullName: Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.OData.ODataQuery`1
    name: ODataQuery
    nameWithType: ODataQuery
    fullName: Microsoft.Rest.Azure.OData.ODataQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter
    name: GenericResourceFilter
    nameWithType: GenericResourceFilter
    fullName: Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.GenericResource}
  commentId: T:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.GenericResource}
  parent: Microsoft.Rest.Azure
  definition: Microsoft.Rest.Azure.IPage`1
  name: IPage<GenericResource>
  nameWithType: IPage<GenericResource>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.ResourceManager.Models.GenericResource>
  nameWithType.vb: IPage(Of GenericResource)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.ResourceManager.Models.GenericResource)
  name.vb: IPage(Of GenericResource)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.GenericResource
    name: GenericResource
    nameWithType: GenericResource
    fullName: Microsoft.Azure.Management.ResourceManager.Models.GenericResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.GenericResource
    name: GenericResource
    nameWithType: GenericResource
    fullName: Microsoft.Azure.Management.ResourceManager.Models.GenericResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.OData.ODataQuery`1
  commentId: T:Microsoft.Rest.Azure.OData.ODataQuery`1
  isExternal: false
  name: ODataQuery<T>
  nameWithType: ODataQuery<T>
  fullName: Microsoft.Rest.Azure.OData.ODataQuery<T>
  nameWithType.vb: ODataQuery(Of T)
  fullname.vb: Microsoft.Rest.Azure.OData.ODataQuery(Of T)
  name.vb: ODataQuery(Of T)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.OData.ODataQuery`1
    name: ODataQuery
    nameWithType: ODataQuery
    fullName: Microsoft.Rest.Azure.OData.ODataQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.OData.ODataQuery`1
    name: ODataQuery
    nameWithType: ODataQuery
    fullName: Microsoft.Rest.Azure.OData.ODataQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.OData
  commentId: N:Microsoft.Rest.Azure.OData
  isExternal: false
  name: Microsoft.Rest.Azure.OData
  nameWithType: Microsoft.Rest.Azure.OData
  fullName: Microsoft.Rest.Azure.OData
- uid: Microsoft.Rest.Azure.IPage`1
  commentId: T:Microsoft.Rest.Azure.IPage`1
  isExternal: false
  name: IPage<T>
  nameWithType: IPage<T>
  fullName: Microsoft.Rest.Azure.IPage<T>
  nameWithType.vb: IPage(Of T)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of T)
  name.vb: IPage(Of T)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure
  commentId: N:Microsoft.Rest.Azure
  isExternal: false
  name: Microsoft.Rest.Azure
  nameWithType: Microsoft.Rest.Azure
  fullName: Microsoft.Rest.Azure
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesAsync
  isExternal: false
  name: ListResourcesAsync
  nameWithType: ResourceGroupsOperationsExtensions.ListResourcesAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.GenericResource}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.GenericResource}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<GenericResource>>
  nameWithType: Task<IPage<GenericResource>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.ResourceManager.Models.GenericResource>>
  nameWithType.vb: Task(Of IPage(Of GenericResource))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.ResourceManager.Models.GenericResource))
  name.vb: Task(Of IPage(Of GenericResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.GenericResource
    name: GenericResource
    nameWithType: GenericResource
    fullName: Microsoft.Azure.Management.ResourceManager.Models.GenericResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.GenericResource
    name: GenericResource
    nameWithType: GenericResource
    fullName: Microsoft.Azure.Management.ResourceManager.Models.GenericResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistence*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistence
  isExternal: false
  name: CheckExistence
  nameWithType: ResourceGroupsOperationsExtensions.CheckExistence
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistence
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistenceAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistenceAsync
  isExternal: false
  name: CheckExistenceAsync
  nameWithType: ResourceGroupsOperationsExtensions.CheckExistenceAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistenceAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdate*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdate
  isExternal: false
  name: CreateOrUpdate
  nameWithType: ResourceGroupsOperationsExtensions.CreateOrUpdate
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdate
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  parent: Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: ResourceGroup
  nameWithType: ResourceGroup
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
- uid: Microsoft.Azure.Management.ResourceManager.Models
  commentId: N:Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: Microsoft.Azure.Management.ResourceManager.Models
  nameWithType: Microsoft.Azure.Management.ResourceManager.Models
  fullName: Microsoft.Azure.Management.ResourceManager.Models
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdateAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdateAsync
  isExternal: false
  name: CreateOrUpdateAsync
  nameWithType: ResourceGroupsOperationsExtensions.CreateOrUpdateAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdateAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResourceGroup>
  nameWithType: Task<ResourceGroup>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup>
  nameWithType.vb: Task(Of ResourceGroup)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)
  name.vb: Task(Of ResourceGroup)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
    name: ResourceGroup
    nameWithType: ResourceGroup
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
    name: ResourceGroup
    nameWithType: ResourceGroup
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Delete*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Delete
  isExternal: false
  name: Delete
  nameWithType: ResourceGroupsOperationsExtensions.Delete
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Delete
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.DeleteAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: ResourceGroupsOperationsExtensions.DeleteAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.DeleteAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Get*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Get
  isExternal: false
  name: Get
  nameWithType: ResourceGroupsOperationsExtensions.Get
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Get
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.GetAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: ResourceGroupsOperationsExtensions.GetAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.GetAsync
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Patch*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Patch
  isExternal: false
  name: Patch
  nameWithType: ResourceGroupsOperationsExtensions.Patch
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Patch
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.PatchAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.PatchAsync
  isExternal: false
  name: PatchAsync
  nameWithType: ResourceGroupsOperationsExtensions.PatchAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.PatchAsync
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplate*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplate
  isExternal: false
  name: ExportTemplate
  nameWithType: ResourceGroupsOperationsExtensions.ExportTemplate
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplate
- uid: Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest
  parent: Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: ExportTemplateRequest
  nameWithType: ExportTemplateRequest
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest
- uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult
  commentId: T:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult
  parent: Microsoft.Azure.Management.ResourceManager.Models
  isExternal: false
  name: ResourceGroupExportResult
  nameWithType: ResourceGroupExportResult
  fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplateAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplateAsync
  isExternal: false
  name: ExportTemplateAsync
  nameWithType: ResourceGroupsOperationsExtensions.ExportTemplateAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplateAsync
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResourceGroupExportResult>
  nameWithType: Task<ResourceGroupExportResult>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult>
  nameWithType.vb: Task(Of ResourceGroupExportResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult)
  name.vb: Task(Of ResourceGroupExportResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult
    name: ResourceGroupExportResult
    nameWithType: ResourceGroupExportResult
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult
    name: ResourceGroupExportResult
    nameWithType: ResourceGroupExportResult
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.List*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.List
  isExternal: false
  name: List
  nameWithType: ResourceGroupsOperationsExtensions.List
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.List
- uid: Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter}
  commentId: T:Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter}
  parent: Microsoft.Rest.Azure.OData
  definition: Microsoft.Rest.Azure.OData.ODataQuery`1
  name: ODataQuery<ResourceGroupFilter>
  nameWithType: ODataQuery<ResourceGroupFilter>
  fullName: Microsoft.Rest.Azure.OData.ODataQuery<Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter>
  nameWithType.vb: ODataQuery(Of ResourceGroupFilter)
  fullname.vb: Microsoft.Rest.Azure.OData.ODataQuery(Of Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter)
  name.vb: ODataQuery(Of ResourceGroupFilter)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.OData.ODataQuery`1
    name: ODataQuery
    nameWithType: ODataQuery
    fullName: Microsoft.Rest.Azure.OData.ODataQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter
    name: ResourceGroupFilter
    nameWithType: ResourceGroupFilter
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.OData.ODataQuery`1
    name: ODataQuery
    nameWithType: ODataQuery
    fullName: Microsoft.Rest.Azure.OData.ODataQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter
    name: ResourceGroupFilter
    nameWithType: ResourceGroupFilter
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}
  commentId: T:Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}
  parent: Microsoft.Rest.Azure
  definition: Microsoft.Rest.Azure.IPage`1
  name: IPage<ResourceGroup>
  nameWithType: IPage<ResourceGroup>
  fullName: Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup>
  nameWithType.vb: IPage(Of ResourceGroup)
  fullname.vb: Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)
  name.vb: IPage(Of ResourceGroup)
  spec.csharp:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
    name: ResourceGroup
    nameWithType: ResourceGroup
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
    name: ResourceGroup
    nameWithType: ResourceGroup
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListAsync
  isExternal: false
  name: ListAsync
  nameWithType: ResourceGroupsOperationsExtensions.ListAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListAsync
- uid: System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPage<ResourceGroup>>
  nameWithType: Task<IPage<ResourceGroup>>
  fullName: System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup>>
  nameWithType.vb: Task(Of IPage(Of ResourceGroup))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Rest.Azure.IPage(Of Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup))
  name.vb: Task(Of IPage(Of ResourceGroup))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
    name: ResourceGroup
    nameWithType: ResourceGroup
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Rest.Azure.IPage`1
    name: IPage
    nameWithType: IPage
    fullName: Microsoft.Rest.Azure.IPage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
    name: ResourceGroup
    nameWithType: ResourceGroup
    fullName: Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDelete*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDelete
  isExternal: false
  name: BeginDelete
  nameWithType: ResourceGroupsOperationsExtensions.BeginDelete
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDelete
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDeleteAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDeleteAsync
  isExternal: false
  name: BeginDeleteAsync
  nameWithType: ResourceGroupsOperationsExtensions.BeginDeleteAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDeleteAsync
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNext*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNext
  isExternal: false
  name: ListResourcesNext
  nameWithType: ResourceGroupsOperationsExtensions.ListResourcesNext
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNext
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNextAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNextAsync
  isExternal: false
  name: ListResourcesNextAsync
  nameWithType: ResourceGroupsOperationsExtensions.ListResourcesNextAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListResourcesNextAsync
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNext*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNext
  isExternal: false
  name: ListNext
  nameWithType: ResourceGroupsOperationsExtensions.ListNext
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNext
- uid: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNextAsync*
  commentId: Overload:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNextAsync
  isExternal: false
  name: ListNextAsync
  nameWithType: ResourceGroupsOperationsExtensions.ListNextAsync
  fullName: Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNextAsync
