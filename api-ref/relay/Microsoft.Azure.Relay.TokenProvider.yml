### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Relay.TokenProvider
  commentId: T:Microsoft.Azure.Relay.TokenProvider
  id: TokenProvider
  parent: Microsoft.Azure.Relay
  children:
  - Microsoft.Azure.Relay.TokenProvider.#ctor
  - Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  - Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  - Microsoft.Azure.Relay.TokenProvider.GetTokenAsync(System.String,System.TimeSpan)
  - Microsoft.Azure.Relay.TokenProvider.OnGetTokenAsync(System.String,System.TimeSpan)
  - Microsoft.Azure.Relay.TokenProvider.ThisLock
  langs:
  - csharp
  - vb
  name: TokenProvider
  nameWithType: TokenProvider
  fullName: Microsoft.Azure.Relay.TokenProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: TokenProvider
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/TokenProvider.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: "\nThis abstract base class can be extended to implement additional token providers.\n"
  example: []
  syntax:
    content: public abstract class TokenProvider
    content.vb: Public MustInherit Class TokenProvider
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Azure.Relay.TokenProvider.#ctor
  commentId: M:Microsoft.Azure.Relay.TokenProvider.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Relay.TokenProvider
  langs:
  - csharp
  - vb
  name: TokenProvider()
  nameWithType: TokenProvider.TokenProvider()
  fullName: Microsoft.Azure.Relay.TokenProvider.TokenProvider()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: .ctor
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/TokenProvider.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: 'Initializes a new instance of the <xref href="Microsoft.Azure.Relay.TokenProvider" data-throw-if-not-resolved="false"></xref> class. '
  example: []
  syntax:
    content: protected TokenProvider()
    content.vb: Protected Sub New
  overload: Microsoft.Azure.Relay.TokenProvider.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.Relay.TokenProvider.ThisLock
  commentId: P:Microsoft.Azure.Relay.TokenProvider.ThisLock
  id: ThisLock
  parent: Microsoft.Azure.Relay.TokenProvider
  langs:
  - csharp
  - vb
  name: ThisLock
  nameWithType: TokenProvider.ThisLock
  fullName: Microsoft.Azure.Relay.TokenProvider.ThisLock
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: ThisLock
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/TokenProvider.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: "\nGets the synchronization object for the given instance.\n"
  example: []
  syntax:
    content: protected object ThisLock { get; }
    content.vb: Protected ReadOnly Property ThisLock As Object
    parameters: []
    return:
      type: System.Object
  overload: Microsoft.Azure.Relay.TokenProvider.ThisLock*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  commentId: M:Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  id: CreateSharedAccessSignatureTokenProvider(System.String)
  parent: Microsoft.Azure.Relay.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedAccessSignatureTokenProvider(String)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String)
  fullName: Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: CreateSharedAccessSignatureTokenProvider
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/TokenProvider.cs
    startLine: 33
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: "\nConstruct a TokenProvider based on a sharedAccessSignature.\n"
  example: []
  syntax:
    content: public static TokenProvider CreateSharedAccessSignatureTokenProvider(string sharedAccessSignature)
    content.vb: Public Shared Function CreateSharedAccessSignatureTokenProvider(sharedAccessSignature As String) As TokenProvider
    parameters:
    - id: sharedAccessSignature
      type: System.String
      description: The shared access signature
    return:
      type: Microsoft.Azure.Relay.TokenProvider
      description: A TokenProvider initialized with the shared access signature
  overload: Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  commentId: M:Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  id: CreateSharedAccessSignatureTokenProvider(System.String,System.String)
  parent: Microsoft.Azure.Relay.TokenProvider
  langs:
  - csharp
  - vb
  name: CreateSharedAccessSignatureTokenProvider(String, String)
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider(String, String)
  fullName: Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: CreateSharedAccessSignatureTokenProvider
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/TokenProvider.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: "\nConstruct a TokenProvider based on the provided Key Name and Shared Access Key.\n"
  example: []
  syntax:
    content: public static TokenProvider CreateSharedAccessSignatureTokenProvider(string keyName, string sharedAccessKey)
    content.vb: Public Shared Function CreateSharedAccessSignatureTokenProvider(keyName As String, sharedAccessKey As String) As TokenProvider
    parameters:
    - id: keyName
      type: System.String
      description: The key name of the corresponding SharedAccessKeyAuthorizationRule.
    - id: sharedAccessKey
      type: System.String
      description: The key associated with the SharedAccessKeyAuthorizationRule
    return:
      type: Microsoft.Azure.Relay.TokenProvider
      description: A TokenProvider initialized with the provided RuleId and Password
  overload: Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Relay.TokenProvider.GetTokenAsync(System.String,System.TimeSpan)
  commentId: M:Microsoft.Azure.Relay.TokenProvider.GetTokenAsync(System.String,System.TimeSpan)
  id: GetTokenAsync(System.String,System.TimeSpan)
  parent: Microsoft.Azure.Relay.TokenProvider
  langs:
  - csharp
  - vb
  name: GetTokenAsync(String, TimeSpan)
  nameWithType: TokenProvider.GetTokenAsync(String, TimeSpan)
  fullName: Microsoft.Azure.Relay.TokenProvider.GetTokenAsync(System.String, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: GetTokenAsync
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/TokenProvider.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: "\nGets a <xref href=\"Microsoft.Azure.Relay.SecurityToken\" data-throw-if-not-resolved=\"false\"></xref> for the given audience and duration.\n"
  example: []
  syntax:
    content: public Task<SecurityToken> GetTokenAsync(string audience, TimeSpan validFor)
    content.vb: Public Function GetTokenAsync(audience As String, validFor As TimeSpan) As Task(Of SecurityToken)
    parameters:
    - id: audience
      type: System.String
      description: The target audience for the security token.
    - id: validFor
      type: System.TimeSpan
      description: How long the generated token should be valid for.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Relay.SecurityToken}
      description: A Task returning the newly created SecurityToken.
  overload: Microsoft.Azure.Relay.TokenProvider.GetTokenAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Relay.TokenProvider.OnGetTokenAsync(System.String,System.TimeSpan)
  commentId: M:Microsoft.Azure.Relay.TokenProvider.OnGetTokenAsync(System.String,System.TimeSpan)
  id: OnGetTokenAsync(System.String,System.TimeSpan)
  parent: Microsoft.Azure.Relay.TokenProvider
  langs:
  - csharp
  - vb
  name: OnGetTokenAsync(String, TimeSpan)
  nameWithType: TokenProvider.OnGetTokenAsync(String, TimeSpan)
  fullName: Microsoft.Azure.Relay.TokenProvider.OnGetTokenAsync(System.String, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/TokenProvider.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: OnGetTokenAsync
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/TokenProvider.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: "\nImplemented by derived TokenProvider types to generate their SecurityTokens.\n"
  example: []
  syntax:
    content: protected abstract Task<SecurityToken> OnGetTokenAsync(string audience, TimeSpan validFor)
    content.vb: Protected MustOverride Function OnGetTokenAsync(audience As String, validFor As TimeSpan) As Task(Of SecurityToken)
    parameters:
    - id: audience
      type: System.String
    - id: validFor
      type: System.TimeSpan
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Relay.SecurityToken}
  overload: Microsoft.Azure.Relay.TokenProvider.OnGetTokenAsync*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: Microsoft.Azure.Relay
  commentId: N:Microsoft.Azure.Relay
  isExternal: false
  name: Microsoft.Azure.Relay
  nameWithType: Microsoft.Azure.Relay
  fullName: Microsoft.Azure.Relay
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Relay.TokenProvider
  commentId: T:Microsoft.Azure.Relay.TokenProvider
  parent: Microsoft.Azure.Relay
  isExternal: false
  name: TokenProvider
  nameWithType: TokenProvider
  fullName: Microsoft.Azure.Relay.TokenProvider
- uid: Microsoft.Azure.Relay.TokenProvider.#ctor*
  commentId: Overload:Microsoft.Azure.Relay.TokenProvider.#ctor
  isExternal: false
  name: TokenProvider
  nameWithType: TokenProvider.TokenProvider
  fullName: Microsoft.Azure.Relay.TokenProvider.TokenProvider
- uid: Microsoft.Azure.Relay.TokenProvider.ThisLock*
  commentId: Overload:Microsoft.Azure.Relay.TokenProvider.ThisLock
  isExternal: false
  name: ThisLock
  nameWithType: TokenProvider.ThisLock
  fullName: Microsoft.Azure.Relay.TokenProvider.ThisLock
- uid: Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider*
  commentId: Overload:Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider
  isExternal: false
  name: CreateSharedAccessSignatureTokenProvider
  nameWithType: TokenProvider.CreateSharedAccessSignatureTokenProvider
  fullName: Microsoft.Azure.Relay.TokenProvider.CreateSharedAccessSignatureTokenProvider
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Relay.SecurityToken
  commentId: T:Microsoft.Azure.Relay.SecurityToken
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: Microsoft.Azure.Relay.SecurityToken
- uid: Microsoft.Azure.Relay.TokenProvider.GetTokenAsync*
  commentId: Overload:Microsoft.Azure.Relay.TokenProvider.GetTokenAsync
  isExternal: false
  name: GetTokenAsync
  nameWithType: TokenProvider.GetTokenAsync
  fullName: Microsoft.Azure.Relay.TokenProvider.GetTokenAsync
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Relay.SecurityToken}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Relay.SecurityToken}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SecurityToken>
  nameWithType: Task<SecurityToken>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Relay.SecurityToken>
  nameWithType.vb: Task(Of SecurityToken)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Relay.SecurityToken)
  name.vb: Task(Of SecurityToken)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Relay.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: Microsoft.Azure.Relay.SecurityToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Relay.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: Microsoft.Azure.Relay.SecurityToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.Relay.TokenProvider.OnGetTokenAsync*
  commentId: Overload:Microsoft.Azure.Relay.TokenProvider.OnGetTokenAsync
  isExternal: false
  name: OnGetTokenAsync
  nameWithType: TokenProvider.OnGetTokenAsync
  fullName: Microsoft.Azure.Relay.TokenProvider.OnGetTokenAsync
