### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Relay.SecurityToken
  commentId: T:Microsoft.Azure.Relay.SecurityToken
  id: SecurityToken
  parent: Microsoft.Azure.Relay
  children:
  - Microsoft.Azure.Relay.SecurityToken.#ctor(System.String)
  - Microsoft.Azure.Relay.SecurityToken.#ctor(System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Relay.SecurityToken.Audience
  - Microsoft.Azure.Relay.SecurityToken.ExpiresAtUtc
  - Microsoft.Azure.Relay.SecurityToken.TokenString
  langs:
  - csharp
  - vb
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: Microsoft.Azure.Relay.SecurityToken
  type: Class
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: SecurityToken
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/SecurityToken.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: "\nProvides information about a security token such as audience, expiry time, and the string token value.\n"
  example: []
  syntax:
    content: public class SecurityToken
    content.vb: Public Class SecurityToken
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Relay.SecurityToken.#ctor(System.String)
  commentId: M:Microsoft.Azure.Relay.SecurityToken.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Azure.Relay.SecurityToken
  langs:
  - csharp
  - vb
  name: SecurityToken(String)
  nameWithType: SecurityToken.SecurityToken(String)
  fullName: Microsoft.Azure.Relay.SecurityToken.SecurityToken(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: .ctor
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/SecurityToken.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Azure.Relay.SecurityToken\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected SecurityToken(string tokenString)
    content.vb: Protected Sub New(tokenString As String)
    parameters:
    - id: tokenString
      type: System.String
  overload: Microsoft.Azure.Relay.SecurityToken.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.Relay.SecurityToken.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Relay.SecurityToken.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Relay.SecurityToken
  langs:
  - csharp
  - vb
  name: SecurityToken(String, String, String, String, String)
  nameWithType: SecurityToken.SecurityToken(String, String, String, String, String)
  fullName: Microsoft.Azure.Relay.SecurityToken.SecurityToken(System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: .ctor
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/SecurityToken.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.Azure.Relay.SecurityToken\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected SecurityToken(string tokenString, string audienceFieldName, string expiresOnFieldName, string keyValueSeparator, string pairSeparator)
    content.vb: Protected Sub New(tokenString As String, audienceFieldName As String, expiresOnFieldName As String, keyValueSeparator As String, pairSeparator As String)
    parameters:
    - id: tokenString
      type: System.String
    - id: audienceFieldName
      type: System.String
    - id: expiresOnFieldName
      type: System.String
    - id: keyValueSeparator
      type: System.String
    - id: pairSeparator
      type: System.String
  overload: Microsoft.Azure.Relay.SecurityToken.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Azure.Relay.SecurityToken.Audience
  commentId: P:Microsoft.Azure.Relay.SecurityToken.Audience
  id: Audience
  parent: Microsoft.Azure.Relay.SecurityToken
  langs:
  - csharp
  - vb
  name: Audience
  nameWithType: SecurityToken.Audience
  fullName: Microsoft.Azure.Relay.SecurityToken.Audience
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: Audience
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/SecurityToken.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: "\nGets the audience of this token.\n"
  example: []
  syntax:
    content: public string Audience { get; }
    content.vb: Public ReadOnly Property Audience As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Relay.SecurityToken.Audience*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Relay.SecurityToken.ExpiresAtUtc
  commentId: P:Microsoft.Azure.Relay.SecurityToken.ExpiresAtUtc
  id: ExpiresAtUtc
  parent: Microsoft.Azure.Relay.SecurityToken
  langs:
  - csharp
  - vb
  name: ExpiresAtUtc
  nameWithType: SecurityToken.ExpiresAtUtc
  fullName: Microsoft.Azure.Relay.SecurityToken.ExpiresAtUtc
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: ExpiresAtUtc
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/SecurityToken.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: "\nGets the expiration time of this token.\n"
  example: []
  syntax:
    content: public DateTime ExpiresAtUtc { get; }
    content.vb: Public ReadOnly Property ExpiresAtUtc As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Relay.SecurityToken.ExpiresAtUtc*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.Relay.SecurityToken.TokenString
  commentId: P:Microsoft.Azure.Relay.SecurityToken.TokenString
  id: TokenString
  parent: Microsoft.Azure.Relay.SecurityToken
  langs:
  - csharp
  - vb
  name: TokenString
  nameWithType: SecurityToken.TokenString
  fullName: Microsoft.Azure.Relay.SecurityToken.TokenString
  type: Property
  source:
    remote:
      path: src/Microsoft.Azure.Relay/Common/SecurityToken.cs
      branch: master
      repo: https://github.com/Azure/azure-relay-dotnet
    id: TokenString
    path: src/azure-relay-dotnet/src/Microsoft.Azure.Relay/Common/SecurityToken.cs
    startLine: 90
  assemblies:
  - Microsoft.Azure.Relay
  namespace: Microsoft.Azure.Relay
  summary: "\nGets the actual token as a string.\n"
  example: []
  syntax:
    content: public string TokenString { get; }
    content.vb: Public ReadOnly Property TokenString As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Relay.SecurityToken.TokenString*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Azure.Relay
  commentId: N:Microsoft.Azure.Relay
  isExternal: false
  name: Microsoft.Azure.Relay
  nameWithType: Microsoft.Azure.Relay
  fullName: Microsoft.Azure.Relay
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Relay.SecurityToken
  commentId: T:Microsoft.Azure.Relay.SecurityToken
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: Microsoft.Azure.Relay.SecurityToken
- uid: Microsoft.Azure.Relay.SecurityToken.#ctor*
  commentId: Overload:Microsoft.Azure.Relay.SecurityToken.#ctor
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken.SecurityToken
  fullName: Microsoft.Azure.Relay.SecurityToken.SecurityToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Relay.SecurityToken.Audience*
  commentId: Overload:Microsoft.Azure.Relay.SecurityToken.Audience
  isExternal: false
  name: Audience
  nameWithType: SecurityToken.Audience
  fullName: Microsoft.Azure.Relay.SecurityToken.Audience
- uid: Microsoft.Azure.Relay.SecurityToken.ExpiresAtUtc*
  commentId: Overload:Microsoft.Azure.Relay.SecurityToken.ExpiresAtUtc
  isExternal: false
  name: ExpiresAtUtc
  nameWithType: SecurityToken.ExpiresAtUtc
  fullName: Microsoft.Azure.Relay.SecurityToken.ExpiresAtUtc
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Azure.Relay.SecurityToken.TokenString*
  commentId: Overload:Microsoft.Azure.Relay.SecurityToken.TokenString
  isExternal: false
  name: TokenString
  nameWithType: SecurityToken.TokenString
  fullName: Microsoft.Azure.Relay.SecurityToken.TokenString
