### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  commentId: T:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  id: USqlType
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models
  children:
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.#ctor
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.#ctor(System.String,System.Nullable{System.Guid},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.CSharpName
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.DatabaseName
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.FullCSharpName
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsAssemblyType
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsComplexType
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsNullable
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsTableType
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsUserDefined
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.Name
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.PrincipalId
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaId
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaName
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SystemTypeId
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.TypeFamily
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.UserTypeId
  langs:
  - csharp
  - vb
  name: USqlType
  nameWithType: USqlType
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: USqlType
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nA Data Lake Analytics catalog U-SQL type item.\n"
  example: []
  syntax:
    content: 'public class USqlType : CatalogItem'
    content.vb: >-
      Public Class USqlType
          Inherits CatalogItem
  inheritance:
  - System.Object
  - Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem
  derivedClasses:
  - Microsoft.Azure.Management.DataLake.Analytics.Models.USqlTableType
  inheritedMembers:
  - Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem.ComputeAccountName
  - Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem.Version
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.#ctor
  commentId: M:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: USqlType()
  nameWithType: USqlType.USqlType()
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.USqlType()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nInitializes a new instance of the USqlType class.\n"
  example: []
  syntax:
    content: public USqlType()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.#ctor(System.String,System.Nullable{System.Guid},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  commentId: M:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.#ctor(System.String,System.Nullable{System.Guid},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: '#ctor(System.String,System.Nullable{System.Guid},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})'
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: USqlType(String, Nullable<Guid>, String, String, String, String, String, String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  nameWithType: USqlType.USqlType(String, Nullable<Guid>, String, String, String, String, String, String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.USqlType(System.String, System.Nullable<System.Guid>, System.String, System.String, System.String, System.String, System.String, System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nInitializes a new instance of the USqlType class.\n"
  example: []
  syntax:
    content: public USqlType(string computeAccountName = null, Guid? version = null, string databaseName = null, string schemaName = null, string name = null, string typeFamily = null, string cSharpName = null, string fullCSharpName = null, int ? systemTypeId = null, int ? userTypeId = null, int ? schemaId = null, int ? principalId = null, bool ? isNullable = null, bool ? isUserDefined = null, bool ? isAssemblyType = null, bool ? isTableType = null, bool ? isComplexType = null)
    content.vb: Public Sub New(computeAccountName As String = Nothing, version As Guid? = Nothing, databaseName As String = Nothing, schemaName As String = Nothing, name As String = Nothing, typeFamily As String = Nothing, cSharpName As String = Nothing, fullCSharpName As String = Nothing, systemTypeId As Integer? = Nothing, userTypeId As Integer? = Nothing, schemaId As Integer? = Nothing, principalId As Integer? = Nothing, isNullable As Boolean? = Nothing, isUserDefined As Boolean? = Nothing, isAssemblyType As Boolean? = Nothing, isTableType As Boolean? = Nothing, isComplexType As Boolean? = Nothing)
    parameters:
    - id: computeAccountName
      type: System.String
      description: >-
        the name of the Data Lake

        Analytics account.
    - id: version
      type: System.Nullable{System.Guid}
      description: the version of the catalog item.
    - id: databaseName
      type: System.String
      description: the name of the database.
    - id: schemaName
      type: System.String
      description: >-
        the name of the schema associated with

        this table and database.
    - id: name
      type: System.String
      description: the name of type for this type.
    - id: typeFamily
      type: System.String
      description: the type family for this type.
    - id: cSharpName
      type: System.String
      description: the C# name for this type.
    - id: fullCSharpName
      type: System.String
      description: >-
        the fully qualified C# name for this

        type.
    - id: systemTypeId
      type: System.Nullable{System.Int32}
      description: >-
        the system type ID for this

        type.
    - id: userTypeId
      type: System.Nullable{System.Int32}
      description: the user type ID for this type.
    - id: schemaId
      type: System.Nullable{System.Int32}
      description: the schema ID for this type.
    - id: principalId
      type: System.Nullable{System.Int32}
      description: the principal ID for this type.
    - id: isNullable
      type: System.Nullable{System.Boolean}
      description: >-
        the the switch indicating if this type is

        nullable.
    - id: isUserDefined
      type: System.Nullable{System.Boolean}
      description: >-
        the the switch indicating if this type

        is user defined.
    - id: isAssemblyType
      type: System.Nullable{System.Boolean}
      description: >-
        the the switch indicating if this type

        is an assembly type.
    - id: isTableType
      type: System.Nullable{System.Boolean}
      description: >-
        the the switch indicating if this type is

        a table type.
    - id: isComplexType
      type: System.Nullable{System.Boolean}
      description: >-
        the the switch indicating if this type

        is a complex type.
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.#ctor*
  nameWithType.vb: USqlType.USqlType(String, Nullable(Of Guid), String, String, String, String, String, String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.USqlType(System.String, System.Nullable(Of System.Guid), System.String, System.String, System.String, System.String, System.String, System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
  name.vb: USqlType(String, Nullable(Of Guid), String, String, String, String, String, String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.DatabaseName
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.DatabaseName
  id: DatabaseName
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: DatabaseName
  nameWithType: USqlType.DatabaseName
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.DatabaseName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DatabaseName
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 79
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the name of the database.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "databaseName")]

      public string DatabaseName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="databaseName")>

      Public Property DatabaseName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.DatabaseName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: databaseName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaName
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaName
  id: SchemaName
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: SchemaName
  nameWithType: USqlType.SchemaName
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SchemaName
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 86
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the name of the schema associated with this table and\ndatabase.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "schemaName")]

      public string SchemaName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="schemaName")>

      Public Property SchemaName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: schemaName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.Name
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.Name
  id: Name
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: USqlType.Name
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the name of type for this type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "typeName")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="typeName")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: typeName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.TypeFamily
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.TypeFamily
  id: TypeFamily
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: TypeFamily
  nameWithType: USqlType.TypeFamily
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.TypeFamily
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: TypeFamily
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 98
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the type family for this type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "typeFamily")]

      public string TypeFamily { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="typeFamily")>

      Public Property TypeFamily As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.TypeFamily*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: typeFamily
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.CSharpName
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.CSharpName
  id: CSharpName
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: CSharpName
  nameWithType: USqlType.CSharpName
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.CSharpName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: CSharpName
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 104
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the C# name for this type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "cSharpName")]

      public string CSharpName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="cSharpName")>

      Public Property CSharpName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.CSharpName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: cSharpName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.FullCSharpName
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.FullCSharpName
  id: FullCSharpName
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: FullCSharpName
  nameWithType: USqlType.FullCSharpName
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.FullCSharpName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: FullCSharpName
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 110
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the fully qualified C# name for this type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "fullCSharpName")]

      public string FullCSharpName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="fullCSharpName")>

      Public Property FullCSharpName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.FullCSharpName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: fullCSharpName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SystemTypeId
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SystemTypeId
  id: SystemTypeId
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: SystemTypeId
  nameWithType: USqlType.SystemTypeId
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SystemTypeId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SystemTypeId
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 116
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the system type ID for this type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "systemTypeId")]

      public int ? SystemTypeId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="systemTypeId")>

      Public Property SystemTypeId As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SystemTypeId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: systemTypeId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.UserTypeId
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.UserTypeId
  id: UserTypeId
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: UserTypeId
  nameWithType: USqlType.UserTypeId
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.UserTypeId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UserTypeId
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 122
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the user type ID for this type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "userTypeId")]

      public int ? UserTypeId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="userTypeId")>

      Public Property UserTypeId As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.UserTypeId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: userTypeId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaId
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaId
  id: SchemaId
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: SchemaId
  nameWithType: USqlType.SchemaId
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SchemaId
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 128
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the schema ID for this type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "schemaId")]

      public int ? SchemaId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="schemaId")>

      Public Property SchemaId As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: schemaId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.PrincipalId
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.PrincipalId
  id: PrincipalId
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: PrincipalId
  nameWithType: USqlType.PrincipalId
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.PrincipalId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: PrincipalId
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 134
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the principal ID for this type.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "principalId")]

      public int ? PrincipalId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="principalId")>

      Public Property PrincipalId As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.PrincipalId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: principalId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsNullable
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsNullable
  id: IsNullable
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: IsNullable
  nameWithType: USqlType.IsNullable
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsNullable
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsNullable
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the the switch indicating if this type is nullable.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "isNullable")]

      public bool ? IsNullable { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="isNullable")>

      Public Property IsNullable As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsNullable*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: isNullable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsUserDefined
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsUserDefined
  id: IsUserDefined
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: IsUserDefined
  nameWithType: USqlType.IsUserDefined
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsUserDefined
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsUserDefined
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 147
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the the switch indicating if this type is user\ndefined.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "isUserDefined")]

      public bool ? IsUserDefined { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="isUserDefined")>

      Public Property IsUserDefined As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsUserDefined*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: isUserDefined
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsAssemblyType
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsAssemblyType
  id: IsAssemblyType
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: IsAssemblyType
  nameWithType: USqlType.IsAssemblyType
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsAssemblyType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsAssemblyType
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 154
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the the switch indicating if this type is an assembly\ntype.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "isAssemblyType")]

      public bool ? IsAssemblyType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="isAssemblyType")>

      Public Property IsAssemblyType As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsAssemblyType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: isAssemblyType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsTableType
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsTableType
  id: IsTableType
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: IsTableType
  nameWithType: USqlType.IsTableType
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsTableType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsTableType
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 161
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the the switch indicating if this type is a table\ntype.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "isTableType")]

      public bool ? IsTableType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="isTableType")>

      Public Property IsTableType As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsTableType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: isTableType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsComplexType
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsComplexType
  id: IsComplexType
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType
  langs:
  - csharp
  - vb
  name: IsComplexType
  nameWithType: USqlType.IsComplexType
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsComplexType
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IsComplexType
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/USqlType.cs
    startLine: 168
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the the switch indicating if this type is a complex\ntype.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "isComplexType")]

      public bool ? IsComplexType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="isComplexType")>

      Public Property IsComplexType As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsComplexType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: isComplexType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models
  commentId: N:Microsoft.Azure.Management.DataLake.Analytics.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Analytics.Models
  nameWithType: Microsoft.Azure.Management.DataLake.Analytics.Models
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem
  commentId: T:Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models
  isExternal: false
  name: CatalogItem
  nameWithType: CatalogItem
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem.ComputeAccountName
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem.ComputeAccountName
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem
  isExternal: false
  name: ComputeAccountName
  nameWithType: CatalogItem.ComputeAccountName
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem.ComputeAccountName
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem.Version
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem.Version
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem
  isExternal: false
  name: Version
  nameWithType: CatalogItem.Version
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.CatalogItem.Version
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.#ctor*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.#ctor
  isExternal: false
  name: USqlType
  nameWithType: USqlType.USqlType
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.USqlType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullname.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.DatabaseName*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.DatabaseName
  isExternal: false
  name: DatabaseName
  nameWithType: USqlType.DatabaseName
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.DatabaseName
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaName*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaName
  isExternal: false
  name: SchemaName
  nameWithType: USqlType.SchemaName
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaName
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.Name*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.Name
  isExternal: false
  name: Name
  nameWithType: USqlType.Name
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.Name
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.TypeFamily*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.TypeFamily
  isExternal: false
  name: TypeFamily
  nameWithType: USqlType.TypeFamily
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.TypeFamily
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.CSharpName*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.CSharpName
  isExternal: false
  name: CSharpName
  nameWithType: USqlType.CSharpName
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.CSharpName
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.FullCSharpName*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.FullCSharpName
  isExternal: false
  name: FullCSharpName
  nameWithType: USqlType.FullCSharpName
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.FullCSharpName
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SystemTypeId*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SystemTypeId
  isExternal: false
  name: SystemTypeId
  nameWithType: USqlType.SystemTypeId
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SystemTypeId
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.UserTypeId*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.UserTypeId
  isExternal: false
  name: UserTypeId
  nameWithType: USqlType.UserTypeId
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.UserTypeId
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaId*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaId
  isExternal: false
  name: SchemaId
  nameWithType: USqlType.SchemaId
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.SchemaId
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.PrincipalId*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.PrincipalId
  isExternal: false
  name: PrincipalId
  nameWithType: USqlType.PrincipalId
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.PrincipalId
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsNullable*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsNullable
  isExternal: false
  name: IsNullable
  nameWithType: USqlType.IsNullable
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsNullable
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsUserDefined*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsUserDefined
  isExternal: false
  name: IsUserDefined
  nameWithType: USqlType.IsUserDefined
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsUserDefined
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsAssemblyType*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsAssemblyType
  isExternal: false
  name: IsAssemblyType
  nameWithType: USqlType.IsAssemblyType
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsAssemblyType
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsTableType*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsTableType
  isExternal: false
  name: IsTableType
  nameWithType: USqlType.IsTableType
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsTableType
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsComplexType*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsComplexType
  isExternal: false
  name: IsComplexType
  nameWithType: USqlType.IsComplexType
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.USqlType.IsComplexType
