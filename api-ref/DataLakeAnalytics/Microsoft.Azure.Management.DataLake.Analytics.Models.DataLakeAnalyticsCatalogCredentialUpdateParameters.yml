### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters
  commentId: T:Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters
  id: DataLakeAnalyticsCatalogCredentialUpdateParameters
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models
  children:
  - Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.#ctor
  - Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.#ctor(System.String,System.String,System.String,System.String)
  - Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.NewPassword
  - Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Password
  - Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Uri
  - Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.UserId
  langs:
  - csharp
  - vb
  name: DataLakeAnalyticsCatalogCredentialUpdateParameters
  nameWithType: DataLakeAnalyticsCatalogCredentialUpdateParameters
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters
  type: Class
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DataLakeAnalyticsCatalogCredentialUpdateParameters
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
    startLine: 20
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nData Lake Analytics catalog credential update parameters.\n"
  example: []
  syntax:
    content: public class DataLakeAnalyticsCatalogCredentialUpdateParameters
    content.vb: Public Class DataLakeAnalyticsCatalogCredentialUpdateParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.#ctor
  commentId: M:Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters
  langs:
  - csharp
  - vb
  name: DataLakeAnalyticsCatalogCredentialUpdateParameters()
  nameWithType: DataLakeAnalyticsCatalogCredentialUpdateParameters.DataLakeAnalyticsCatalogCredentialUpdateParameters()
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.DataLakeAnalyticsCatalogCredentialUpdateParameters()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nInitializes a new instance of the\nDataLakeAnalyticsCatalogCredentialUpdateParameters class.\n"
  example: []
  syntax:
    content: public DataLakeAnalyticsCatalogCredentialUpdateParameters()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters
  langs:
  - csharp
  - vb
  name: DataLakeAnalyticsCatalogCredentialUpdateParameters(String, String, String, String)
  nameWithType: DataLakeAnalyticsCatalogCredentialUpdateParameters.DataLakeAnalyticsCatalogCredentialUpdateParameters(String, String, String, String)
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.DataLakeAnalyticsCatalogCredentialUpdateParameters(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
    startLine: 42
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nInitializes a new instance of the\nDataLakeAnalyticsCatalogCredentialUpdateParameters class.\n"
  example: []
  syntax:
    content: public DataLakeAnalyticsCatalogCredentialUpdateParameters(string password = null, string newPassword = null, string uri = null, string userId = null)
    content.vb: Public Sub New(password As String = Nothing, newPassword As String = Nothing, uri As String = Nothing, userId As String = Nothing)
    parameters:
    - id: password
      type: System.String
      description: >-
        the current password for the credential and

        user with access to the data source. This is required if the

        requester is not the account owner.
    - id: newPassword
      type: System.String
      description: >-
        the new password for the credential and

        user with access to the data source.
    - id: uri
      type: System.String
      description: >-
        the URI identifier for the data source this

        credential can connect to in the format

        &lt;hostname&gt;:&lt;port&gt;
    - id: userId
      type: System.String
      description: >-
        the object identifier for the user associated

        with this credential with access to the data source.
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Password
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Password
  id: Password
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: DataLakeAnalyticsCatalogCredentialUpdateParameters.Password
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Password
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Password
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
    startLine: 55
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the current password for the credential and user with\naccess to the data source. This is required if the requester is not\nthe account owner.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "password")]

      public string Password { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="password")>

      Public Property Password As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Password*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: password
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.NewPassword
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.NewPassword
  id: NewPassword
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters
  langs:
  - csharp
  - vb
  name: NewPassword
  nameWithType: DataLakeAnalyticsCatalogCredentialUpdateParameters.NewPassword
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.NewPassword
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: NewPassword
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the new password for the credential and user with\naccess to the data source.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "newPassword")]

      public string NewPassword { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="newPassword")>

      Public Property NewPassword As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.NewPassword*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: newPassword
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Uri
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Uri
  id: Uri
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: DataLakeAnalyticsCatalogCredentialUpdateParameters.Uri
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Uri
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Uri
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the URI identifier for the data source this credential\ncan connect to in the format\n&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "uri")]

      public string Uri { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="uri")>

      Public Property Uri As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Uri*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.UserId
  commentId: P:Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.UserId
  id: UserId
  parent: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: DataLakeAnalyticsCatalogCredentialUpdateParameters.UserId
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.UserId
  type: Property
  source:
    remote:
      path: src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: UserId
    path: src/azure-sdk-for-net/src/ResourceManagement/DataLake.Analytics/Microsoft.Azure.Management.DataLake.Analytics/Generated/Models/DataLakeAnalyticsCatalogCredentialUpdateParameters.cs
    startLine: 77
  assemblies:
  - Microsoft.Azure.Management.DataLake.Analytics
  namespace: Microsoft.Azure.Management.DataLake.Analytics.Models
  summary: "\nGets or sets the object identifier for the user associated with\nthis credential with access to the data source.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "userId")]

      public string UserId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="userId")>

      Public Property UserId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.UserId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: userId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models
  commentId: N:Microsoft.Azure.Management.DataLake.Analytics.Models
  isExternal: false
  name: Microsoft.Azure.Management.DataLake.Analytics.Models
  nameWithType: Microsoft.Azure.Management.DataLake.Analytics.Models
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.#ctor*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.#ctor
  isExternal: false
  name: DataLakeAnalyticsCatalogCredentialUpdateParameters
  nameWithType: DataLakeAnalyticsCatalogCredentialUpdateParameters.DataLakeAnalyticsCatalogCredentialUpdateParameters
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.DataLakeAnalyticsCatalogCredentialUpdateParameters
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Password*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Password
  isExternal: false
  name: Password
  nameWithType: DataLakeAnalyticsCatalogCredentialUpdateParameters.Password
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Password
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.NewPassword*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.NewPassword
  isExternal: false
  name: NewPassword
  nameWithType: DataLakeAnalyticsCatalogCredentialUpdateParameters.NewPassword
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.NewPassword
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Uri*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Uri
  isExternal: false
  name: Uri
  nameWithType: DataLakeAnalyticsCatalogCredentialUpdateParameters.Uri
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.Uri
- uid: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.UserId*
  commentId: Overload:Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.UserId
  isExternal: false
  name: UserId
  nameWithType: DataLakeAnalyticsCatalogCredentialUpdateParameters.UserId
  fullName: Microsoft.Azure.Management.DataLake.Analytics.Models.DataLakeAnalyticsCatalogCredentialUpdateParameters.UserId
