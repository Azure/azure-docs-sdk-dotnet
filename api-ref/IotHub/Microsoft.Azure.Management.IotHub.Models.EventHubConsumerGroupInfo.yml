### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo
  commentId: T:Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo
  id: EventHubConsumerGroupInfo
  parent: Microsoft.Azure.Management.IotHub.Models
  children:
  - Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.#ctor
  - Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)
  - Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Id
  - Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Name
  - Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Tags
  langs:
  - csharp
  - vb
  name: EventHubConsumerGroupInfo
  nameWithType: EventHubConsumerGroupInfo
  fullName: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo
  type: Class
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/EventHubConsumerGroupInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: EventHubConsumerGroupInfo
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/EventHubConsumerGroupInfo.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nThe properties indicating the EventHubConsumerGroupInfo.\n"
  example: []
  syntax:
    content: public class EventHubConsumerGroupInfo
    content.vb: Public Class EventHubConsumerGroupInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.#ctor
  commentId: M:Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo
  langs:
  - csharp
  - vb
  name: EventHubConsumerGroupInfo()
  nameWithType: EventHubConsumerGroupInfo.EventHubConsumerGroupInfo()
  fullName: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.EventHubConsumerGroupInfo()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/EventHubConsumerGroupInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/EventHubConsumerGroupInfo.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nInitializes a new instance of the EventHubConsumerGroupInfo class.\n"
  example: []
  syntax:
    content: public EventHubConsumerGroupInfo()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)
  commentId: M:Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)'
  parent: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo
  langs:
  - csharp
  - vb
  name: EventHubConsumerGroupInfo(IDictionary<String, String>, String, String)
  nameWithType: EventHubConsumerGroupInfo.EventHubConsumerGroupInfo(IDictionary<String, String>, String, String)
  fullName: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.EventHubConsumerGroupInfo(System.Collections.Generic.IDictionary<System.String, System.String>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/EventHubConsumerGroupInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/EventHubConsumerGroupInfo.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nInitializes a new instance of the EventHubConsumerGroupInfo class.\n"
  example: []
  syntax:
    content: public EventHubConsumerGroupInfo(IDictionary<string, string> tags = null, string id = null, string name = null)
    content.vb: Public Sub New(tags As IDictionary(Of String, String) = Nothing, id As String = Nothing, name As String = Nothing)
    parameters:
    - id: tags
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: id
      type: System.String
    - id: name
      type: System.String
  overload: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.#ctor*
  nameWithType.vb: EventHubConsumerGroupInfo.EventHubConsumerGroupInfo(IDictionary(Of String, String), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.EventHubConsumerGroupInfo(System.Collections.Generic.IDictionary(Of System.String, System.String), System.String, System.String)
  name.vb: EventHubConsumerGroupInfo(IDictionary(Of String, String), String, String)
- uid: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Tags
  commentId: P:Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Tags
  id: Tags
  parent: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: EventHubConsumerGroupInfo.Tags
  fullName: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Tags
  type: Property
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/EventHubConsumerGroupInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Tags
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/EventHubConsumerGroupInfo.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nThe tags.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "tags")]

      public IDictionary<string, string> Tags { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="tags")>

      Public Property Tags As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  overload: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Tags*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: tags
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Id
  commentId: P:Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Id
  id: Id
  parent: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: EventHubConsumerGroupInfo.Id
  fullName: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Id
  type: Property
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/EventHubConsumerGroupInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Id
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/EventHubConsumerGroupInfo.cs
    startLine: 47
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nThe event hub consumer group identifier.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "id")]

      public string Id { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="id")>

      Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Name
  commentId: P:Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Name
  id: Name
  parent: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EventHubConsumerGroupInfo.Name
  fullName: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Name
  type: Property
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/EventHubConsumerGroupInfo.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Name
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/EventHubConsumerGroupInfo.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nThe event hub consumer group name.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "name")]

      public string Name { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="name")>

      Public Property Name As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.IotHub.Models
  commentId: N:Microsoft.Azure.Management.IotHub.Models
  isExternal: false
  name: Microsoft.Azure.Management.IotHub.Models
  nameWithType: Microsoft.Azure.Management.IotHub.Models
  fullName: Microsoft.Azure.Management.IotHub.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.#ctor*
  commentId: Overload:Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.#ctor
  isExternal: false
  name: EventHubConsumerGroupInfo
  nameWithType: EventHubConsumerGroupInfo.EventHubConsumerGroupInfo
  fullName: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.EventHubConsumerGroupInfo
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Tags*
  commentId: Overload:Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Tags
  isExternal: false
  name: Tags
  nameWithType: EventHubConsumerGroupInfo.Tags
  fullName: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Tags
- uid: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Id*
  commentId: Overload:Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Id
  isExternal: false
  name: Id
  nameWithType: EventHubConsumerGroupInfo.Id
  fullName: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Id
- uid: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Name*
  commentId: Overload:Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Name
  isExternal: false
  name: Name
  nameWithType: EventHubConsumerGroupInfo.Name
  fullName: Microsoft.Azure.Management.IotHub.Models.EventHubConsumerGroupInfo.Name
