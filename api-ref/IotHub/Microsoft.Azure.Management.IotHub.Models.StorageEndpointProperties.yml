### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties
  commentId: T:Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties
  id: StorageEndpointProperties
  parent: Microsoft.Azure.Management.IotHub.Models
  children:
  - Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.#ctor
  - Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.#ctor(System.Nullable{System.TimeSpan},System.String,System.String)
  - Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ConnectionString
  - Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ContainerName
  - Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.SasTtlAsIso8601
  langs:
  - csharp
  - vb
  name: StorageEndpointProperties
  nameWithType: StorageEndpointProperties
  fullName: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties
  type: Class
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/StorageEndpointProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: StorageEndpointProperties
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/StorageEndpointProperties.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nThe properties of the Storage Endpoint for file upload.\n"
  example: []
  syntax:
    content: public class StorageEndpointProperties
    content.vb: Public Class StorageEndpointProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.#ctor
  commentId: M:Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties
  langs:
  - csharp
  - vb
  name: StorageEndpointProperties()
  nameWithType: StorageEndpointProperties.StorageEndpointProperties()
  fullName: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.StorageEndpointProperties()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/StorageEndpointProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/StorageEndpointProperties.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nInitializes a new instance of the StorageEndpointProperties class.\n"
  example: []
  syntax:
    content: public StorageEndpointProperties()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.#ctor(System.Nullable{System.TimeSpan},System.String,System.String)
  commentId: M:Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.#ctor(System.Nullable{System.TimeSpan},System.String,System.String)
  id: '#ctor(System.Nullable{System.TimeSpan},System.String,System.String)'
  parent: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties
  langs:
  - csharp
  - vb
  name: StorageEndpointProperties(Nullable<TimeSpan>, String, String)
  nameWithType: StorageEndpointProperties.StorageEndpointProperties(Nullable<TimeSpan>, String, String)
  fullName: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.StorageEndpointProperties(System.Nullable<System.TimeSpan>, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/StorageEndpointProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/StorageEndpointProperties.cs
    startLine: 31
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nInitializes a new instance of the StorageEndpointProperties class.\n"
  example: []
  syntax:
    content: public StorageEndpointProperties(TimeSpan? sasTtlAsIso8601 = null, string connectionString = null, string containerName = null)
    content.vb: Public Sub New(sasTtlAsIso8601 As TimeSpan? = Nothing, connectionString As String = Nothing, containerName As String = Nothing)
    parameters:
    - id: sasTtlAsIso8601
      type: System.Nullable{System.TimeSpan}
    - id: connectionString
      type: System.String
    - id: containerName
      type: System.String
  overload: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.#ctor*
  nameWithType.vb: StorageEndpointProperties.StorageEndpointProperties(Nullable(Of TimeSpan), String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.StorageEndpointProperties(System.Nullable(Of System.TimeSpan), System.String, System.String)
  name.vb: StorageEndpointProperties(Nullable(Of TimeSpan), String, String)
- uid: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.SasTtlAsIso8601
  commentId: P:Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.SasTtlAsIso8601
  id: SasTtlAsIso8601
  parent: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties
  langs:
  - csharp
  - vb
  name: SasTtlAsIso8601
  nameWithType: StorageEndpointProperties.SasTtlAsIso8601
  fullName: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.SasTtlAsIso8601
  type: Property
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/StorageEndpointProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: SasTtlAsIso8601
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/StorageEndpointProperties.cs
    startLine: 41
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nSAS time to live. Range: 1 Min (PT1M) - 1 Day (P1D).\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "sasTtlAsIso8601")]

      public TimeSpan? SasTtlAsIso8601 { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="sasTtlAsIso8601")>

      Public Property SasTtlAsIso8601 As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.SasTtlAsIso8601*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: sasTtlAsIso8601
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ConnectionString
  commentId: P:Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ConnectionString
  id: ConnectionString
  parent: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: StorageEndpointProperties.ConnectionString
  fullName: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ConnectionString
  type: Property
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/StorageEndpointProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ConnectionString
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/StorageEndpointProperties.cs
    startLine: 48
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nThe account key credentials for storage account selected by\ncustomer for uploading files.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "connectionString")]

      public string ConnectionString { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="connectionString")>

      Public Property ConnectionString As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ConnectionString*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: connectionString
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ContainerName
  commentId: P:Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ContainerName
  id: ContainerName
  parent: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties
  langs:
  - csharp
  - vb
  name: ContainerName
  nameWithType: StorageEndpointProperties.ContainerName
  fullName: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ContainerName
  type: Property
  source:
    remote:
      path: src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/StorageEndpointProperties.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: ContainerName
    path: src/azure-sdk-for-net/src/ResourceManagement/IotHub/Microsoft.Azure.Management.IotHub/Generated/Models/StorageEndpointProperties.cs
    startLine: 54
  assemblies:
  - Microsoft.Azure.Management.IotHub
  namespace: Microsoft.Azure.Management.IotHub.Models
  summary: "\nThe root container name where all files will be uploaded.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "containerName")]

      public string ContainerName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="containerName")>

      Public Property ContainerName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ContainerName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: containerName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.IotHub.Models
  commentId: N:Microsoft.Azure.Management.IotHub.Models
  isExternal: false
  name: Microsoft.Azure.Management.IotHub.Models
  nameWithType: Microsoft.Azure.Management.IotHub.Models
  fullName: Microsoft.Azure.Management.IotHub.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.#ctor*
  commentId: Overload:Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.#ctor
  isExternal: false
  name: StorageEndpointProperties
  nameWithType: StorageEndpointProperties.StorageEndpointProperties
  fullName: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.StorageEndpointProperties
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.SasTtlAsIso8601*
  commentId: Overload:Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.SasTtlAsIso8601
  isExternal: false
  name: SasTtlAsIso8601
  nameWithType: StorageEndpointProperties.SasTtlAsIso8601
  fullName: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.SasTtlAsIso8601
- uid: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ConnectionString*
  commentId: Overload:Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ConnectionString
  isExternal: false
  name: ConnectionString
  nameWithType: StorageEndpointProperties.ConnectionString
  fullName: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ConnectionString
- uid: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ContainerName*
  commentId: Overload:Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ContainerName
  isExternal: false
  name: ContainerName
  nameWithType: StorageEndpointProperties.ContainerName
  fullName: Microsoft.Azure.Management.IotHub.Models.StorageEndpointProperties.ContainerName
